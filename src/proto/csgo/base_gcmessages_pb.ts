// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file base_gcmessages.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_steammessages } from "./steammessages_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file base_gcmessages.proto.
 */
export const file_base_gcmessages: GenFile = /*@__PURE__*/
  fileDesc("", [file_steammessages]);

/**
 * @generated from message CGCStorePurchaseInit_LineItem
 */
export type CGCStorePurchaseInit_LineItem = Message<"CGCStorePurchaseInit_LineItem"> & {
  /**
   * @generated from field: optional uint32 item_def_id = 1;
   */
  itemDefId: number;

  /**
   * @generated from field: optional uint32 quantity = 2;
   */
  quantity: number;

  /**
   * @generated from field: optional uint32 cost_in_local_currency = 3;
   */
  costInLocalCurrency: number;

  /**
   * @generated from field: optional uint32 purchase_type = 4;
   */
  purchaseType: number;

  /**
   * @generated from field: optional uint64 supplemental_data = 5;
   */
  supplementalData: bigint;
};

/**
 * Describes the message CGCStorePurchaseInit_LineItem.
 * Use `create(CGCStorePurchaseInit_LineItemSchema)` to create a new message.
 */
export const CGCStorePurchaseInit_LineItemSchema: GenMessage<CGCStorePurchaseInit_LineItem> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 0);

/**
 * @generated from message CMsgGCStorePurchaseInit
 */
export type CMsgGCStorePurchaseInit = Message<"CMsgGCStorePurchaseInit"> & {
  /**
   * @generated from field: optional string country = 1;
   */
  country: string;

  /**
   * @generated from field: optional int32 language = 2;
   */
  language: number;

  /**
   * @generated from field: optional int32 currency = 3;
   */
  currency: number;

  /**
   * @generated from field: repeated CGCStorePurchaseInit_LineItem line_items = 4;
   */
  lineItems: CGCStorePurchaseInit_LineItem[];
};

/**
 * Describes the message CMsgGCStorePurchaseInit.
 * Use `create(CMsgGCStorePurchaseInitSchema)` to create a new message.
 */
export const CMsgGCStorePurchaseInitSchema: GenMessage<CMsgGCStorePurchaseInit> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 1);

/**
 * @generated from message CMsgGCStorePurchaseInitResponse
 */
export type CMsgGCStorePurchaseInitResponse = Message<"CMsgGCStorePurchaseInitResponse"> & {
  /**
   * @generated from field: optional int32 result = 1;
   */
  result: number;

  /**
   * @generated from field: optional uint64 txn_id = 2;
   */
  txnId: bigint;

  /**
   * @generated from field: optional string url = 3;
   */
  url: string;

  /**
   * @generated from field: repeated uint64 item_ids = 4;
   */
  itemIds: bigint[];
};

/**
 * Describes the message CMsgGCStorePurchaseInitResponse.
 * Use `create(CMsgGCStorePurchaseInitResponseSchema)` to create a new message.
 */
export const CMsgGCStorePurchaseInitResponseSchema: GenMessage<CMsgGCStorePurchaseInitResponse> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 2);

/**
 * @generated from message CSOPartyInvite
 */
export type CSOPartyInvite = Message<"CSOPartyInvite"> & {
  /**
   * @generated from field: optional uint64 group_id = 1;
   */
  groupId: bigint;

  /**
   * @generated from field: optional fixed64 sender_id = 2;
   */
  senderId: bigint;

  /**
   * @generated from field: optional string sender_name = 3;
   */
  senderName: string;
};

/**
 * Describes the message CSOPartyInvite.
 * Use `create(CSOPartyInviteSchema)` to create a new message.
 */
export const CSOPartyInviteSchema: GenMessage<CSOPartyInvite> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 3);

/**
 * @generated from message CSOLobbyInvite
 */
export type CSOLobbyInvite = Message<"CSOLobbyInvite"> & {
  /**
   * @generated from field: optional uint64 group_id = 1;
   */
  groupId: bigint;

  /**
   * @generated from field: optional fixed64 sender_id = 2;
   */
  senderId: bigint;

  /**
   * @generated from field: optional string sender_name = 3;
   */
  senderName: string;
};

/**
 * Describes the message CSOLobbyInvite.
 * Use `create(CSOLobbyInviteSchema)` to create a new message.
 */
export const CSOLobbyInviteSchema: GenMessage<CSOLobbyInvite> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 4);

/**
 * @generated from message CMsgSystemBroadcast
 */
export type CMsgSystemBroadcast = Message<"CMsgSystemBroadcast"> & {
  /**
   * @generated from field: optional string message = 1;
   */
  message: string;
};

/**
 * Describes the message CMsgSystemBroadcast.
 * Use `create(CMsgSystemBroadcastSchema)` to create a new message.
 */
export const CMsgSystemBroadcastSchema: GenMessage<CMsgSystemBroadcast> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 5);

/**
 * @generated from message CMsgInviteToParty
 */
export type CMsgInviteToParty = Message<"CMsgInviteToParty"> & {
  /**
   * @generated from field: optional fixed64 steam_id = 1;
   */
  steamId: bigint;

  /**
   * @generated from field: optional uint32 client_version = 2;
   */
  clientVersion: number;

  /**
   * @generated from field: optional uint32 team_invite = 3;
   */
  teamInvite: number;
};

/**
 * Describes the message CMsgInviteToParty.
 * Use `create(CMsgInviteToPartySchema)` to create a new message.
 */
export const CMsgInviteToPartySchema: GenMessage<CMsgInviteToParty> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 6);

/**
 * @generated from message CMsgInvitationCreated
 */
export type CMsgInvitationCreated = Message<"CMsgInvitationCreated"> & {
  /**
   * @generated from field: optional uint64 group_id = 1;
   */
  groupId: bigint;

  /**
   * @generated from field: optional fixed64 steam_id = 2;
   */
  steamId: bigint;
};

/**
 * Describes the message CMsgInvitationCreated.
 * Use `create(CMsgInvitationCreatedSchema)` to create a new message.
 */
export const CMsgInvitationCreatedSchema: GenMessage<CMsgInvitationCreated> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 7);

/**
 * @generated from message CMsgPartyInviteResponse
 */
export type CMsgPartyInviteResponse = Message<"CMsgPartyInviteResponse"> & {
  /**
   * @generated from field: optional uint64 party_id = 1;
   */
  partyId: bigint;

  /**
   * @generated from field: optional bool accept = 2;
   */
  accept: boolean;

  /**
   * @generated from field: optional uint32 client_version = 3;
   */
  clientVersion: number;

  /**
   * @generated from field: optional uint32 team_invite = 4;
   */
  teamInvite: number;
};

/**
 * Describes the message CMsgPartyInviteResponse.
 * Use `create(CMsgPartyInviteResponseSchema)` to create a new message.
 */
export const CMsgPartyInviteResponseSchema: GenMessage<CMsgPartyInviteResponse> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 8);

/**
 * @generated from message CMsgKickFromParty
 */
export type CMsgKickFromParty = Message<"CMsgKickFromParty"> & {
  /**
   * @generated from field: optional fixed64 steam_id = 1;
   */
  steamId: bigint;
};

/**
 * Describes the message CMsgKickFromParty.
 * Use `create(CMsgKickFromPartySchema)` to create a new message.
 */
export const CMsgKickFromPartySchema: GenMessage<CMsgKickFromParty> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 9);

/**
 * @generated from message CMsgLeaveParty
 */
export type CMsgLeaveParty = Message<"CMsgLeaveParty"> & {
};

/**
 * Describes the message CMsgLeaveParty.
 * Use `create(CMsgLeavePartySchema)` to create a new message.
 */
export const CMsgLeavePartySchema: GenMessage<CMsgLeaveParty> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 10);

/**
 * @generated from message CMsgServerAvailable
 */
export type CMsgServerAvailable = Message<"CMsgServerAvailable"> & {
};

/**
 * Describes the message CMsgServerAvailable.
 * Use `create(CMsgServerAvailableSchema)` to create a new message.
 */
export const CMsgServerAvailableSchema: GenMessage<CMsgServerAvailable> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 11);

/**
 * @generated from message CMsgLANServerAvailable
 */
export type CMsgLANServerAvailable = Message<"CMsgLANServerAvailable"> & {
  /**
   * @generated from field: optional fixed64 lobby_id = 1;
   */
  lobbyId: bigint;
};

/**
 * Describes the message CMsgLANServerAvailable.
 * Use `create(CMsgLANServerAvailableSchema)` to create a new message.
 */
export const CMsgLANServerAvailableSchema: GenMessage<CMsgLANServerAvailable> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 12);

/**
 * @generated from message CSOEconGameAccountClient
 */
export type CSOEconGameAccountClient = Message<"CSOEconGameAccountClient"> & {
  /**
   * @generated from field: optional uint32 additional_backpack_slots = 1 [default = 0];
   */
  additionalBackpackSlots: number;

  /**
   * @generated from field: optional fixed32 trade_ban_expiration = 6;
   */
  tradeBanExpiration: number;

  /**
   * @generated from field: optional fixed32 bonus_xp_timestamp_refresh = 12;
   */
  bonusXpTimestampRefresh: number;

  /**
   * @generated from field: optional uint32 bonus_xp_usedflags = 13;
   */
  bonusXpUsedflags: number;

  /**
   * @generated from field: optional uint32 elevated_state = 14;
   */
  elevatedState: number;

  /**
   * @generated from field: optional uint32 elevated_timestamp = 15;
   */
  elevatedTimestamp: number;
};

/**
 * Describes the message CSOEconGameAccountClient.
 * Use `create(CSOEconGameAccountClientSchema)` to create a new message.
 */
export const CSOEconGameAccountClientSchema: GenMessage<CSOEconGameAccountClient> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 13);

/**
 * @generated from message CSOItemCriteriaCondition
 */
export type CSOItemCriteriaCondition = Message<"CSOItemCriteriaCondition"> & {
  /**
   * @generated from field: optional int32 op = 1;
   */
  op: number;

  /**
   * @generated from field: optional string field = 2;
   */
  field: string;

  /**
   * @generated from field: optional bool required = 3;
   */
  required: boolean;

  /**
   * @generated from field: optional float float_value = 4;
   */
  floatValue: number;

  /**
   * @generated from field: optional string string_value = 5;
   */
  stringValue: string;
};

/**
 * Describes the message CSOItemCriteriaCondition.
 * Use `create(CSOItemCriteriaConditionSchema)` to create a new message.
 */
export const CSOItemCriteriaConditionSchema: GenMessage<CSOItemCriteriaCondition> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 14);

/**
 * @generated from message CSOItemCriteria
 */
export type CSOItemCriteria = Message<"CSOItemCriteria"> & {
  /**
   * @generated from field: optional uint32 item_level = 1;
   */
  itemLevel: number;

  /**
   * @generated from field: optional int32 item_quality = 2;
   */
  itemQuality: number;

  /**
   * @generated from field: optional bool item_level_set = 3;
   */
  itemLevelSet: boolean;

  /**
   * @generated from field: optional bool item_quality_set = 4;
   */
  itemQualitySet: boolean;

  /**
   * @generated from field: optional uint32 initial_inventory = 5;
   */
  initialInventory: number;

  /**
   * @generated from field: optional uint32 initial_quantity = 6;
   */
  initialQuantity: number;

  /**
   * @generated from field: optional bool ignore_enabled_flag = 8;
   */
  ignoreEnabledFlag: boolean;

  /**
   * @generated from field: repeated CSOItemCriteriaCondition conditions = 9;
   */
  conditions: CSOItemCriteriaCondition[];

  /**
   * @generated from field: optional int32 item_rarity = 10;
   */
  itemRarity: number;

  /**
   * @generated from field: optional bool item_rarity_set = 11;
   */
  itemRaritySet: boolean;

  /**
   * @generated from field: optional bool recent_only = 12;
   */
  recentOnly: boolean;
};

/**
 * Describes the message CSOItemCriteria.
 * Use `create(CSOItemCriteriaSchema)` to create a new message.
 */
export const CSOItemCriteriaSchema: GenMessage<CSOItemCriteria> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 15);

/**
 * @generated from message CSOItemRecipe
 */
export type CSOItemRecipe = Message<"CSOItemRecipe"> & {
  /**
   * @generated from field: optional uint32 def_index = 1;
   */
  defIndex: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name: string;

  /**
   * @generated from field: optional string n_a = 3;
   */
  nA: string;

  /**
   * @generated from field: optional string desc_inputs = 4;
   */
  descInputs: string;

  /**
   * @generated from field: optional string desc_outputs = 5;
   */
  descOutputs: string;

  /**
   * @generated from field: optional string di_a = 6;
   */
  diA: string;

  /**
   * @generated from field: optional string di_b = 7;
   */
  diB: string;

  /**
   * @generated from field: optional string di_c = 8;
   */
  diC: string;

  /**
   * @generated from field: optional string do_a = 9;
   */
  doA: string;

  /**
   * @generated from field: optional string do_b = 10;
   */
  doB: string;

  /**
   * @generated from field: optional string do_c = 11;
   */
  doC: string;

  /**
   * @generated from field: optional bool requires_all_same_class = 12;
   */
  requiresAllSameClass: boolean;

  /**
   * @generated from field: optional bool requires_all_same_slot = 13;
   */
  requiresAllSameSlot: boolean;

  /**
   * @generated from field: optional int32 class_usage_for_output = 14;
   */
  classUsageForOutput: number;

  /**
   * @generated from field: optional int32 slot_usage_for_output = 15;
   */
  slotUsageForOutput: number;

  /**
   * @generated from field: optional int32 set_for_output = 16;
   */
  setForOutput: number;

  /**
   * @generated from field: repeated CSOItemCriteria input_items_criteria = 20;
   */
  inputItemsCriteria: CSOItemCriteria[];

  /**
   * @generated from field: repeated CSOItemCriteria output_items_criteria = 21;
   */
  outputItemsCriteria: CSOItemCriteria[];

  /**
   * @generated from field: repeated uint32 input_item_dupe_counts = 22;
   */
  inputItemDupeCounts: number[];
};

/**
 * Describes the message CSOItemRecipe.
 * Use `create(CSOItemRecipeSchema)` to create a new message.
 */
export const CSOItemRecipeSchema: GenMessage<CSOItemRecipe> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 16);

/**
 * @generated from message CMsgDevNewItemRequest
 */
export type CMsgDevNewItemRequest = Message<"CMsgDevNewItemRequest"> & {
  /**
   * @generated from field: optional fixed64 receiver = 1;
   */
  receiver: bigint;

  /**
   * @generated from field: optional CSOItemCriteria criteria = 2;
   */
  criteria?: CSOItemCriteria;
};

/**
 * Describes the message CMsgDevNewItemRequest.
 * Use `create(CMsgDevNewItemRequestSchema)` to create a new message.
 */
export const CMsgDevNewItemRequestSchema: GenMessage<CMsgDevNewItemRequest> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 17);

/**
 * @generated from message CMsgIncrementKillCountAttribute
 */
export type CMsgIncrementKillCountAttribute = Message<"CMsgIncrementKillCountAttribute"> & {
  /**
   * @generated from field: optional fixed32 killer_account_id = 1;
   */
  killerAccountId: number;

  /**
   * @generated from field: optional fixed32 victim_account_id = 2;
   */
  victimAccountId: number;

  /**
   * @generated from field: optional uint64 item_id = 3;
   */
  itemId: bigint;

  /**
   * @generated from field: optional uint32 event_type = 4;
   */
  eventType: number;

  /**
   * @generated from field: optional uint32 amount = 5;
   */
  amount: number;
};

/**
 * Describes the message CMsgIncrementKillCountAttribute.
 * Use `create(CMsgIncrementKillCountAttributeSchema)` to create a new message.
 */
export const CMsgIncrementKillCountAttributeSchema: GenMessage<CMsgIncrementKillCountAttribute> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 18);

/**
 * @generated from message CMsgApplySticker
 */
export type CMsgApplySticker = Message<"CMsgApplySticker"> & {
  /**
   * @generated from field: optional uint64 sticker_item_id = 1;
   */
  stickerItemId: bigint;

  /**
   * @generated from field: optional uint64 item_item_id = 2;
   */
  itemItemId: bigint;

  /**
   * @generated from field: optional uint32 sticker_slot = 3;
   */
  stickerSlot: number;

  /**
   * @generated from field: optional uint32 baseitem_defidx = 4;
   */
  baseitemDefidx: number;

  /**
   * @generated from field: optional float sticker_wear = 5;
   */
  stickerWear: number;

  /**
   * @generated from field: optional float sticker_rotation = 6;
   */
  stickerRotation: number;

  /**
   * @generated from field: optional float sticker_scale = 7;
   */
  stickerScale: number;

  /**
   * @generated from field: optional float sticker_offset_x = 8;
   */
  stickerOffsetX: number;

  /**
   * @generated from field: optional float sticker_offset_y = 9;
   */
  stickerOffsetY: number;

  /**
   * @generated from field: optional float sticker_offset_z = 10;
   */
  stickerOffsetZ: number;

  /**
   * @generated from field: optional float sticker_wear_target = 11;
   */
  stickerWearTarget: number;
};

/**
 * Describes the message CMsgApplySticker.
 * Use `create(CMsgApplyStickerSchema)` to create a new message.
 */
export const CMsgApplyStickerSchema: GenMessage<CMsgApplySticker> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 19);

/**
 * @generated from message CMsgModifyItemAttribute
 */
export type CMsgModifyItemAttribute = Message<"CMsgModifyItemAttribute"> & {
  /**
   * @generated from field: optional uint64 item_id = 1;
   */
  itemId: bigint;

  /**
   * @generated from field: optional uint32 attr_defidx = 2;
   */
  attrDefidx: number;

  /**
   * @generated from field: optional uint32 attr_value = 3;
   */
  attrValue: number;
};

/**
 * Describes the message CMsgModifyItemAttribute.
 * Use `create(CMsgModifyItemAttributeSchema)` to create a new message.
 */
export const CMsgModifyItemAttributeSchema: GenMessage<CMsgModifyItemAttribute> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 20);

/**
 * @generated from message CMsgApplyStatTrakSwap
 */
export type CMsgApplyStatTrakSwap = Message<"CMsgApplyStatTrakSwap"> & {
  /**
   * @generated from field: optional uint64 tool_item_id = 1;
   */
  toolItemId: bigint;

  /**
   * @generated from field: optional uint64 item_1_item_id = 2;
   */
  item1ItemId: bigint;

  /**
   * @generated from field: optional uint64 item_2_item_id = 3;
   */
  item2ItemId: bigint;
};

/**
 * Describes the message CMsgApplyStatTrakSwap.
 * Use `create(CMsgApplyStatTrakSwapSchema)` to create a new message.
 */
export const CMsgApplyStatTrakSwapSchema: GenMessage<CMsgApplyStatTrakSwap> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 21);

/**
 * @generated from message CMsgApplyStrangePart
 */
export type CMsgApplyStrangePart = Message<"CMsgApplyStrangePart"> & {
  /**
   * @generated from field: optional uint64 strange_part_item_id = 1;
   */
  strangePartItemId: bigint;

  /**
   * @generated from field: optional uint64 item_item_id = 2;
   */
  itemItemId: bigint;
};

/**
 * Describes the message CMsgApplyStrangePart.
 * Use `create(CMsgApplyStrangePartSchema)` to create a new message.
 */
export const CMsgApplyStrangePartSchema: GenMessage<CMsgApplyStrangePart> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 22);

/**
 * @generated from message CMsgApplyPennantUpgrade
 */
export type CMsgApplyPennantUpgrade = Message<"CMsgApplyPennantUpgrade"> & {
  /**
   * @generated from field: optional uint64 upgrade_item_id = 1;
   */
  upgradeItemId: bigint;

  /**
   * @generated from field: optional uint64 pennant_item_id = 2;
   */
  pennantItemId: bigint;
};

/**
 * Describes the message CMsgApplyPennantUpgrade.
 * Use `create(CMsgApplyPennantUpgradeSchema)` to create a new message.
 */
export const CMsgApplyPennantUpgradeSchema: GenMessage<CMsgApplyPennantUpgrade> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 23);

/**
 * @generated from message CMsgApplyEggEssence
 */
export type CMsgApplyEggEssence = Message<"CMsgApplyEggEssence"> & {
  /**
   * @generated from field: optional uint64 essence_item_id = 1;
   */
  essenceItemId: bigint;

  /**
   * @generated from field: optional uint64 egg_item_id = 2;
   */
  eggItemId: bigint;
};

/**
 * Describes the message CMsgApplyEggEssence.
 * Use `create(CMsgApplyEggEssenceSchema)` to create a new message.
 */
export const CMsgApplyEggEssenceSchema: GenMessage<CMsgApplyEggEssence> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 24);

/**
 * @generated from message CSOEconItemAttribute
 */
export type CSOEconItemAttribute = Message<"CSOEconItemAttribute"> & {
  /**
   * @generated from field: optional uint32 def_index = 1;
   */
  defIndex: number;

  /**
   * @generated from field: optional uint32 value = 2;
   */
  value: number;

  /**
   * @generated from field: optional bytes value_bytes = 3;
   */
  valueBytes: Uint8Array;
};

/**
 * Describes the message CSOEconItemAttribute.
 * Use `create(CSOEconItemAttributeSchema)` to create a new message.
 */
export const CSOEconItemAttributeSchema: GenMessage<CSOEconItemAttribute> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 25);

/**
 * @generated from message CSOEconItemEquipped
 */
export type CSOEconItemEquipped = Message<"CSOEconItemEquipped"> & {
  /**
   * @generated from field: optional uint32 new_class = 1;
   */
  newClass: number;

  /**
   * @generated from field: optional uint32 new_slot = 2;
   */
  newSlot: number;
};

/**
 * Describes the message CSOEconItemEquipped.
 * Use `create(CSOEconItemEquippedSchema)` to create a new message.
 */
export const CSOEconItemEquippedSchema: GenMessage<CSOEconItemEquipped> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 26);

/**
 * @generated from message CSOEconItem
 */
export type CSOEconItem = Message<"CSOEconItem"> & {
  /**
   * @generated from field: optional uint64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: optional uint32 account_id = 2;
   */
  accountId: number;

  /**
   * @generated from field: optional uint32 inventory = 3;
   */
  inventory: number;

  /**
   * @generated from field: optional uint32 def_index = 4;
   */
  defIndex: number;

  /**
   * @generated from field: optional uint32 quantity = 5;
   */
  quantity: number;

  /**
   * @generated from field: optional uint32 level = 6;
   */
  level: number;

  /**
   * @generated from field: optional uint32 quality = 7;
   */
  quality: number;

  /**
   * @generated from field: optional uint32 flags = 8 [default = 0];
   */
  flags: number;

  /**
   * @generated from field: optional uint32 origin = 9;
   */
  origin: number;

  /**
   * @generated from field: optional string custom_name = 10;
   */
  customName: string;

  /**
   * @generated from field: optional string custom_desc = 11;
   */
  customDesc: string;

  /**
   * @generated from field: repeated CSOEconItemAttribute attribute = 12;
   */
  attribute: CSOEconItemAttribute[];

  /**
   * @generated from field: optional CSOEconItem interior_item = 13;
   */
  interiorItem?: CSOEconItem;

  /**
   * @generated from field: optional bool in_use = 14 [default = false];
   */
  inUse: boolean;

  /**
   * @generated from field: optional uint32 style = 15 [default = 0];
   */
  style: number;

  /**
   * @generated from field: optional uint64 original_id = 16 [default = 0];
   */
  originalId: bigint;

  /**
   * @generated from field: repeated CSOEconItemEquipped equipped_state = 18;
   */
  equippedState: CSOEconItemEquipped[];

  /**
   * @generated from field: optional uint32 rarity = 19;
   */
  rarity: number;
};

/**
 * Describes the message CSOEconItem.
 * Use `create(CSOEconItemSchema)` to create a new message.
 */
export const CSOEconItemSchema: GenMessage<CSOEconItem> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 27);

/**
 * @generated from message CMsgSortItems
 */
export type CMsgSortItems = Message<"CMsgSortItems"> & {
  /**
   * @generated from field: optional uint32 sort_type = 1;
   */
  sortType: number;
};

/**
 * Describes the message CMsgSortItems.
 * Use `create(CMsgSortItemsSchema)` to create a new message.
 */
export const CMsgSortItemsSchema: GenMessage<CMsgSortItems> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 28);

/**
 * @generated from message CSOEconClaimCode
 */
export type CSOEconClaimCode = Message<"CSOEconClaimCode"> & {
  /**
   * @generated from field: optional uint32 account_id = 1;
   */
  accountId: number;

  /**
   * @generated from field: optional uint32 code_type = 2;
   */
  codeType: number;

  /**
   * @generated from field: optional uint32 time_acquired = 3;
   */
  timeAcquired: number;

  /**
   * @generated from field: optional string code = 4;
   */
  code: string;
};

/**
 * Describes the message CSOEconClaimCode.
 * Use `create(CSOEconClaimCodeSchema)` to create a new message.
 */
export const CSOEconClaimCodeSchema: GenMessage<CSOEconClaimCode> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 29);

/**
 * @generated from message CMsgStoreGetUserData
 */
export type CMsgStoreGetUserData = Message<"CMsgStoreGetUserData"> & {
  /**
   * @generated from field: optional fixed32 price_sheet_version = 1;
   */
  priceSheetVersion: number;

  /**
   * @generated from field: optional int32 currency = 2;
   */
  currency: number;
};

/**
 * Describes the message CMsgStoreGetUserData.
 * Use `create(CMsgStoreGetUserDataSchema)` to create a new message.
 */
export const CMsgStoreGetUserDataSchema: GenMessage<CMsgStoreGetUserData> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 30);

/**
 * @generated from message CMsgStoreGetUserDataResponse
 */
export type CMsgStoreGetUserDataResponse = Message<"CMsgStoreGetUserDataResponse"> & {
  /**
   * @generated from field: optional int32 result = 1;
   */
  result: number;

  /**
   * @generated from field: optional int32 currency_deprecated = 2;
   */
  currencyDeprecated: number;

  /**
   * @generated from field: optional string country_deprecated = 3;
   */
  countryDeprecated: string;

  /**
   * @generated from field: optional fixed32 price_sheet_version = 4;
   */
  priceSheetVersion: number;

  /**
   * @generated from field: optional bytes price_sheet = 8;
   */
  priceSheet: Uint8Array;
};

/**
 * Describes the message CMsgStoreGetUserDataResponse.
 * Use `create(CMsgStoreGetUserDataResponseSchema)` to create a new message.
 */
export const CMsgStoreGetUserDataResponseSchema: GenMessage<CMsgStoreGetUserDataResponse> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 31);

/**
 * @generated from message CMsgUpdateItemSchema
 */
export type CMsgUpdateItemSchema = Message<"CMsgUpdateItemSchema"> & {
  /**
   * @generated from field: optional bytes items_game = 1;
   */
  itemsGame: Uint8Array;

  /**
   * @generated from field: optional fixed32 item_schema_version = 2;
   */
  itemSchemaVersion: number;

  /**
   * @generated from field: optional string items_game_url = 4;
   */
  itemsGameUrl: string;
};

/**
 * Describes the message CMsgUpdateItemSchema.
 * Use `create(CMsgUpdateItemSchemaSchema)` to create a new message.
 */
export const CMsgUpdateItemSchemaSchema: GenMessage<CMsgUpdateItemSchema> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 32);

/**
 * @generated from message CMsgGCError
 */
export type CMsgGCError = Message<"CMsgGCError"> & {
  /**
   * @generated from field: optional string error_text = 1;
   */
  errorText: string;
};

/**
 * Describes the message CMsgGCError.
 * Use `create(CMsgGCErrorSchema)` to create a new message.
 */
export const CMsgGCErrorSchema: GenMessage<CMsgGCError> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 33);

/**
 * @generated from message CMsgRequestInventoryRefresh
 */
export type CMsgRequestInventoryRefresh = Message<"CMsgRequestInventoryRefresh"> & {
};

/**
 * Describes the message CMsgRequestInventoryRefresh.
 * Use `create(CMsgRequestInventoryRefreshSchema)` to create a new message.
 */
export const CMsgRequestInventoryRefreshSchema: GenMessage<CMsgRequestInventoryRefresh> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 34);

/**
 * @generated from message CMsgConVarValue
 */
export type CMsgConVarValue = Message<"CMsgConVarValue"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional string value = 2;
   */
  value: string;
};

/**
 * Describes the message CMsgConVarValue.
 * Use `create(CMsgConVarValueSchema)` to create a new message.
 */
export const CMsgConVarValueSchema: GenMessage<CMsgConVarValue> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 35);

/**
 * @generated from message CMsgReplicateConVars
 */
export type CMsgReplicateConVars = Message<"CMsgReplicateConVars"> & {
  /**
   * @generated from field: repeated CMsgConVarValue convars = 1;
   */
  convars: CMsgConVarValue[];
};

/**
 * Describes the message CMsgReplicateConVars.
 * Use `create(CMsgReplicateConVarsSchema)` to create a new message.
 */
export const CMsgReplicateConVarsSchema: GenMessage<CMsgReplicateConVars> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 36);

/**
 * @generated from message CMsgUseItem
 */
export type CMsgUseItem = Message<"CMsgUseItem"> & {
  /**
   * @generated from field: optional uint64 item_id = 1;
   */
  itemId: bigint;

  /**
   * @generated from field: optional fixed64 target_steam_id = 2;
   */
  targetSteamId: bigint;

  /**
   * @generated from field: repeated uint32 gift__potential_targets = 3;
   */
  giftPotentialTargets: number[];

  /**
   * @generated from field: optional uint32 duel__class_lock = 4;
   */
  duelClassLock: number;

  /**
   * @generated from field: optional fixed64 initiator_steam_id = 5;
   */
  initiatorSteamId: bigint;
};

/**
 * Describes the message CMsgUseItem.
 * Use `create(CMsgUseItemSchema)` to create a new message.
 */
export const CMsgUseItemSchema: GenMessage<CMsgUseItem> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 37);

/**
 * @generated from message CMsgReplayUploadedToYouTube
 */
export type CMsgReplayUploadedToYouTube = Message<"CMsgReplayUploadedToYouTube"> & {
  /**
   * @generated from field: optional string youtube_url = 1;
   */
  youtubeUrl: string;

  /**
   * @generated from field: optional string youtube_account_name = 2;
   */
  youtubeAccountName: string;

  /**
   * @generated from field: optional uint64 session_id = 3;
   */
  sessionId: bigint;
};

/**
 * Describes the message CMsgReplayUploadedToYouTube.
 * Use `create(CMsgReplayUploadedToYouTubeSchema)` to create a new message.
 */
export const CMsgReplayUploadedToYouTubeSchema: GenMessage<CMsgReplayUploadedToYouTube> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 38);

/**
 * @generated from message CMsgConsumableExhausted
 */
export type CMsgConsumableExhausted = Message<"CMsgConsumableExhausted"> & {
  /**
   * @generated from field: optional int32 item_def_id = 1;
   */
  itemDefId: number;
};

/**
 * Describes the message CMsgConsumableExhausted.
 * Use `create(CMsgConsumableExhaustedSchema)` to create a new message.
 */
export const CMsgConsumableExhaustedSchema: GenMessage<CMsgConsumableExhausted> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 39);

/**
 * @generated from message CMsgItemAcknowledged__DEPRECATED
 */
export type CMsgItemAcknowledged__DEPRECATED = Message<"CMsgItemAcknowledged__DEPRECATED"> & {
  /**
   * @generated from field: optional uint32 account_id = 1;
   */
  accountId: number;

  /**
   * @generated from field: optional uint32 inventory = 2;
   */
  inventory: number;

  /**
   * @generated from field: optional uint32 def_index = 3;
   */
  defIndex: number;

  /**
   * @generated from field: optional uint32 quality = 4;
   */
  quality: number;

  /**
   * @generated from field: optional uint32 rarity = 5;
   */
  rarity: number;

  /**
   * @generated from field: optional uint32 origin = 6;
   */
  origin: number;

  /**
   * @generated from field: optional uint64 item_id = 7;
   */
  itemId: bigint;
};

/**
 * Describes the message CMsgItemAcknowledged__DEPRECATED.
 * Use `create(CMsgItemAcknowledged__DEPRECATEDSchema)` to create a new message.
 */
export const CMsgItemAcknowledged__DEPRECATEDSchema: GenMessage<CMsgItemAcknowledged__DEPRECATED> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 40);

/**
 * @generated from message CMsgSetItemPositions
 */
export type CMsgSetItemPositions = Message<"CMsgSetItemPositions"> & {
  /**
   * @generated from field: repeated CMsgSetItemPositions.ItemPosition item_positions = 1;
   */
  itemPositions: CMsgSetItemPositions_ItemPosition[];
};

/**
 * Describes the message CMsgSetItemPositions.
 * Use `create(CMsgSetItemPositionsSchema)` to create a new message.
 */
export const CMsgSetItemPositionsSchema: GenMessage<CMsgSetItemPositions> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 41);

/**
 * @generated from message CMsgSetItemPositions.ItemPosition
 */
export type CMsgSetItemPositions_ItemPosition = Message<"CMsgSetItemPositions.ItemPosition"> & {
  /**
   * @generated from field: optional uint32 legacy_item_id = 1;
   */
  legacyItemId: number;

  /**
   * @generated from field: optional uint32 position = 2;
   */
  position: number;

  /**
   * @generated from field: optional uint64 item_id = 3;
   */
  itemId: bigint;
};

/**
 * Describes the message CMsgSetItemPositions.ItemPosition.
 * Use `create(CMsgSetItemPositions_ItemPositionSchema)` to create a new message.
 */
export const CMsgSetItemPositions_ItemPositionSchema: GenMessage<CMsgSetItemPositions_ItemPosition> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 41, 0);

/**
 * @generated from message CMsgGCReportAbuse
 */
export type CMsgGCReportAbuse = Message<"CMsgGCReportAbuse"> & {
  /**
   * @generated from field: optional fixed64 target_steam_id = 1;
   */
  targetSteamId: bigint;

  /**
   * @generated from field: optional string description = 4;
   */
  description: string;

  /**
   * @generated from field: optional uint64 gid = 5;
   */
  gid: bigint;

  /**
   * @generated from field: optional uint32 abuse_type = 2;
   */
  abuseType: number;

  /**
   * @generated from field: optional uint32 content_type = 3;
   */
  contentType: number;

  /**
   * @generated from field: optional fixed32 target_game_server_ip = 6;
   */
  targetGameServerIp: number;

  /**
   * @generated from field: optional uint32 target_game_server_port = 7;
   */
  targetGameServerPort: number;
};

/**
 * Describes the message CMsgGCReportAbuse.
 * Use `create(CMsgGCReportAbuseSchema)` to create a new message.
 */
export const CMsgGCReportAbuseSchema: GenMessage<CMsgGCReportAbuse> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 42);

/**
 * @generated from message CMsgGCReportAbuseResponse
 */
export type CMsgGCReportAbuseResponse = Message<"CMsgGCReportAbuseResponse"> & {
  /**
   * @generated from field: optional fixed64 target_steam_id = 1;
   */
  targetSteamId: bigint;

  /**
   * @generated from field: optional uint32 result = 2;
   */
  result: number;

  /**
   * @generated from field: optional string error_message = 3;
   */
  errorMessage: string;
};

/**
 * Describes the message CMsgGCReportAbuseResponse.
 * Use `create(CMsgGCReportAbuseResponseSchema)` to create a new message.
 */
export const CMsgGCReportAbuseResponseSchema: GenMessage<CMsgGCReportAbuseResponse> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 43);

/**
 * @generated from message CMsgGCNameItemNotification
 */
export type CMsgGCNameItemNotification = Message<"CMsgGCNameItemNotification"> & {
  /**
   * @generated from field: optional fixed64 player_steamid = 1;
   */
  playerSteamid: bigint;

  /**
   * @generated from field: optional uint32 item_def_index = 2;
   */
  itemDefIndex: number;

  /**
   * @generated from field: optional string item_name_custom = 3;
   */
  itemNameCustom: string;
};

/**
 * Describes the message CMsgGCNameItemNotification.
 * Use `create(CMsgGCNameItemNotificationSchema)` to create a new message.
 */
export const CMsgGCNameItemNotificationSchema: GenMessage<CMsgGCNameItemNotification> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 44);

/**
 * @generated from message CMsgGCClientDisplayNotification
 */
export type CMsgGCClientDisplayNotification = Message<"CMsgGCClientDisplayNotification"> & {
  /**
   * @generated from field: optional string notification_title_localization_key = 1;
   */
  notificationTitleLocalizationKey: string;

  /**
   * @generated from field: optional string notification_body_localization_key = 2;
   */
  notificationBodyLocalizationKey: string;

  /**
   * @generated from field: repeated string body_substring_keys = 3;
   */
  bodySubstringKeys: string[];

  /**
   * @generated from field: repeated string body_substring_values = 4;
   */
  bodySubstringValues: string[];
};

/**
 * Describes the message CMsgGCClientDisplayNotification.
 * Use `create(CMsgGCClientDisplayNotificationSchema)` to create a new message.
 */
export const CMsgGCClientDisplayNotificationSchema: GenMessage<CMsgGCClientDisplayNotification> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 45);

/**
 * @generated from message CMsgGCShowItemsPickedUp
 */
export type CMsgGCShowItemsPickedUp = Message<"CMsgGCShowItemsPickedUp"> & {
  /**
   * @generated from field: optional fixed64 player_steamid = 1;
   */
  playerSteamid: bigint;
};

/**
 * Describes the message CMsgGCShowItemsPickedUp.
 * Use `create(CMsgGCShowItemsPickedUpSchema)` to create a new message.
 */
export const CMsgGCShowItemsPickedUpSchema: GenMessage<CMsgGCShowItemsPickedUp> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 46);

/**
 * @generated from message CMsgGCIncrementKillCountResponse
 */
export type CMsgGCIncrementKillCountResponse = Message<"CMsgGCIncrementKillCountResponse"> & {
  /**
   * @generated from field: optional uint32 killer_account_id = 1;
   */
  killerAccountId: number;

  /**
   * @generated from field: optional uint32 num_kills = 2;
   */
  numKills: number;

  /**
   * @generated from field: optional uint32 item_def = 3;
   */
  itemDef: number;

  /**
   * @generated from field: optional uint32 level_type = 4;
   */
  levelType: number;
};

/**
 * Describes the message CMsgGCIncrementKillCountResponse.
 * Use `create(CMsgGCIncrementKillCountResponseSchema)` to create a new message.
 */
export const CMsgGCIncrementKillCountResponseSchema: GenMessage<CMsgGCIncrementKillCountResponse> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 47);

/**
 * @generated from message CSOEconItemDropRateBonus
 */
export type CSOEconItemDropRateBonus = Message<"CSOEconItemDropRateBonus"> & {
  /**
   * @generated from field: optional uint32 account_id = 1;
   */
  accountId: number;

  /**
   * @generated from field: optional fixed32 expiration_date = 2;
   */
  expirationDate: number;

  /**
   * @generated from field: optional float bonus = 3;
   */
  bonus: number;

  /**
   * @generated from field: optional uint32 bonus_count = 4;
   */
  bonusCount: number;

  /**
   * @generated from field: optional uint64 item_id = 5;
   */
  itemId: bigint;

  /**
   * @generated from field: optional uint32 def_index = 6;
   */
  defIndex: number;
};

/**
 * Describes the message CSOEconItemDropRateBonus.
 * Use `create(CSOEconItemDropRateBonusSchema)` to create a new message.
 */
export const CSOEconItemDropRateBonusSchema: GenMessage<CSOEconItemDropRateBonus> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 48);

/**
 * @generated from message CSOEconItemLeagueViewPass
 */
export type CSOEconItemLeagueViewPass = Message<"CSOEconItemLeagueViewPass"> & {
  /**
   * @generated from field: optional uint32 account_id = 1;
   */
  accountId: number;

  /**
   * @generated from field: optional uint32 league_id = 2;
   */
  leagueId: number;

  /**
   * @generated from field: optional uint32 admin = 3;
   */
  admin: number;

  /**
   * @generated from field: optional uint32 itemindex = 4;
   */
  itemindex: number;
};

/**
 * Describes the message CSOEconItemLeagueViewPass.
 * Use `create(CSOEconItemLeagueViewPassSchema)` to create a new message.
 */
export const CSOEconItemLeagueViewPassSchema: GenMessage<CSOEconItemLeagueViewPass> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 49);

/**
 * @generated from message CSOEconItemEventTicket
 */
export type CSOEconItemEventTicket = Message<"CSOEconItemEventTicket"> & {
  /**
   * @generated from field: optional uint32 account_id = 1;
   */
  accountId: number;

  /**
   * @generated from field: optional uint32 event_id = 2;
   */
  eventId: number;

  /**
   * @generated from field: optional uint64 item_id = 3;
   */
  itemId: bigint;
};

/**
 * Describes the message CSOEconItemEventTicket.
 * Use `create(CSOEconItemEventTicketSchema)` to create a new message.
 */
export const CSOEconItemEventTicketSchema: GenMessage<CSOEconItemEventTicket> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 50);

/**
 * @generated from message CMsgGCItemPreviewItemBoughtNotification
 */
export type CMsgGCItemPreviewItemBoughtNotification = Message<"CMsgGCItemPreviewItemBoughtNotification"> & {
  /**
   * @generated from field: optional uint32 item_def_index = 1;
   */
  itemDefIndex: number;
};

/**
 * Describes the message CMsgGCItemPreviewItemBoughtNotification.
 * Use `create(CMsgGCItemPreviewItemBoughtNotificationSchema)` to create a new message.
 */
export const CMsgGCItemPreviewItemBoughtNotificationSchema: GenMessage<CMsgGCItemPreviewItemBoughtNotification> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 51);

/**
 * @generated from message CMsgGCStorePurchaseCancel
 */
export type CMsgGCStorePurchaseCancel = Message<"CMsgGCStorePurchaseCancel"> & {
  /**
   * @generated from field: optional uint64 txn_id = 1;
   */
  txnId: bigint;
};

/**
 * Describes the message CMsgGCStorePurchaseCancel.
 * Use `create(CMsgGCStorePurchaseCancelSchema)` to create a new message.
 */
export const CMsgGCStorePurchaseCancelSchema: GenMessage<CMsgGCStorePurchaseCancel> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 52);

/**
 * @generated from message CMsgGCStorePurchaseCancelResponse
 */
export type CMsgGCStorePurchaseCancelResponse = Message<"CMsgGCStorePurchaseCancelResponse"> & {
  /**
   * @generated from field: optional uint32 result = 1;
   */
  result: number;
};

/**
 * Describes the message CMsgGCStorePurchaseCancelResponse.
 * Use `create(CMsgGCStorePurchaseCancelResponseSchema)` to create a new message.
 */
export const CMsgGCStorePurchaseCancelResponseSchema: GenMessage<CMsgGCStorePurchaseCancelResponse> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 53);

/**
 * @generated from message CMsgGCStorePurchaseFinalize
 */
export type CMsgGCStorePurchaseFinalize = Message<"CMsgGCStorePurchaseFinalize"> & {
  /**
   * @generated from field: optional uint64 txn_id = 1;
   */
  txnId: bigint;
};

/**
 * Describes the message CMsgGCStorePurchaseFinalize.
 * Use `create(CMsgGCStorePurchaseFinalizeSchema)` to create a new message.
 */
export const CMsgGCStorePurchaseFinalizeSchema: GenMessage<CMsgGCStorePurchaseFinalize> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 54);

/**
 * @generated from message CMsgGCStorePurchaseFinalizeResponse
 */
export type CMsgGCStorePurchaseFinalizeResponse = Message<"CMsgGCStorePurchaseFinalizeResponse"> & {
  /**
   * @generated from field: optional uint32 result = 1;
   */
  result: number;

  /**
   * @generated from field: repeated uint64 item_ids = 2;
   */
  itemIds: bigint[];
};

/**
 * Describes the message CMsgGCStorePurchaseFinalizeResponse.
 * Use `create(CMsgGCStorePurchaseFinalizeResponseSchema)` to create a new message.
 */
export const CMsgGCStorePurchaseFinalizeResponseSchema: GenMessage<CMsgGCStorePurchaseFinalizeResponse> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 55);

/**
 * @generated from message CMsgGCBannedWordListRequest
 */
export type CMsgGCBannedWordListRequest = Message<"CMsgGCBannedWordListRequest"> & {
  /**
   * @generated from field: optional uint32 ban_list_group_id = 1;
   */
  banListGroupId: number;

  /**
   * @generated from field: optional uint32 word_id = 2;
   */
  wordId: number;
};

/**
 * Describes the message CMsgGCBannedWordListRequest.
 * Use `create(CMsgGCBannedWordListRequestSchema)` to create a new message.
 */
export const CMsgGCBannedWordListRequestSchema: GenMessage<CMsgGCBannedWordListRequest> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 56);

/**
 * @generated from message CMsgGCRequestAnnouncements
 */
export type CMsgGCRequestAnnouncements = Message<"CMsgGCRequestAnnouncements"> & {
};

/**
 * Describes the message CMsgGCRequestAnnouncements.
 * Use `create(CMsgGCRequestAnnouncementsSchema)` to create a new message.
 */
export const CMsgGCRequestAnnouncementsSchema: GenMessage<CMsgGCRequestAnnouncements> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 57);

/**
 * @generated from message CMsgGCRequestAnnouncementsResponse
 */
export type CMsgGCRequestAnnouncementsResponse = Message<"CMsgGCRequestAnnouncementsResponse"> & {
  /**
   * @generated from field: optional string announcement_title = 1;
   */
  announcementTitle: string;

  /**
   * @generated from field: optional string announcement = 2;
   */
  announcement: string;

  /**
   * @generated from field: optional string nextmatch_title = 3;
   */
  nextmatchTitle: string;

  /**
   * @generated from field: optional string nextmatch = 4;
   */
  nextmatch: string;
};

/**
 * Describes the message CMsgGCRequestAnnouncementsResponse.
 * Use `create(CMsgGCRequestAnnouncementsResponseSchema)` to create a new message.
 */
export const CMsgGCRequestAnnouncementsResponseSchema: GenMessage<CMsgGCRequestAnnouncementsResponse> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 58);

/**
 * @generated from message CMsgGCBannedWord
 */
export type CMsgGCBannedWord = Message<"CMsgGCBannedWord"> & {
  /**
   * @generated from field: optional uint32 word_id = 1;
   */
  wordId: number;

  /**
   * @generated from field: optional GC_BannedWordType word_type = 2 [default = GC_BANNED_WORD_DISABLE_WORD];
   */
  wordType: GC_BannedWordType;

  /**
   * @generated from field: optional string word = 3;
   */
  word: string;
};

/**
 * Describes the message CMsgGCBannedWord.
 * Use `create(CMsgGCBannedWordSchema)` to create a new message.
 */
export const CMsgGCBannedWordSchema: GenMessage<CMsgGCBannedWord> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 59);

/**
 * @generated from message CMsgGCBannedWordListResponse
 */
export type CMsgGCBannedWordListResponse = Message<"CMsgGCBannedWordListResponse"> & {
  /**
   * @generated from field: optional uint32 ban_list_group_id = 1;
   */
  banListGroupId: number;

  /**
   * @generated from field: repeated CMsgGCBannedWord word_list = 2;
   */
  wordList: CMsgGCBannedWord[];
};

/**
 * Describes the message CMsgGCBannedWordListResponse.
 * Use `create(CMsgGCBannedWordListResponseSchema)` to create a new message.
 */
export const CMsgGCBannedWordListResponseSchema: GenMessage<CMsgGCBannedWordListResponse> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 60);

/**
 * @generated from message CMsgGCToGCBannedWordListBroadcast
 */
export type CMsgGCToGCBannedWordListBroadcast = Message<"CMsgGCToGCBannedWordListBroadcast"> & {
  /**
   * @generated from field: optional CMsgGCBannedWordListResponse broadcast = 1;
   */
  broadcast?: CMsgGCBannedWordListResponse;
};

/**
 * Describes the message CMsgGCToGCBannedWordListBroadcast.
 * Use `create(CMsgGCToGCBannedWordListBroadcastSchema)` to create a new message.
 */
export const CMsgGCToGCBannedWordListBroadcastSchema: GenMessage<CMsgGCToGCBannedWordListBroadcast> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 61);

/**
 * @generated from message CMsgGCToGCBannedWordListUpdated
 */
export type CMsgGCToGCBannedWordListUpdated = Message<"CMsgGCToGCBannedWordListUpdated"> & {
  /**
   * @generated from field: optional uint32 group_id = 1;
   */
  groupId: number;
};

/**
 * Describes the message CMsgGCToGCBannedWordListUpdated.
 * Use `create(CMsgGCToGCBannedWordListUpdatedSchema)` to create a new message.
 */
export const CMsgGCToGCBannedWordListUpdatedSchema: GenMessage<CMsgGCToGCBannedWordListUpdated> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 62);

/**
 * @generated from message CMsgGCToGCDirtySDOCache
 */
export type CMsgGCToGCDirtySDOCache = Message<"CMsgGCToGCDirtySDOCache"> & {
  /**
   * @generated from field: optional uint32 sdo_type = 1;
   */
  sdoType: number;

  /**
   * @generated from field: optional uint64 key_uint64 = 2;
   */
  keyUint64: bigint;
};

/**
 * Describes the message CMsgGCToGCDirtySDOCache.
 * Use `create(CMsgGCToGCDirtySDOCacheSchema)` to create a new message.
 */
export const CMsgGCToGCDirtySDOCacheSchema: GenMessage<CMsgGCToGCDirtySDOCache> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 63);

/**
 * @generated from message CMsgGCToGCDirtyMultipleSDOCache
 */
export type CMsgGCToGCDirtyMultipleSDOCache = Message<"CMsgGCToGCDirtyMultipleSDOCache"> & {
  /**
   * @generated from field: optional uint32 sdo_type = 1;
   */
  sdoType: number;

  /**
   * @generated from field: repeated uint64 key_uint64 = 2;
   */
  keyUint64: bigint[];
};

/**
 * Describes the message CMsgGCToGCDirtyMultipleSDOCache.
 * Use `create(CMsgGCToGCDirtyMultipleSDOCacheSchema)` to create a new message.
 */
export const CMsgGCToGCDirtyMultipleSDOCacheSchema: GenMessage<CMsgGCToGCDirtyMultipleSDOCache> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 64);

/**
 * @generated from message CMsgGCCollectItem
 */
export type CMsgGCCollectItem = Message<"CMsgGCCollectItem"> & {
  /**
   * @generated from field: optional uint64 collection_item_id = 1;
   */
  collectionItemId: bigint;

  /**
   * @generated from field: optional uint64 subject_item_id = 2;
   */
  subjectItemId: bigint;
};

/**
 * Describes the message CMsgGCCollectItem.
 * Use `create(CMsgGCCollectItemSchema)` to create a new message.
 */
export const CMsgGCCollectItemSchema: GenMessage<CMsgGCCollectItem> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 65);

/**
 * @generated from message CMsgSDONoMemcached
 */
export type CMsgSDONoMemcached = Message<"CMsgSDONoMemcached"> & {
};

/**
 * Describes the message CMsgSDONoMemcached.
 * Use `create(CMsgSDONoMemcachedSchema)` to create a new message.
 */
export const CMsgSDONoMemcachedSchema: GenMessage<CMsgSDONoMemcached> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 66);

/**
 * @generated from message CMsgGCToGCUpdateSQLKeyValue
 */
export type CMsgGCToGCUpdateSQLKeyValue = Message<"CMsgGCToGCUpdateSQLKeyValue"> & {
  /**
   * @generated from field: optional string key_name = 1;
   */
  keyName: string;
};

/**
 * Describes the message CMsgGCToGCUpdateSQLKeyValue.
 * Use `create(CMsgGCToGCUpdateSQLKeyValueSchema)` to create a new message.
 */
export const CMsgGCToGCUpdateSQLKeyValueSchema: GenMessage<CMsgGCToGCUpdateSQLKeyValue> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 67);

/**
 * @generated from message CMsgGCToGCIsTrustedServer
 */
export type CMsgGCToGCIsTrustedServer = Message<"CMsgGCToGCIsTrustedServer"> & {
  /**
   * @generated from field: optional fixed64 steam_id = 1;
   */
  steamId: bigint;
};

/**
 * Describes the message CMsgGCToGCIsTrustedServer.
 * Use `create(CMsgGCToGCIsTrustedServerSchema)` to create a new message.
 */
export const CMsgGCToGCIsTrustedServerSchema: GenMessage<CMsgGCToGCIsTrustedServer> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 68);

/**
 * @generated from message CMsgGCToGCIsTrustedServerResponse
 */
export type CMsgGCToGCIsTrustedServerResponse = Message<"CMsgGCToGCIsTrustedServerResponse"> & {
  /**
   * @generated from field: optional bool is_trusted = 1;
   */
  isTrusted: boolean;
};

/**
 * Describes the message CMsgGCToGCIsTrustedServerResponse.
 * Use `create(CMsgGCToGCIsTrustedServerResponseSchema)` to create a new message.
 */
export const CMsgGCToGCIsTrustedServerResponseSchema: GenMessage<CMsgGCToGCIsTrustedServerResponse> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 69);

/**
 * @generated from message CMsgGCToGCBroadcastConsoleCommand
 */
export type CMsgGCToGCBroadcastConsoleCommand = Message<"CMsgGCToGCBroadcastConsoleCommand"> & {
  /**
   * @generated from field: optional string con_command = 1;
   */
  conCommand: string;
};

/**
 * Describes the message CMsgGCToGCBroadcastConsoleCommand.
 * Use `create(CMsgGCToGCBroadcastConsoleCommandSchema)` to create a new message.
 */
export const CMsgGCToGCBroadcastConsoleCommandSchema: GenMessage<CMsgGCToGCBroadcastConsoleCommand> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 70);

/**
 * @generated from message CMsgGCServerVersionUpdated
 */
export type CMsgGCServerVersionUpdated = Message<"CMsgGCServerVersionUpdated"> & {
  /**
   * @generated from field: optional uint32 server_version = 1;
   */
  serverVersion: number;
};

/**
 * Describes the message CMsgGCServerVersionUpdated.
 * Use `create(CMsgGCServerVersionUpdatedSchema)` to create a new message.
 */
export const CMsgGCServerVersionUpdatedSchema: GenMessage<CMsgGCServerVersionUpdated> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 71);

/**
 * @generated from message CMsgGCClientVersionUpdated
 */
export type CMsgGCClientVersionUpdated = Message<"CMsgGCClientVersionUpdated"> & {
  /**
   * @generated from field: optional uint32 client_version = 1;
   */
  clientVersion: number;
};

/**
 * Describes the message CMsgGCClientVersionUpdated.
 * Use `create(CMsgGCClientVersionUpdatedSchema)` to create a new message.
 */
export const CMsgGCClientVersionUpdatedSchema: GenMessage<CMsgGCClientVersionUpdated> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 72);

/**
 * @generated from message CMsgGCToGCWebAPIAccountChanged
 */
export type CMsgGCToGCWebAPIAccountChanged = Message<"CMsgGCToGCWebAPIAccountChanged"> & {
};

/**
 * Describes the message CMsgGCToGCWebAPIAccountChanged.
 * Use `create(CMsgGCToGCWebAPIAccountChangedSchema)` to create a new message.
 */
export const CMsgGCToGCWebAPIAccountChangedSchema: GenMessage<CMsgGCToGCWebAPIAccountChanged> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 73);

/**
 * @generated from message CMsgGCToGCRequestPassportItemGrant
 */
export type CMsgGCToGCRequestPassportItemGrant = Message<"CMsgGCToGCRequestPassportItemGrant"> & {
  /**
   * @generated from field: optional fixed64 steam_id = 1;
   */
  steamId: bigint;

  /**
   * @generated from field: optional uint32 league_id = 2;
   */
  leagueId: number;

  /**
   * @generated from field: optional int32 reward_flag = 3;
   */
  rewardFlag: number;
};

/**
 * Describes the message CMsgGCToGCRequestPassportItemGrant.
 * Use `create(CMsgGCToGCRequestPassportItemGrantSchema)` to create a new message.
 */
export const CMsgGCToGCRequestPassportItemGrantSchema: GenMessage<CMsgGCToGCRequestPassportItemGrant> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 74);

/**
 * @generated from message CMsgGameServerInfo
 */
export type CMsgGameServerInfo = Message<"CMsgGameServerInfo"> & {
  /**
   * @generated from field: optional fixed32 server_public_ip_addr = 1;
   */
  serverPublicIpAddr: number;

  /**
   * @generated from field: optional fixed32 server_private_ip_addr = 2;
   */
  serverPrivateIpAddr: number;

  /**
   * @generated from field: optional uint32 server_port = 3;
   */
  serverPort: number;

  /**
   * @generated from field: optional uint32 server_tv_port = 4;
   */
  serverTvPort: number;

  /**
   * @generated from field: optional string server_key = 5;
   */
  serverKey: string;

  /**
   * @generated from field: optional bool server_hibernation = 6;
   */
  serverHibernation: boolean;

  /**
   * @generated from field: optional CMsgGameServerInfo.ServerType server_type = 7 [default = UNSPECIFIED];
   */
  serverType: CMsgGameServerInfo_ServerType;

  /**
   * @generated from field: optional uint32 server_region = 8;
   */
  serverRegion: number;

  /**
   * @generated from field: optional float server_loadavg = 9;
   */
  serverLoadavg: number;

  /**
   * @generated from field: optional float server_tv_broadcast_time = 10;
   */
  serverTvBroadcastTime: number;

  /**
   * @generated from field: optional float server_game_time = 11;
   */
  serverGameTime: number;

  /**
   * @generated from field: optional fixed64 server_relay_connected_steam_id = 12;
   */
  serverRelayConnectedSteamId: bigint;

  /**
   * @generated from field: optional uint32 relay_slots_max = 13;
   */
  relaySlotsMax: number;

  /**
   * @generated from field: optional int32 relays_connected = 14;
   */
  relaysConnected: number;

  /**
   * @generated from field: optional int32 relay_clients_connected = 15;
   */
  relayClientsConnected: number;

  /**
   * @generated from field: optional fixed64 relayed_game_server_steam_id = 16;
   */
  relayedGameServerSteamId: bigint;

  /**
   * @generated from field: optional uint32 parent_relay_count = 17;
   */
  parentRelayCount: number;

  /**
   * @generated from field: optional fixed64 tv_secret_code = 18;
   */
  tvSecretCode: bigint;
};

/**
 * Describes the message CMsgGameServerInfo.
 * Use `create(CMsgGameServerInfoSchema)` to create a new message.
 */
export const CMsgGameServerInfoSchema: GenMessage<CMsgGameServerInfo> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 75);

/**
 * @generated from enum CMsgGameServerInfo.ServerType
 */
export enum CMsgGameServerInfo_ServerType {
  /**
   * @generated from enum value: UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: GAME = 1;
   */
  GAME = 1,

  /**
   * @generated from enum value: PROXY = 2;
   */
  PROXY = 2,
}

/**
 * Describes the enum CMsgGameServerInfo.ServerType.
 */
export const CMsgGameServerInfo_ServerTypeSchema: GenEnum<CMsgGameServerInfo_ServerType> = /*@__PURE__*/
  enumDesc(file_base_gcmessages, 75, 0);

/**
 * @generated from message CSOEconEquipSlot
 */
export type CSOEconEquipSlot = Message<"CSOEconEquipSlot"> & {
  /**
   * @generated from field: optional uint32 account_id = 1;
   */
  accountId: number;

  /**
   * @generated from field: optional uint32 class_id = 2;
   */
  classId: number;

  /**
   * @generated from field: optional uint32 slot_id = 3;
   */
  slotId: number;

  /**
   * @generated from field: optional uint64 item_id = 4;
   */
  itemId: bigint;

  /**
   * @generated from field: optional uint32 item_definition = 5;
   */
  itemDefinition: number;
};

/**
 * Describes the message CSOEconEquipSlot.
 * Use `create(CSOEconEquipSlotSchema)` to create a new message.
 */
export const CSOEconEquipSlotSchema: GenMessage<CSOEconEquipSlot> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 76);

/**
 * @generated from message CMsgAdjustEquipSlot
 */
export type CMsgAdjustEquipSlot = Message<"CMsgAdjustEquipSlot"> & {
  /**
   * @generated from field: optional uint32 class_id = 1;
   */
  classId: number;

  /**
   * @generated from field: optional uint32 slot_id = 2;
   */
  slotId: number;

  /**
   * @generated from field: optional uint64 item_id = 3;
   */
  itemId: bigint;
};

/**
 * Describes the message CMsgAdjustEquipSlot.
 * Use `create(CMsgAdjustEquipSlotSchema)` to create a new message.
 */
export const CMsgAdjustEquipSlotSchema: GenMessage<CMsgAdjustEquipSlot> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 77);

/**
 * @generated from message CMsgAdjustEquipSlots
 */
export type CMsgAdjustEquipSlots = Message<"CMsgAdjustEquipSlots"> & {
  /**
   * @generated from field: repeated CMsgAdjustEquipSlot slots = 1;
   */
  slots: CMsgAdjustEquipSlot[];

  /**
   * @generated from field: optional uint32 change_num = 2;
   */
  changeNum: number;
};

/**
 * Describes the message CMsgAdjustEquipSlots.
 * Use `create(CMsgAdjustEquipSlotsSchema)` to create a new message.
 */
export const CMsgAdjustEquipSlotsSchema: GenMessage<CMsgAdjustEquipSlots> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 78);

/**
 * @generated from message CMsgOpenCrate
 */
export type CMsgOpenCrate = Message<"CMsgOpenCrate"> & {
  /**
   * @generated from field: optional uint64 tool_item_id = 1;
   */
  toolItemId: bigint;

  /**
   * @generated from field: optional uint64 subject_item_id = 2;
   */
  subjectItemId: bigint;

  /**
   * @generated from field: optional bool for_rental = 3;
   */
  forRental: boolean;

  /**
   * @generated from field: optional uint32 points_remaining = 4;
   */
  pointsRemaining: number;
};

/**
 * Describes the message CMsgOpenCrate.
 * Use `create(CMsgOpenCrateSchema)` to create a new message.
 */
export const CMsgOpenCrateSchema: GenMessage<CMsgOpenCrate> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 79);

/**
 * @generated from message CSOEconRentalHistory
 */
export type CSOEconRentalHistory = Message<"CSOEconRentalHistory"> & {
  /**
   * @generated from field: optional uint32 account_id = 1;
   */
  accountId: number;

  /**
   * @generated from field: optional uint64 crate_item_id = 2;
   */
  crateItemId: bigint;

  /**
   * @generated from field: optional uint32 crate_def_index = 3;
   */
  crateDefIndex: number;

  /**
   * @generated from field: optional uint32 issue_date = 4;
   */
  issueDate: number;

  /**
   * @generated from field: optional uint32 expiration_date = 5;
   */
  expirationDate: number;
};

/**
 * Describes the message CSOEconRentalHistory.
 * Use `create(CSOEconRentalHistorySchema)` to create a new message.
 */
export const CSOEconRentalHistorySchema: GenMessage<CSOEconRentalHistory> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 80);

/**
 * @generated from message CMsgAcknowledgeRentalExpiration
 */
export type CMsgAcknowledgeRentalExpiration = Message<"CMsgAcknowledgeRentalExpiration"> & {
  /**
   * @generated from field: optional uint64 crate_item_id = 1;
   */
  crateItemId: bigint;
};

/**
 * Describes the message CMsgAcknowledgeRentalExpiration.
 * Use `create(CMsgAcknowledgeRentalExpirationSchema)` to create a new message.
 */
export const CMsgAcknowledgeRentalExpirationSchema: GenMessage<CMsgAcknowledgeRentalExpiration> = /*@__PURE__*/
  messageDesc(file_base_gcmessages, 81);

/**
 * @generated from enum EGCBaseMsg
 */
export enum EGCBaseMsg {
  /**
   * @generated from enum value: k_EMsgGCSystemMessage = 4001;
   */
  k_EMsgGCSystemMessage = 4001,

  /**
   * @generated from enum value: k_EMsgGCReplicateConVars = 4002;
   */
  k_EMsgGCReplicateConVars = 4002,

  /**
   * @generated from enum value: k_EMsgGCConVarUpdated = 4003;
   */
  k_EMsgGCConVarUpdated = 4003,

  /**
   * @generated from enum value: k_EMsgGCInQueue = 4008;
   */
  k_EMsgGCInQueue = 4008,

  /**
   * @generated from enum value: k_EMsgGCInviteToParty = 4501;
   */
  k_EMsgGCInviteToParty = 4501,

  /**
   * @generated from enum value: k_EMsgGCInvitationCreated = 4502;
   */
  k_EMsgGCInvitationCreated = 4502,

  /**
   * @generated from enum value: k_EMsgGCPartyInviteResponse = 4503;
   */
  k_EMsgGCPartyInviteResponse = 4503,

  /**
   * @generated from enum value: k_EMsgGCKickFromParty = 4504;
   */
  k_EMsgGCKickFromParty = 4504,

  /**
   * @generated from enum value: k_EMsgGCLeaveParty = 4505;
   */
  k_EMsgGCLeaveParty = 4505,

  /**
   * @generated from enum value: k_EMsgGCServerAvailable = 4506;
   */
  k_EMsgGCServerAvailable = 4506,

  /**
   * @generated from enum value: k_EMsgGCClientConnectToServer = 4507;
   */
  k_EMsgGCClientConnectToServer = 4507,

  /**
   * @generated from enum value: k_EMsgGCGameServerInfo = 4508;
   */
  k_EMsgGCGameServerInfo = 4508,

  /**
   * @generated from enum value: k_EMsgGCError = 4509;
   */
  k_EMsgGCError = 4509,

  /**
   * @generated from enum value: k_EMsgGCReplay_UploadedToYouTube = 4510;
   */
  k_EMsgGCReplay_UploadedToYouTube = 4510,

  /**
   * @generated from enum value: k_EMsgGCLANServerAvailable = 4511;
   */
  k_EMsgGCLANServerAvailable = 4511,
}

/**
 * Describes the enum EGCBaseMsg.
 */
export const EGCBaseMsgSchema: GenEnum<EGCBaseMsg> = /*@__PURE__*/
  enumDesc(file_base_gcmessages, 0);

/**
 * @generated from enum EGCBaseProtoObjectTypes
 */
export enum EGCBaseProtoObjectTypes {
  /**
   * @generated from enum value: k_EProtoObjectPartyInvite = 1001;
   */
  k_EProtoObjectPartyInvite = 1001,

  /**
   * @generated from enum value: k_EProtoObjectLobbyInvite = 1002;
   */
  k_EProtoObjectLobbyInvite = 1002,
}

/**
 * Describes the enum EGCBaseProtoObjectTypes.
 */
export const EGCBaseProtoObjectTypesSchema: GenEnum<EGCBaseProtoObjectTypes> = /*@__PURE__*/
  enumDesc(file_base_gcmessages, 1);

/**
 * @generated from enum GC_BannedWordType
 */
export enum GC_BannedWordType {
  /**
   * @generated from enum value: GC_BANNED_WORD_DISABLE_WORD = 0;
   */
  GC_BANNED_WORD_DISABLE_WORD = 0,

  /**
   * @generated from enum value: GC_BANNED_WORD_ENABLE_WORD = 1;
   */
  GC_BANNED_WORD_ENABLE_WORD = 1,
}

/**
 * Describes the enum GC_BannedWordType.
 */
export const GC_BannedWordTypeSchema: GenEnum<GC_BannedWordType> = /*@__PURE__*/
  enumDesc(file_base_gcmessages, 2);

