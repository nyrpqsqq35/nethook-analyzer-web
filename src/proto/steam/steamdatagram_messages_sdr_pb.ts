// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steamdatagram_messages_sdr.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { CMsgSteamDatagramCertificateSigned, CMsgSteamNetworkingIdentityLegacyBinary } from "./steamnetworkingsockets_messages_certs_pb";
import { file_steamnetworkingsockets_messages_certs } from "./steamnetworkingsockets_messages_certs_pb";
import type { CMsgSteamDatagramConnectionQuality, CMsgSteamDatagramSessionCryptInfoSigned, CMsgSteamNetworkingICESessionSummary } from "./steamnetworkingsockets_messages_pb";
import { file_steamnetworkingsockets_messages } from "./steamnetworkingsockets_messages_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steamdatagram_messages_sdr.proto.
 */
export const file_steamdatagram_messages_sdr: GenFile = /*@__PURE__*/
  fileDesc("", [file_steamnetworkingsockets_messages_certs, file_steamnetworkingsockets_messages]);

/**
 * @generated from message CMsgSteamNetworkingIPAddress
 */
export type CMsgSteamNetworkingIPAddress = Message<"CMsgSteamNetworkingIPAddress"> & {
  /**
   * @generated from field: optional fixed32 v4 = 1;
   */
  v4: number;

  /**
   * @generated from field: optional bytes v6 = 2;
   */
  v6: Uint8Array;
};

/**
 * Describes the message CMsgSteamNetworkingIPAddress.
 * Use `create(CMsgSteamNetworkingIPAddressSchema)` to create a new message.
 */
export const CMsgSteamNetworkingIPAddressSchema: GenMessage<CMsgSteamNetworkingIPAddress> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 0);

/**
 * @generated from message CMsgSteamDatagramSignedMessageGeneric
 */
export type CMsgSteamDatagramSignedMessageGeneric = Message<"CMsgSteamDatagramSignedMessageGeneric"> & {
  /**
   * @generated from field: optional CMsgSteamDatagramCertificateSigned cert = 1;
   */
  cert?: CMsgSteamDatagramCertificateSigned;

  /**
   * @generated from field: optional bytes signed_data = 2;
   */
  signedData: Uint8Array;

  /**
   * @generated from field: optional bytes signature = 3;
   */
  signature: Uint8Array;

  /**
   * @generated from field: optional bytes dummy_pad = 1023;
   */
  dummyPad: Uint8Array;
};

/**
 * Describes the message CMsgSteamDatagramSignedMessageGeneric.
 * Use `create(CMsgSteamDatagramSignedMessageGenericSchema)` to create a new message.
 */
export const CMsgSteamDatagramSignedMessageGenericSchema: GenMessage<CMsgSteamDatagramSignedMessageGeneric> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 1);

/**
 * @generated from message CMsgSteamDatagramRouterPingReply
 */
export type CMsgSteamDatagramRouterPingReply = Message<"CMsgSteamDatagramRouterPingReply"> & {
  /**
   * @generated from field: optional fixed32 client_timestamp = 1;
   */
  clientTimestamp: number;

  /**
   * @generated from field: repeated fixed32 latency_datacenter_ids = 2 [packed = true];
   */
  latencyDatacenterIds: number[];

  /**
   * @generated from field: repeated uint32 latency_ping_ms = 3 [packed = true];
   */
  latencyPingMs: number[];

  /**
   * @generated from field: repeated fixed32 latency_datacenter_ids_p2p = 14 [packed = true];
   */
  latencyDatacenterIdsP2p: number[];

  /**
   * @generated from field: repeated uint32 latency_ping_ms_p2p = 15 [packed = true];
   */
  latencyPingMsP2p: number[];

  /**
   * @generated from field: optional fixed32 your_public_ip = 4;
   */
  yourPublicIp: number;

  /**
   * @generated from field: optional fixed32 your_public_port = 11;
   */
  yourPublicPort: number;

  /**
   * @generated from field: optional fixed32 server_time = 5;
   */
  serverTime: number;

  /**
   * @generated from field: optional fixed64 challenge = 6;
   */
  challenge: bigint;

  /**
   * @generated from field: optional uint32 seconds_until_shutdown = 7;
   */
  secondsUntilShutdown: number;

  /**
   * @generated from field: optional fixed32 client_cookie = 8;
   */
  clientCookie: number;

  /**
   * @generated from field: optional uint32 recv_tos = 16;
   */
  recvTos: number;

  /**
   * @generated from field: optional uint32 echo_sent_tos = 17;
   */
  echoSentTos: number;

  /**
   * @generated from field: optional uint32 sent_tos = 18;
   */
  sentTos: number;

  /**
   * @generated from field: optional uint32 echo_request_reply_tos = 19;
   */
  echoRequestReplyTos: number;

  /**
   * @generated from field: optional uint32 scoring_penalty_relay_cluster = 9;
   */
  scoringPenaltyRelayCluster: number;

  /**
   * @generated from field: optional uint32 flags = 12;
   */
  flags: number;

  /**
   * @generated from field: repeated CMsgSteamDatagramRouterPingReply.RouteException route_exceptions = 10;
   */
  routeExceptions: CMsgSteamDatagramRouterPingReply_RouteException[];

  /**
   * @generated from field: repeated CMsgSteamDatagramRouterPingReply.AltAddress alt_addresses = 13;
   */
  altAddresses: CMsgSteamDatagramRouterPingReply_AltAddress[];

  /**
   * @generated from field: optional bytes dummy_pad = 99;
   */
  dummyPad: Uint8Array;

  /**
   * @generated from field: optional uint64 dummy_varint = 100;
   */
  dummyVarint: bigint;
};

/**
 * Describes the message CMsgSteamDatagramRouterPingReply.
 * Use `create(CMsgSteamDatagramRouterPingReplySchema)` to create a new message.
 */
export const CMsgSteamDatagramRouterPingReplySchema: GenMessage<CMsgSteamDatagramRouterPingReply> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 2);

/**
 * @generated from message CMsgSteamDatagramRouterPingReply.RouteException
 */
export type CMsgSteamDatagramRouterPingReply_RouteException = Message<"CMsgSteamDatagramRouterPingReply.RouteException"> & {
  /**
   * @generated from field: optional fixed32 data_center_id = 1;
   */
  dataCenterId: number;

  /**
   * @generated from field: optional uint32 flags = 2;
   */
  flags: number;

  /**
   * @generated from field: optional uint32 penalty = 3;
   */
  penalty: number;
};

/**
 * Describes the message CMsgSteamDatagramRouterPingReply.RouteException.
 * Use `create(CMsgSteamDatagramRouterPingReply_RouteExceptionSchema)` to create a new message.
 */
export const CMsgSteamDatagramRouterPingReply_RouteExceptionSchema: GenMessage<CMsgSteamDatagramRouterPingReply_RouteException> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 2, 0);

/**
 * @generated from message CMsgSteamDatagramRouterPingReply.AltAddress
 */
export type CMsgSteamDatagramRouterPingReply_AltAddress = Message<"CMsgSteamDatagramRouterPingReply.AltAddress"> & {
  /**
   * @generated from field: optional fixed32 ipv4 = 1;
   */
  ipv4: number;

  /**
   * @generated from field: optional uint32 port = 2;
   */
  port: number;

  /**
   * @generated from field: optional uint32 penalty = 3;
   */
  penalty: number;

  /**
   * @generated from field: optional CMsgSteamDatagramRouterPingReply.AltAddress.Protocol protocol = 4 [default = DefaultProtocol];
   */
  protocol: CMsgSteamDatagramRouterPingReply_AltAddress_Protocol;

  /**
   * @generated from field: optional string id = 5;
   */
  id: string;
};

/**
 * Describes the message CMsgSteamDatagramRouterPingReply.AltAddress.
 * Use `create(CMsgSteamDatagramRouterPingReply_AltAddressSchema)` to create a new message.
 */
export const CMsgSteamDatagramRouterPingReply_AltAddressSchema: GenMessage<CMsgSteamDatagramRouterPingReply_AltAddress> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 2, 1);

/**
 * @generated from enum CMsgSteamDatagramRouterPingReply.AltAddress.Protocol
 */
export enum CMsgSteamDatagramRouterPingReply_AltAddress_Protocol {
  /**
   * @generated from enum value: DefaultProtocol = 0;
   */
  DefaultProtocol = 0,
}

/**
 * Describes the enum CMsgSteamDatagramRouterPingReply.AltAddress.Protocol.
 */
export const CMsgSteamDatagramRouterPingReply_AltAddress_ProtocolSchema: GenEnum<CMsgSteamDatagramRouterPingReply_AltAddress_Protocol> = /*@__PURE__*/
  enumDesc(file_steamdatagram_messages_sdr, 2, 1, 0);

/**
 * @generated from enum CMsgSteamDatagramRouterPingReply.Flags
 */
export enum CMsgSteamDatagramRouterPingReply_Flags {
  /**
   * @generated from enum value: FLAG_MAYBE_MORE_DATA_CENTERS = 1;
   */
  FLAG_MAYBE_MORE_DATA_CENTERS = 1,

  /**
   * @generated from enum value: FLAG_MAYBE_MORE_ALT_ADDRESSES = 2;
   */
  FLAG_MAYBE_MORE_ALT_ADDRESSES = 2,
}

/**
 * Describes the enum CMsgSteamDatagramRouterPingReply.Flags.
 */
export const CMsgSteamDatagramRouterPingReply_FlagsSchema: GenEnum<CMsgSteamDatagramRouterPingReply_Flags> = /*@__PURE__*/
  enumDesc(file_steamdatagram_messages_sdr, 2, 0);

/**
 * @generated from message CMsgSteamDatagramGameserverPingRequestBody
 */
export type CMsgSteamDatagramGameserverPingRequestBody = Message<"CMsgSteamDatagramGameserverPingRequestBody"> & {
  /**
   * @generated from field: optional fixed32 relay_popid = 1;
   */
  relayPopid: number;

  /**
   * @generated from field: optional CMsgSteamNetworkingIPAddress your_public_ip = 2;
   */
  yourPublicIp?: CMsgSteamNetworkingIPAddress;

  /**
   * @generated from field: optional uint32 your_public_port = 3;
   */
  yourPublicPort: number;

  /**
   * @generated from field: optional uint64 relay_unix_time = 4;
   */
  relayUnixTime: bigint;

  /**
   * @generated from field: optional fixed64 routing_secret = 5;
   */
  routingSecret: bigint;

  /**
   * @generated from field: repeated CMsgSteamNetworkingIPAddress my_ips = 6;
   */
  myIps: CMsgSteamNetworkingIPAddress[];

  /**
   * @generated from field: optional bytes echo = 8;
   */
  echo: Uint8Array;
};

/**
 * Describes the message CMsgSteamDatagramGameserverPingRequestBody.
 * Use `create(CMsgSteamDatagramGameserverPingRequestBodySchema)` to create a new message.
 */
export const CMsgSteamDatagramGameserverPingRequestBodySchema: GenMessage<CMsgSteamDatagramGameserverPingRequestBody> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 3);

/**
 * @generated from message CMsgSteamDatagramGameserverPingRequestEnvelope
 */
export type CMsgSteamDatagramGameserverPingRequestEnvelope = Message<"CMsgSteamDatagramGameserverPingRequestEnvelope"> & {
  /**
   * @generated from field: optional CMsgSteamDatagramCertificateSigned cert = 6;
   */
  cert?: CMsgSteamDatagramCertificateSigned;

  /**
   * @generated from field: optional bytes signed_data = 7;
   */
  signedData: Uint8Array;

  /**
   * @generated from field: optional bytes signature = 8;
   */
  signature: Uint8Array;

  /**
   * @generated from field: optional fixed32 legacy_your_public_ip = 1;
   */
  legacyYourPublicIp: number;

  /**
   * @generated from field: optional fixed32 legacy_your_public_port = 5;
   */
  legacyYourPublicPort: number;

  /**
   * @generated from field: optional fixed32 legacy_relay_unix_time = 2;
   */
  legacyRelayUnixTime: number;

  /**
   * @generated from field: optional fixed64 legacy_challenge = 3;
   */
  legacyChallenge: bigint;

  /**
   * @generated from field: optional fixed32 legacy_router_timestamp = 4;
   */
  legacyRouterTimestamp: number;

  /**
   * @generated from field: optional bytes dummy_pad = 1023;
   */
  dummyPad: Uint8Array;
};

/**
 * Describes the message CMsgSteamDatagramGameserverPingRequestEnvelope.
 * Use `create(CMsgSteamDatagramGameserverPingRequestEnvelopeSchema)` to create a new message.
 */
export const CMsgSteamDatagramGameserverPingRequestEnvelopeSchema: GenMessage<CMsgSteamDatagramGameserverPingRequestEnvelope> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 4);

/**
 * @generated from message CMsgSteamDatagramGameserverPingReplyData
 */
export type CMsgSteamDatagramGameserverPingReplyData = Message<"CMsgSteamDatagramGameserverPingReplyData"> & {
  /**
   * @generated from field: optional fixed32 echo_relay_unix_time = 2;
   */
  echoRelayUnixTime: number;

  /**
   * @generated from field: optional bytes echo = 8;
   */
  echo: Uint8Array;

  /**
   * @generated from field: optional fixed64 legacy_challenge = 3;
   */
  legacyChallenge: bigint;

  /**
   * @generated from field: optional fixed32 legacy_router_timestamp = 4;
   */
  legacyRouterTimestamp: number;

  /**
   * @generated from field: optional fixed32 data_center_id = 5;
   */
  dataCenterId: number;

  /**
   * @generated from field: optional uint32 appid = 6;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 protocol_version = 7;
   */
  protocolVersion: number;

  /**
   * @generated from field: optional string build = 9;
   */
  build: string;

  /**
   * @generated from field: optional uint64 network_config_version = 10;
   */
  networkConfigVersion: bigint;

  /**
   * @generated from field: optional fixed32 my_unix_time = 11;
   */
  myUnixTime: number;

  /**
   * @generated from field: optional bytes routing_blob = 12;
   */
  routingBlob: Uint8Array;
};

/**
 * Describes the message CMsgSteamDatagramGameserverPingReplyData.
 * Use `create(CMsgSteamDatagramGameserverPingReplyDataSchema)` to create a new message.
 */
export const CMsgSteamDatagramGameserverPingReplyDataSchema: GenMessage<CMsgSteamDatagramGameserverPingReplyData> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 5);

/**
 * @generated from message CMsgSteamDatagramNoSessionRelayToClient
 */
export type CMsgSteamDatagramNoSessionRelayToClient = Message<"CMsgSteamDatagramNoSessionRelayToClient"> & {
  /**
   * @generated from field: optional fixed32 connection_id = 7;
   */
  connectionId: number;

  /**
   * @generated from field: optional fixed32 your_public_ip = 2;
   */
  yourPublicIp: number;

  /**
   * @generated from field: optional fixed32 your_public_port = 6;
   */
  yourPublicPort: number;

  /**
   * @generated from field: optional fixed32 server_time = 3;
   */
  serverTime: number;

  /**
   * @generated from field: optional fixed64 challenge = 4;
   */
  challenge: bigint;

  /**
   * @generated from field: optional uint32 seconds_until_shutdown = 5;
   */
  secondsUntilShutdown: number;
};

/**
 * Describes the message CMsgSteamDatagramNoSessionRelayToClient.
 * Use `create(CMsgSteamDatagramNoSessionRelayToClientSchema)` to create a new message.
 */
export const CMsgSteamDatagramNoSessionRelayToClientSchema: GenMessage<CMsgSteamDatagramNoSessionRelayToClient> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 6);

/**
 * @generated from message CMsgSteamDatagramNoSessionRelayToPeer
 */
export type CMsgSteamDatagramNoSessionRelayToPeer = Message<"CMsgSteamDatagramNoSessionRelayToPeer"> & {
  /**
   * @generated from field: optional uint32 legacy_relay_session_id = 1;
   */
  legacyRelaySessionId: number;

  /**
   * @generated from field: optional fixed32 from_relay_session_id = 2;
   */
  fromRelaySessionId: number;

  /**
   * @generated from field: optional fixed32 from_connection_id = 7;
   */
  fromConnectionId: number;

  /**
   * @generated from field: optional fixed64 kludge_pad = 99;
   */
  kludgePad: bigint;
};

/**
 * Describes the message CMsgSteamDatagramNoSessionRelayToPeer.
 * Use `create(CMsgSteamDatagramNoSessionRelayToPeerSchema)` to create a new message.
 */
export const CMsgSteamDatagramNoSessionRelayToPeerSchema: GenMessage<CMsgSteamDatagramNoSessionRelayToPeer> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 7);

/**
 * @generated from message CMsgTOSTreatment
 */
export type CMsgTOSTreatment = Message<"CMsgTOSTreatment"> & {
  /**
   * @generated from field: optional string l4s_detect = 1;
   */
  l4sDetect: string;

  /**
   * @generated from field: optional string up_ecn1 = 2;
   */
  upEcn1: string;

  /**
   * @generated from field: optional string down_dscp45 = 3;
   */
  downDscp45: string;
};

/**
 * Describes the message CMsgTOSTreatment.
 * Use `create(CMsgTOSTreatmentSchema)` to create a new message.
 */
export const CMsgTOSTreatmentSchema: GenMessage<CMsgTOSTreatment> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 8);

/**
 * @generated from message CMsgSteamDatagramClientPingSampleRequest
 */
export type CMsgSteamDatagramClientPingSampleRequest = Message<"CMsgSteamDatagramClientPingSampleRequest"> & {
  /**
   * @generated from field: optional fixed32 connection_id = 1;
   */
  connectionId: number;
};

/**
 * Describes the message CMsgSteamDatagramClientPingSampleRequest.
 * Use `create(CMsgSteamDatagramClientPingSampleRequestSchema)` to create a new message.
 */
export const CMsgSteamDatagramClientPingSampleRequestSchema: GenMessage<CMsgSteamDatagramClientPingSampleRequest> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 9);

/**
 * @generated from message CMsgSteamDatagramClientPingSampleReply
 */
export type CMsgSteamDatagramClientPingSampleReply = Message<"CMsgSteamDatagramClientPingSampleReply"> & {
  /**
   * @generated from field: optional fixed32 connection_id = 1;
   */
  connectionId: number;

  /**
   * @generated from field: optional bool relay_override_active = 5;
   */
  relayOverrideActive: boolean;

  /**
   * @generated from field: optional CMsgTOSTreatment tos = 6;
   */
  tos?: CMsgTOSTreatment;

  /**
   * @generated from field: repeated CMsgSteamDatagramClientPingSampleReply.POP pops = 2;
   */
  pops: CMsgSteamDatagramClientPingSampleReply_POP[];

  /**
   * @generated from field: repeated CMsgSteamDatagramClientPingSampleReply.LegacyDataCenter legacy_data_centers = 3;
   */
  legacyDataCenters: CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter[];
};

/**
 * Describes the message CMsgSteamDatagramClientPingSampleReply.
 * Use `create(CMsgSteamDatagramClientPingSampleReplySchema)` to create a new message.
 */
export const CMsgSteamDatagramClientPingSampleReplySchema: GenMessage<CMsgSteamDatagramClientPingSampleReply> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 10);

/**
 * @generated from message CMsgSteamDatagramClientPingSampleReply.POP
 */
export type CMsgSteamDatagramClientPingSampleReply_POP = Message<"CMsgSteamDatagramClientPingSampleReply.POP"> & {
  /**
   * @generated from field: optional fixed32 pop_id = 1;
   */
  popId: number;

  /**
   * @generated from field: optional uint32 default_front_ping_ms = 2;
   */
  defaultFrontPingMs: number;

  /**
   * @generated from field: optional uint32 cluster_penalty = 4;
   */
  clusterPenalty: number;

  /**
   * @generated from field: repeated CMsgSteamDatagramClientPingSampleReply.POP.AltAddress alt_addresses = 7;
   */
  altAddresses: CMsgSteamDatagramClientPingSampleReply_POP_AltAddress[];

  /**
   * @generated from field: optional uint32 default_e2e_ping_ms = 3;
   */
  defaultE2ePingMs: number;

  /**
   * @generated from field: optional uint32 default_e2e_score = 5;
   */
  defaultE2eScore: number;

  /**
   * @generated from field: optional fixed32 p2p_via_peer_relay_pop_id = 6;
   */
  p2pViaPeerRelayPopId: number;

  /**
   * @generated from field: optional uint32 best_dc_ping_ms = 9;
   */
  bestDcPingMs: number;

  /**
   * @generated from field: optional uint32 best_dc_score = 10;
   */
  bestDcScore: number;

  /**
   * @generated from field: optional fixed32 best_dc_via_relay_pop_id = 11;
   */
  bestDcViaRelayPopId: number;

  /**
   * @generated from field: optional uint32 default_dc_ping_ms = 12;
   */
  defaultDcPingMs: number;

  /**
   * @generated from field: optional uint32 default_dc_score = 13;
   */
  defaultDcScore: number;

  /**
   * @generated from field: optional fixed32 default_dc_via_relay_pop_id = 14;
   */
  defaultDcViaRelayPopId: number;

  /**
   * @generated from field: optional uint32 test_dc_ping_ms = 15;
   */
  testDcPingMs: number;

  /**
   * @generated from field: optional uint32 test_dc_score = 16;
   */
  testDcScore: number;

  /**
   * @generated from field: optional fixed32 test_dc_via_relay_pop_id = 17;
   */
  testDcViaRelayPopId: number;
};

/**
 * Describes the message CMsgSteamDatagramClientPingSampleReply.POP.
 * Use `create(CMsgSteamDatagramClientPingSampleReply_POPSchema)` to create a new message.
 */
export const CMsgSteamDatagramClientPingSampleReply_POPSchema: GenMessage<CMsgSteamDatagramClientPingSampleReply_POP> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 10, 0);

/**
 * @generated from message CMsgSteamDatagramClientPingSampleReply.POP.AltAddress
 */
export type CMsgSteamDatagramClientPingSampleReply_POP_AltAddress = Message<"CMsgSteamDatagramClientPingSampleReply.POP.AltAddress"> & {
  /**
   * @generated from field: optional string id = 1;
   */
  id: string;

  /**
   * @generated from field: optional uint32 front_ping_ms = 2;
   */
  frontPingMs: number;

  /**
   * @generated from field: optional uint32 penalty = 3;
   */
  penalty: number;
};

/**
 * Describes the message CMsgSteamDatagramClientPingSampleReply.POP.AltAddress.
 * Use `create(CMsgSteamDatagramClientPingSampleReply_POP_AltAddressSchema)` to create a new message.
 */
export const CMsgSteamDatagramClientPingSampleReply_POP_AltAddressSchema: GenMessage<CMsgSteamDatagramClientPingSampleReply_POP_AltAddress> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 10, 0, 0);

/**
 * @generated from message CMsgSteamDatagramClientPingSampleReply.LegacyDataCenter
 */
export type CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter = Message<"CMsgSteamDatagramClientPingSampleReply.LegacyDataCenter"> & {
  /**
   * @generated from field: optional fixed32 data_center_id = 1;
   */
  dataCenterId: number;

  /**
   * @generated from field: optional fixed32 best_dc_via_relay_pop_id = 2;
   */
  bestDcViaRelayPopId: number;

  /**
   * @generated from field: optional uint32 best_dc_ping_ms = 3;
   */
  bestDcPingMs: number;
};

/**
 * Describes the message CMsgSteamDatagramClientPingSampleReply.LegacyDataCenter.
 * Use `create(CMsgSteamDatagramClientPingSampleReply_LegacyDataCenterSchema)` to create a new message.
 */
export const CMsgSteamDatagramClientPingSampleReply_LegacyDataCenterSchema: GenMessage<CMsgSteamDatagramClientPingSampleReply_LegacyDataCenter> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 10, 1);

/**
 * @generated from message CMsgSteamDatagramClientSwitchedPrimary
 */
export type CMsgSteamDatagramClientSwitchedPrimary = Message<"CMsgSteamDatagramClientSwitchedPrimary"> & {
  /**
   * @generated from field: optional fixed32 connection_id = 1;
   */
  connectionId: number;

  /**
   * @generated from field: optional fixed32 from_ip = 2;
   */
  fromIp: number;

  /**
   * @generated from field: optional uint32 from_port = 3;
   */
  fromPort: number;

  /**
   * @generated from field: optional fixed32 from_router_cluster = 4;
   */
  fromRouterCluster: number;

  /**
   * @generated from field: optional uint32 from_active_time = 5;
   */
  fromActiveTime: number;

  /**
   * @generated from field: optional uint32 from_active_packets_recv = 6;
   */
  fromActivePacketsRecv: number;

  /**
   * @generated from field: optional string from_dropped_reason = 7;
   */
  fromDroppedReason: string;

  /**
   * @generated from field: optional uint32 gap_ms = 8;
   */
  gapMs: number;

  /**
   * @generated from field: optional CMsgSteamDatagramClientSwitchedPrimary.RouterQuality from_quality_now = 9;
   */
  fromQualityNow?: CMsgSteamDatagramClientSwitchedPrimary_RouterQuality;

  /**
   * @generated from field: optional CMsgSteamDatagramClientSwitchedPrimary.RouterQuality to_quality_now = 10;
   */
  toQualityNow?: CMsgSteamDatagramClientSwitchedPrimary_RouterQuality;

  /**
   * @generated from field: optional CMsgSteamDatagramClientSwitchedPrimary.RouterQuality from_quality_then = 11;
   */
  fromQualityThen?: CMsgSteamDatagramClientSwitchedPrimary_RouterQuality;

  /**
   * @generated from field: optional CMsgSteamDatagramClientSwitchedPrimary.RouterQuality to_quality_then = 12;
   */
  toQualityThen?: CMsgSteamDatagramClientSwitchedPrimary_RouterQuality;
};

/**
 * Describes the message CMsgSteamDatagramClientSwitchedPrimary.
 * Use `create(CMsgSteamDatagramClientSwitchedPrimarySchema)` to create a new message.
 */
export const CMsgSteamDatagramClientSwitchedPrimarySchema: GenMessage<CMsgSteamDatagramClientSwitchedPrimary> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 11);

/**
 * @generated from message CMsgSteamDatagramClientSwitchedPrimary.RouterQuality
 */
export type CMsgSteamDatagramClientSwitchedPrimary_RouterQuality = Message<"CMsgSteamDatagramClientSwitchedPrimary.RouterQuality"> & {
  /**
   * @generated from field: optional uint32 score = 1;
   */
  score: number;

  /**
   * @generated from field: optional uint32 front_ping = 2;
   */
  frontPing: number;

  /**
   * @generated from field: optional uint32 back_ping = 3;
   */
  backPing: number;

  /**
   * @generated from field: optional uint32 seconds_until_down = 4;
   */
  secondsUntilDown: number;
};

/**
 * Describes the message CMsgSteamDatagramClientSwitchedPrimary.RouterQuality.
 * Use `create(CMsgSteamDatagramClientSwitchedPrimary_RouterQualitySchema)` to create a new message.
 */
export const CMsgSteamDatagramClientSwitchedPrimary_RouterQualitySchema: GenMessage<CMsgSteamDatagramClientSwitchedPrimary_RouterQuality> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 11, 0);

/**
 * @generated from message CMsgSteamDatagramConnectRequest
 */
export type CMsgSteamDatagramConnectRequest = Message<"CMsgSteamDatagramConnectRequest"> & {
  /**
   * @generated from field: optional fixed32 connection_id = 1;
   */
  connectionId: number;

  /**
   * @generated from field: optional fixed64 my_timestamp = 4;
   */
  myTimestamp: bigint;

  /**
   * @generated from field: optional uint32 ping_est_ms = 5;
   */
  pingEstMs: number;

  /**
   * @generated from field: optional uint32 virtual_port = 9;
   */
  virtualPort: number;

  /**
   * @generated from field: optional uint32 gameserver_relay_session_id = 2;
   */
  gameserverRelaySessionId: number;

  /**
   * @generated from field: optional CMsgSteamDatagramSessionCryptInfoSigned crypt = 6;
   */
  crypt?: CMsgSteamDatagramSessionCryptInfoSigned;

  /**
   * @generated from field: optional CMsgSteamDatagramCertificateSigned cert = 7;
   */
  cert?: CMsgSteamDatagramCertificateSigned;

  /**
   * @generated from field: optional fixed64 routing_secret = 10;
   */
  routingSecret: bigint;

  /**
   * @generated from field: optional fixed64 legacy_client_steam_id = 3;
   */
  legacyClientSteamId: bigint;
};

/**
 * Describes the message CMsgSteamDatagramConnectRequest.
 * Use `create(CMsgSteamDatagramConnectRequestSchema)` to create a new message.
 */
export const CMsgSteamDatagramConnectRequestSchema: GenMessage<CMsgSteamDatagramConnectRequest> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 12);

/**
 * @generated from message CMsgSteamDatagramConnectOK
 */
export type CMsgSteamDatagramConnectOK = Message<"CMsgSteamDatagramConnectOK"> & {
  /**
   * @generated from field: optional fixed32 client_connection_id = 1;
   */
  clientConnectionId: number;

  /**
   * @generated from field: optional fixed32 server_connection_id = 7;
   */
  serverConnectionId: number;

  /**
   * @generated from field: optional fixed64 your_timestamp = 3;
   */
  yourTimestamp: bigint;

  /**
   * @generated from field: optional uint32 delay_time_usec = 4;
   */
  delayTimeUsec: number;

  /**
   * @generated from field: optional uint32 gameserver_relay_session_id = 2;
   */
  gameserverRelaySessionId: number;

  /**
   * @generated from field: optional CMsgSteamDatagramSessionCryptInfoSigned crypt = 5;
   */
  crypt?: CMsgSteamDatagramSessionCryptInfoSigned;

  /**
   * @generated from field: optional CMsgSteamDatagramCertificateSigned cert = 6;
   */
  cert?: CMsgSteamDatagramCertificateSigned;
};

/**
 * Describes the message CMsgSteamDatagramConnectOK.
 * Use `create(CMsgSteamDatagramConnectOKSchema)` to create a new message.
 */
export const CMsgSteamDatagramConnectOKSchema: GenMessage<CMsgSteamDatagramConnectOK> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 13);

/**
 * @generated from message CMsgSteamNetworkingP2PSDRRoutingSummary
 */
export type CMsgSteamNetworkingP2PSDRRoutingSummary = Message<"CMsgSteamNetworkingP2PSDRRoutingSummary"> & {
  /**
   * @generated from field: optional uint32 initial_ping = 1;
   */
  initialPing: number;

  /**
   * @generated from field: optional uint32 initial_ping_front_local = 2;
   */
  initialPingFrontLocal: number;

  /**
   * @generated from field: optional uint32 initial_ping_front_remote = 3;
   */
  initialPingFrontRemote: number;

  /**
   * @generated from field: optional uint32 initial_score = 4;
   */
  initialScore: number;

  /**
   * @generated from field: optional fixed32 initial_pop_local = 5;
   */
  initialPopLocal: number;

  /**
   * @generated from field: optional fixed32 initial_pop_remote = 6;
   */
  initialPopRemote: number;

  /**
   * @generated from field: optional uint32 best_ping = 11;
   */
  bestPing: number;

  /**
   * @generated from field: optional uint32 best_ping_front_local = 12;
   */
  bestPingFrontLocal: number;

  /**
   * @generated from field: optional uint32 best_ping_front_remote = 13;
   */
  bestPingFrontRemote: number;

  /**
   * @generated from field: optional uint32 best_score = 14;
   */
  bestScore: number;

  /**
   * @generated from field: optional fixed32 best_pop_local = 15;
   */
  bestPopLocal: number;

  /**
   * @generated from field: optional fixed32 best_pop_remote = 16;
   */
  bestPopRemote: number;

  /**
   * @generated from field: optional uint32 best_time = 17;
   */
  bestTime: number;

  /**
   * @generated from field: optional uint32 negotiation_ms = 7;
   */
  negotiationMs: number;

  /**
   * @generated from field: optional uint32 selected_seconds = 8;
   */
  selectedSeconds: number;
};

/**
 * Describes the message CMsgSteamNetworkingP2PSDRRoutingSummary.
 * Use `create(CMsgSteamNetworkingP2PSDRRoutingSummarySchema)` to create a new message.
 */
export const CMsgSteamNetworkingP2PSDRRoutingSummarySchema: GenMessage<CMsgSteamNetworkingP2PSDRRoutingSummary> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 14);

/**
 * @generated from message CMsgSteamDatagramP2PRoutingSummary
 */
export type CMsgSteamDatagramP2PRoutingSummary = Message<"CMsgSteamDatagramP2PRoutingSummary"> & {
  /**
   * @generated from field: optional CMsgSteamNetworkingICESessionSummary ice = 2;
   */
  ice?: CMsgSteamNetworkingICESessionSummary;

  /**
   * @generated from field: optional CMsgSteamNetworkingP2PSDRRoutingSummary sdr = 3;
   */
  sdr?: CMsgSteamNetworkingP2PSDRRoutingSummary;
};

/**
 * Describes the message CMsgSteamDatagramP2PRoutingSummary.
 * Use `create(CMsgSteamDatagramP2PRoutingSummarySchema)` to create a new message.
 */
export const CMsgSteamDatagramP2PRoutingSummarySchema: GenMessage<CMsgSteamDatagramP2PRoutingSummary> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 15);

/**
 * @generated from message CMsgSteamDatagramConnectionClosed
 */
export type CMsgSteamDatagramConnectionClosed = Message<"CMsgSteamDatagramConnectionClosed"> & {
  /**
   * @generated from field: optional fixed32 to_connection_id = 7;
   */
  toConnectionId: number;

  /**
   * @generated from field: optional fixed32 from_connection_id = 8;
   */
  fromConnectionId: number;

  /**
   * @generated from field: optional string from_identity_string = 15;
   */
  fromIdentityString: string;

  /**
   * @generated from field: optional CMsgSteamNetworkingIdentityLegacyBinary legacy_from_identity_binary = 13;
   */
  legacyFromIdentityBinary?: CMsgSteamNetworkingIdentityLegacyBinary;

  /**
   * @generated from field: optional fixed64 legacy_from_steam_id = 3;
   */
  legacyFromSteamId: bigint;

  /**
   * @generated from field: optional uint32 legacy_gameserver_relay_session_id = 2;
   */
  legacyGameserverRelaySessionId: number;

  /**
   * @generated from field: optional fixed32 to_relay_session_id = 9;
   */
  toRelaySessionId: number;

  /**
   * @generated from field: optional fixed32 from_relay_session_id = 10;
   */
  fromRelaySessionId: number;

  /**
   * @generated from field: optional bytes forward_target_relay_routing_token = 11;
   */
  forwardTargetRelayRoutingToken: Uint8Array;

  /**
   * @generated from field: optional uint32 forward_target_revision = 12;
   */
  forwardTargetRevision: number;

  /**
   * @generated from field: optional CMsgSteamDatagramConnectionClosed.ERelayMode relay_mode = 4 [default = None];
   */
  relayMode: CMsgSteamDatagramConnectionClosed_ERelayMode;

  /**
   * @generated from field: optional string debug = 5;
   */
  debug: string;

  /**
   * @generated from field: optional uint32 reason_code = 6;
   */
  reasonCode: number;

  /**
   * @generated from field: optional fixed64 routing_secret = 14;
   */
  routingSecret: bigint;

  /**
   * @generated from field: optional bool not_primary_session = 16;
   */
  notPrimarySession: boolean;

  /**
   * @generated from field: optional bool not_primary_transport = 19;
   */
  notPrimaryTransport: boolean;

  /**
   * @generated from field: optional bool relay_override_active = 22;
   */
  relayOverrideActive: boolean;

  /**
   * @generated from field: optional CMsgSteamDatagramConnectionQuality quality_relay = 17;
   */
  qualityRelay?: CMsgSteamDatagramConnectionQuality;

  /**
   * @generated from field: optional CMsgSteamDatagramConnectionQuality quality_e2e = 18;
   */
  qualityE2e?: CMsgSteamDatagramConnectionQuality;

  /**
   * @generated from field: optional CMsgSteamDatagramP2PRoutingSummary p2p_routing_summary = 21;
   */
  p2pRoutingSummary?: CMsgSteamDatagramP2PRoutingSummary;
};

/**
 * Describes the message CMsgSteamDatagramConnectionClosed.
 * Use `create(CMsgSteamDatagramConnectionClosedSchema)` to create a new message.
 */
export const CMsgSteamDatagramConnectionClosedSchema: GenMessage<CMsgSteamDatagramConnectionClosed> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 16);

/**
 * @generated from enum CMsgSteamDatagramConnectionClosed.ERelayMode
 */
export enum CMsgSteamDatagramConnectionClosed_ERelayMode {
  /**
   * @generated from enum value: None = 0;
   */
  None = 0,

  /**
   * @generated from enum value: EndToEnd = 1;
   */
  EndToEnd = 1,

  /**
   * @generated from enum value: ClosedByPeer = 2;
   */
  ClosedByPeer = 2,
}

/**
 * Describes the enum CMsgSteamDatagramConnectionClosed.ERelayMode.
 */
export const CMsgSteamDatagramConnectionClosed_ERelayModeSchema: GenEnum<CMsgSteamDatagramConnectionClosed_ERelayMode> = /*@__PURE__*/
  enumDesc(file_steamdatagram_messages_sdr, 16, 0);

/**
 * @generated from message CMsgSteamDatagramNoConnection
 */
export type CMsgSteamDatagramNoConnection = Message<"CMsgSteamDatagramNoConnection"> & {
  /**
   * @generated from field: optional fixed32 to_connection_id = 5;
   */
  toConnectionId: number;

  /**
   * @generated from field: optional fixed32 from_connection_id = 6;
   */
  fromConnectionId: number;

  /**
   * @generated from field: optional uint32 legacy_gameserver_relay_session_id = 2;
   */
  legacyGameserverRelaySessionId: number;

  /**
   * @generated from field: optional fixed32 to_relay_session_id = 9;
   */
  toRelaySessionId: number;

  /**
   * @generated from field: optional fixed32 from_relay_session_id = 10;
   */
  fromRelaySessionId: number;

  /**
   * @generated from field: optional string from_identity_string = 7;
   */
  fromIdentityString: string;

  /**
   * @generated from field: optional fixed64 legacy_from_steam_id = 3;
   */
  legacyFromSteamId: bigint;

  /**
   * @generated from field: optional bool end_to_end = 4;
   */
  endToEnd: boolean;

  /**
   * @generated from field: optional bool not_primary_session = 12;
   */
  notPrimarySession: boolean;

  /**
   * @generated from field: optional bool not_primary_transport = 15;
   */
  notPrimaryTransport: boolean;

  /**
   * @generated from field: optional bool relay_override_active = 17;
   */
  relayOverrideActive: boolean;

  /**
   * @generated from field: optional CMsgSteamDatagramConnectionQuality quality_relay = 13;
   */
  qualityRelay?: CMsgSteamDatagramConnectionQuality;

  /**
   * @generated from field: optional CMsgSteamDatagramConnectionQuality quality_e2e = 14;
   */
  qualityE2e?: CMsgSteamDatagramConnectionQuality;

  /**
   * @generated from field: optional CMsgSteamDatagramP2PRoutingSummary p2p_routing_summary = 16;
   */
  p2pRoutingSummary?: CMsgSteamDatagramP2PRoutingSummary;

  /**
   * @generated from field: optional fixed64 routing_secret = 11;
   */
  routingSecret: bigint;

  /**
   * @generated from field: optional fixed32 dummy_pad = 1023;
   */
  dummyPad: number;
};

/**
 * Describes the message CMsgSteamDatagramNoConnection.
 * Use `create(CMsgSteamDatagramNoConnectionSchema)` to create a new message.
 */
export const CMsgSteamDatagramNoConnectionSchema: GenMessage<CMsgSteamDatagramNoConnection> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 17);

/**
 * @generated from message CMsgSteamDatagramGameserverSessionRequest
 */
export type CMsgSteamDatagramGameserverSessionRequest = Message<"CMsgSteamDatagramGameserverSessionRequest"> & {
  /**
   * @generated from field: optional bytes ticket = 1;
   */
  ticket: Uint8Array;

  /**
   * @generated from field: optional fixed32 challenge_time = 3;
   */
  challengeTime: number;

  /**
   * @generated from field: optional fixed64 challenge = 4;
   */
  challenge: bigint;

  /**
   * @generated from field: optional fixed32 client_connection_id = 5;
   */
  clientConnectionId: number;

  /**
   * @generated from field: optional fixed32 server_connection_id = 8;
   */
  serverConnectionId: number;

  /**
   * @generated from field: optional uint64 network_config_version = 6;
   */
  networkConfigVersion: bigint;

  /**
   * @generated from field: optional uint32 protocol_version = 7;
   */
  protocolVersion: number;

  /**
   * @generated from field: optional string platform = 9;
   */
  platform: string;

  /**
   * @generated from field: optional string build = 10;
   */
  build: string;

  /**
   * @generated from field: optional string dev_gameserver_identity = 100;
   */
  devGameserverIdentity: string;

  /**
   * @generated from field: optional CMsgSteamDatagramCertificateSigned dev_client_cert = 101;
   */
  devClientCert?: CMsgSteamDatagramCertificateSigned;
};

/**
 * Describes the message CMsgSteamDatagramGameserverSessionRequest.
 * Use `create(CMsgSteamDatagramGameserverSessionRequestSchema)` to create a new message.
 */
export const CMsgSteamDatagramGameserverSessionRequestSchema: GenMessage<CMsgSteamDatagramGameserverSessionRequest> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 18);

/**
 * @generated from message CMsgSteamDatagramGameserverSessionEstablished
 */
export type CMsgSteamDatagramGameserverSessionEstablished = Message<"CMsgSteamDatagramGameserverSessionEstablished"> & {
  /**
   * @generated from field: optional fixed32 connection_id = 1;
   */
  connectionId: number;

  /**
   * @generated from field: optional string gameserver_identity_string = 2;
   */
  gameserverIdentityString: string;

  /**
   * @generated from field: optional uint32 seconds_until_shutdown = 4;
   */
  secondsUntilShutdown: number;

  /**
   * @generated from field: optional uint32 seq_num_r2c = 6;
   */
  seqNumR2c: number;

  /**
   * @generated from field: optional bytes dummy_legacy_identity_binary = 7;
   */
  dummyLegacyIdentityBinary: Uint8Array;

  /**
   * @generated from field: optional fixed64 legacy_gameserver_steamid = 3;
   */
  legacyGameserverSteamid: bigint;
};

/**
 * Describes the message CMsgSteamDatagramGameserverSessionEstablished.
 * Use `create(CMsgSteamDatagramGameserverSessionEstablishedSchema)` to create a new message.
 */
export const CMsgSteamDatagramGameserverSessionEstablishedSchema: GenMessage<CMsgSteamDatagramGameserverSessionEstablished> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 19);

/**
 * @generated from message CMsgSteamDatagramConnectionStatsClientToRouter
 */
export type CMsgSteamDatagramConnectionStatsClientToRouter = Message<"CMsgSteamDatagramConnectionStatsClientToRouter"> & {
  /**
   * @generated from field: optional CMsgSteamDatagramConnectionQuality quality_relay = 1;
   */
  qualityRelay?: CMsgSteamDatagramConnectionQuality;

  /**
   * @generated from field: optional CMsgSteamDatagramConnectionQuality quality_e2e = 2;
   */
  qualityE2e?: CMsgSteamDatagramConnectionQuality;

  /**
   * @generated from field: repeated fixed32 ack_relay = 4;
   */
  ackRelay: number[];

  /**
   * @generated from field: repeated fixed32 legacy_ack_e2e = 5;
   */
  legacyAckE2e: number[];

  /**
   * @generated from field: optional uint32 flags = 6;
   */
  flags: number;

  /**
   * @generated from field: optional fixed32 client_connection_id = 8;
   */
  clientConnectionId: number;

  /**
   * @generated from field: optional uint32 seq_num_c2r = 9;
   */
  seqNumC2r: number;

  /**
   * @generated from field: optional uint32 seq_num_e2e = 10;
   */
  seqNumE2e: number;
};

/**
 * Describes the message CMsgSteamDatagramConnectionStatsClientToRouter.
 * Use `create(CMsgSteamDatagramConnectionStatsClientToRouterSchema)` to create a new message.
 */
export const CMsgSteamDatagramConnectionStatsClientToRouterSchema: GenMessage<CMsgSteamDatagramConnectionStatsClientToRouter> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 20);

/**
 * @generated from enum CMsgSteamDatagramConnectionStatsClientToRouter.Flags
 */
export enum CMsgSteamDatagramConnectionStatsClientToRouter_Flags {
  /**
   * @generated from enum value: ACK_REQUEST_RELAY = 1;
   */
  ACK_REQUEST_RELAY = 1,

  /**
   * @generated from enum value: ACK_REQUEST_E2E = 2;
   */
  ACK_REQUEST_E2E = 2,

  /**
   * @generated from enum value: ACK_REQUEST_IMMEDIATE = 4;
   */
  ACK_REQUEST_IMMEDIATE = 4,

  /**
   * @generated from enum value: NOT_PRIMARY_SESSION = 8;
   */
  NOT_PRIMARY_SESSION = 8,

  /**
   * @generated from enum value: CLIENT_RELAY_OVERRIDE = 32;
   */
  CLIENT_RELAY_OVERRIDE = 32,
}

/**
 * Describes the enum CMsgSteamDatagramConnectionStatsClientToRouter.Flags.
 */
export const CMsgSteamDatagramConnectionStatsClientToRouter_FlagsSchema: GenEnum<CMsgSteamDatagramConnectionStatsClientToRouter_Flags> = /*@__PURE__*/
  enumDesc(file_steamdatagram_messages_sdr, 20, 0);

/**
 * @generated from message CMsgSteamDatagramConnectionStatsRouterToClient
 */
export type CMsgSteamDatagramConnectionStatsRouterToClient = Message<"CMsgSteamDatagramConnectionStatsRouterToClient"> & {
  /**
   * @generated from field: optional CMsgSteamDatagramConnectionQuality quality_relay = 1;
   */
  qualityRelay?: CMsgSteamDatagramConnectionQuality;

  /**
   * @generated from field: optional CMsgSteamDatagramConnectionQuality quality_e2e = 2;
   */
  qualityE2e?: CMsgSteamDatagramConnectionQuality;

  /**
   * @generated from field: optional uint32 seconds_until_shutdown = 6;
   */
  secondsUntilShutdown: number;

  /**
   * @generated from field: optional fixed32 migrate_request_ip = 10;
   */
  migrateRequestIp: number;

  /**
   * @generated from field: optional uint32 migrate_request_port = 11;
   */
  migrateRequestPort: number;

  /**
   * @generated from field: optional uint32 scoring_penalty_relay_cluster = 12;
   */
  scoringPenaltyRelayCluster: number;

  /**
   * @generated from field: repeated fixed32 ack_relay = 13;
   */
  ackRelay: number[];

  /**
   * @generated from field: repeated fixed32 legacy_ack_e2e = 14;
   */
  legacyAckE2e: number[];

  /**
   * @generated from field: optional uint32 flags = 15;
   */
  flags: number;

  /**
   * @generated from field: optional fixed32 client_connection_id = 7;
   */
  clientConnectionId: number;

  /**
   * @generated from field: optional uint32 seq_num_r2c = 8;
   */
  seqNumR2c: number;

  /**
   * @generated from field: optional uint32 seq_num_e2e = 9;
   */
  seqNumE2e: number;
};

/**
 * Describes the message CMsgSteamDatagramConnectionStatsRouterToClient.
 * Use `create(CMsgSteamDatagramConnectionStatsRouterToClientSchema)` to create a new message.
 */
export const CMsgSteamDatagramConnectionStatsRouterToClientSchema: GenMessage<CMsgSteamDatagramConnectionStatsRouterToClient> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 21);

/**
 * @generated from enum CMsgSteamDatagramConnectionStatsRouterToClient.Flags
 */
export enum CMsgSteamDatagramConnectionStatsRouterToClient_Flags {
  /**
   * @generated from enum value: ACK_REQUEST_RELAY = 1;
   */
  ACK_REQUEST_RELAY = 1,

  /**
   * @generated from enum value: ACK_REQUEST_E2E = 2;
   */
  ACK_REQUEST_E2E = 2,

  /**
   * @generated from enum value: ACK_REQUEST_IMMEDIATE = 4;
   */
  ACK_REQUEST_IMMEDIATE = 4,
}

/**
 * Describes the enum CMsgSteamDatagramConnectionStatsRouterToClient.Flags.
 */
export const CMsgSteamDatagramConnectionStatsRouterToClient_FlagsSchema: GenEnum<CMsgSteamDatagramConnectionStatsRouterToClient_Flags> = /*@__PURE__*/
  enumDesc(file_steamdatagram_messages_sdr, 21, 0);

/**
 * @generated from message CMsgSteamDatagramConnectionStatsRouterToServer
 */
export type CMsgSteamDatagramConnectionStatsRouterToServer = Message<"CMsgSteamDatagramConnectionStatsRouterToServer"> & {
  /**
   * @generated from field: optional CMsgSteamDatagramConnectionQuality quality_relay = 1;
   */
  qualityRelay?: CMsgSteamDatagramConnectionQuality;

  /**
   * @generated from field: optional CMsgSteamDatagramConnectionQuality quality_e2e = 2;
   */
  qualityE2e?: CMsgSteamDatagramConnectionQuality;

  /**
   * @generated from field: repeated fixed32 ack_relay = 10;
   */
  ackRelay: number[];

  /**
   * @generated from field: repeated fixed32 legacy_ack_e2e = 11;
   */
  legacyAckE2e: number[];

  /**
   * @generated from field: optional uint32 flags = 12;
   */
  flags: number;

  /**
   * @generated from field: optional uint32 seq_num_r2s = 5;
   */
  seqNumR2s: number;

  /**
   * @generated from field: optional uint32 seq_num_e2e = 6;
   */
  seqNumE2e: number;

  /**
   * @generated from field: optional string client_identity_string = 15;
   */
  clientIdentityString: string;

  /**
   * @generated from field: optional fixed64 legacy_client_steam_id = 7;
   */
  legacyClientSteamId: bigint;

  /**
   * @generated from field: optional uint32 relay_session_id = 8;
   */
  relaySessionId: number;

  /**
   * @generated from field: optional fixed32 client_connection_id = 9;
   */
  clientConnectionId: number;

  /**
   * @generated from field: optional fixed32 server_connection_id = 13;
   */
  serverConnectionId: number;

  /**
   * @generated from field: optional fixed64 routing_secret = 14;
   */
  routingSecret: bigint;
};

/**
 * Describes the message CMsgSteamDatagramConnectionStatsRouterToServer.
 * Use `create(CMsgSteamDatagramConnectionStatsRouterToServerSchema)` to create a new message.
 */
export const CMsgSteamDatagramConnectionStatsRouterToServerSchema: GenMessage<CMsgSteamDatagramConnectionStatsRouterToServer> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 22);

/**
 * @generated from enum CMsgSteamDatagramConnectionStatsRouterToServer.Flags
 */
export enum CMsgSteamDatagramConnectionStatsRouterToServer_Flags {
  /**
   * @generated from enum value: ACK_REQUEST_RELAY = 1;
   */
  ACK_REQUEST_RELAY = 1,

  /**
   * @generated from enum value: ACK_REQUEST_E2E = 2;
   */
  ACK_REQUEST_E2E = 2,

  /**
   * @generated from enum value: ACK_REQUEST_IMMEDIATE = 4;
   */
  ACK_REQUEST_IMMEDIATE = 4,
}

/**
 * Describes the enum CMsgSteamDatagramConnectionStatsRouterToServer.Flags.
 */
export const CMsgSteamDatagramConnectionStatsRouterToServer_FlagsSchema: GenEnum<CMsgSteamDatagramConnectionStatsRouterToServer_Flags> = /*@__PURE__*/
  enumDesc(file_steamdatagram_messages_sdr, 22, 0);

/**
 * @generated from message CMsgSteamDatagramConnectionStatsServerToRouter
 */
export type CMsgSteamDatagramConnectionStatsServerToRouter = Message<"CMsgSteamDatagramConnectionStatsServerToRouter"> & {
  /**
   * @generated from field: optional CMsgSteamDatagramConnectionQuality quality_relay = 1;
   */
  qualityRelay?: CMsgSteamDatagramConnectionQuality;

  /**
   * @generated from field: optional CMsgSteamDatagramConnectionQuality quality_e2e = 2;
   */
  qualityE2e?: CMsgSteamDatagramConnectionQuality;

  /**
   * @generated from field: repeated fixed32 ack_relay = 8;
   */
  ackRelay: number[];

  /**
   * @generated from field: repeated fixed32 legacy_ack_e2e = 9;
   */
  legacyAckE2e: number[];

  /**
   * @generated from field: optional uint32 flags = 10;
   */
  flags: number;

  /**
   * @generated from field: optional uint32 seq_num_s2r = 3;
   */
  seqNumS2r: number;

  /**
   * @generated from field: optional uint32 seq_num_e2e = 4;
   */
  seqNumE2e: number;

  /**
   * @generated from field: optional uint32 relay_session_id = 6;
   */
  relaySessionId: number;

  /**
   * @generated from field: optional fixed32 client_connection_id = 7;
   */
  clientConnectionId: number;

  /**
   * @generated from field: optional fixed32 server_connection_id = 11;
   */
  serverConnectionId: number;
};

/**
 * Describes the message CMsgSteamDatagramConnectionStatsServerToRouter.
 * Use `create(CMsgSteamDatagramConnectionStatsServerToRouterSchema)` to create a new message.
 */
export const CMsgSteamDatagramConnectionStatsServerToRouterSchema: GenMessage<CMsgSteamDatagramConnectionStatsServerToRouter> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 23);

/**
 * @generated from enum CMsgSteamDatagramConnectionStatsServerToRouter.Flags
 */
export enum CMsgSteamDatagramConnectionStatsServerToRouter_Flags {
  /**
   * @generated from enum value: ACK_REQUEST_RELAY = 1;
   */
  ACK_REQUEST_RELAY = 1,

  /**
   * @generated from enum value: ACK_REQUEST_E2E = 2;
   */
  ACK_REQUEST_E2E = 2,

  /**
   * @generated from enum value: ACK_REQUEST_IMMEDIATE = 4;
   */
  ACK_REQUEST_IMMEDIATE = 4,
}

/**
 * Describes the enum CMsgSteamDatagramConnectionStatsServerToRouter.Flags.
 */
export const CMsgSteamDatagramConnectionStatsServerToRouter_FlagsSchema: GenEnum<CMsgSteamDatagramConnectionStatsServerToRouter_Flags> = /*@__PURE__*/
  enumDesc(file_steamdatagram_messages_sdr, 23, 0);

/**
 * @generated from message CMsgSteamDatagramP2PSessionRequestBody
 */
export type CMsgSteamDatagramP2PSessionRequestBody = Message<"CMsgSteamDatagramP2PSessionRequestBody"> & {
  /**
   * @generated from field: optional fixed32 challenge_time = 1;
   */
  challengeTime: number;

  /**
   * @generated from field: optional fixed64 challenge = 2;
   */
  challenge: bigint;

  /**
   * @generated from field: optional fixed32 client_connection_id = 3;
   */
  clientConnectionId: number;

  /**
   * @generated from field: optional fixed64 legacy_peer_steam_id = 4;
   */
  legacyPeerSteamId: bigint;

  /**
   * @generated from field: optional string peer_identity_string = 11;
   */
  peerIdentityString: string;

  /**
   * @generated from field: optional fixed32 peer_connection_id = 5;
   */
  peerConnectionId: number;

  /**
   * @generated from field: optional bytes encrypted_data = 14;
   */
  encryptedData: Uint8Array;

  /**
   * @generated from field: optional uint32 encryption_your_public_key_lead_byte = 15;
   */
  encryptionYourPublicKeyLeadByte: number;

  /**
   * @generated from field: optional bytes encryption_my_ephemeral_public_key = 16;
   */
  encryptionMyEphemeralPublicKey: Uint8Array;

  /**
   * @generated from field: optional uint32 protocol_version = 8;
   */
  protocolVersion: number;

  /**
   * @generated from field: optional uint64 network_config_version = 9;
   */
  networkConfigVersion: bigint;

  /**
   * @generated from field: optional string platform = 12;
   */
  platform: string;

  /**
   * @generated from field: optional string build = 13;
   */
  build: string;
};

/**
 * Describes the message CMsgSteamDatagramP2PSessionRequestBody.
 * Use `create(CMsgSteamDatagramP2PSessionRequestBodySchema)` to create a new message.
 */
export const CMsgSteamDatagramP2PSessionRequestBodySchema: GenMessage<CMsgSteamDatagramP2PSessionRequestBody> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 24);

/**
 * @generated from message CMsgSteamDatagramP2PSessionRequestBody.EncryptedData
 */
export type CMsgSteamDatagramP2PSessionRequestBody_EncryptedData = Message<"CMsgSteamDatagramP2PSessionRequestBody.EncryptedData"> & {
  /**
   * @generated from field: optional string peer_identity_string = 1;
   */
  peerIdentityString: string;
};

/**
 * Describes the message CMsgSteamDatagramP2PSessionRequestBody.EncryptedData.
 * Use `create(CMsgSteamDatagramP2PSessionRequestBody_EncryptedDataSchema)` to create a new message.
 */
export const CMsgSteamDatagramP2PSessionRequestBody_EncryptedDataSchema: GenMessage<CMsgSteamDatagramP2PSessionRequestBody_EncryptedData> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 24, 0);

/**
 * @generated from message CMsgSteamDatagramP2PSessionRequest
 */
export type CMsgSteamDatagramP2PSessionRequest = Message<"CMsgSteamDatagramP2PSessionRequest"> & {
  /**
   * @generated from field: optional CMsgSteamDatagramCertificateSigned cert = 1;
   */
  cert?: CMsgSteamDatagramCertificateSigned;

  /**
   * @generated from field: optional bytes body = 2;
   */
  body: Uint8Array;

  /**
   * @generated from field: optional bytes signature = 3;
   */
  signature: Uint8Array;
};

/**
 * Describes the message CMsgSteamDatagramP2PSessionRequest.
 * Use `create(CMsgSteamDatagramP2PSessionRequestSchema)` to create a new message.
 */
export const CMsgSteamDatagramP2PSessionRequestSchema: GenMessage<CMsgSteamDatagramP2PSessionRequest> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 25);

/**
 * @generated from message CMsgSteamDatagramP2PSessionEstablished
 */
export type CMsgSteamDatagramP2PSessionEstablished = Message<"CMsgSteamDatagramP2PSessionEstablished"> & {
  /**
   * @generated from field: optional fixed32 connection_id = 1;
   */
  connectionId: number;

  /**
   * @generated from field: optional uint32 seconds_until_shutdown = 3;
   */
  secondsUntilShutdown: number;

  /**
   * @generated from field: optional bytes relay_routing_token = 4;
   */
  relayRoutingToken: Uint8Array;

  /**
   * @generated from field: optional uint32 seq_num_r2c = 5;
   */
  seqNumR2c: number;
};

/**
 * Describes the message CMsgSteamDatagramP2PSessionEstablished.
 * Use `create(CMsgSteamDatagramP2PSessionEstablishedSchema)` to create a new message.
 */
export const CMsgSteamDatagramP2PSessionEstablishedSchema: GenMessage<CMsgSteamDatagramP2PSessionEstablished> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 26);

/**
 * @generated from message CMsgSteamDatagramConnectionStatsP2PClientToRouter
 */
export type CMsgSteamDatagramConnectionStatsP2PClientToRouter = Message<"CMsgSteamDatagramConnectionStatsP2PClientToRouter"> & {
  /**
   * @generated from field: optional CMsgSteamDatagramConnectionQuality quality_relay = 1;
   */
  qualityRelay?: CMsgSteamDatagramConnectionQuality;

  /**
   * @generated from field: optional CMsgSteamDatagramConnectionQuality quality_e2e = 2;
   */
  qualityE2e?: CMsgSteamDatagramConnectionQuality;

  /**
   * @generated from field: optional CMsgSteamDatagramP2PRoutingSummary p2p_routing_summary = 14;
   */
  p2pRoutingSummary?: CMsgSteamDatagramP2PRoutingSummary;

  /**
   * @generated from field: repeated fixed32 ack_relay = 3;
   */
  ackRelay: number[];

  /**
   * @generated from field: repeated fixed32 legacy_ack_e2e = 4;
   */
  legacyAckE2e: number[];

  /**
   * @generated from field: optional uint32 flags = 5;
   */
  flags: number;

  /**
   * @generated from field: optional bytes forward_target_relay_routing_token = 6;
   */
  forwardTargetRelayRoutingToken: Uint8Array;

  /**
   * @generated from field: optional uint32 forward_target_revision = 7;
   */
  forwardTargetRevision: number;

  /**
   * @generated from field: optional bytes routes = 8;
   */
  routes: Uint8Array;

  /**
   * @generated from field: optional uint32 ack_peer_routes_revision = 9;
   */
  ackPeerRoutesRevision: number;

  /**
   * @generated from field: optional fixed32 connection_id = 10;
   */
  connectionId: number;

  /**
   * @generated from field: optional uint32 seq_num_c2r = 11;
   */
  seqNumC2r: number;

  /**
   * @generated from field: optional uint32 seq_num_e2e = 12;
   */
  seqNumE2e: number;
};

/**
 * Describes the message CMsgSteamDatagramConnectionStatsP2PClientToRouter.
 * Use `create(CMsgSteamDatagramConnectionStatsP2PClientToRouterSchema)` to create a new message.
 */
export const CMsgSteamDatagramConnectionStatsP2PClientToRouterSchema: GenMessage<CMsgSteamDatagramConnectionStatsP2PClientToRouter> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 27);

/**
 * @generated from enum CMsgSteamDatagramConnectionStatsP2PClientToRouter.Flags
 */
export enum CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags {
  /**
   * @generated from enum value: ACK_REQUEST_RELAY = 1;
   */
  ACK_REQUEST_RELAY = 1,

  /**
   * @generated from enum value: ACK_REQUEST_E2E = 2;
   */
  ACK_REQUEST_E2E = 2,

  /**
   * @generated from enum value: ACK_REQUEST_IMMEDIATE = 4;
   */
  ACK_REQUEST_IMMEDIATE = 4,

  /**
   * @generated from enum value: NOT_PRIMARY_SESSION = 8;
   */
  NOT_PRIMARY_SESSION = 8,

  /**
   * @generated from enum value: NOT_PRIMARY_TRANSPORT_E2E = 16;
   */
  NOT_PRIMARY_TRANSPORT_E2E = 16,

  /**
   * @generated from enum value: CLIENT_RELAY_OVERRIDE = 32;
   */
  CLIENT_RELAY_OVERRIDE = 32,
}

/**
 * Describes the enum CMsgSteamDatagramConnectionStatsP2PClientToRouter.Flags.
 */
export const CMsgSteamDatagramConnectionStatsP2PClientToRouter_FlagsSchema: GenEnum<CMsgSteamDatagramConnectionStatsP2PClientToRouter_Flags> = /*@__PURE__*/
  enumDesc(file_steamdatagram_messages_sdr, 27, 0);

/**
 * @generated from message CMsgSteamDatagramConnectionStatsP2PRouterToClient
 */
export type CMsgSteamDatagramConnectionStatsP2PRouterToClient = Message<"CMsgSteamDatagramConnectionStatsP2PRouterToClient"> & {
  /**
   * @generated from field: optional CMsgSteamDatagramConnectionQuality quality_relay = 1;
   */
  qualityRelay?: CMsgSteamDatagramConnectionQuality;

  /**
   * @generated from field: optional CMsgSteamDatagramConnectionQuality quality_e2e = 2;
   */
  qualityE2e?: CMsgSteamDatagramConnectionQuality;

  /**
   * @generated from field: optional uint32 seconds_until_shutdown = 3;
   */
  secondsUntilShutdown: number;

  /**
   * @generated from field: optional fixed32 migrate_request_ip = 4;
   */
  migrateRequestIp: number;

  /**
   * @generated from field: optional uint32 migrate_request_port = 5;
   */
  migrateRequestPort: number;

  /**
   * @generated from field: optional uint32 scoring_penalty_relay_cluster = 6;
   */
  scoringPenaltyRelayCluster: number;

  /**
   * @generated from field: repeated fixed32 ack_relay = 7;
   */
  ackRelay: number[];

  /**
   * @generated from field: repeated fixed32 legacy_ack_e2e = 8;
   */
  legacyAckE2e: number[];

  /**
   * @generated from field: optional uint32 flags = 9;
   */
  flags: number;

  /**
   * @generated from field: optional uint32 ack_forward_target_revision = 10;
   */
  ackForwardTargetRevision: number;

  /**
   * @generated from field: optional bytes routes = 11;
   */
  routes: Uint8Array;

  /**
   * @generated from field: optional uint32 ack_peer_routes_revision = 12;
   */
  ackPeerRoutesRevision: number;

  /**
   * @generated from field: optional fixed32 connection_id = 13;
   */
  connectionId: number;

  /**
   * @generated from field: optional uint32 seq_num_r2c = 14;
   */
  seqNumR2c: number;

  /**
   * @generated from field: optional uint32 seq_num_e2e = 15;
   */
  seqNumE2e: number;
};

/**
 * Describes the message CMsgSteamDatagramConnectionStatsP2PRouterToClient.
 * Use `create(CMsgSteamDatagramConnectionStatsP2PRouterToClientSchema)` to create a new message.
 */
export const CMsgSteamDatagramConnectionStatsP2PRouterToClientSchema: GenMessage<CMsgSteamDatagramConnectionStatsP2PRouterToClient> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 28);

/**
 * @generated from enum CMsgSteamDatagramConnectionStatsP2PRouterToClient.Flags
 */
export enum CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags {
  /**
   * @generated from enum value: ACK_REQUEST_RELAY = 1;
   */
  ACK_REQUEST_RELAY = 1,

  /**
   * @generated from enum value: ACK_REQUEST_E2E = 2;
   */
  ACK_REQUEST_E2E = 2,

  /**
   * @generated from enum value: ACK_REQUEST_IMMEDIATE = 4;
   */
  ACK_REQUEST_IMMEDIATE = 4,

  /**
   * @generated from enum value: NOT_PRIMARY_TRANSPORT_E2E = 16;
   */
  NOT_PRIMARY_TRANSPORT_E2E = 16,
}

/**
 * Describes the enum CMsgSteamDatagramConnectionStatsP2PRouterToClient.Flags.
 */
export const CMsgSteamDatagramConnectionStatsP2PRouterToClient_FlagsSchema: GenEnum<CMsgSteamDatagramConnectionStatsP2PRouterToClient_Flags> = /*@__PURE__*/
  enumDesc(file_steamdatagram_messages_sdr, 28, 0);

/**
 * @generated from message CMsgSteamDatagramP2PBadRouteRouterToClient
 */
export type CMsgSteamDatagramP2PBadRouteRouterToClient = Message<"CMsgSteamDatagramP2PBadRouteRouterToClient"> & {
  /**
   * @generated from field: optional fixed32 connection_id = 1;
   */
  connectionId: number;

  /**
   * @generated from field: optional bytes failed_relay_routing_token = 2;
   */
  failedRelayRoutingToken: Uint8Array;

  /**
   * @generated from field: optional uint32 ack_forward_target_revision = 3;
   */
  ackForwardTargetRevision: number;

  /**
   * @generated from field: optional fixed64 kludge_pad = 99;
   */
  kludgePad: bigint;
};

/**
 * Describes the message CMsgSteamDatagramP2PBadRouteRouterToClient.
 * Use `create(CMsgSteamDatagramP2PBadRouteRouterToClientSchema)` to create a new message.
 */
export const CMsgSteamDatagramP2PBadRouteRouterToClientSchema: GenMessage<CMsgSteamDatagramP2PBadRouteRouterToClient> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 29);

/**
 * @generated from message CMsgSteamDatagramP2PRoutes
 */
export type CMsgSteamDatagramP2PRoutes = Message<"CMsgSteamDatagramP2PRoutes"> & {
  /**
   * @generated from field: repeated CMsgSteamDatagramP2PRoutes.RelayCluster relay_clusters = 1;
   */
  relayClusters: CMsgSteamDatagramP2PRoutes_RelayCluster[];

  /**
   * @generated from field: repeated CMsgSteamDatagramP2PRoutes.Route routes = 2;
   */
  routes: CMsgSteamDatagramP2PRoutes_Route[];

  /**
   * @generated from field: optional uint32 revision = 3;
   */
  revision: number;
};

/**
 * Describes the message CMsgSteamDatagramP2PRoutes.
 * Use `create(CMsgSteamDatagramP2PRoutesSchema)` to create a new message.
 */
export const CMsgSteamDatagramP2PRoutesSchema: GenMessage<CMsgSteamDatagramP2PRoutes> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 30);

/**
 * @generated from message CMsgSteamDatagramP2PRoutes.RelayCluster
 */
export type CMsgSteamDatagramP2PRoutes_RelayCluster = Message<"CMsgSteamDatagramP2PRoutes.RelayCluster"> & {
  /**
   * @generated from field: optional fixed32 pop_id = 1;
   */
  popId: number;

  /**
   * @generated from field: optional uint32 ping_ms = 2;
   */
  pingMs: number;

  /**
   * @generated from field: optional uint32 score_penalty = 3;
   */
  scorePenalty: number;

  /**
   * @generated from field: optional bytes session_relay_routing_token = 4;
   */
  sessionRelayRoutingToken: Uint8Array;
};

/**
 * Describes the message CMsgSteamDatagramP2PRoutes.RelayCluster.
 * Use `create(CMsgSteamDatagramP2PRoutes_RelayClusterSchema)` to create a new message.
 */
export const CMsgSteamDatagramP2PRoutes_RelayClusterSchema: GenMessage<CMsgSteamDatagramP2PRoutes_RelayCluster> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 30, 0);

/**
 * @generated from message CMsgSteamDatagramP2PRoutes.Route
 */
export type CMsgSteamDatagramP2PRoutes_Route = Message<"CMsgSteamDatagramP2PRoutes.Route"> & {
  /**
   * @generated from field: optional fixed32 my_pop_id = 1;
   */
  myPopId: number;

  /**
   * @generated from field: optional fixed32 your_pop_id = 2;
   */
  yourPopId: number;

  /**
   * @generated from field: optional uint32 legacy_score = 3;
   */
  legacyScore: number;

  /**
   * @generated from field: optional uint32 interior_score = 4;
   */
  interiorScore: number;
};

/**
 * Describes the message CMsgSteamDatagramP2PRoutes.Route.
 * Use `create(CMsgSteamDatagramP2PRoutes_RouteSchema)` to create a new message.
 */
export const CMsgSteamDatagramP2PRoutes_RouteSchema: GenMessage<CMsgSteamDatagramP2PRoutes_Route> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 30, 1);

/**
 * @generated from message CMsgSteamDatagramSetSecondaryAddressRequest
 */
export type CMsgSteamDatagramSetSecondaryAddressRequest = Message<"CMsgSteamDatagramSetSecondaryAddressRequest"> & {
  /**
   * @generated from field: optional fixed32 client_main_ip = 1;
   */
  clientMainIp: number;

  /**
   * @generated from field: optional fixed32 client_main_port = 2;
   */
  clientMainPort: number;

  /**
   * @generated from field: optional fixed32 client_connection_id = 3;
   */
  clientConnectionId: number;

  /**
   * @generated from field: optional string client_identity = 4;
   */
  clientIdentity: string;

  /**
   * @generated from field: optional bool request_send_duplication = 5;
   */
  requestSendDuplication: boolean;

  /**
   * @generated from field: optional bytes kludge_pad = 99;
   */
  kludgePad: Uint8Array;
};

/**
 * Describes the message CMsgSteamDatagramSetSecondaryAddressRequest.
 * Use `create(CMsgSteamDatagramSetSecondaryAddressRequestSchema)` to create a new message.
 */
export const CMsgSteamDatagramSetSecondaryAddressRequestSchema: GenMessage<CMsgSteamDatagramSetSecondaryAddressRequest> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 31);

/**
 * @generated from message CMsgSteamDatagramSetSecondaryAddressResult
 */
export type CMsgSteamDatagramSetSecondaryAddressResult = Message<"CMsgSteamDatagramSetSecondaryAddressResult"> & {
  /**
   * @generated from field: optional bool success = 1;
   */
  success: boolean;

  /**
   * @generated from field: optional string message = 2;
   */
  message: string;
};

/**
 * Describes the message CMsgSteamDatagramSetSecondaryAddressResult.
 * Use `create(CMsgSteamDatagramSetSecondaryAddressResultSchema)` to create a new message.
 */
export const CMsgSteamDatagramSetSecondaryAddressResultSchema: GenMessage<CMsgSteamDatagramSetSecondaryAddressResult> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_sdr, 32);

/**
 * @generated from enum ESteamDatagramMsgID
 */
export enum ESteamDatagramMsgID {
  /**
   * @generated from enum value: k_ESteamDatagramMsg_Invalid = 0;
   */
  k_ESteamDatagramMsg_Invalid = 0,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_RouterPingRequest = 1;
   */
  k_ESteamDatagramMsg_RouterPingRequest = 1,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_RouterPingReply = 2;
   */
  k_ESteamDatagramMsg_RouterPingReply = 2,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_GameserverPingRequest = 3;
   */
  k_ESteamDatagramMsg_GameserverPingRequest = 3,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_GameserverSessionRequest = 5;
   */
  k_ESteamDatagramMsg_GameserverSessionRequest = 5,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_GameserverSessionEstablished = 6;
   */
  k_ESteamDatagramMsg_GameserverSessionEstablished = 6,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_NoSession = 7;
   */
  k_ESteamDatagramMsg_NoSession = 7,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_Diagnostic = 8;
   */
  k_ESteamDatagramMsg_Diagnostic = 8,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_DataClientToRouter = 9;
   */
  k_ESteamDatagramMsg_DataClientToRouter = 9,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_DataRouterToServer = 10;
   */
  k_ESteamDatagramMsg_DataRouterToServer = 10,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_DataServerToRouter = 11;
   */
  k_ESteamDatagramMsg_DataServerToRouter = 11,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_DataRouterToClient = 12;
   */
  k_ESteamDatagramMsg_DataRouterToClient = 12,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_Stats = 13;
   */
  k_ESteamDatagramMsg_Stats = 13,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_ClientPingSampleRequest = 14;
   */
  k_ESteamDatagramMsg_ClientPingSampleRequest = 14,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_ClientPingSampleReply = 15;
   */
  k_ESteamDatagramMsg_ClientPingSampleReply = 15,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_ClientToRouterSwitchedPrimary = 16;
   */
  k_ESteamDatagramMsg_ClientToRouterSwitchedPrimary = 16,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_RelayHealth = 17;
   */
  k_ESteamDatagramMsg_RelayHealth = 17,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_ConnectRequest = 18;
   */
  k_ESteamDatagramMsg_ConnectRequest = 18,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_ConnectOK = 19;
   */
  k_ESteamDatagramMsg_ConnectOK = 19,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_ConnectionClosed = 20;
   */
  k_ESteamDatagramMsg_ConnectionClosed = 20,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_NoConnection = 21;
   */
  k_ESteamDatagramMsg_NoConnection = 21,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_TicketDecryptRequest = 22;
   */
  k_ESteamDatagramMsg_TicketDecryptRequest = 22,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_TicketDecryptReply = 23;
   */
  k_ESteamDatagramMsg_TicketDecryptReply = 23,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_P2PSessionRequest = 24;
   */
  k_ESteamDatagramMsg_P2PSessionRequest = 24,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_P2PSessionEstablished = 25;
   */
  k_ESteamDatagramMsg_P2PSessionEstablished = 25,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_P2PStatsClient = 26;
   */
  k_ESteamDatagramMsg_P2PStatsClient = 26,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_P2PStatsRelay = 27;
   */
  k_ESteamDatagramMsg_P2PStatsRelay = 27,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_P2PBadRoute = 28;
   */
  k_ESteamDatagramMsg_P2PBadRoute = 28,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_GameserverPingReply = 29;
   */
  k_ESteamDatagramMsg_GameserverPingReply = 29,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_LegacyGameserverRegistration = 30;
   */
  k_ESteamDatagramMsg_LegacyGameserverRegistration = 30,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_SetSecondaryAddressRequest = 31;
   */
  k_ESteamDatagramMsg_SetSecondaryAddressRequest = 31,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_SetSecondaryAddressResult = 32;
   */
  k_ESteamDatagramMsg_SetSecondaryAddressResult = 32,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_RelayToRelayPingRequest = 33;
   */
  k_ESteamDatagramMsg_RelayToRelayPingRequest = 33,

  /**
   * @generated from enum value: k_ESteamDatagramMsg_RelayToRelayPingReply = 34;
   */
  k_ESteamDatagramMsg_RelayToRelayPingReply = 34,
}

/**
 * Describes the enum ESteamDatagramMsgID.
 */
export const ESteamDatagramMsgIDSchema: GenEnum<ESteamDatagramMsgID> = /*@__PURE__*/
  enumDesc(file_steamdatagram_messages_sdr, 0);

