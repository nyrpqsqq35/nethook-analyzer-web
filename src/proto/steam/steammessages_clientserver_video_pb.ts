// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_clientserver_video.proto (syntax proto2)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_steammessages_base } from "./steammessages_base_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_clientserver_video.proto.
 */
export const file_steammessages_clientserver_video: GenFile = /*@__PURE__*/
  fileDesc("CiZzdGVhbW1lc3NhZ2VzX2NsaWVudHNlcnZlcl92aWRlby5wcm90byLBAgokQ01zZ1ZpZGVvR2FtZVJlY29yZGluZ1JlcHJlc2VudGF0aW9uEhsKE3JlcHJlc2VudGF0aW9uX25hbWUYAiABKAkSHQoVaG9yaXpvbnRhbF9yZXNvbHV0aW9uGAMgASgNEhsKE3ZlcnRpY2FsX3Jlc29sdXRpb24YBCABKA0SEgoKZnJhbWVfcmF0ZRgFIAEoARIRCgliYW5kd2lkdGgYBiABKA0SGQoRYXVkaW9fc2FtcGxlX3JhdGUYByABKA0SGQoRZnJhbWVfcmF0ZV9zdHJpbmcYCCABKAkSDQoFY29kZWMYCSABKAkSHAoUYXVkaW9fY2hhbm5lbF9jb25maWcYCiABKA0SNgoMc2VnbWVudF9pbmZvGAsgAygLMiAuQ1ZpZGVvX0dhbWVSZWNvcmRpbmdTZWdtZW50SW5mbyK0AQofQ01zZ1ZpZGVvR2FtZVJlY29yZGluZ0NvbXBvbmVudBIWCg5jb21wb25lbnRfbmFtZRgBIAEoCRIQCghjb250ZW50cxgCIAEoDRIUCgxzZWdtZW50X3NpemUYAyABKA0SEQoJZmlsZV90eXBlGAQgASgJEj4KD3JlcHJlc2VudGF0aW9ucxgFIAMoCzIlLkNNc2dWaWRlb0dhbWVSZWNvcmRpbmdSZXByZXNlbnRhdGlvbiKfAgoZQ01zZ1ZpZGVvR2FtZVJlY29yZGluZ0RlZhIPCgdzdGVhbWlkGAEgASgEEg4KBmFwcF9pZBgCIAEoDRIUCgxudW1fc2VnbWVudHMYAyABKA0SGwoTbGVuZ3RoX21pbGxpc2Vjb25kcxgEIAEoDRIiChpzZWdtZW50X2R1cmF0aW9uX3RpbWVzY2FsZRgFIAEoDRIYChBzZWdtZW50X2R1cmF0aW9uGAYgASgNEjQKCmNvbXBvbmVudHMYByADKAsyIC5DTXNnVmlkZW9HYW1lUmVjb3JkaW5nQ29tcG9uZW50EhUKDXN0YXJ0X3RpbWVfbXMYCCABKA0SIwobc3RhcnRfb2Zmc2V0X2luX3RpbWVsaW5lX21zGAkgASgNIooBCh9DVmlkZW9fR2FtZVJlY29yZGluZ1NlZ21lbnRJbmZvEhYKDnNlZ21lbnRfbnVtYmVyGAEgASgNEhoKEnNlZ21lbnRfc2l6ZV9ieXRlcxgCIAEoBBIWCg5jb21wb25lbnRfbmFtZRgDIAEoCRIbChNyZXByZXNlbnRhdGlvbl9uYW1lGAQgASgJIo8CCiVDVmlkZW9fR2FtZVJlY29yZGluZ1NlZ21lbnRVcGxvYWRJbmZvEjYKDHNlZ21lbnRfaW5mbxgBIAEoCzIgLkNWaWRlb19HYW1lUmVjb3JkaW5nU2VnbWVudEluZm8SEAoIdXJsX2hvc3QYAiABKAkSEAoIdXJsX3BhdGgYAyABKAkSEQoJdXNlX2h0dHBzGAQgASgIEksKD3JlcXVlc3RfaGVhZGVycxgFIAMoCzIyLkNWaWRlb19HYW1lUmVjb3JkaW5nU2VnbWVudFVwbG9hZEluZm8uSFRUUEhlYWRlcnMaKgoLSFRUUEhlYWRlcnMSDAoEbmFtZRgBIAEoCRINCgV2YWx1ZRgCIAEoCUIFSAGAAQA", [file_steammessages_base]);

/**
 * @generated from message CMsgVideoGameRecordingRepresentation
 */
export type CMsgVideoGameRecordingRepresentation = Message<"CMsgVideoGameRecordingRepresentation"> & {
  /**
   * @generated from field: optional string representation_name = 2;
   */
  representationName: string;

  /**
   * @generated from field: optional uint32 horizontal_resolution = 3;
   */
  horizontalResolution: number;

  /**
   * @generated from field: optional uint32 vertical_resolution = 4;
   */
  verticalResolution: number;

  /**
   * @generated from field: optional double frame_rate = 5;
   */
  frameRate: number;

  /**
   * @generated from field: optional uint32 bandwidth = 6;
   */
  bandwidth: number;

  /**
   * @generated from field: optional uint32 audio_sample_rate = 7;
   */
  audioSampleRate: number;

  /**
   * @generated from field: optional string frame_rate_string = 8;
   */
  frameRateString: string;

  /**
   * @generated from field: optional string codec = 9;
   */
  codec: string;

  /**
   * @generated from field: optional uint32 audio_channel_config = 10;
   */
  audioChannelConfig: number;

  /**
   * @generated from field: repeated CVideo_GameRecordingSegmentInfo segment_info = 11;
   */
  segmentInfo: CVideo_GameRecordingSegmentInfo[];
};

/**
 * Describes the message CMsgVideoGameRecordingRepresentation.
 * Use `create(CMsgVideoGameRecordingRepresentationSchema)` to create a new message.
 */
export const CMsgVideoGameRecordingRepresentationSchema: GenMessage<CMsgVideoGameRecordingRepresentation> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_video, 0);

/**
 * @generated from message CMsgVideoGameRecordingComponent
 */
export type CMsgVideoGameRecordingComponent = Message<"CMsgVideoGameRecordingComponent"> & {
  /**
   * @generated from field: optional string component_name = 1;
   */
  componentName: string;

  /**
   * @generated from field: optional uint32 contents = 2;
   */
  contents: number;

  /**
   * @generated from field: optional uint32 segment_size = 3;
   */
  segmentSize: number;

  /**
   * @generated from field: optional string file_type = 4;
   */
  fileType: string;

  /**
   * @generated from field: repeated CMsgVideoGameRecordingRepresentation representations = 5;
   */
  representations: CMsgVideoGameRecordingRepresentation[];
};

/**
 * Describes the message CMsgVideoGameRecordingComponent.
 * Use `create(CMsgVideoGameRecordingComponentSchema)` to create a new message.
 */
export const CMsgVideoGameRecordingComponentSchema: GenMessage<CMsgVideoGameRecordingComponent> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_video, 1);

/**
 * @generated from message CMsgVideoGameRecordingDef
 */
export type CMsgVideoGameRecordingDef = Message<"CMsgVideoGameRecordingDef"> & {
  /**
   * @generated from field: optional uint64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional uint32 app_id = 2;
   */
  appId: number;

  /**
   * @generated from field: optional uint32 num_segments = 3;
   */
  numSegments: number;

  /**
   * @generated from field: optional uint32 length_milliseconds = 4;
   */
  lengthMilliseconds: number;

  /**
   * @generated from field: optional uint32 segment_duration_timescale = 5;
   */
  segmentDurationTimescale: number;

  /**
   * @generated from field: optional uint32 segment_duration = 6;
   */
  segmentDuration: number;

  /**
   * @generated from field: repeated CMsgVideoGameRecordingComponent components = 7;
   */
  components: CMsgVideoGameRecordingComponent[];

  /**
   * @generated from field: optional uint32 start_time_ms = 8;
   */
  startTimeMs: number;

  /**
   * @generated from field: optional uint32 start_offset_in_timeline_ms = 9;
   */
  startOffsetInTimelineMs: number;
};

/**
 * Describes the message CMsgVideoGameRecordingDef.
 * Use `create(CMsgVideoGameRecordingDefSchema)` to create a new message.
 */
export const CMsgVideoGameRecordingDefSchema: GenMessage<CMsgVideoGameRecordingDef> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_video, 2);

/**
 * @generated from message CVideo_GameRecordingSegmentInfo
 */
export type CVideo_GameRecordingSegmentInfo = Message<"CVideo_GameRecordingSegmentInfo"> & {
  /**
   * @generated from field: optional uint32 segment_number = 1;
   */
  segmentNumber: number;

  /**
   * @generated from field: optional uint64 segment_size_bytes = 2;
   */
  segmentSizeBytes: bigint;

  /**
   * @generated from field: optional string component_name = 3;
   */
  componentName: string;

  /**
   * @generated from field: optional string representation_name = 4;
   */
  representationName: string;
};

/**
 * Describes the message CVideo_GameRecordingSegmentInfo.
 * Use `create(CVideo_GameRecordingSegmentInfoSchema)` to create a new message.
 */
export const CVideo_GameRecordingSegmentInfoSchema: GenMessage<CVideo_GameRecordingSegmentInfo> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_video, 3);

/**
 * @generated from message CVideo_GameRecordingSegmentUploadInfo
 */
export type CVideo_GameRecordingSegmentUploadInfo = Message<"CVideo_GameRecordingSegmentUploadInfo"> & {
  /**
   * @generated from field: optional CVideo_GameRecordingSegmentInfo segment_info = 1;
   */
  segmentInfo?: CVideo_GameRecordingSegmentInfo;

  /**
   * @generated from field: optional string url_host = 2;
   */
  urlHost: string;

  /**
   * @generated from field: optional string url_path = 3;
   */
  urlPath: string;

  /**
   * @generated from field: optional bool use_https = 4;
   */
  useHttps: boolean;

  /**
   * @generated from field: repeated CVideo_GameRecordingSegmentUploadInfo.HTTPHeaders request_headers = 5;
   */
  requestHeaders: CVideo_GameRecordingSegmentUploadInfo_HTTPHeaders[];
};

/**
 * Describes the message CVideo_GameRecordingSegmentUploadInfo.
 * Use `create(CVideo_GameRecordingSegmentUploadInfoSchema)` to create a new message.
 */
export const CVideo_GameRecordingSegmentUploadInfoSchema: GenMessage<CVideo_GameRecordingSegmentUploadInfo> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_video, 4);

/**
 * @generated from message CVideo_GameRecordingSegmentUploadInfo.HTTPHeaders
 */
export type CVideo_GameRecordingSegmentUploadInfo_HTTPHeaders = Message<"CVideo_GameRecordingSegmentUploadInfo.HTTPHeaders"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional string value = 2;
   */
  value: string;
};

/**
 * Describes the message CVideo_GameRecordingSegmentUploadInfo.HTTPHeaders.
 * Use `create(CVideo_GameRecordingSegmentUploadInfo_HTTPHeadersSchema)` to create a new message.
 */
export const CVideo_GameRecordingSegmentUploadInfo_HTTPHeadersSchema: GenMessage<CVideo_GameRecordingSegmentUploadInfo_HTTPHeaders> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_video, 4, 0);

