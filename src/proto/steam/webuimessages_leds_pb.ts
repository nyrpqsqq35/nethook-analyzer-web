// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file webuimessages_leds.proto (syntax proto2)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_enums } from "./enums_pb";
import { file_steammessages_base } from "./steammessages_base_pb";
import type { WebUINoResponseSchema } from "./webuimessages_base_pb";
import { file_webuimessages_base } from "./webuimessages_base_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file webuimessages_leds.proto.
 */
export const file_webuimessages_leds: GenFile = /*@__PURE__*/
  fileDesc("Chh3ZWJ1aW1lc3NhZ2VzX2xlZHMucHJvdG8iLwoMQ01zZ0xFRENvbG9yEgkKAXIYASABKAISCQoBZxgCIAEoAhIJCgFiGAMgASgCIvoBChRDTXNnTEVETWFuYWdlckRldmljZRIKCgJpZBgBIAEoBRIPCgdlbmFibGVkGAIgASgIEgwKBG5hbWUYAyABKAkSGQoRZWZmZWN0c19hdmFpbGFibGUYBCADKAkSDgoGZWZmZWN0GAUgASgJEhYKDnN1cHBvcnRzX2NvbG9yGAkgASgIEhwKBWNvbG9yGAogASgLMg0uQ01zZ0xFRENvbG9yEhYKDnN1cHBvcnRzX3NwZWVkGAsgASgIEg0KBXNwZWVkGAwgASgCEhsKE3N1cHBvcnRzX2JyaWdodG5lc3MYDSABKAgSEgoKYnJpZ2h0bmVzcxgOIAEoAiJbChNDTXNnTEVETWFuYWdlclN0YXRlEhwKFGlzX3NlcnZpY2VfYXZhaWxhYmxlGAEgASgIEiYKB2RldmljZXMYAiADKAsyFS5DTXNnTEVETWFuYWdlckRldmljZSIeChxDTEVETWFuYWdlcl9HZXRTdGF0ZV9SZXF1ZXN0IkQKHUNMRURNYW5hZ2VyX0dldFN0YXRlX1Jlc3BvbnNlEiMKBXN0YXRlGAEgASgLMhQuQ01zZ0xFRE1hbmFnZXJTdGF0ZSInCiVDTEVETWFuYWdlcl9TdGF0ZUNoYW5nZWRfTm90aWZpY2F0aW9uIk8KHENMRURNYW5hZ2VyX1NldENvbG9yX1JlcXVlc3QSEQoJZGV2aWNlX2lkGAEgASgFEhwKBWNvbG9yGAIgASgLMg0uQ01zZ0xFRENvbG9yIh8KHUNMRURNYW5hZ2VyX1NldENvbG9yX1Jlc3BvbnNlIkQKHkNMRURNYW5hZ2VyX1NldEVuYWJsZWRfUmVxdWVzdBIRCglkZXZpY2VfaWQYASABKAUSDwoHZW5hYmxlZBgCIAEoCCIhCh9DTEVETWFuYWdlcl9TZXRFbmFibGVkX1Jlc3BvbnNlIkIKHUNMRURNYW5hZ2VyX1NldEVmZmVjdF9SZXF1ZXN0EhEKCWRldmljZV9pZBgBIAEoBRIOCgZlZmZlY3QYAiABKAkiIAoeQ0xFRE1hbmFnZXJfU2V0RWZmZWN0X1Jlc3BvbnNlIkAKHENMRURNYW5hZ2VyX1NldFNwZWVkX1JlcXVlc3QSEQoJZGV2aWNlX2lkGAEgASgFEg0KBXNwZWVkGAIgASgCIh8KHUNMRURNYW5hZ2VyX1NldFNwZWVkX1Jlc3BvbnNlIkoKIUNMRURNYW5hZ2VyX1NldEJyaWdodG5lc3NfUmVxdWVzdBIRCglkZXZpY2VfaWQYASABKAUSEgoKYnJpZ2h0bmVzcxgCIAEoAiIkCiJDTEVETWFuYWdlcl9TZXRCcmlnaHRuZXNzX1Jlc3BvbnNlMrwECgpMRURNYW5hZ2VyEkkKCEdldFN0YXRlEh0uQ0xFRE1hbmFnZXJfR2V0U3RhdGVfUmVxdWVzdBoeLkNMRURNYW5hZ2VyX0dldFN0YXRlX1Jlc3BvbnNlEk4KEk5vdGlmeVN0YXRlQ2hhbmdlZBImLkNMRURNYW5hZ2VyX1N0YXRlQ2hhbmdlZF9Ob3RpZmljYXRpb24aEC5XZWJVSU5vUmVzcG9uc2USTwoKU2V0RW5hYmxlZBIfLkNMRURNYW5hZ2VyX1NldEVuYWJsZWRfUmVxdWVzdBogLkNMRURNYW5hZ2VyX1NldEVuYWJsZWRfUmVzcG9uc2USSQoIU2V0Q29sb3ISHS5DTEVETWFuYWdlcl9TZXRDb2xvcl9SZXF1ZXN0Gh4uQ0xFRE1hbmFnZXJfU2V0Q29sb3JfUmVzcG9uc2USTAoJU2V0RWZmZWN0Eh4uQ0xFRE1hbmFnZXJfU2V0RWZmZWN0X1JlcXVlc3QaHy5DTEVETWFuYWdlcl9TZXRFZmZlY3RfUmVzcG9uc2USSQoIU2V0U3BlZWQSHS5DTEVETWFuYWdlcl9TZXRTcGVlZF9SZXF1ZXN0Gh4uQ0xFRE1hbmFnZXJfU2V0U3BlZWRfUmVzcG9uc2USWAoNU2V0QnJpZ2h0bmVzcxIiLkNMRURNYW5hZ2VyX1NldEJyaWdodG5lc3NfUmVxdWVzdBojLkNMRURNYW5hZ2VyX1NldEJyaWdodG5lc3NfUmVzcG9uc2UaBICXIgFCBUgBgAEB", [file_enums, file_steammessages_base, file_webuimessages_base]);

/**
 * @generated from message CMsgLEDColor
 */
export type CMsgLEDColor = Message<"CMsgLEDColor"> & {
  /**
   * @generated from field: optional float r = 1;
   */
  r: number;

  /**
   * @generated from field: optional float g = 2;
   */
  g: number;

  /**
   * @generated from field: optional float b = 3;
   */
  b: number;
};

/**
 * Describes the message CMsgLEDColor.
 * Use `create(CMsgLEDColorSchema)` to create a new message.
 */
export const CMsgLEDColorSchema: GenMessage<CMsgLEDColor> = /*@__PURE__*/
  messageDesc(file_webuimessages_leds, 0);

/**
 * @generated from message CMsgLEDManagerDevice
 */
export type CMsgLEDManagerDevice = Message<"CMsgLEDManagerDevice"> & {
  /**
   * @generated from field: optional int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: optional bool enabled = 2;
   */
  enabled: boolean;

  /**
   * @generated from field: optional string name = 3;
   */
  name: string;

  /**
   * @generated from field: repeated string effects_available = 4;
   */
  effectsAvailable: string[];

  /**
   * @generated from field: optional string effect = 5;
   */
  effect: string;

  /**
   * @generated from field: optional bool supports_color = 9;
   */
  supportsColor: boolean;

  /**
   * @generated from field: optional CMsgLEDColor color = 10;
   */
  color?: CMsgLEDColor;

  /**
   * @generated from field: optional bool supports_speed = 11;
   */
  supportsSpeed: boolean;

  /**
   * @generated from field: optional float speed = 12;
   */
  speed: number;

  /**
   * @generated from field: optional bool supports_brightness = 13;
   */
  supportsBrightness: boolean;

  /**
   * @generated from field: optional float brightness = 14;
   */
  brightness: number;
};

/**
 * Describes the message CMsgLEDManagerDevice.
 * Use `create(CMsgLEDManagerDeviceSchema)` to create a new message.
 */
export const CMsgLEDManagerDeviceSchema: GenMessage<CMsgLEDManagerDevice> = /*@__PURE__*/
  messageDesc(file_webuimessages_leds, 1);

/**
 * @generated from message CMsgLEDManagerState
 */
export type CMsgLEDManagerState = Message<"CMsgLEDManagerState"> & {
  /**
   * @generated from field: optional bool is_service_available = 1;
   */
  isServiceAvailable: boolean;

  /**
   * @generated from field: repeated CMsgLEDManagerDevice devices = 2;
   */
  devices: CMsgLEDManagerDevice[];
};

/**
 * Describes the message CMsgLEDManagerState.
 * Use `create(CMsgLEDManagerStateSchema)` to create a new message.
 */
export const CMsgLEDManagerStateSchema: GenMessage<CMsgLEDManagerState> = /*@__PURE__*/
  messageDesc(file_webuimessages_leds, 2);

/**
 * @generated from message CLEDManager_GetState_Request
 */
export type CLEDManager_GetState_Request = Message<"CLEDManager_GetState_Request"> & {
};

/**
 * Describes the message CLEDManager_GetState_Request.
 * Use `create(CLEDManager_GetState_RequestSchema)` to create a new message.
 */
export const CLEDManager_GetState_RequestSchema: GenMessage<CLEDManager_GetState_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_leds, 3);

/**
 * @generated from message CLEDManager_GetState_Response
 */
export type CLEDManager_GetState_Response = Message<"CLEDManager_GetState_Response"> & {
  /**
   * @generated from field: optional CMsgLEDManagerState state = 1;
   */
  state?: CMsgLEDManagerState;
};

/**
 * Describes the message CLEDManager_GetState_Response.
 * Use `create(CLEDManager_GetState_ResponseSchema)` to create a new message.
 */
export const CLEDManager_GetState_ResponseSchema: GenMessage<CLEDManager_GetState_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_leds, 4);

/**
 * @generated from message CLEDManager_StateChanged_Notification
 */
export type CLEDManager_StateChanged_Notification = Message<"CLEDManager_StateChanged_Notification"> & {
};

/**
 * Describes the message CLEDManager_StateChanged_Notification.
 * Use `create(CLEDManager_StateChanged_NotificationSchema)` to create a new message.
 */
export const CLEDManager_StateChanged_NotificationSchema: GenMessage<CLEDManager_StateChanged_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_leds, 5);

/**
 * @generated from message CLEDManager_SetColor_Request
 */
export type CLEDManager_SetColor_Request = Message<"CLEDManager_SetColor_Request"> & {
  /**
   * @generated from field: optional int32 device_id = 1;
   */
  deviceId: number;

  /**
   * @generated from field: optional CMsgLEDColor color = 2;
   */
  color?: CMsgLEDColor;
};

/**
 * Describes the message CLEDManager_SetColor_Request.
 * Use `create(CLEDManager_SetColor_RequestSchema)` to create a new message.
 */
export const CLEDManager_SetColor_RequestSchema: GenMessage<CLEDManager_SetColor_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_leds, 6);

/**
 * @generated from message CLEDManager_SetColor_Response
 */
export type CLEDManager_SetColor_Response = Message<"CLEDManager_SetColor_Response"> & {
};

/**
 * Describes the message CLEDManager_SetColor_Response.
 * Use `create(CLEDManager_SetColor_ResponseSchema)` to create a new message.
 */
export const CLEDManager_SetColor_ResponseSchema: GenMessage<CLEDManager_SetColor_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_leds, 7);

/**
 * @generated from message CLEDManager_SetEnabled_Request
 */
export type CLEDManager_SetEnabled_Request = Message<"CLEDManager_SetEnabled_Request"> & {
  /**
   * @generated from field: optional int32 device_id = 1;
   */
  deviceId: number;

  /**
   * @generated from field: optional bool enabled = 2;
   */
  enabled: boolean;
};

/**
 * Describes the message CLEDManager_SetEnabled_Request.
 * Use `create(CLEDManager_SetEnabled_RequestSchema)` to create a new message.
 */
export const CLEDManager_SetEnabled_RequestSchema: GenMessage<CLEDManager_SetEnabled_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_leds, 8);

/**
 * @generated from message CLEDManager_SetEnabled_Response
 */
export type CLEDManager_SetEnabled_Response = Message<"CLEDManager_SetEnabled_Response"> & {
};

/**
 * Describes the message CLEDManager_SetEnabled_Response.
 * Use `create(CLEDManager_SetEnabled_ResponseSchema)` to create a new message.
 */
export const CLEDManager_SetEnabled_ResponseSchema: GenMessage<CLEDManager_SetEnabled_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_leds, 9);

/**
 * @generated from message CLEDManager_SetEffect_Request
 */
export type CLEDManager_SetEffect_Request = Message<"CLEDManager_SetEffect_Request"> & {
  /**
   * @generated from field: optional int32 device_id = 1;
   */
  deviceId: number;

  /**
   * @generated from field: optional string effect = 2;
   */
  effect: string;
};

/**
 * Describes the message CLEDManager_SetEffect_Request.
 * Use `create(CLEDManager_SetEffect_RequestSchema)` to create a new message.
 */
export const CLEDManager_SetEffect_RequestSchema: GenMessage<CLEDManager_SetEffect_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_leds, 10);

/**
 * @generated from message CLEDManager_SetEffect_Response
 */
export type CLEDManager_SetEffect_Response = Message<"CLEDManager_SetEffect_Response"> & {
};

/**
 * Describes the message CLEDManager_SetEffect_Response.
 * Use `create(CLEDManager_SetEffect_ResponseSchema)` to create a new message.
 */
export const CLEDManager_SetEffect_ResponseSchema: GenMessage<CLEDManager_SetEffect_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_leds, 11);

/**
 * @generated from message CLEDManager_SetSpeed_Request
 */
export type CLEDManager_SetSpeed_Request = Message<"CLEDManager_SetSpeed_Request"> & {
  /**
   * @generated from field: optional int32 device_id = 1;
   */
  deviceId: number;

  /**
   * @generated from field: optional float speed = 2;
   */
  speed: number;
};

/**
 * Describes the message CLEDManager_SetSpeed_Request.
 * Use `create(CLEDManager_SetSpeed_RequestSchema)` to create a new message.
 */
export const CLEDManager_SetSpeed_RequestSchema: GenMessage<CLEDManager_SetSpeed_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_leds, 12);

/**
 * @generated from message CLEDManager_SetSpeed_Response
 */
export type CLEDManager_SetSpeed_Response = Message<"CLEDManager_SetSpeed_Response"> & {
};

/**
 * Describes the message CLEDManager_SetSpeed_Response.
 * Use `create(CLEDManager_SetSpeed_ResponseSchema)` to create a new message.
 */
export const CLEDManager_SetSpeed_ResponseSchema: GenMessage<CLEDManager_SetSpeed_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_leds, 13);

/**
 * @generated from message CLEDManager_SetBrightness_Request
 */
export type CLEDManager_SetBrightness_Request = Message<"CLEDManager_SetBrightness_Request"> & {
  /**
   * @generated from field: optional int32 device_id = 1;
   */
  deviceId: number;

  /**
   * @generated from field: optional float brightness = 2;
   */
  brightness: number;
};

/**
 * Describes the message CLEDManager_SetBrightness_Request.
 * Use `create(CLEDManager_SetBrightness_RequestSchema)` to create a new message.
 */
export const CLEDManager_SetBrightness_RequestSchema: GenMessage<CLEDManager_SetBrightness_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_leds, 14);

/**
 * @generated from message CLEDManager_SetBrightness_Response
 */
export type CLEDManager_SetBrightness_Response = Message<"CLEDManager_SetBrightness_Response"> & {
};

/**
 * Describes the message CLEDManager_SetBrightness_Response.
 * Use `create(CLEDManager_SetBrightness_ResponseSchema)` to create a new message.
 */
export const CLEDManager_SetBrightness_ResponseSchema: GenMessage<CLEDManager_SetBrightness_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_leds, 15);

/**
 * @generated from service LEDManager
 */
export const LEDManager: GenService<{
  /**
   * @generated from rpc LEDManager.GetState
   */
  getState: {
    methodKind: "unary";
    input: typeof CLEDManager_GetState_RequestSchema;
    output: typeof CLEDManager_GetState_ResponseSchema;
  },
  /**
   * @generated from rpc LEDManager.NotifyStateChanged
   */
  notifyStateChanged: {
    methodKind: "unary";
    input: typeof CLEDManager_StateChanged_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc LEDManager.SetEnabled
   */
  setEnabled: {
    methodKind: "unary";
    input: typeof CLEDManager_SetEnabled_RequestSchema;
    output: typeof CLEDManager_SetEnabled_ResponseSchema;
  },
  /**
   * @generated from rpc LEDManager.SetColor
   */
  setColor: {
    methodKind: "unary";
    input: typeof CLEDManager_SetColor_RequestSchema;
    output: typeof CLEDManager_SetColor_ResponseSchema;
  },
  /**
   * @generated from rpc LEDManager.SetEffect
   */
  setEffect: {
    methodKind: "unary";
    input: typeof CLEDManager_SetEffect_RequestSchema;
    output: typeof CLEDManager_SetEffect_ResponseSchema;
  },
  /**
   * @generated from rpc LEDManager.SetSpeed
   */
  setSpeed: {
    methodKind: "unary";
    input: typeof CLEDManager_SetSpeed_RequestSchema;
    output: typeof CLEDManager_SetSpeed_ResponseSchema;
  },
  /**
   * @generated from rpc LEDManager.SetBrightness
   */
  setBrightness: {
    methodKind: "unary";
    input: typeof CLEDManager_SetBrightness_RequestSchema;
    output: typeof CLEDManager_SetBrightness_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_webuimessages_leds, 0);

