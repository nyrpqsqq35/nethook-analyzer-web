// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file webuimessages_gamerecording.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { EExportCodec, EGameRecordingType } from "./enums_pb";
import { file_enums } from "./enums_pb";
import { file_steammessages_base } from "./steammessages_base_pb";
import type { WebUINoResponseSchema } from "./webuimessages_base_pb";
import { file_webuimessages_base } from "./webuimessages_base_pb";
import type { CGameRecordingTimelineEvent, CGameRecordingTimelineMetadata, CPhaseAttribute, CTimelineTag } from "./webuimessages_gamerecordingfiles_pb";
import { file_webuimessages_gamerecordingfiles } from "./webuimessages_gamerecordingfiles_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file webuimessages_gamerecording.proto.
 */
export const file_webuimessages_gamerecording: GenFile = /*@__PURE__*/
  fileDesc("", [file_enums, file_steammessages_base, file_webuimessages_base, file_webuimessages_gamerecordingfiles]);

/**
 * @generated from message CGameRecording_GetAppsWithBackgroundVideo_Request
 */
export type CGameRecording_GetAppsWithBackgroundVideo_Request = Message<"CGameRecording_GetAppsWithBackgroundVideo_Request"> & {
};

/**
 * Describes the message CGameRecording_GetAppsWithBackgroundVideo_Request.
 * Use `create(CGameRecording_GetAppsWithBackgroundVideo_RequestSchema)` to create a new message.
 */
export const CGameRecording_GetAppsWithBackgroundVideo_RequestSchema: GenMessage<CGameRecording_GetAppsWithBackgroundVideo_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 0);

/**
 * @generated from message CGameRecording_GetAppsWithBackgroundVideo_Response
 */
export type CGameRecording_GetAppsWithBackgroundVideo_Response = Message<"CGameRecording_GetAppsWithBackgroundVideo_Response"> & {
  /**
   * @generated from field: repeated CGameRecording_GetAppsWithBackgroundVideo_Response.App apps = 1;
   */
  apps: CGameRecording_GetAppsWithBackgroundVideo_Response_App[];
};

/**
 * Describes the message CGameRecording_GetAppsWithBackgroundVideo_Response.
 * Use `create(CGameRecording_GetAppsWithBackgroundVideo_ResponseSchema)` to create a new message.
 */
export const CGameRecording_GetAppsWithBackgroundVideo_ResponseSchema: GenMessage<CGameRecording_GetAppsWithBackgroundVideo_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 1);

/**
 * @generated from message CGameRecording_GetAppsWithBackgroundVideo_Response.App
 */
export type CGameRecording_GetAppsWithBackgroundVideo_Response_App = Message<"CGameRecording_GetAppsWithBackgroundVideo_Response.App"> & {
  /**
   * @generated from field: optional uint64 game_id = 1;
   */
  gameId: bigint;

  /**
   * @generated from field: optional uint32 most_recent_start_time = 2;
   */
  mostRecentStartTime: number;

  /**
   * @generated from field: optional EGameRecordingType recording_type = 3 [default = k_EGameRecordingType_Unknown];
   */
  recordingType: EGameRecordingType;

  /**
   * @generated from field: optional double video_duration_seconds = 4;
   */
  videoDurationSeconds: number;

  /**
   * @generated from field: optional double timeline_duration_seconds = 5;
   */
  timelineDurationSeconds: number;

  /**
   * @generated from field: optional bool is_active = 6;
   */
  isActive: boolean;

  /**
   * @generated from field: optional uint64 file_size = 7;
   */
  fileSize: bigint;
};

/**
 * Describes the message CGameRecording_GetAppsWithBackgroundVideo_Response.App.
 * Use `create(CGameRecording_GetAppsWithBackgroundVideo_Response_AppSchema)` to create a new message.
 */
export const CGameRecording_GetAppsWithBackgroundVideo_Response_AppSchema: GenMessage<CGameRecording_GetAppsWithBackgroundVideo_Response_App> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 1, 0);

/**
 * @generated from message CGameRecording_GetTimelinesForApp_Request
 */
export type CGameRecording_GetTimelinesForApp_Request = Message<"CGameRecording_GetTimelinesForApp_Request"> & {
  /**
   * @generated from field: optional uint64 game_id = 1;
   */
  gameId: bigint;
};

/**
 * Describes the message CGameRecording_GetTimelinesForApp_Request.
 * Use `create(CGameRecording_GetTimelinesForApp_RequestSchema)` to create a new message.
 */
export const CGameRecording_GetTimelinesForApp_RequestSchema: GenMessage<CGameRecording_GetTimelinesForApp_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 2);

/**
 * @generated from message CGameRecording_GetTimelinesForApp_Response
 */
export type CGameRecording_GetTimelinesForApp_Response = Message<"CGameRecording_GetTimelinesForApp_Response"> & {
  /**
   * @generated from field: repeated CGameRecordingTimelineMetadata timelines = 1;
   */
  timelines: CGameRecordingTimelineMetadata[];
};

/**
 * Describes the message CGameRecording_GetTimelinesForApp_Response.
 * Use `create(CGameRecording_GetTimelinesForApp_ResponseSchema)` to create a new message.
 */
export const CGameRecording_GetTimelinesForApp_ResponseSchema: GenMessage<CGameRecording_GetTimelinesForApp_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 3);

/**
 * @generated from message CGameRecording_GetTimelinesForClip_Request
 */
export type CGameRecording_GetTimelinesForClip_Request = Message<"CGameRecording_GetTimelinesForClip_Request"> & {
  /**
   * @generated from field: optional string clip_id = 1;
   */
  clipId: string;
};

/**
 * Describes the message CGameRecording_GetTimelinesForClip_Request.
 * Use `create(CGameRecording_GetTimelinesForClip_RequestSchema)` to create a new message.
 */
export const CGameRecording_GetTimelinesForClip_RequestSchema: GenMessage<CGameRecording_GetTimelinesForClip_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 4);

/**
 * @generated from message CGameRecording_GetTimelinesForClip_Response
 */
export type CGameRecording_GetTimelinesForClip_Response = Message<"CGameRecording_GetTimelinesForClip_Response"> & {
  /**
   * @generated from field: optional uint64 game_id = 1;
   */
  gameId: bigint;

  /**
   * @generated from field: repeated CGameRecordingTimelineMetadata timelines = 2;
   */
  timelines: CGameRecordingTimelineMetadata[];

  /**
   * @generated from field: optional uint64 first_timeline_start_offset_ms = 3;
   */
  firstTimelineStartOffsetMs: bigint;
};

/**
 * Describes the message CGameRecording_GetTimelinesForClip_Response.
 * Use `create(CGameRecording_GetTimelinesForClip_ResponseSchema)` to create a new message.
 */
export const CGameRecording_GetTimelinesForClip_ResponseSchema: GenMessage<CGameRecording_GetTimelinesForClip_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 5);

/**
 * @generated from message CGameRecording_QueryPhases_Request
 */
export type CGameRecording_QueryPhases_Request = Message<"CGameRecording_QueryPhases_Request"> & {
  /**
   * @generated from field: optional uint32 page = 1;
   */
  page: number;

  /**
   * @generated from field: optional uint32 count = 2;
   */
  count: number;

  /**
   * @generated from field: optional uint64 filter_gameid = 10;
   */
  filterGameid: bigint;

  /**
   * @generated from field: optional string filter_search_string = 11;
   */
  filterSearchString: string;

  /**
   * @generated from field: repeated CGameRecording_QueryPhases_Request.Tag filter_tags = 12;
   */
  filterTags: CGameRecording_QueryPhases_Request_Tag[];

  /**
   * @generated from field: optional string filter_phase_id = 13;
   */
  filterPhaseId: string;
};

/**
 * Describes the message CGameRecording_QueryPhases_Request.
 * Use `create(CGameRecording_QueryPhases_RequestSchema)` to create a new message.
 */
export const CGameRecording_QueryPhases_RequestSchema: GenMessage<CGameRecording_QueryPhases_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 6);

/**
 * @generated from message CGameRecording_QueryPhases_Request.Tag
 */
export type CGameRecording_QueryPhases_Request_Tag = Message<"CGameRecording_QueryPhases_Request.Tag"> & {
  /**
   * @generated from field: optional string group = 1;
   */
  group: string;

  /**
   * @generated from field: optional string name = 2;
   */
  name: string;
};

/**
 * Describes the message CGameRecording_QueryPhases_Request.Tag.
 * Use `create(CGameRecording_QueryPhases_Request_TagSchema)` to create a new message.
 */
export const CGameRecording_QueryPhases_Request_TagSchema: GenMessage<CGameRecording_QueryPhases_Request_Tag> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 6, 0);

/**
 * @generated from message CGameRecording_QueryPhases_Response
 */
export type CGameRecording_QueryPhases_Response = Message<"CGameRecording_QueryPhases_Response"> & {
  /**
   * @generated from field: repeated CGameRecording_QueryPhases_Response.Phase phases = 1;
   */
  phases: CGameRecording_QueryPhases_Response_Phase[];

  /**
   * @generated from field: optional uint32 total_count = 2;
   */
  totalCount: number;
};

/**
 * Describes the message CGameRecording_QueryPhases_Response.
 * Use `create(CGameRecording_QueryPhases_ResponseSchema)` to create a new message.
 */
export const CGameRecording_QueryPhases_ResponseSchema: GenMessage<CGameRecording_QueryPhases_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 7);

/**
 * @generated from message CGameRecording_QueryPhases_Response.Phase
 */
export type CGameRecording_QueryPhases_Response_Phase = Message<"CGameRecording_QueryPhases_Response.Phase"> & {
  /**
   * @generated from field: optional uint64 game_id = 1;
   */
  gameId: bigint;

  /**
   * @generated from field: optional uint32 date_recorded = 5;
   */
  dateRecorded: number;

  /**
   * @generated from field: optional uint64 duration_ms = 6;
   */
  durationMs: bigint;

  /**
   * @generated from field: repeated CTimelineTag tags = 7;
   */
  tags: CTimelineTag[];

  /**
   * @generated from field: repeated CTimelineTag contained_tags = 8;
   */
  containedTags: CTimelineTag[];

  /**
   * @generated from field: optional CGameRecording_QueryPhases_Response.Phase.BackgroundRecording background_recording = 9;
   */
  backgroundRecording?: CGameRecording_QueryPhases_Response_Phase_BackgroundRecording;

  /**
   * @generated from field: repeated string clip_ids = 10;
   */
  clipIds: string[];

  /**
   * @generated from field: optional EPhaseResultType type = 11 [default = k_EPhaseResultType_Automatic];
   */
  type: EPhaseResultType;

  /**
   * @generated from field: optional uint64 start_ms = 12;
   */
  startMs: bigint;

  /**
   * @generated from field: repeated uint32 screenshots = 13;
   */
  screenshots: number[];

  /**
   * @generated from field: optional bool active = 14;
   */
  active: boolean;

  /**
   * @generated from field: optional string phase_id = 15;
   */
  phaseId: string;

  /**
   * @generated from field: repeated CTimelineEntry significant_events = 16;
   */
  significantEvents: CTimelineEntry[];

  /**
   * @generated from field: repeated CPhaseAttribute attributes = 17;
   */
  attributes: CPhaseAttribute[];
};

/**
 * Describes the message CGameRecording_QueryPhases_Response.Phase.
 * Use `create(CGameRecording_QueryPhases_Response_PhaseSchema)` to create a new message.
 */
export const CGameRecording_QueryPhases_Response_PhaseSchema: GenMessage<CGameRecording_QueryPhases_Response_Phase> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 7, 0);

/**
 * @generated from message CGameRecording_QueryPhases_Response.Phase.BackgroundRecording
 */
export type CGameRecording_QueryPhases_Response_Phase_BackgroundRecording = Message<"CGameRecording_QueryPhases_Response.Phase.BackgroundRecording"> & {
  /**
   * @generated from field: optional string timeline_id = 1;
   */
  timelineId: string;

  /**
   * @generated from field: optional uint64 offset = 2;
   */
  offset: bigint;

  /**
   * @generated from field: optional uint64 duration_ms = 3;
   */
  durationMs: bigint;
};

/**
 * Describes the message CGameRecording_QueryPhases_Response.Phase.BackgroundRecording.
 * Use `create(CGameRecording_QueryPhases_Response_Phase_BackgroundRecordingSchema)` to create a new message.
 */
export const CGameRecording_QueryPhases_Response_Phase_BackgroundRecordingSchema: GenMessage<CGameRecording_QueryPhases_Response_Phase_BackgroundRecording> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 7, 0, 0);

/**
 * @generated from message CGameRecording_GetTags_Request
 */
export type CGameRecording_GetTags_Request = Message<"CGameRecording_GetTags_Request"> & {
  /**
   * @generated from field: optional uint64 game_id = 1;
   */
  gameId: bigint;
};

/**
 * Describes the message CGameRecording_GetTags_Request.
 * Use `create(CGameRecording_GetTags_RequestSchema)` to create a new message.
 */
export const CGameRecording_GetTags_RequestSchema: GenMessage<CGameRecording_GetTags_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 8);

/**
 * @generated from message CGameRecording_GetTags_Response
 */
export type CGameRecording_GetTags_Response = Message<"CGameRecording_GetTags_Response"> & {
  /**
   * @generated from field: repeated CTimelineTag tags = 1;
   */
  tags: CTimelineTag[];
};

/**
 * Describes the message CGameRecording_GetTags_Response.
 * Use `create(CGameRecording_GetTags_ResponseSchema)` to create a new message.
 */
export const CGameRecording_GetTags_ResponseSchema: GenMessage<CGameRecording_GetTags_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 9);

/**
 * @generated from message CGameRecording_GetEnoughDiskSpace_Request
 */
export type CGameRecording_GetEnoughDiskSpace_Request = Message<"CGameRecording_GetEnoughDiskSpace_Request"> & {
};

/**
 * Describes the message CGameRecording_GetEnoughDiskSpace_Request.
 * Use `create(CGameRecording_GetEnoughDiskSpace_RequestSchema)` to create a new message.
 */
export const CGameRecording_GetEnoughDiskSpace_RequestSchema: GenMessage<CGameRecording_GetEnoughDiskSpace_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 10);

/**
 * @generated from message CGameRecording_GetEnoughDiskSpace_Response
 */
export type CGameRecording_GetEnoughDiskSpace_Response = Message<"CGameRecording_GetEnoughDiskSpace_Response"> & {
  /**
   * @generated from field: optional bool enough_space = 1;
   */
  enoughSpace: boolean;
};

/**
 * Describes the message CGameRecording_GetEnoughDiskSpace_Response.
 * Use `create(CGameRecording_GetEnoughDiskSpace_ResponseSchema)` to create a new message.
 */
export const CGameRecording_GetEnoughDiskSpace_ResponseSchema: GenMessage<CGameRecording_GetEnoughDiskSpace_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 11);

/**
 * @generated from message CGameRecording_GetAvailableDiskSpace_Request
 */
export type CGameRecording_GetAvailableDiskSpace_Request = Message<"CGameRecording_GetAvailableDiskSpace_Request"> & {
};

/**
 * Describes the message CGameRecording_GetAvailableDiskSpace_Request.
 * Use `create(CGameRecording_GetAvailableDiskSpace_RequestSchema)` to create a new message.
 */
export const CGameRecording_GetAvailableDiskSpace_RequestSchema: GenMessage<CGameRecording_GetAvailableDiskSpace_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 12);

/**
 * @generated from message CGameRecording_GetAvailableDiskSpace_Response
 */
export type CGameRecording_GetAvailableDiskSpace_Response = Message<"CGameRecording_GetAvailableDiskSpace_Response"> & {
  /**
   * @generated from field: optional double size = 1;
   */
  size: number;
};

/**
 * Describes the message CGameRecording_GetAvailableDiskSpace_Response.
 * Use `create(CGameRecording_GetAvailableDiskSpace_ResponseSchema)` to create a new message.
 */
export const CGameRecording_GetAvailableDiskSpace_ResponseSchema: GenMessage<CGameRecording_GetAvailableDiskSpace_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 13);

/**
 * @generated from message CGameRecording_TimelineChanged_Notification
 */
export type CGameRecording_TimelineChanged_Notification = Message<"CGameRecording_TimelineChanged_Notification"> & {
  /**
   * @generated from field: optional ETimelineChangeNotificationType notification_type = 1 [default = k_ETimelineChangeNotificationType_Started];
   */
  notificationType: ETimelineChangeNotificationType;

  /**
   * @generated from field: optional string timeline_id = 2;
   */
  timelineId: string;

  /**
   * @generated from field: optional uint64 game_id = 3;
   */
  gameId: bigint;

  /**
   * @generated from field: optional uint32 start_time = 4;
   */
  startTime: number;

  /**
   * @generated from field: optional uint64 duration_ms = 5;
   */
  durationMs: bigint;
};

/**
 * Describes the message CGameRecording_TimelineChanged_Notification.
 * Use `create(CGameRecording_TimelineChanged_NotificationSchema)` to create a new message.
 */
export const CGameRecording_TimelineChanged_NotificationSchema: GenMessage<CGameRecording_TimelineChanged_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 14);

/**
 * @generated from message CGameRecording_RecordingSessionChanged_Notification
 */
export type CGameRecording_RecordingSessionChanged_Notification = Message<"CGameRecording_RecordingSessionChanged_Notification"> & {
  /**
   * @generated from field: optional ERecordingSessionChangeNotificationType notification_type = 1 [default = k_ERecordingSessionChangeNotificationType_Started];
   */
  notificationType: ERecordingSessionChangeNotificationType;

  /**
   * @generated from field: optional string timeline_id = 2;
   */
  timelineId: string;

  /**
   * @generated from field: optional uint64 game_id = 4;
   */
  gameId: bigint;

  /**
   * @generated from field: optional string session_id = 5;
   */
  sessionId: string;

  /**
   * @generated from field: optional uint64 start_offset = 6;
   */
  startOffset: bigint;

  /**
   * @generated from field: optional uint64 duration_ms = 7;
   */
  durationMs: bigint;

  /**
   * @generated from field: optional EGameRecordingType recording_type = 8 [default = k_EGameRecordingType_Unknown];
   */
  recordingType: EGameRecordingType;
};

/**
 * Describes the message CGameRecording_RecordingSessionChanged_Notification.
 * Use `create(CGameRecording_RecordingSessionChanged_NotificationSchema)` to create a new message.
 */
export const CGameRecording_RecordingSessionChanged_NotificationSchema: GenMessage<CGameRecording_RecordingSessionChanged_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 15);

/**
 * @generated from message CTimelineEntry
 */
export type CTimelineEntry = Message<"CTimelineEntry"> & {
  /**
   * @generated from field: optional string timeline_id = 1;
   */
  timelineId: string;

  /**
   * @generated from field: optional uint64 entry_id = 2;
   */
  entryId: bigint;

  /**
   * @generated from field: optional uint64 time = 3;
   */
  time: bigint;

  /**
   * @generated from field: optional ETimelineEntryType type = 4 [default = k_ETimelineEntryType_Invalid];
   */
  type: ETimelineEntryType;

  /**
   * @generated from field: optional int32 game_mode = 5;
   */
  gameMode: number;

  /**
   * @generated from field: optional string range_title = 7;
   */
  rangeTitle: string;

  /**
   * @generated from field: optional uint64 range_duration = 8;
   */
  rangeDuration: bigint;

  /**
   * @generated from field: optional int32 range_possible_clip = 9;
   */
  rangePossibleClip: number;

  /**
   * @generated from field: optional string timestamp_title = 10;
   */
  timestampTitle: string;

  /**
   * @generated from field: optional string marker_icon = 11;
   */
  markerIcon: string;

  /**
   * @generated from field: optional string marker_description = 13;
   */
  markerDescription: string;

  /**
   * @generated from field: optional int32 marker_priority = 14;
   */
  markerPriority: number;

  /**
   * @generated from field: optional uint32 screenshot_handle = 15;
   */
  screenshotHandle: number;

  /**
   * @generated from field: optional string achievement_name = 16;
   */
  achievementName: string;

  /**
   * @generated from field: repeated CTimelineTag tag = 17;
   */
  tag: CTimelineTag[];

  /**
   * @generated from field: optional string phase_id = 18;
   */
  phaseId: string;

  /**
   * @generated from field: repeated CPhaseAttribute attributes = 19;
   */
  attributes: CPhaseAttribute[];
};

/**
 * Describes the message CTimelineEntry.
 * Use `create(CTimelineEntrySchema)` to create a new message.
 */
export const CTimelineEntrySchema: GenMessage<CTimelineEntry> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 16);

/**
 * @generated from message CGameRecording_TimelineEntryChanged_Notification
 */
export type CGameRecording_TimelineEntryChanged_Notification = Message<"CGameRecording_TimelineEntryChanged_Notification"> & {
  /**
   * @generated from field: optional CTimelineEntry entry = 1;
   */
  entry?: CTimelineEntry;

  /**
   * @generated from field: optional fixed64 game_id = 2;
   */
  gameId: bigint;
};

/**
 * Describes the message CGameRecording_TimelineEntryChanged_Notification.
 * Use `create(CGameRecording_TimelineEntryChanged_NotificationSchema)` to create a new message.
 */
export const CGameRecording_TimelineEntryChanged_NotificationSchema: GenMessage<CGameRecording_TimelineEntryChanged_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 17);

/**
 * @generated from message CGameRecording_TimelineEntryRemoved_Notification
 */
export type CGameRecording_TimelineEntryRemoved_Notification = Message<"CGameRecording_TimelineEntryRemoved_Notification"> & {
  /**
   * @generated from field: optional uint64 game_id = 1;
   */
  gameId: bigint;

  /**
   * @generated from field: optional string timeline_id = 2;
   */
  timelineId: string;

  /**
   * @generated from field: optional uint64 entry_id = 3;
   */
  entryId: bigint;
};

/**
 * Describes the message CGameRecording_TimelineEntryRemoved_Notification.
 * Use `create(CGameRecording_TimelineEntryRemoved_NotificationSchema)` to create a new message.
 */
export const CGameRecording_TimelineEntryRemoved_NotificationSchema: GenMessage<CGameRecording_TimelineEntryRemoved_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 18);

/**
 * @generated from message CGameRecording_LowDiskSpace_Notification
 */
export type CGameRecording_LowDiskSpace_Notification = Message<"CGameRecording_LowDiskSpace_Notification"> & {
};

/**
 * Describes the message CGameRecording_LowDiskSpace_Notification.
 * Use `create(CGameRecording_LowDiskSpace_NotificationSchema)` to create a new message.
 */
export const CGameRecording_LowDiskSpace_NotificationSchema: GenMessage<CGameRecording_LowDiskSpace_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 19);

/**
 * @generated from message CGameRecording_PostGameHighlightsChanged_Notification
 */
export type CGameRecording_PostGameHighlightsChanged_Notification = Message<"CGameRecording_PostGameHighlightsChanged_Notification"> & {
  /**
   * @generated from field: optional uint64 game_id = 1;
   */
  gameId: bigint;
};

/**
 * Describes the message CGameRecording_PostGameHighlightsChanged_Notification.
 * Use `create(CGameRecording_PostGameHighlightsChanged_NotificationSchema)` to create a new message.
 */
export const CGameRecording_PostGameHighlightsChanged_NotificationSchema: GenMessage<CGameRecording_PostGameHighlightsChanged_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 20);

/**
 * @generated from message CGameRecording_OpenOverlayToGamePhase_Notification
 */
export type CGameRecording_OpenOverlayToGamePhase_Notification = Message<"CGameRecording_OpenOverlayToGamePhase_Notification"> & {
  /**
   * @generated from field: optional uint64 game_id = 1;
   */
  gameId: bigint;

  /**
   * @generated from field: optional string phase_id = 2;
   */
  phaseId: string;
};

/**
 * Describes the message CGameRecording_OpenOverlayToGamePhase_Notification.
 * Use `create(CGameRecording_OpenOverlayToGamePhase_NotificationSchema)` to create a new message.
 */
export const CGameRecording_OpenOverlayToGamePhase_NotificationSchema: GenMessage<CGameRecording_OpenOverlayToGamePhase_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 21);

/**
 * @generated from message CGameRecording_OpenOverlayToTimelineEvent_Notification
 */
export type CGameRecording_OpenOverlayToTimelineEvent_Notification = Message<"CGameRecording_OpenOverlayToTimelineEvent_Notification"> & {
  /**
   * @generated from field: optional uint64 game_id = 1;
   */
  gameId: bigint;

  /**
   * @generated from field: optional uint64 entry_id = 2;
   */
  entryId: bigint;
};

/**
 * Describes the message CGameRecording_OpenOverlayToTimelineEvent_Notification.
 * Use `create(CGameRecording_OpenOverlayToTimelineEvent_NotificationSchema)` to create a new message.
 */
export const CGameRecording_OpenOverlayToTimelineEvent_NotificationSchema: GenMessage<CGameRecording_OpenOverlayToTimelineEvent_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 22);

/**
 * @generated from message CGameRecording_PhaseListChanged_Notification
 */
export type CGameRecording_PhaseListChanged_Notification = Message<"CGameRecording_PhaseListChanged_Notification"> & {
};

/**
 * Describes the message CGameRecording_PhaseListChanged_Notification.
 * Use `create(CGameRecording_PhaseListChanged_NotificationSchema)` to create a new message.
 */
export const CGameRecording_PhaseListChanged_NotificationSchema: GenMessage<CGameRecording_PhaseListChanged_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 23);

/**
 * @generated from message CGameRecording_ClipSummary
 */
export type CGameRecording_ClipSummary = Message<"CGameRecording_ClipSummary"> & {
  /**
   * @generated from field: optional string clip_id = 1;
   */
  clipId: string;

  /**
   * @generated from field: optional uint64 game_id = 2;
   */
  gameId: bigint;

  /**
   * @generated from field: optional uint64 duration_ms = 3;
   */
  durationMs: bigint;

  /**
   * @generated from field: optional uint32 date_recorded = 4;
   */
  dateRecorded: number;

  /**
   * @generated from field: optional string start_timeline_id = 5;
   */
  startTimelineId: string;

  /**
   * @generated from field: optional uint64 start_offset_ms = 6;
   */
  startOffsetMs: bigint;

  /**
   * @generated from field: optional uint64 published_file_id = 7;
   */
  publishedFileId: bigint;

  /**
   * @generated from field: optional uint64 file_size = 8;
   */
  fileSize: bigint;

  /**
   * @generated from field: optional string name = 9;
   */
  name: string;

  /**
   * @generated from field: optional uint32 date_clipped = 10;
   */
  dateClipped: number;

  /**
   * @generated from field: optional bool temporary = 11;
   */
  temporary: boolean;

  /**
   * @generated from field: optional string original_device = 12;
   */
  originalDevice: string;

  /**
   * @generated from field: optional uint32 original_gaming_device_type = 13;
   */
  originalGamingDeviceType: number;

  /**
   * @generated from field: optional uint32 date_downloaded = 14;
   */
  dateDownloaded: number;

  /**
   * @generated from field: optional string thumbnail_url = 15;
   */
  thumbnailUrl: string;

  /**
   * @generated from field: optional uint32 thumbnail_width = 16;
   */
  thumbnailWidth: number;

  /**
   * @generated from field: optional uint32 thumbnail_height = 17;
   */
  thumbnailHeight: number;
};

/**
 * Describes the message CGameRecording_ClipSummary.
 * Use `create(CGameRecording_ClipSummarySchema)` to create a new message.
 */
export const CGameRecording_ClipSummarySchema: GenMessage<CGameRecording_ClipSummary> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 24);

/**
 * @generated from message CGameRecording_SaveClip_Request
 */
export type CGameRecording_SaveClip_Request = Message<"CGameRecording_SaveClip_Request"> & {
  /**
   * @generated from field: optional uint64 game_id = 1;
   */
  gameId: bigint;

  /**
   * @generated from field: optional CGameRecording_SaveClip_Request.Position start = 2;
   */
  start?: CGameRecording_SaveClip_Request_Position;

  /**
   * @generated from field: optional CGameRecording_SaveClip_Request.Position end = 3;
   */
  end?: CGameRecording_SaveClip_Request_Position;

  /**
   * @generated from field: optional string name = 4;
   */
  name: string;

  /**
   * @generated from field: optional string src_clip_id = 5;
   */
  srcClipId: string;

  /**
   * @generated from field: optional bool temporary = 6;
   */
  temporary: boolean;

  /**
   * @generated from field: optional bool force_thumbnail = 7;
   */
  forceThumbnail: boolean;
};

/**
 * Describes the message CGameRecording_SaveClip_Request.
 * Use `create(CGameRecording_SaveClip_RequestSchema)` to create a new message.
 */
export const CGameRecording_SaveClip_RequestSchema: GenMessage<CGameRecording_SaveClip_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 25);

/**
 * @generated from message CGameRecording_SaveClip_Request.Position
 */
export type CGameRecording_SaveClip_Request_Position = Message<"CGameRecording_SaveClip_Request.Position"> & {
  /**
   * @generated from field: optional string timeline_id = 1;
   */
  timelineId: string;

  /**
   * @generated from field: optional uint64 offset_ms = 2;
   */
  offsetMs: bigint;
};

/**
 * Describes the message CGameRecording_SaveClip_Request.Position.
 * Use `create(CGameRecording_SaveClip_Request_PositionSchema)` to create a new message.
 */
export const CGameRecording_SaveClip_Request_PositionSchema: GenMessage<CGameRecording_SaveClip_Request_Position> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 25, 0);

/**
 * @generated from message CGameRecording_SaveClip_Response
 */
export type CGameRecording_SaveClip_Response = Message<"CGameRecording_SaveClip_Response"> & {
  /**
   * @generated from field: optional CGameRecording_ClipSummary summary = 1;
   */
  summary?: CGameRecording_ClipSummary;
};

/**
 * Describes the message CGameRecording_SaveClip_Response.
 * Use `create(CGameRecording_SaveClip_ResponseSchema)` to create a new message.
 */
export const CGameRecording_SaveClip_ResponseSchema: GenMessage<CGameRecording_SaveClip_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 26);

/**
 * @generated from message CGameRecording_DeleteClip_Request
 */
export type CGameRecording_DeleteClip_Request = Message<"CGameRecording_DeleteClip_Request"> & {
  /**
   * @generated from field: optional string clip_id = 1;
   */
  clipId: string;
};

/**
 * Describes the message CGameRecording_DeleteClip_Request.
 * Use `create(CGameRecording_DeleteClip_RequestSchema)` to create a new message.
 */
export const CGameRecording_DeleteClip_RequestSchema: GenMessage<CGameRecording_DeleteClip_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 27);

/**
 * @generated from message CGameRecording_DeleteClip_Response
 */
export type CGameRecording_DeleteClip_Response = Message<"CGameRecording_DeleteClip_Response"> & {
};

/**
 * Describes the message CGameRecording_DeleteClip_Response.
 * Use `create(CGameRecording_DeleteClip_ResponseSchema)` to create a new message.
 */
export const CGameRecording_DeleteClip_ResponseSchema: GenMessage<CGameRecording_DeleteClip_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 28);

/**
 * @generated from message CGameRecording_ExportClip_Settings
 */
export type CGameRecording_ExportClip_Settings = Message<"CGameRecording_ExportClip_Settings"> & {
  /**
   * @generated from field: optional int32 bitrate_kbps = 1;
   */
  bitrateKbps: number;

  /**
   * @generated from field: optional int32 width = 2;
   */
  width: number;

  /**
   * @generated from field: optional int32 height = 3;
   */
  height: number;

  /**
   * @generated from field: optional int32 frames_per_second = 4;
   */
  framesPerSecond: number;

  /**
   * @generated from field: optional EExportCodec codec = 5 [default = k_EExportCodec_Default];
   */
  codec: EExportCodec;
};

/**
 * Describes the message CGameRecording_ExportClip_Settings.
 * Use `create(CGameRecording_ExportClip_SettingsSchema)` to create a new message.
 */
export const CGameRecording_ExportClip_SettingsSchema: GenMessage<CGameRecording_ExportClip_Settings> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 29);

/**
 * @generated from message CGameRecording_ExportClip_Request
 */
export type CGameRecording_ExportClip_Request = Message<"CGameRecording_ExportClip_Request"> & {
  /**
   * @generated from field: optional string clip_id = 1;
   */
  clipId: string;

  /**
   * @generated from field: optional string export_mp4_path = 2;
   */
  exportMp4Path: string;

  /**
   * @generated from field: optional CGameRecording_ExportClip_Settings settings = 3;
   */
  settings?: CGameRecording_ExportClip_Settings;

  /**
   * @generated from field: optional bool use_unique_filename = 4;
   */
  useUniqueFilename: boolean;
};

/**
 * Describes the message CGameRecording_ExportClip_Request.
 * Use `create(CGameRecording_ExportClip_RequestSchema)` to create a new message.
 */
export const CGameRecording_ExportClip_RequestSchema: GenMessage<CGameRecording_ExportClip_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 30);

/**
 * @generated from message CGameRecording_ExportClip_Response
 */
export type CGameRecording_ExportClip_Response = Message<"CGameRecording_ExportClip_Response"> & {
};

/**
 * Describes the message CGameRecording_ExportClip_Response.
 * Use `create(CGameRecording_ExportClip_ResponseSchema)` to create a new message.
 */
export const CGameRecording_ExportClip_ResponseSchema: GenMessage<CGameRecording_ExportClip_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 31);

/**
 * @generated from message CGameRecording_ExportClipPreview_Request
 */
export type CGameRecording_ExportClipPreview_Request = Message<"CGameRecording_ExportClipPreview_Request"> & {
  /**
   * @generated from field: optional string clip_id = 1;
   */
  clipId: string;

  /**
   * @generated from field: optional CGameRecording_ExportClip_Settings settings = 2;
   */
  settings?: CGameRecording_ExportClip_Settings;

  /**
   * @generated from field: optional bool run_policy_checks = 3;
   */
  runPolicyChecks: boolean;
};

/**
 * Describes the message CGameRecording_ExportClipPreview_Request.
 * Use `create(CGameRecording_ExportClipPreview_RequestSchema)` to create a new message.
 */
export const CGameRecording_ExportClipPreview_RequestSchema: GenMessage<CGameRecording_ExportClipPreview_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 32);

/**
 * @generated from message CGameRecording_ExportClipPreview_Response
 */
export type CGameRecording_ExportClipPreview_Response = Message<"CGameRecording_ExportClipPreview_Response"> & {
  /**
   * @generated from field: optional uint64 estimated_size = 1;
   */
  estimatedSize: bigint;

  /**
   * @generated from field: optional CGameRecording_ExportClip_Settings settings = 2;
   */
  settings?: CGameRecording_ExportClip_Settings;
};

/**
 * Describes the message CGameRecording_ExportClipPreview_Response.
 * Use `create(CGameRecording_ExportClipPreview_ResponseSchema)` to create a new message.
 */
export const CGameRecording_ExportClipPreview_ResponseSchema: GenMessage<CGameRecording_ExportClipPreview_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 33);

/**
 * @generated from message CGameRecording_TakeScreenshot_Request
 */
export type CGameRecording_TakeScreenshot_Request = Message<"CGameRecording_TakeScreenshot_Request"> & {
  /**
   * @generated from field: optional fixed64 game_id = 1;
   */
  gameId: bigint;

  /**
   * @generated from field: optional string timeline_id = 2;
   */
  timelineId: string;

  /**
   * @generated from field: optional uint64 timeline_offset_ms = 3;
   */
  timelineOffsetMs: bigint;
};

/**
 * Describes the message CGameRecording_TakeScreenshot_Request.
 * Use `create(CGameRecording_TakeScreenshot_RequestSchema)` to create a new message.
 */
export const CGameRecording_TakeScreenshot_RequestSchema: GenMessage<CGameRecording_TakeScreenshot_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 34);

/**
 * @generated from message CGameRecording_TakeScreenshot_Response
 */
export type CGameRecording_TakeScreenshot_Response = Message<"CGameRecording_TakeScreenshot_Response"> & {
  /**
   * @generated from field: optional fixed64 screenshot_id = 1;
   */
  screenshotId: bigint;
};

/**
 * Describes the message CGameRecording_TakeScreenshot_Response.
 * Use `create(CGameRecording_TakeScreenshot_ResponseSchema)` to create a new message.
 */
export const CGameRecording_TakeScreenshot_ResponseSchema: GenMessage<CGameRecording_TakeScreenshot_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 35);

/**
 * @generated from message CGameRecording_UploadClipToSteam_Request
 */
export type CGameRecording_UploadClipToSteam_Request = Message<"CGameRecording_UploadClipToSteam_Request"> & {
  /**
   * @generated from field: optional string clip_id = 1;
   */
  clipId: string;

  /**
   * @generated from field: optional string title = 2;
   */
  title: string;

  /**
   * @generated from field: optional string desc = 3;
   */
  desc: string;

  /**
   * @generated from field: optional int32 visibility = 4;
   */
  visibility: number;
};

/**
 * Describes the message CGameRecording_UploadClipToSteam_Request.
 * Use `create(CGameRecording_UploadClipToSteam_RequestSchema)` to create a new message.
 */
export const CGameRecording_UploadClipToSteam_RequestSchema: GenMessage<CGameRecording_UploadClipToSteam_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 36);

/**
 * @generated from message CGameRecording_UploadClipToSteam_Response
 */
export type CGameRecording_UploadClipToSteam_Response = Message<"CGameRecording_UploadClipToSteam_Response"> & {
  /**
   * @generated from field: optional CGameRecording_ClipSummary summary = 1;
   */
  summary?: CGameRecording_ClipSummary;
};

/**
 * Describes the message CGameRecording_UploadClipToSteam_Response.
 * Use `create(CGameRecording_UploadClipToSteam_ResponseSchema)` to create a new message.
 */
export const CGameRecording_UploadClipToSteam_ResponseSchema: GenMessage<CGameRecording_UploadClipToSteam_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 37);

/**
 * @generated from message CGameRecording_ZipClip_Request
 */
export type CGameRecording_ZipClip_Request = Message<"CGameRecording_ZipClip_Request"> & {
  /**
   * @generated from field: optional string clip_id = 1;
   */
  clipId: string;
};

/**
 * Describes the message CGameRecording_ZipClip_Request.
 * Use `create(CGameRecording_ZipClip_RequestSchema)` to create a new message.
 */
export const CGameRecording_ZipClip_RequestSchema: GenMessage<CGameRecording_ZipClip_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 38);

/**
 * @generated from message CGameRecording_ZipClip_Response
 */
export type CGameRecording_ZipClip_Response = Message<"CGameRecording_ZipClip_Response"> & {
  /**
   * @generated from field: optional string zip_path = 1;
   */
  zipPath: string;
};

/**
 * Describes the message CGameRecording_ZipClip_Response.
 * Use `create(CGameRecording_ZipClip_ResponseSchema)` to create a new message.
 */
export const CGameRecording_ZipClip_ResponseSchema: GenMessage<CGameRecording_ZipClip_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 39);

/**
 * @generated from message CGameRecording_GetClips_Request
 */
export type CGameRecording_GetClips_Request = Message<"CGameRecording_GetClips_Request"> & {
  /**
   * @generated from field: optional uint64 game_id = 1;
   */
  gameId: bigint;

  /**
   * @generated from field: optional uint32 created_after = 2;
   */
  createdAfter: number;

  /**
   * @generated from field: optional bool include_temporary = 3;
   */
  includeTemporary: boolean;
};

/**
 * Describes the message CGameRecording_GetClips_Request.
 * Use `create(CGameRecording_GetClips_RequestSchema)` to create a new message.
 */
export const CGameRecording_GetClips_RequestSchema: GenMessage<CGameRecording_GetClips_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 40);

/**
 * @generated from message CGameRecording_GetClips_Response
 */
export type CGameRecording_GetClips_Response = Message<"CGameRecording_GetClips_Response"> & {
  /**
   * @generated from field: repeated CGameRecording_ClipSummary clip = 1;
   */
  clip: CGameRecording_ClipSummary[];
};

/**
 * Describes the message CGameRecording_GetClips_Response.
 * Use `create(CGameRecording_GetClips_ResponseSchema)` to create a new message.
 */
export const CGameRecording_GetClips_ResponseSchema: GenMessage<CGameRecording_GetClips_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 41);

/**
 * @generated from message CGameRecording_GetAndTrimPostGameHighlights_Request
 */
export type CGameRecording_GetAndTrimPostGameHighlights_Request = Message<"CGameRecording_GetAndTrimPostGameHighlights_Request"> & {
  /**
   * @generated from field: optional uint64 game_id = 1;
   */
  gameId: bigint;

  /**
   * @generated from field: optional uint32 created_after = 2;
   */
  createdAfter: number;
};

/**
 * Describes the message CGameRecording_GetAndTrimPostGameHighlights_Request.
 * Use `create(CGameRecording_GetAndTrimPostGameHighlights_RequestSchema)` to create a new message.
 */
export const CGameRecording_GetAndTrimPostGameHighlights_RequestSchema: GenMessage<CGameRecording_GetAndTrimPostGameHighlights_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 42);

/**
 * @generated from message CGameRecording_GetAndTrimPostGameHighlights_Response
 */
export type CGameRecording_GetAndTrimPostGameHighlights_Response = Message<"CGameRecording_GetAndTrimPostGameHighlights_Response"> & {
  /**
   * @generated from field: repeated CGameRecordingTimelineEvent events = 1;
   */
  events: CGameRecordingTimelineEvent[];
};

/**
 * Describes the message CGameRecording_GetAndTrimPostGameHighlights_Response.
 * Use `create(CGameRecording_GetAndTrimPostGameHighlights_ResponseSchema)` to create a new message.
 */
export const CGameRecording_GetAndTrimPostGameHighlights_ResponseSchema: GenMessage<CGameRecording_GetAndTrimPostGameHighlights_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 43);

/**
 * @generated from message CGameRecording_UserAddTimelineEntry_Request
 */
export type CGameRecording_UserAddTimelineEntry_Request = Message<"CGameRecording_UserAddTimelineEntry_Request"> & {
  /**
   * @generated from field: optional uint64 game_id = 1;
   */
  gameId: bigint;

  /**
   * @generated from field: optional CTimelineEntry entry = 2;
   */
  entry?: CTimelineEntry;

  /**
   * @generated from field: optional string clip_id = 3;
   */
  clipId: string;
};

/**
 * Describes the message CGameRecording_UserAddTimelineEntry_Request.
 * Use `create(CGameRecording_UserAddTimelineEntry_RequestSchema)` to create a new message.
 */
export const CGameRecording_UserAddTimelineEntry_RequestSchema: GenMessage<CGameRecording_UserAddTimelineEntry_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 44);

/**
 * @generated from message CGameRecording_UserAddTimelineEntry_Response
 */
export type CGameRecording_UserAddTimelineEntry_Response = Message<"CGameRecording_UserAddTimelineEntry_Response"> & {
  /**
   * @generated from field: optional uint64 entry_id = 1;
   */
  entryId: bigint;
};

/**
 * Describes the message CGameRecording_UserAddTimelineEntry_Response.
 * Use `create(CGameRecording_UserAddTimelineEntry_ResponseSchema)` to create a new message.
 */
export const CGameRecording_UserAddTimelineEntry_ResponseSchema: GenMessage<CGameRecording_UserAddTimelineEntry_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 45);

/**
 * @generated from message CGameRecording_UserUpdateTimelineEntry_Request
 */
export type CGameRecording_UserUpdateTimelineEntry_Request = Message<"CGameRecording_UserUpdateTimelineEntry_Request"> & {
  /**
   * @generated from field: optional uint64 game_id = 1;
   */
  gameId: bigint;

  /**
   * @generated from field: optional CTimelineEntry entry = 2;
   */
  entry?: CTimelineEntry;

  /**
   * @generated from field: optional string clip_id = 3;
   */
  clipId: string;
};

/**
 * Describes the message CGameRecording_UserUpdateTimelineEntry_Request.
 * Use `create(CGameRecording_UserUpdateTimelineEntry_RequestSchema)` to create a new message.
 */
export const CGameRecording_UserUpdateTimelineEntry_RequestSchema: GenMessage<CGameRecording_UserUpdateTimelineEntry_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 46);

/**
 * @generated from message CGameRecording_UserUpdateTimelineEntry_Response
 */
export type CGameRecording_UserUpdateTimelineEntry_Response = Message<"CGameRecording_UserUpdateTimelineEntry_Response"> & {
};

/**
 * Describes the message CGameRecording_UserUpdateTimelineEntry_Response.
 * Use `create(CGameRecording_UserUpdateTimelineEntry_ResponseSchema)` to create a new message.
 */
export const CGameRecording_UserUpdateTimelineEntry_ResponseSchema: GenMessage<CGameRecording_UserUpdateTimelineEntry_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 47);

/**
 * @generated from message CGameRecording_UserRemoveTimelineEntry_Request
 */
export type CGameRecording_UserRemoveTimelineEntry_Request = Message<"CGameRecording_UserRemoveTimelineEntry_Request"> & {
  /**
   * @generated from field: optional uint64 game_id = 1;
   */
  gameId: bigint;

  /**
   * @generated from field: optional string timeline_id = 2;
   */
  timelineId: string;

  /**
   * @generated from field: optional uint64 entry_id = 3;
   */
  entryId: bigint;

  /**
   * @generated from field: optional string clip_id = 4;
   */
  clipId: string;
};

/**
 * Describes the message CGameRecording_UserRemoveTimelineEntry_Request.
 * Use `create(CGameRecording_UserRemoveTimelineEntry_RequestSchema)` to create a new message.
 */
export const CGameRecording_UserRemoveTimelineEntry_RequestSchema: GenMessage<CGameRecording_UserRemoveTimelineEntry_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 48);

/**
 * @generated from message CGameRecording_UserRemoveTimelineEntry_Response
 */
export type CGameRecording_UserRemoveTimelineEntry_Response = Message<"CGameRecording_UserRemoveTimelineEntry_Response"> & {
};

/**
 * Describes the message CGameRecording_UserRemoveTimelineEntry_Response.
 * Use `create(CGameRecording_UserRemoveTimelineEntry_ResponseSchema)` to create a new message.
 */
export const CGameRecording_UserRemoveTimelineEntry_ResponseSchema: GenMessage<CGameRecording_UserRemoveTimelineEntry_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 49);

/**
 * @generated from message CGameRecording_ManuallyDeleteRecordingsForApps_Request
 */
export type CGameRecording_ManuallyDeleteRecordingsForApps_Request = Message<"CGameRecording_ManuallyDeleteRecordingsForApps_Request"> & {
  /**
   * @generated from field: repeated uint64 game_ids = 1;
   */
  gameIds: bigint[];
};

/**
 * Describes the message CGameRecording_ManuallyDeleteRecordingsForApps_Request.
 * Use `create(CGameRecording_ManuallyDeleteRecordingsForApps_RequestSchema)` to create a new message.
 */
export const CGameRecording_ManuallyDeleteRecordingsForApps_RequestSchema: GenMessage<CGameRecording_ManuallyDeleteRecordingsForApps_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 50);

/**
 * @generated from message CGameRecording_ManuallyDeleteRecordingsForApps_Response
 */
export type CGameRecording_ManuallyDeleteRecordingsForApps_Response = Message<"CGameRecording_ManuallyDeleteRecordingsForApps_Response"> & {
};

/**
 * Describes the message CGameRecording_ManuallyDeleteRecordingsForApps_Response.
 * Use `create(CGameRecording_ManuallyDeleteRecordingsForApps_ResponseSchema)` to create a new message.
 */
export const CGameRecording_ManuallyDeleteRecordingsForApps_ResponseSchema: GenMessage<CGameRecording_ManuallyDeleteRecordingsForApps_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 51);

/**
 * @generated from message CGameRecording_GetTotalDiskSpaceUsage_Request
 */
export type CGameRecording_GetTotalDiskSpaceUsage_Request = Message<"CGameRecording_GetTotalDiskSpaceUsage_Request"> & {
  /**
   * @generated from field: optional string folder_path = 1;
   */
  folderPath: string;

  /**
   * @generated from field: optional EDiskSpaceType type = 2 [default = k_eDiskSpaceType_Recording];
   */
  type: EDiskSpaceType;
};

/**
 * Describes the message CGameRecording_GetTotalDiskSpaceUsage_Request.
 * Use `create(CGameRecording_GetTotalDiskSpaceUsage_RequestSchema)` to create a new message.
 */
export const CGameRecording_GetTotalDiskSpaceUsage_RequestSchema: GenMessage<CGameRecording_GetTotalDiskSpaceUsage_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 52);

/**
 * @generated from message CGameRecording_GetTotalDiskSpaceUsage_Response
 */
export type CGameRecording_GetTotalDiskSpaceUsage_Response = Message<"CGameRecording_GetTotalDiskSpaceUsage_Response"> & {
  /**
   * @generated from field: optional uint64 size = 1;
   */
  size: bigint;
};

/**
 * Describes the message CGameRecording_GetTotalDiskSpaceUsage_Response.
 * Use `create(CGameRecording_GetTotalDiskSpaceUsage_ResponseSchema)` to create a new message.
 */
export const CGameRecording_GetTotalDiskSpaceUsage_ResponseSchema: GenMessage<CGameRecording_GetTotalDiskSpaceUsage_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 53);

/**
 * @generated from message CGameRecording_GetThumbnails_Request
 */
export type CGameRecording_GetThumbnails_Request = Message<"CGameRecording_GetThumbnails_Request"> & {
  /**
   * @generated from field: optional string recording_id = 1;
   */
  recordingId: string;

  /**
   * @generated from field: optional string clip_id = 3;
   */
  clipId: string;

  /**
   * @generated from field: optional string timeline_id = 7;
   */
  timelineId: string;

  /**
   * @generated from field: repeated int64 start_offset_us = 4;
   */
  startOffsetUs: bigint[];

  /**
   * @generated from field: optional uint32 major_axis = 5 [default = 512];
   */
  majorAxis: number;

  /**
   * @generated from field: optional EThumbnailTimePrecision time_precision = 6 [default = k_ePrecise];
   */
  timePrecision: EThumbnailTimePrecision;

  /**
   * @generated from field: optional EThumbnailFormat format = 8 [default = k_eJPEG];
   */
  format: EThumbnailFormat;
};

/**
 * Describes the message CGameRecording_GetThumbnails_Request.
 * Use `create(CGameRecording_GetThumbnails_RequestSchema)` to create a new message.
 */
export const CGameRecording_GetThumbnails_RequestSchema: GenMessage<CGameRecording_GetThumbnails_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 54);

/**
 * @generated from message CGameRecording_GetThumbnails_Response
 */
export type CGameRecording_GetThumbnails_Response = Message<"CGameRecording_GetThumbnails_Response"> & {
  /**
   * @generated from field: repeated CGameRecording_GetThumbnails_Response.Thumbnail thumbnails = 1;
   */
  thumbnails: CGameRecording_GetThumbnails_Response_Thumbnail[];
};

/**
 * Describes the message CGameRecording_GetThumbnails_Response.
 * Use `create(CGameRecording_GetThumbnails_ResponseSchema)` to create a new message.
 */
export const CGameRecording_GetThumbnails_ResponseSchema: GenMessage<CGameRecording_GetThumbnails_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 55);

/**
 * @generated from message CGameRecording_GetThumbnails_Response.Thumbnail
 */
export type CGameRecording_GetThumbnails_Response_Thumbnail = Message<"CGameRecording_GetThumbnails_Response.Thumbnail"> & {
  /**
   * @generated from field: optional bytes image_data = 1;
   */
  imageData: Uint8Array;

  /**
   * @generated from field: optional uint32 width = 2;
   */
  width: number;

  /**
   * @generated from field: optional uint32 height = 3;
   */
  height: number;
};

/**
 * Describes the message CGameRecording_GetThumbnails_Response.Thumbnail.
 * Use `create(CGameRecording_GetThumbnails_Response_ThumbnailSchema)` to create a new message.
 */
export const CGameRecording_GetThumbnails_Response_ThumbnailSchema: GenMessage<CGameRecording_GetThumbnails_Response_Thumbnail> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 55, 0);

/**
 * @generated from message CGameRecording_StartRecording_Request
 */
export type CGameRecording_StartRecording_Request = Message<"CGameRecording_StartRecording_Request"> & {
  /**
   * @generated from field: optional uint64 game_id = 1;
   */
  gameId: bigint;
};

/**
 * Describes the message CGameRecording_StartRecording_Request.
 * Use `create(CGameRecording_StartRecording_RequestSchema)` to create a new message.
 */
export const CGameRecording_StartRecording_RequestSchema: GenMessage<CGameRecording_StartRecording_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 56);

/**
 * @generated from message CGameRecording_StartRecording_Response
 */
export type CGameRecording_StartRecording_Response = Message<"CGameRecording_StartRecording_Response"> & {
};

/**
 * Describes the message CGameRecording_StartRecording_Response.
 * Use `create(CGameRecording_StartRecording_ResponseSchema)` to create a new message.
 */
export const CGameRecording_StartRecording_ResponseSchema: GenMessage<CGameRecording_StartRecording_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 57);

/**
 * @generated from message CGameRecording_StopRecording_Request
 */
export type CGameRecording_StopRecording_Request = Message<"CGameRecording_StopRecording_Request"> & {
  /**
   * @generated from field: optional uint64 game_id = 1;
   */
  gameId: bigint;
};

/**
 * Describes the message CGameRecording_StopRecording_Request.
 * Use `create(CGameRecording_StopRecording_RequestSchema)` to create a new message.
 */
export const CGameRecording_StopRecording_RequestSchema: GenMessage<CGameRecording_StopRecording_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 58);

/**
 * @generated from message CGameRecording_StopRecording_Response
 */
export type CGameRecording_StopRecording_Response = Message<"CGameRecording_StopRecording_Response"> & {
  /**
   * @generated from field: optional CGameRecording_ClipSummary summary = 1;
   */
  summary?: CGameRecording_ClipSummary;
};

/**
 * Describes the message CGameRecording_StopRecording_Response.
 * Use `create(CGameRecording_StopRecording_ResponseSchema)` to create a new message.
 */
export const CGameRecording_StopRecording_ResponseSchema: GenMessage<CGameRecording_StopRecording_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 59);

/**
 * @generated from message CGameRecording_GetRecordingSize_Request
 */
export type CGameRecording_GetRecordingSize_Request = Message<"CGameRecording_GetRecordingSize_Request"> & {
  /**
   * @generated from field: optional uint64 game_id = 1;
   */
  gameId: bigint;
};

/**
 * Describes the message CGameRecording_GetRecordingSize_Request.
 * Use `create(CGameRecording_GetRecordingSize_RequestSchema)` to create a new message.
 */
export const CGameRecording_GetRecordingSize_RequestSchema: GenMessage<CGameRecording_GetRecordingSize_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 60);

/**
 * @generated from message CGameRecording_GetRecordingSize_Response
 */
export type CGameRecording_GetRecordingSize_Response = Message<"CGameRecording_GetRecordingSize_Response"> & {
  /**
   * @generated from field: optional uint64 file_size = 1;
   */
  fileSize: bigint;
};

/**
 * Describes the message CGameRecording_GetRecordingSize_Response.
 * Use `create(CGameRecording_GetRecordingSize_ResponseSchema)` to create a new message.
 */
export const CGameRecording_GetRecordingSize_ResponseSchema: GenMessage<CGameRecording_GetRecordingSize_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 61);

/**
 * @generated from message CGameRecording_CleanupBackgroundRecordings_Request
 */
export type CGameRecording_CleanupBackgroundRecordings_Request = Message<"CGameRecording_CleanupBackgroundRecordings_Request"> & {
};

/**
 * Describes the message CGameRecording_CleanupBackgroundRecordings_Request.
 * Use `create(CGameRecording_CleanupBackgroundRecordings_RequestSchema)` to create a new message.
 */
export const CGameRecording_CleanupBackgroundRecordings_RequestSchema: GenMessage<CGameRecording_CleanupBackgroundRecordings_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 62);

/**
 * @generated from message CGameRecording_CleanupBackgroundRecordings_Response
 */
export type CGameRecording_CleanupBackgroundRecordings_Response = Message<"CGameRecording_CleanupBackgroundRecordings_Response"> & {
};

/**
 * Describes the message CGameRecording_CleanupBackgroundRecordings_Response.
 * Use `create(CGameRecording_CleanupBackgroundRecordings_ResponseSchema)` to create a new message.
 */
export const CGameRecording_CleanupBackgroundRecordings_ResponseSchema: GenMessage<CGameRecording_CleanupBackgroundRecordings_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 63);

/**
 * @generated from message CGameRecording_GetPlatformCapabilities_Request
 */
export type CGameRecording_GetPlatformCapabilities_Request = Message<"CGameRecording_GetPlatformCapabilities_Request"> & {
};

/**
 * Describes the message CGameRecording_GetPlatformCapabilities_Request.
 * Use `create(CGameRecording_GetPlatformCapabilities_RequestSchema)` to create a new message.
 */
export const CGameRecording_GetPlatformCapabilities_RequestSchema: GenMessage<CGameRecording_GetPlatformCapabilities_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 64);

/**
 * @generated from message CGameRecording_GetPlatformCapabilities_Response
 */
export type CGameRecording_GetPlatformCapabilities_Response = Message<"CGameRecording_GetPlatformCapabilities_Response"> & {
  /**
   * @generated from field: optional bool per_process_audio_capture = 1;
   */
  perProcessAudioCapture: boolean;
};

/**
 * Describes the message CGameRecording_GetPlatformCapabilities_Response.
 * Use `create(CGameRecording_GetPlatformCapabilities_ResponseSchema)` to create a new message.
 */
export const CGameRecording_GetPlatformCapabilities_ResponseSchema: GenMessage<CGameRecording_GetPlatformCapabilities_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 65);

/**
 * @generated from message CGameRecording_ClipCreated_Notification
 */
export type CGameRecording_ClipCreated_Notification = Message<"CGameRecording_ClipCreated_Notification"> & {
  /**
   * @generated from field: optional CGameRecording_ClipSummary summary = 1;
   */
  summary?: CGameRecording_ClipSummary;
};

/**
 * Describes the message CGameRecording_ClipCreated_Notification.
 * Use `create(CGameRecording_ClipCreated_NotificationSchema)` to create a new message.
 */
export const CGameRecording_ClipCreated_NotificationSchema: GenMessage<CGameRecording_ClipCreated_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 66);

/**
 * @generated from message CGameRecording_ClipDeleted_Notification
 */
export type CGameRecording_ClipDeleted_Notification = Message<"CGameRecording_ClipDeleted_Notification"> & {
  /**
   * @generated from field: optional string clip_id = 1;
   */
  clipId: string;

  /**
   * @generated from field: optional uint64 game_id = 2;
   */
  gameId: bigint;
};

/**
 * Describes the message CGameRecording_ClipDeleted_Notification.
 * Use `create(CGameRecording_ClipDeleted_NotificationSchema)` to create a new message.
 */
export const CGameRecording_ClipDeleted_NotificationSchema: GenMessage<CGameRecording_ClipDeleted_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 67);

/**
 * @generated from message CGameRecording_ExportProgress_Notification
 */
export type CGameRecording_ExportProgress_Notification = Message<"CGameRecording_ExportProgress_Notification"> & {
  /**
   * @generated from field: optional float progress = 1;
   */
  progress: number;

  /**
   * @generated from field: optional string clip_id = 2;
   */
  clipId: string;

  /**
   * @generated from field: optional int32 eresult = 3;
   */
  eresult: number;
};

/**
 * Describes the message CGameRecording_ExportProgress_Notification.
 * Use `create(CGameRecording_ExportProgress_NotificationSchema)` to create a new message.
 */
export const CGameRecording_ExportProgress_NotificationSchema: GenMessage<CGameRecording_ExportProgress_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 68);

/**
 * @generated from message CGameRecording_PerGameSettings
 */
export type CGameRecording_PerGameSettings = Message<"CGameRecording_PerGameSettings"> & {
  /**
   * @generated from field: optional fixed64 gameid = 1;
   */
  gameid: bigint;

  /**
   * @generated from field: optional bool enabled = 2;
   */
  enabled: boolean;

  /**
   * @generated from field: optional uint32 minutes = 3;
   */
  minutes: number;

  /**
   * @generated from field: optional string bitrate = 4;
   */
  bitrate: string;

  /**
   * @generated from field: optional bool infinite = 5;
   */
  infinite: boolean;
};

/**
 * Describes the message CGameRecording_PerGameSettings.
 * Use `create(CGameRecording_PerGameSettingsSchema)` to create a new message.
 */
export const CGameRecording_PerGameSettingsSchema: GenMessage<CGameRecording_PerGameSettings> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 69);

/**
 * @generated from message CGameRecording_GetPerGameSettings_Request
 */
export type CGameRecording_GetPerGameSettings_Request = Message<"CGameRecording_GetPerGameSettings_Request"> & {
};

/**
 * Describes the message CGameRecording_GetPerGameSettings_Request.
 * Use `create(CGameRecording_GetPerGameSettings_RequestSchema)` to create a new message.
 */
export const CGameRecording_GetPerGameSettings_RequestSchema: GenMessage<CGameRecording_GetPerGameSettings_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 70);

/**
 * @generated from message CGameRecording_GetPerGameSettings_Response
 */
export type CGameRecording_GetPerGameSettings_Response = Message<"CGameRecording_GetPerGameSettings_Response"> & {
  /**
   * @generated from field: repeated CGameRecording_PerGameSettings settings = 1;
   */
  settings: CGameRecording_PerGameSettings[];
};

/**
 * Describes the message CGameRecording_GetPerGameSettings_Response.
 * Use `create(CGameRecording_GetPerGameSettings_ResponseSchema)` to create a new message.
 */
export const CGameRecording_GetPerGameSettings_ResponseSchema: GenMessage<CGameRecording_GetPerGameSettings_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 71);

/**
 * @generated from message CGameRecording_SetPerGameSettings_Request
 */
export type CGameRecording_SetPerGameSettings_Request = Message<"CGameRecording_SetPerGameSettings_Request"> & {
  /**
   * @generated from field: optional CGameRecording_PerGameSettings game_settings = 1;
   */
  gameSettings?: CGameRecording_PerGameSettings;
};

/**
 * Describes the message CGameRecording_SetPerGameSettings_Request.
 * Use `create(CGameRecording_SetPerGameSettings_RequestSchema)` to create a new message.
 */
export const CGameRecording_SetPerGameSettings_RequestSchema: GenMessage<CGameRecording_SetPerGameSettings_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 72);

/**
 * @generated from message CGameRecording_SetPerGameSettings_Response
 */
export type CGameRecording_SetPerGameSettings_Response = Message<"CGameRecording_SetPerGameSettings_Response"> & {
};

/**
 * Describes the message CGameRecording_SetPerGameSettings_Response.
 * Use `create(CGameRecording_SetPerGameSettings_ResponseSchema)` to create a new message.
 */
export const CGameRecording_SetPerGameSettings_ResponseSchema: GenMessage<CGameRecording_SetPerGameSettings_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 73);

/**
 * @generated from message CGameRecording_DeletePerGameSettings_Request
 */
export type CGameRecording_DeletePerGameSettings_Request = Message<"CGameRecording_DeletePerGameSettings_Request"> & {
  /**
   * @generated from field: optional fixed64 gameid = 1;
   */
  gameid: bigint;
};

/**
 * Describes the message CGameRecording_DeletePerGameSettings_Request.
 * Use `create(CGameRecording_DeletePerGameSettings_RequestSchema)` to create a new message.
 */
export const CGameRecording_DeletePerGameSettings_RequestSchema: GenMessage<CGameRecording_DeletePerGameSettings_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 74);

/**
 * @generated from message CGameRecording_DeletePerGameSettings_Response
 */
export type CGameRecording_DeletePerGameSettings_Response = Message<"CGameRecording_DeletePerGameSettings_Response"> & {
};

/**
 * Describes the message CGameRecording_DeletePerGameSettings_Response.
 * Use `create(CGameRecording_DeletePerGameSettings_ResponseSchema)` to create a new message.
 */
export const CGameRecording_DeletePerGameSettings_ResponseSchema: GenMessage<CGameRecording_DeletePerGameSettings_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 75);

/**
 * @generated from message CGameRecording_UploadProgress_Notification
 */
export type CGameRecording_UploadProgress_Notification = Message<"CGameRecording_UploadProgress_Notification"> & {
  /**
   * @generated from field: optional float progress = 1;
   */
  progress: number;

  /**
   * @generated from field: optional string clip_id = 2;
   */
  clipId: string;

  /**
   * @generated from field: optional int32 eresult = 3;
   */
  eresult: number;
};

/**
 * Describes the message CGameRecording_UploadProgress_Notification.
 * Use `create(CGameRecording_UploadProgress_NotificationSchema)` to create a new message.
 */
export const CGameRecording_UploadProgress_NotificationSchema: GenMessage<CGameRecording_UploadProgress_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 76);

/**
 * @generated from message CGameRecording_SwitchBackgroundRecordingGame_Request
 */
export type CGameRecording_SwitchBackgroundRecordingGame_Request = Message<"CGameRecording_SwitchBackgroundRecordingGame_Request"> & {
  /**
   * @generated from field: optional uint64 game_id = 1;
   */
  gameId: bigint;
};

/**
 * Describes the message CGameRecording_SwitchBackgroundRecordingGame_Request.
 * Use `create(CGameRecording_SwitchBackgroundRecordingGame_RequestSchema)` to create a new message.
 */
export const CGameRecording_SwitchBackgroundRecordingGame_RequestSchema: GenMessage<CGameRecording_SwitchBackgroundRecordingGame_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 77);

/**
 * @generated from message CGameRecording_SwitchBackgroundRecordingGame_Response
 */
export type CGameRecording_SwitchBackgroundRecordingGame_Response = Message<"CGameRecording_SwitchBackgroundRecordingGame_Response"> & {
};

/**
 * Describes the message CGameRecording_SwitchBackgroundRecordingGame_Response.
 * Use `create(CGameRecording_SwitchBackgroundRecordingGame_ResponseSchema)` to create a new message.
 */
export const CGameRecording_SwitchBackgroundRecordingGame_ResponseSchema: GenMessage<CGameRecording_SwitchBackgroundRecordingGame_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamerecording, 78);

/**
 * @generated from enum ETimelineEntryType
 */
export enum ETimelineEntryType {
  /**
   * @generated from enum value: k_ETimelineEntryType_Invalid = 0;
   */
  k_ETimelineEntryType_Invalid = 0,

  /**
   * @generated from enum value: k_ETimelineEntryType_GameMode = 1;
   */
  k_ETimelineEntryType_GameMode = 1,

  /**
   * @generated from enum value: k_ETimelineEntryType_Event = 2;
   */
  k_ETimelineEntryType_Event = 2,

  /**
   * @generated from enum value: k_ETimelineEntryType_StateDescription = 3;
   */
  k_ETimelineEntryType_StateDescription = 3,

  /**
   * @generated from enum value: k_ETimelineEntryType_Achievement = 4;
   */
  k_ETimelineEntryType_Achievement = 4,

  /**
   * @generated from enum value: k_ETimelineEntryType_UserMarker = 5;
   */
  k_ETimelineEntryType_UserMarker = 5,

  /**
   * @generated from enum value: k_ETimelineEntryType_Screenshot = 6;
   */
  k_ETimelineEntryType_Screenshot = 6,

  /**
   * @generated from enum value: k_ETimelineEntryType_Error = 7;
   */
  k_ETimelineEntryType_Error = 7,

  /**
   * @generated from enum value: k_ETimelineEntryType_Tag = 8;
   */
  k_ETimelineEntryType_Tag = 8,

  /**
   * @generated from enum value: k_ETimelineEntryType_GamePhase = 9;
   */
  k_ETimelineEntryType_GamePhase = 9,
}

/**
 * Describes the enum ETimelineEntryType.
 */
export const ETimelineEntryTypeSchema: GenEnum<ETimelineEntryType> = /*@__PURE__*/
  enumDesc(file_webuimessages_gamerecording, 0);

/**
 * @generated from enum EPhaseResultType
 */
export enum EPhaseResultType {
  /**
   * @generated from enum value: k_EPhaseResultType_Automatic = 1;
   */
  k_EPhaseResultType_Automatic = 1,

  /**
   * @generated from enum value: k_EPhaseResultType_Blank = 2;
   */
  k_EPhaseResultType_Blank = 2,

  /**
   * @generated from enum value: k_EPhaseResultType_API = 3;
   */
  k_EPhaseResultType_API = 3,
}

/**
 * Describes the enum EPhaseResultType.
 */
export const EPhaseResultTypeSchema: GenEnum<EPhaseResultType> = /*@__PURE__*/
  enumDesc(file_webuimessages_gamerecording, 1);

/**
 * @generated from enum ETimelineChangeNotificationType
 */
export enum ETimelineChangeNotificationType {
  /**
   * @generated from enum value: k_ETimelineChangeNotificationType_Started = 1;
   */
  k_ETimelineChangeNotificationType_Started = 1,

  /**
   * @generated from enum value: k_ETimelineChangeNotificationType_Stopped = 2;
   */
  k_ETimelineChangeNotificationType_Stopped = 2,

  /**
   * @generated from enum value: k_ETimelineChangeNotificationType_Deleted = 3;
   */
  k_ETimelineChangeNotificationType_Deleted = 3,

  /**
   * @generated from enum value: k_ETimelineChangeNotificationType_RecordingStarted = 4;
   */
  k_ETimelineChangeNotificationType_RecordingStarted = 4,

  /**
   * @generated from enum value: k_ETimelineChangeNotificationType_RecordingStopped = 5;
   */
  k_ETimelineChangeNotificationType_RecordingStopped = 5,

  /**
   * @generated from enum value: k_ETimelineChangeNotificationType_RecordingUpdated = 6;
   */
  k_ETimelineChangeNotificationType_RecordingUpdated = 6,
}

/**
 * Describes the enum ETimelineChangeNotificationType.
 */
export const ETimelineChangeNotificationTypeSchema: GenEnum<ETimelineChangeNotificationType> = /*@__PURE__*/
  enumDesc(file_webuimessages_gamerecording, 2);

/**
 * @generated from enum ERecordingSessionChangeNotificationType
 */
export enum ERecordingSessionChangeNotificationType {
  /**
   * @generated from enum value: k_ERecordingSessionChangeNotificationType_Started = 1;
   */
  k_ERecordingSessionChangeNotificationType_Started = 1,

  /**
   * @generated from enum value: k_ERecordingSessionChangeNotificationType_Stopped = 2;
   */
  k_ERecordingSessionChangeNotificationType_Stopped = 2,

  /**
   * @generated from enum value: k_ERecordingSessionChangeNotificationType_Deleted = 3;
   */
  k_ERecordingSessionChangeNotificationType_Deleted = 3,

  /**
   * @generated from enum value: k_ERecordingSessionChangeNotificationType_Updated = 4;
   */
  k_ERecordingSessionChangeNotificationType_Updated = 4,
}

/**
 * Describes the enum ERecordingSessionChangeNotificationType.
 */
export const ERecordingSessionChangeNotificationTypeSchema: GenEnum<ERecordingSessionChangeNotificationType> = /*@__PURE__*/
  enumDesc(file_webuimessages_gamerecording, 3);

/**
 * @generated from enum EDiskSpaceType
 */
export enum EDiskSpaceType {
  /**
   * @generated from enum value: k_eDiskSpaceType_Recording = 0;
   */
  k_eDiskSpaceType_Recording = 0,

  /**
   * @generated from enum value: k_eDiskSpaceType_Clip = 1;
   */
  k_eDiskSpaceType_Clip = 1,
}

/**
 * Describes the enum EDiskSpaceType.
 */
export const EDiskSpaceTypeSchema: GenEnum<EDiskSpaceType> = /*@__PURE__*/
  enumDesc(file_webuimessages_gamerecording, 4);

/**
 * @generated from enum EThumbnailTimePrecision
 */
export enum EThumbnailTimePrecision {
  /**
   * @generated from enum value: k_ePrecise = 0;
   */
  k_ePrecise = 0,

  /**
   * @generated from enum value: k_eLoose = 1;
   */
  k_eLoose = 1,
}

/**
 * Describes the enum EThumbnailTimePrecision.
 */
export const EThumbnailTimePrecisionSchema: GenEnum<EThumbnailTimePrecision> = /*@__PURE__*/
  enumDesc(file_webuimessages_gamerecording, 5);

/**
 * @generated from enum EThumbnailFormat
 */
export enum EThumbnailFormat {
  /**
   * @generated from enum value: k_eJPEG = 1;
   */
  k_eJPEG = 1,

  /**
   * @generated from enum value: k_eRGB = 2;
   */
  k_eRGB = 2,
}

/**
 * Describes the enum EThumbnailFormat.
 */
export const EThumbnailFormatSchema: GenEnum<EThumbnailFormat> = /*@__PURE__*/
  enumDesc(file_webuimessages_gamerecording, 6);

/**
 * @generated from service GameRecording
 */
export const GameRecording: GenService<{
  /**
   * @generated from rpc GameRecording.GetAppsWithBackgroundVideo
   */
  getAppsWithBackgroundVideo: {
    methodKind: "unary";
    input: typeof CGameRecording_GetAppsWithBackgroundVideo_RequestSchema;
    output: typeof CGameRecording_GetAppsWithBackgroundVideo_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.GetTimelinesForApp
   */
  getTimelinesForApp: {
    methodKind: "unary";
    input: typeof CGameRecording_GetTimelinesForApp_RequestSchema;
    output: typeof CGameRecording_GetTimelinesForApp_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.GetTimelinesForClip
   */
  getTimelinesForClip: {
    methodKind: "unary";
    input: typeof CGameRecording_GetTimelinesForClip_RequestSchema;
    output: typeof CGameRecording_GetTimelinesForClip_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.QueryPhases
   */
  queryPhases: {
    methodKind: "unary";
    input: typeof CGameRecording_QueryPhases_RequestSchema;
    output: typeof CGameRecording_QueryPhases_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.GetTags
   */
  getTags: {
    methodKind: "unary";
    input: typeof CGameRecording_GetTags_RequestSchema;
    output: typeof CGameRecording_GetTags_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.GetEnoughDiskSpace
   */
  getEnoughDiskSpace: {
    methodKind: "unary";
    input: typeof CGameRecording_GetEnoughDiskSpace_RequestSchema;
    output: typeof CGameRecording_GetEnoughDiskSpace_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.GetAvailableDiskSpace
   */
  getAvailableDiskSpace: {
    methodKind: "unary";
    input: typeof CGameRecording_GetAvailableDiskSpace_RequestSchema;
    output: typeof CGameRecording_GetAvailableDiskSpace_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.SaveClip
   */
  saveClip: {
    methodKind: "unary";
    input: typeof CGameRecording_SaveClip_RequestSchema;
    output: typeof CGameRecording_SaveClip_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.DeleteClip
   */
  deleteClip: {
    methodKind: "unary";
    input: typeof CGameRecording_DeleteClip_RequestSchema;
    output: typeof CGameRecording_DeleteClip_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.GetClips
   */
  getClips: {
    methodKind: "unary";
    input: typeof CGameRecording_GetClips_RequestSchema;
    output: typeof CGameRecording_GetClips_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.UploadClipToSteam
   */
  uploadClipToSteam: {
    methodKind: "unary";
    input: typeof CGameRecording_UploadClipToSteam_RequestSchema;
    output: typeof CGameRecording_UploadClipToSteam_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.ExportClip
   */
  exportClip: {
    methodKind: "unary";
    input: typeof CGameRecording_ExportClip_RequestSchema;
    output: typeof CGameRecording_ExportClip_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.ExportClipPreview
   */
  exportClipPreview: {
    methodKind: "unary";
    input: typeof CGameRecording_ExportClipPreview_RequestSchema;
    output: typeof CGameRecording_ExportClipPreview_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.TakeScreenshot
   */
  takeScreenshot: {
    methodKind: "unary";
    input: typeof CGameRecording_TakeScreenshot_RequestSchema;
    output: typeof CGameRecording_TakeScreenshot_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.ZipClip
   */
  zipClip: {
    methodKind: "unary";
    input: typeof CGameRecording_ZipClip_RequestSchema;
    output: typeof CGameRecording_ZipClip_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.StartRecording
   */
  startRecording: {
    methodKind: "unary";
    input: typeof CGameRecording_StartRecording_RequestSchema;
    output: typeof CGameRecording_StartRecording_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.StopRecording
   */
  stopRecording: {
    methodKind: "unary";
    input: typeof CGameRecording_StopRecording_RequestSchema;
    output: typeof CGameRecording_StopRecording_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.GetBackgroundRecordingFileSize
   */
  getBackgroundRecordingFileSize: {
    methodKind: "unary";
    input: typeof CGameRecording_GetRecordingSize_RequestSchema;
    output: typeof CGameRecording_GetRecordingSize_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.CleanupBackgroundRecordings
   */
  cleanupBackgroundRecordings: {
    methodKind: "unary";
    input: typeof CGameRecording_CleanupBackgroundRecordings_RequestSchema;
    output: typeof CGameRecording_CleanupBackgroundRecordings_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.GetAndTrimPostGameHighlights
   */
  getAndTrimPostGameHighlights: {
    methodKind: "unary";
    input: typeof CGameRecording_GetAndTrimPostGameHighlights_RequestSchema;
    output: typeof CGameRecording_GetAndTrimPostGameHighlights_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.GetThumbnails
   */
  getThumbnails: {
    methodKind: "unary";
    input: typeof CGameRecording_GetThumbnails_RequestSchema;
    output: typeof CGameRecording_GetThumbnails_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.GetPlatformCapabilities
   */
  getPlatformCapabilities: {
    methodKind: "unary";
    input: typeof CGameRecording_GetPlatformCapabilities_RequestSchema;
    output: typeof CGameRecording_GetPlatformCapabilities_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.NotifyTimelineChanged
   */
  notifyTimelineChanged: {
    methodKind: "unary";
    input: typeof CGameRecording_TimelineChanged_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.NotifyRecordingSessionChanged
   */
  notifyRecordingSessionChanged: {
    methodKind: "unary";
    input: typeof CGameRecording_RecordingSessionChanged_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.NotifyTimelineEntryChanged
   */
  notifyTimelineEntryChanged: {
    methodKind: "unary";
    input: typeof CGameRecording_TimelineEntryChanged_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.NotifyTimelineEntryRemoved
   */
  notifyTimelineEntryRemoved: {
    methodKind: "unary";
    input: typeof CGameRecording_TimelineEntryRemoved_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.NotifyClipCreated
   */
  notifyClipCreated: {
    methodKind: "unary";
    input: typeof CGameRecording_ClipCreated_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.NotifyClipDeleted
   */
  notifyClipDeleted: {
    methodKind: "unary";
    input: typeof CGameRecording_ClipDeleted_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.NotifyExportProgress
   */
  notifyExportProgress: {
    methodKind: "unary";
    input: typeof CGameRecording_ExportProgress_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.NotifyUploadProgress
   */
  notifyUploadProgress: {
    methodKind: "unary";
    input: typeof CGameRecording_UploadProgress_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.NotifyLowDiskSpace
   */
  notifyLowDiskSpace: {
    methodKind: "unary";
    input: typeof CGameRecording_LowDiskSpace_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.NotifyPostGameHighlightsChanged
   */
  notifyPostGameHighlightsChanged: {
    methodKind: "unary";
    input: typeof CGameRecording_PostGameHighlightsChanged_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.NotifyOpenOverlayToGamePhase
   */
  notifyOpenOverlayToGamePhase: {
    methodKind: "unary";
    input: typeof CGameRecording_OpenOverlayToGamePhase_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.NotifyOpenOverlayToTimelineEvent
   */
  notifyOpenOverlayToTimelineEvent: {
    methodKind: "unary";
    input: typeof CGameRecording_OpenOverlayToTimelineEvent_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.NotifyPhaseListChanged
   */
  notifyPhaseListChanged: {
    methodKind: "unary";
    input: typeof CGameRecording_PhaseListChanged_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.GetPerGameSettings
   */
  getPerGameSettings: {
    methodKind: "unary";
    input: typeof CGameRecording_GetPerGameSettings_RequestSchema;
    output: typeof CGameRecording_GetPerGameSettings_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.SetPerGameSettings
   */
  setPerGameSettings: {
    methodKind: "unary";
    input: typeof CGameRecording_SetPerGameSettings_RequestSchema;
    output: typeof CGameRecording_SetPerGameSettings_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.DeletePerGameSettings
   */
  deletePerGameSettings: {
    methodKind: "unary";
    input: typeof CGameRecording_DeletePerGameSettings_RequestSchema;
    output: typeof CGameRecording_DeletePerGameSettings_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.UserAddTimelineEntry
   */
  userAddTimelineEntry: {
    methodKind: "unary";
    input: typeof CGameRecording_UserAddTimelineEntry_RequestSchema;
    output: typeof CGameRecording_UserAddTimelineEntry_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.UserUpdateTimelineEntry
   */
  userUpdateTimelineEntry: {
    methodKind: "unary";
    input: typeof CGameRecording_UserUpdateTimelineEntry_RequestSchema;
    output: typeof CGameRecording_UserUpdateTimelineEntry_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.UserRemoveTimelineEntry
   */
  userRemoveTimelineEntry: {
    methodKind: "unary";
    input: typeof CGameRecording_UserRemoveTimelineEntry_RequestSchema;
    output: typeof CGameRecording_UserRemoveTimelineEntry_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.ManuallyDeleteRecordingsForApps
   */
  manuallyDeleteRecordingsForApps: {
    methodKind: "unary";
    input: typeof CGameRecording_ManuallyDeleteRecordingsForApps_RequestSchema;
    output: typeof CGameRecording_ManuallyDeleteRecordingsForApps_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.GetTotalDiskSpaceUsage
   */
  getTotalDiskSpaceUsage: {
    methodKind: "unary";
    input: typeof CGameRecording_GetTotalDiskSpaceUsage_RequestSchema;
    output: typeof CGameRecording_GetTotalDiskSpaceUsage_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecording.SwitchBackgroundRecordingGame
   */
  switchBackgroundRecordingGame: {
    methodKind: "unary";
    input: typeof CGameRecording_SwitchBackgroundRecordingGame_RequestSchema;
    output: typeof CGameRecording_SwitchBackgroundRecordingGame_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_webuimessages_gamerecording, 0);

