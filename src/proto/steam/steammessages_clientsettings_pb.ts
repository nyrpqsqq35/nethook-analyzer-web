// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_clientsettings.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenExtension, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, extDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { FieldOptions } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_descriptor } from "@bufbuild/protobuf/wkt";
import type { EBroadcastEncoderSetting, EBroadcastPermission, EExportCodec, EHDRVisualization } from "./enums_pb";
import { file_enums } from "./enums_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_clientsettings.proto.
 */
export const file_steammessages_clientsettings: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_descriptor, file_enums]);

/**
 * @generated from message CMsgHotkey
 */
export type CMsgHotkey = Message<"CMsgHotkey"> & {
  /**
   * @generated from field: optional uint32 key_code = 1;
   */
  keyCode: number;

  /**
   * @generated from field: optional bool alt_key = 2;
   */
  altKey: boolean;

  /**
   * @generated from field: optional bool shift_key = 3;
   */
  shiftKey: boolean;

  /**
   * @generated from field: optional bool ctrl_key = 4;
   */
  ctrlKey: boolean;

  /**
   * @generated from field: optional bool meta_key = 5;
   */
  metaKey: boolean;

  /**
   * @generated from field: optional string display_name = 6;
   */
  displayName: string;
};

/**
 * Describes the message CMsgHotkey.
 * Use `create(CMsgHotkeySchema)` to create a new message.
 */
export const CMsgHotkeySchema: GenMessage<CMsgHotkey> = /*@__PURE__*/
  messageDesc(file_steammessages_clientsettings, 0);

/**
 * @generated from message CMsgSettingVariant
 */
export type CMsgSettingVariant = Message<"CMsgSettingVariant"> & {
  /**
   * @generated from oneof CMsgSettingVariant.value
   */
  value: {
    /**
     * @generated from field: bool value_bool = 1;
     */
    value: boolean;
    case: "valueBool";
  } | {
    /**
     * @generated from field: int32 value_int32 = 2;
     */
    value: number;
    case: "valueInt32";
  } | {
    /**
     * @generated from field: uint32 value_uint32 = 3;
     */
    value: number;
    case: "valueUint32";
  } | {
    /**
     * @generated from field: int64 value_uint64 = 5;
     */
    value: bigint;
    case: "valueUint64";
  } | {
    /**
     * @generated from field: float value_float = 6;
     */
    value: number;
    case: "valueFloat";
  } | {
    /**
     * @generated from field: string value_string = 7;
     */
    value: string;
    case: "valueString";
  } | {
    /**
     * @generated from field: CMsgHotkey value_hotkey = 8;
     */
    value: CMsgHotkey;
    case: "valueHotkey";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message CMsgSettingVariant.
 * Use `create(CMsgSettingVariantSchema)` to create a new message.
 */
export const CMsgSettingVariantSchema: GenMessage<CMsgSettingVariant> = /*@__PURE__*/
  messageDesc(file_steammessages_clientsettings, 1);

/**
 * @generated from message CMsgClientSettings
 */
export type CMsgClientSettings = Message<"CMsgClientSettings"> & {
  /**
   * @generated from field: optional bool no_save_personal_info = 1;
   */
  noSavePersonalInfo: boolean;

  /**
   * @generated from field: optional bool oobe_test_mode_enabled = 2;
   */
  oobeTestModeEnabled: boolean;

  /**
   * @generated from field: optional bool in_client_beta = 3;
   */
  inClientBeta: boolean;

  /**
   * @generated from field: optional bool is_steam_sideloaded = 4;
   */
  isSteamSideloaded: boolean;

  /**
   * @generated from field: optional string preferred_monitor = 5;
   */
  preferredMonitor: string;

  /**
   * @generated from field: optional bool steam_cef_gpu_blocklist_disabled = 6;
   */
  steamCefGpuBlocklistDisabled: boolean;

  /**
   * @generated from field: optional bool bigpicture_windowed = 7;
   */
  bigpictureWindowed: boolean;

  /**
   * @generated from field: optional string display_name = 8;
   */
  displayName: string;

  /**
   * @generated from field: optional bool is_external_display = 9;
   */
  isExternalDisplay: boolean;

  /**
   * @generated from field: optional float steam_os_underscan_level = 10;
   */
  steamOsUnderscanLevel: number;

  /**
   * @generated from field: optional bool steam_os_underscan_enabled = 11;
   */
  steamOsUnderscanEnabled: boolean;

  /**
   * @generated from field: optional float min_scale_factor = 12;
   */
  minScaleFactor: number;

  /**
   * @generated from field: optional float max_scale_factor = 13;
   */
  maxScaleFactor: number;

  /**
   * @generated from field: optional float auto_scale_factor = 14;
   */
  autoScaleFactor: number;

  /**
   * @generated from field: optional bool small_mode = 16;
   */
  smallMode: boolean;

  /**
   * @generated from field: optional bool skip_steamvr_install_dialog = 19;
   */
  skipSteamvrInstallDialog: boolean;

  /**
   * @generated from field: optional bool always_show_user_chooser = 20;
   */
  alwaysShowUserChooser: boolean;

  /**
   * @generated from field: optional bool os_version_unsupported = 21;
   */
  osVersionUnsupported: boolean;

  /**
   * @generated from field: optional bool show_family_sharing_notifications = 3000;
   */
  showFamilySharingNotifications: boolean;

  /**
   * @generated from field: optional bool show_copy_count_in_library = 3001;
   */
  showCopyCountInLibrary: boolean;

  /**
   * @generated from field: optional int32 overlay_fps_counter_corner = 4000;
   */
  overlayFpsCounterCorner: number;

  /**
   * @generated from field: optional bool overlay_fps_counter_high_contrast = 4001;
   */
  overlayFpsCounterHighContrast: boolean;

  /**
   * @generated from field: optional CMsgHotkey overlay_key = 4002;
   */
  overlayKey?: CMsgHotkey;

  /**
   * @generated from field: optional CMsgHotkey screenshot_key = 4003;
   */
  screenshotKey?: CMsgHotkey;

  /**
   * @generated from field: optional bool enable_overlay = 4004;
   */
  enableOverlay: boolean;

  /**
   * @generated from field: optional bool enable_screenshot_notification = 4006;
   */
  enableScreenshotNotification: boolean;

  /**
   * @generated from field: optional bool enable_screenshot_sound = 4007;
   */
  enableScreenshotSound: boolean;

  /**
   * @generated from field: optional bool save_uncompressed_screenshots = 4008;
   */
  saveUncompressedScreenshots: boolean;

  /**
   * @generated from field: optional string screenshots_path = 4009;
   */
  screenshotsPath: string;

  /**
   * @generated from field: optional int32 default_ping_rate = 4010;
   */
  defaultPingRate: number;

  /**
   * @generated from field: optional int32 server_ping_rate = 4011;
   */
  serverPingRate: number;

  /**
   * @generated from field: optional int32 steam_networking_share_ip = 4012;
   */
  steamNetworkingShareIp: number;

  /**
   * @generated from field: optional string web_browser_home = 4013;
   */
  webBrowserHome: string;

  /**
   * @generated from field: optional string voice_mic_device_name = 4014;
   */
  voiceMicDeviceName: string;

  /**
   * @generated from field: optional float voice_mic_input_gain = 4015;
   */
  voiceMicInputGain: number;

  /**
   * @generated from field: optional float voice_speaker_output_gain = 4016;
   */
  voiceSpeakerOutputGain: number;

  /**
   * @generated from field: optional int32 voice_push_to_talk_setting = 4017;
   */
  voicePushToTalkSetting: number;

  /**
   * @generated from field: optional CMsgHotkey voice_push_to_talk_key = 4018;
   */
  voicePushToTalkKey?: CMsgHotkey;

  /**
   * @generated from field: optional bool overlay_toolbar_list_view = 4019;
   */
  overlayToolbarListView: boolean;

  /**
   * @generated from field: optional bool always_use_gamepadui_overlay = 4020;
   */
  alwaysUseGamepaduiOverlay: boolean;

  /**
   * @generated from field: optional string overlay_tabs = 4021;
   */
  overlayTabs: string;

  /**
   * @generated from field: optional bool overlay_scale_interface = 4022;
   */
  overlayScaleInterface: boolean;

  /**
   * @generated from field: optional bool overlay_restore_browser_tabs = 4023;
   */
  overlayRestoreBrowserTabs: boolean;

  /**
   * @generated from field: optional bool enable_avif_screenshots = 4024;
   */
  enableAvifScreenshots: boolean;

  /**
   * @generated from field: optional int32 overlay_fps_counter_detail_level = 4025;
   */
  overlayFpsCounterDetailLevel: number;

  /**
   * @generated from field: optional float overlay_fps_counter_saturation_factor = 4026;
   */
  overlayFpsCounterSaturationFactor: number;

  /**
   * @generated from field: optional float overlay_fps_counter_bgopacity = 4027;
   */
  overlayFpsCounterBgopacity: number;

  /**
   * @generated from field: optional float overlay_fps_counter_scale_factor = 4028;
   */
  overlayFpsCounterScaleFactor: number;

  /**
   * @generated from field: optional CMsgHotkey overlay_fps_counter_key = 4029;
   */
  overlayFpsCounterKey?: CMsgHotkey;

  /**
   * @generated from field: optional bool overlay_fps_counter_fps_graph = 4030;
   */
  overlayFpsCounterFpsGraph: boolean;

  /**
   * @generated from field: optional bool overlay_fps_counter_cpu_graph = 4031;
   */
  overlayFpsCounterCpuGraph: boolean;

  /**
   * @generated from field: optional bool overlay_fps_counter_allow_km_driver = 4032;
   */
  overlayFpsCounterAllowKmDriver: boolean;

  /**
   * @generated from field: optional bool smooth_scroll_webviews = 5000;
   */
  smoothScrollWebviews: boolean;

  /**
   * @generated from field: optional bool enable_gpu_accelerated_webviews = 5001;
   */
  enableGpuAcceleratedWebviews: boolean;

  /**
   * @generated from field: optional bool enable_hardware_video_decoding = 5003;
   */
  enableHardwareVideoDecoding: boolean;

  /**
   * @generated from field: optional bool run_at_startup = 5004;
   */
  runAtStartup: boolean;

  /**
   * @generated from field: optional bool enable_dpi_scaling = 5005;
   */
  enableDpiScaling: boolean;

  /**
   * @generated from field: optional bool enable_marketing_messages = 5006;
   */
  enableMarketingMessages: boolean;

  /**
   * @generated from field: optional bool start_in_big_picture_mode = 5007;
   */
  startInBigPictureMode: boolean;

  /**
   * @generated from field: optional uint32 jumplist_flags = 5008;
   */
  jumplistFlags: number;

  /**
   * @generated from field: optional bool enable_ui_sounds = 5009;
   */
  enableUiSounds: boolean;

  /**
   * @generated from field: optional bool disable_all_toasts = 6000;
   */
  disableAllToasts: boolean;

  /**
   * @generated from field: optional bool disable_toasts_in_game = 6001;
   */
  disableToastsInGame: boolean;

  /**
   * @generated from field: optional bool play_sound_on_toast = 6002;
   */
  playSoundOnToast: boolean;

  /**
   * @generated from field: optional int32 library_display_size = 7000;
   */
  libraryDisplaySize: number;

  /**
   * @generated from field: optional bool library_whats_new_show_only_product_updates = 7001;
   */
  libraryWhatsNewShowOnlyProductUpdates: boolean;

  /**
   * @generated from field: optional bool show_store_content_on_home = 7002;
   */
  showStoreContentOnHome: boolean;

  /**
   * @generated from field: optional string start_page = 7003;
   */
  startPage: string;

  /**
   * @generated from field: optional bool library_low_bandwidth_mode = 7004;
   */
  libraryLowBandwidthMode: boolean;

  /**
   * @generated from field: optional bool library_low_perf_mode = 7005;
   */
  libraryLowPerfMode: boolean;

  /**
   * @generated from field: optional bool library_disable_community_content = 7006;
   */
  libraryDisableCommunityContent: boolean;

  /**
   * @generated from field: optional bool library_display_icon_in_game_list = 7007;
   */
  libraryDisplayIconInGameList: boolean;

  /**
   * @generated from field: optional bool ready_to_play_includes_streaming = 7008;
   */
  readyToPlayIncludesStreaming: boolean;

  /**
   * @generated from field: optional bool show_steam_deck_info = 7009;
   */
  showSteamDeckInfo: boolean;

  /**
   * @generated from field: optional bool enable_shader_precache = 8000;
   */
  enableShaderPrecache: boolean;

  /**
   * @generated from field: optional bool enable_shader_background_processing = 8001;
   */
  enableShaderBackgroundProcessing: boolean;

  /**
   * @generated from field: optional uint64 shader_precached_size = 8002;
   */
  shaderPrecachedSize: bigint;

  /**
   * @generated from field: optional bool needs_steam_service_repair = 8003;
   */
  needsSteamServiceRepair: boolean;

  /**
   * @generated from field: optional int32 download_peer_content = 8004;
   */
  downloadPeerContent: number;

  /**
   * @generated from field: optional bool download_rate_bits_per_s = 8005;
   */
  downloadRateBitsPerS: boolean;

  /**
   * @generated from field: optional bool restrict_auto_updates = 8006;
   */
  restrictAutoUpdates: boolean;

  /**
   * @generated from field: optional int32 restrict_auto_updates_start = 8007;
   */
  restrictAutoUpdatesStart: number;

  /**
   * @generated from field: optional int32 restrict_auto_updates_end = 8008;
   */
  restrictAutoUpdatesEnd: number;

  /**
   * @generated from field: optional int32 download_region = 8009;
   */
  downloadRegion: number;

  /**
   * @generated from field: optional bool download_while_app_running = 8010;
   */
  downloadWhileAppRunning: boolean;

  /**
   * @generated from field: optional bool download_throttle_while_streaming = 8011;
   */
  downloadThrottleWhileStreaming: boolean;

  /**
   * @generated from field: optional int32 download_throttle_rate = 8012;
   */
  downloadThrottleRate: number;

  /**
   * @generated from field: optional int32 default_app_update_behavior = 8013;
   */
  defaultAppUpdateBehavior: number;

  /**
   * @generated from field: optional bool cloud_enabled = 10000;
   */
  cloudEnabled: boolean;

  /**
   * @generated from field: optional bool show_screenshot_manager = 10001;
   */
  showScreenshotManager: boolean;

  /**
   * @generated from field: optional int32 music_volume = 11000;
   */
  musicVolume: number;

  /**
   * @generated from field: optional bool music_pause_on_app_start = 11001;
   */
  musicPauseOnAppStart: boolean;

  /**
   * @generated from field: optional bool music_pause_on_voice_chat = 11002;
   */
  musicPauseOnVoiceChat: boolean;

  /**
   * @generated from field: optional bool music_download_high_quality = 11003;
   */
  musicDownloadHighQuality: boolean;

  /**
   * @generated from field: optional EBroadcastPermission broadcast_permissions = 12000 [default = k_EBroadcastPermissionDisabled];
   */
  broadcastPermissions: EBroadcastPermission;

  /**
   * @generated from field: optional int32 broadcast_output_width = 12001;
   */
  broadcastOutputWidth: number;

  /**
   * @generated from field: optional int32 broadcast_output_height = 12002;
   */
  broadcastOutputHeight: number;

  /**
   * @generated from field: optional int32 broadcast_bitrate = 12003;
   */
  broadcastBitrate: number;

  /**
   * @generated from field: optional EBroadcastEncoderSetting broadcast_encoding_option = 12004 [default = k_EBroadcastEncoderBestQuality];
   */
  broadcastEncodingOption: EBroadcastEncoderSetting;

  /**
   * @generated from field: optional bool broadcast_record_all_video = 12005;
   */
  broadcastRecordAllVideo: boolean;

  /**
   * @generated from field: optional bool broadcast_record_all_audio = 12006;
   */
  broadcastRecordAllAudio: boolean;

  /**
   * @generated from field: optional bool broadcast_record_microphone = 12007;
   */
  broadcastRecordMicrophone: boolean;

  /**
   * @generated from field: optional bool broadcast_show_upload_stats = 12008;
   */
  broadcastShowUploadStats: boolean;

  /**
   * @generated from field: optional bool broadcast_show_live_reminder = 12009;
   */
  broadcastShowLiveReminder: boolean;

  /**
   * @generated from field: optional int32 broadcast_chat_corner = 12010;
   */
  broadcastChatCorner: number;

  /**
   * @generated from field: optional bool gamestream_hardware_video_encode = 13000;
   */
  gamestreamHardwareVideoEncode: boolean;

  /**
   * @generated from field: optional bool gamestream_enable_video_h265 = 13001;
   */
  gamestreamEnableVideoH265: boolean;

  /**
   * @generated from field: optional bool steam_input_configurator_error_msg_enable = 14001;
   */
  steamInputConfiguratorErrorMsgEnable: boolean;

  /**
   * @generated from field: optional bool controller_guide_button_focus_steam = 14002;
   */
  controllerGuideButtonFocusSteam: boolean;

  /**
   * @generated from field: optional int32 controller_ps_support = 14003;
   */
  controllerPsSupport: number;

  /**
   * @generated from field: optional bool controller_xbox_support = 14004;
   */
  controllerXboxSupport: boolean;

  /**
   * @generated from field: optional bool controller_xbox_driver = 14005;
   */
  controllerXboxDriver: boolean;

  /**
   * @generated from field: optional bool controller_switch_support = 14006;
   */
  controllerSwitchSupport: boolean;

  /**
   * @generated from field: optional bool controller_generic_support = 14007;
   */
  controllerGenericSupport: boolean;

  /**
   * @generated from field: optional int32 controller_power_off_timeout = 14008;
   */
  controllerPowerOffTimeout: number;

  /**
   * @generated from field: optional bool turn_off_controller_on_exit = 14009;
   */
  turnOffControllerOnExit: boolean;

  /**
   * @generated from field: optional bool controller_combine_nintendo_joycons = 14010;
   */
  controllerCombineNintendoJoycons: boolean;

  /**
   * @generated from field: optional bool controller_enable_chord = 140011;
   */
  controllerEnableChord: boolean;

  /**
   * @generated from field: optional bool controller_poll_rate = 140012;
   */
  controllerPollRate: boolean;

  /**
   * @generated from field: optional bool controller_siapi_config_author_mode = 140013;
   */
  controllerSiapiConfigAuthorMode: boolean;

  /**
   * @generated from field: optional uint64 startup_movie_id = 16000;
   */
  startupMovieId: bigint;

  /**
   * @generated from field: optional string startup_movie_local_path = 16001;
   */
  startupMovieLocalPath: string;

  /**
   * @generated from field: optional bool startup_movie_shuffle = 16002;
   */
  startupMovieShuffle: boolean;

  /**
   * @generated from field: optional bool startup_movie_used_for_resume = 16003;
   */
  startupMovieUsedForResume: boolean;

  /**
   * @generated from field: optional bool game_notes_enable_spellcheck = 17001;
   */
  gameNotesEnableSpellcheck: boolean;

  /**
   * @generated from field: optional int32 screenshot_items_per_row = 18000;
   */
  screenshotItemsPerRow: number;

  /**
   * @generated from field: optional string gamerecording_background_path = 18201;
   */
  gamerecordingBackgroundPath: string;

  /**
   * @generated from field: optional string gamerecording_background_max_keep = 18202;
   */
  gamerecordingBackgroundMaxKeep: string;

  /**
   * @generated from field: optional int32 gamerecording_background_time_resolution = 18203;
   */
  gamerecordingBackgroundTimeResolution: number;

  /**
   * @generated from field: optional CMsgHotkey gamerecording_background_mk = 18207;
   */
  gamerecordingBackgroundMk?: CMsgHotkey;

  /**
   * @generated from field: optional CMsgHotkey gamerecording_background_tg = 18208;
   */
  gamerecordingBackgroundTg?: CMsgHotkey;

  /**
   * @generated from field: optional bool gamerecording_background_a_m = 18209;
   */
  gamerecordingBackgroundAM: boolean;

  /**
   * @generated from field: optional string gamerecording_video_bitrate = 18210;
   */
  gamerecordingVideoBitrate: string;

  /**
   * @generated from field: optional EGRMode gamerecording_background_mode = 18212 [default = k_EGRMode_Never];
   */
  gamerecordingBackgroundMode: EGRMode;

  /**
   * @generated from field: optional EGRAudio gamerecording_background_audio = 18213 [default = k_EGRAudio_Game];
   */
  gamerecordingBackgroundAudio: EGRAudio;

  /**
   * @generated from field: optional int32 gamerecording_max_fps = 18214;
   */
  gamerecordingMaxFps: number;

  /**
   * @generated from field: optional CMsgHotkey gamerecording_hotkey_ic = 18215;
   */
  gamerecordingHotkeyIc?: CMsgHotkey;

  /**
   * @generated from field: optional float gamerecording_ic_seconds = 18216;
   */
  gamerecordingIcSeconds: number;

  /**
   * @generated from field: optional EGRExportLimitType gamerecording_export_limit_type = 18217 [default = k_EGRExportLimitType_Native];
   */
  gamerecordingExportLimitType: EGRExportLimitType;

  /**
   * @generated from field: optional int32 gamerecording_export_limit_size_mb = 18218;
   */
  gamerecordingExportLimitSizeMb: number;

  /**
   * @generated from field: optional int32 gamerecording_export_limit_bitrate = 18219;
   */
  gamerecordingExportLimitBitrate: number;

  /**
   * @generated from field: optional int32 gamerecording_export_limit_width = 18220;
   */
  gamerecordingExportLimitWidth: number;

  /**
   * @generated from field: optional int32 gamerecording_export_limit_height = 18221;
   */
  gamerecordingExportLimitHeight: number;

  /**
   * @generated from field: optional int32 gamerecording_export_limit_frame_rate = 18222;
   */
  gamerecordingExportLimitFrameRate: number;

  /**
   * @generated from field: optional string gamerecording_export_directory = 18223;
   */
  gamerecordingExportDirectory: string;

  /**
   * @generated from field: optional EExportCodec gamerecording_export_codec = 18224 [default = k_EExportCodec_Default];
   */
  gamerecordingExportCodec: EExportCodec;

  /**
   * @generated from field: optional int32 gamerecording_video_maxheight = 18225;
   */
  gamerecordingVideoMaxheight: number;

  /**
   * @generated from field: optional bool gamerecording_force_mic_mono = 18226;
   */
  gamerecordingForceMicMono: boolean;

  /**
   * @generated from field: optional bool gamerecording_automatic_gain_control = 18227;
   */
  gamerecordingAutomaticGainControl: boolean;

  /**
   * @generated from field: optional bool show_timestamps_in_console = 20000;
   */
  showTimestampsInConsole: boolean;

  /**
   * @generated from field: optional bool force_oobe = 20001;
   */
  forceOobe: boolean;

  /**
   * @generated from field: optional int32 override_browser_composer_mode = 20002;
   */
  overrideBrowserComposerMode: number;

  /**
   * @generated from field: optional bool cef_remote_debugging_enabled = 20003;
   */
  cefRemoteDebuggingEnabled: boolean;

  /**
   * @generated from field: optional bool force_deck_perf_tab = 20004;
   */
  forceDeckPerfTab: boolean;

  /**
   * @generated from field: optional bool force_fake_mandatory_update = 20005;
   */
  forceFakeMandatoryUpdate: boolean;

  /**
   * @generated from field: optional bool hdr_compat_testing = 20006;
   */
  hdrCompatTesting: boolean;

  /**
   * @generated from field: optional bool developer_mode_enabled = 20007;
   */
  developerModeEnabled: boolean;

  /**
   * @generated from field: optional bool show_advanced_update_channels = 20008;
   */
  showAdvancedUpdateChannels: boolean;

  /**
   * @generated from field: optional EHDRVisualization gamescope_hdr_visualization = 21001 [default = k_EHDRVisualization_None];
   */
  gamescopeHdrVisualization: EHDRVisualization;

  /**
   * @generated from field: optional int32 gamescope_app_target_framerate = 21002;
   */
  gamescopeAppTargetFramerate: number;

  /**
   * @generated from field: optional bool gamescope_enable_app_target_framerate = 21003;
   */
  gamescopeEnableAppTargetFramerate: boolean;

  /**
   * @generated from field: optional bool gamescope_disable_framelimit = 21004;
   */
  gamescopeDisableFramelimit: boolean;

  /**
   * @generated from field: optional int32 gamescope_display_refresh_rate = 21005;
   */
  gamescopeDisplayRefreshRate: number;

  /**
   * @generated from field: optional bool gamescope_use_game_refresh_rate_in_steam = 21006;
   */
  gamescopeUseGameRefreshRateInSteam: boolean;

  /**
   * @generated from field: optional bool gamescope_disable_mura_correction = 21007;
   */
  gamescopeDisableMuraCorrection: boolean;

  /**
   * @generated from field: optional bool gamescope_include_steamui_in_screenshots = 21008;
   */
  gamescopeIncludeSteamuiInScreenshots: boolean;

  /**
   * @generated from field: optional bool gamescope_allow_tearing = 21009;
   */
  gamescopeAllowTearing: boolean;

  /**
   * @generated from field: optional bool gamescope_composite_debug = 21010;
   */
  gamescopeCompositeDebug: boolean;

  /**
   * @generated from field: optional bool gamescope_force_composite = 21011;
   */
  gamescopeForceComposite: boolean;

  /**
   * @generated from field: optional string gamescope_game_resolution_global = 21012;
   */
  gamescopeGameResolutionGlobal: string;

  /**
   * @generated from field: optional CMsgHotkey gamescope_guide_hotkey = 21013;
   */
  gamescopeGuideHotkey?: CMsgHotkey;

  /**
   * @generated from field: optional CMsgHotkey gamescope_qam_hotkey = 21014;
   */
  gamescopeQamHotkey?: CMsgHotkey;

  /**
   * @generated from field: optional bool gamescope_hdr_enabled = 21015;
   */
  gamescopeHdrEnabled: boolean;

  /**
   * @generated from field: optional bool gamescope_native_external_res_in_steam = 21016;
   */
  gamescopeNativeExternalResInSteam: boolean;

  /**
   * @generated from field: optional int32 steamos_status_led_brightness = 22000;
   */
  steamosStatusLedBrightness: number;

  /**
   * @generated from field: optional bool steamos_tdp_limit_enabled = 22001;
   */
  steamosTdpLimitEnabled: boolean;

  /**
   * @generated from field: optional int32 steamos_tdp_limit = 22002;
   */
  steamosTdpLimit: number;

  /**
   * @generated from field: optional bool steamos_cec_enabled = 22003;
   */
  steamosCecEnabled: boolean;

  /**
   * @generated from field: optional bool steamos_cec_wake_on_resume = 22004;
   */
  steamosCecWakeOnResume: boolean;

  /**
   * @generated from field: optional bool steamos_wifi_debug = 22005;
   */
  steamosWifiDebug: boolean;

  /**
   * @generated from field: optional bool steamos_wifi_force_wpa_supplicant = 22006;
   */
  steamosWifiForceWpaSupplicant: boolean;

  /**
   * @generated from field: optional int32 steamos_magnifier_scale = 22007;
   */
  steamosMagnifierScale: number;

  /**
   * @generated from field: optional bool steamos_manual_gpu_clock_enabled = 22008;
   */
  steamosManualGpuClockEnabled: boolean;

  /**
   * @generated from field: optional int32 steamos_manual_gpu_clock_hz = 22009;
   */
  steamosManualGpuClockHz: number;

  /**
   * @generated from field: optional string steamos_platform_performance_profile = 22010;
   */
  steamosPlatformPerformanceProfile: string;

  /**
   * @generated from field: optional bool steamos_charge_limit_enabled = 22011;
   */
  steamosChargeLimitEnabled: boolean;

  /**
   * @generated from field: optional int32 steamos_charge_limit = 22012;
   */
  steamosChargeLimit: number;

  /**
   * @generated from field: optional bool steamos_charge_limit_devmode = 22013;
   */
  steamosChargeLimitDevmode: boolean;

  /**
   * @generated from field: optional bool steamos_system_tracing_enabled = 22014;
   */
  steamosSystemTracingEnabled: boolean;

  /**
   * @generated from field: optional bool steamos_vrs_enabled = 22015;
   */
  steamosVrsEnabled: boolean;

  /**
   * @generated from field: optional bool setting_validation_bool = 23001;
   */
  settingValidationBool: boolean;

  /**
   * @generated from field: optional EHDRVisualization setting_validation_enum = 23002 [default = k_EHDRVisualization_None];
   */
  settingValidationEnum: EHDRVisualization;

  /**
   * @generated from field: optional int32 setting_validation_int32 = 23003;
   */
  settingValidationInt32: number;

  /**
   * @generated from field: optional uint32 setting_validation_uint32 = 23004;
   */
  settingValidationUint32: number;

  /**
   * @generated from field: optional uint64 setting_validation_uint64 = 23005;
   */
  settingValidationUint64: bigint;

  /**
   * @generated from field: optional float setting_validation_float = 23006;
   */
  settingValidationFloat: number;

  /**
   * @generated from field: optional string setting_validation_string = 23007;
   */
  settingValidationString: string;

  /**
   * @generated from field: optional CMsgHotkey setting_validation_hotkey = 23008;
   */
  settingValidationHotkey?: CMsgHotkey;

  /**
   * @generated from field: optional bool system_bluetooth_enabled = 24000;
   */
  systemBluetoothEnabled: boolean;

  /**
   * @generated from field: optional bool hardware_updater_enabled = 24001;
   */
  hardwareUpdaterEnabled: boolean;

  /**
   * @generated from field: optional bool vr_show_perf_graph_in_hmd = 25000;
   */
  vrShowPerfGraphInHmd: boolean;

  /**
   * @generated from field: optional bool accessibility_debug_visualizer = 26000;
   */
  accessibilityDebugVisualizer: boolean;

  /**
   * @generated from field: optional bool accessibility_screen_reader_enabled = 26001;
   */
  accessibilityScreenReaderEnabled: boolean;

  /**
   * @generated from field: optional float accessibility_screen_reader_rate = 26002;
   */
  accessibilityScreenReaderRate: number;

  /**
   * @generated from field: optional float accessibility_screen_reader_pitch = 26003;
   */
  accessibilityScreenReaderPitch: number;

  /**
   * @generated from field: optional float accessibility_screen_reader_volume = 26004;
   */
  accessibilityScreenReaderVolume: number;

  /**
   * @generated from field: optional bool accessibility_high_contrast_mode = 26005;
   */
  accessibilityHighContrastMode: boolean;

  /**
   * @generated from field: optional bool accessibility_reduce_motion = 26006;
   */
  accessibilityReduceMotion: boolean;

  /**
   * @generated from field: optional uint32 accessibility_minimum_font_size = 26008;
   */
  accessibilityMinimumFontSize: number;

  /**
   * @generated from field: optional string accessibility_color_filter_name = 26009;
   */
  accessibilityColorFilterName: string;

  /**
   * @generated from field: optional float accessibility_desktop_ui_scale = 26010;
   */
  accessibilityDesktopUiScale: number;

  /**
   * @generated from field: optional string accessibility_screen_reader_locale = 26011;
   */
  accessibilityScreenReaderLocale: string;
};

/**
 * Describes the message CMsgClientSettings.
 * Use `create(CMsgClientSettingsSchema)` to create a new message.
 */
export const CMsgClientSettingsSchema: GenMessage<CMsgClientSettings> = /*@__PURE__*/
  messageDesc(file_steammessages_clientsettings, 2);

/**
 * @generated from enum EClientSettingStore
 */
export enum EClientSettingStore {
  /**
   * @generated from enum value: k_EClientSettingStore_Invalid = 0;
   */
  k_EClientSettingStore_Invalid = 0,

  /**
   * @generated from enum value: k_EClientSettingStore_ConfigStore_Install = 1;
   */
  k_EClientSettingStore_ConfigStore_Install = 1,

  /**
   * @generated from enum value: k_EClientSettingStore_ConfigStore_UserRoaming = 2;
   */
  k_EClientSettingStore_ConfigStore_UserRoaming = 2,

  /**
   * @generated from enum value: k_EClientSettingStore_ConfigStore_UserLocal = 3;
   */
  k_EClientSettingStore_ConfigStore_UserLocal = 3,

  /**
   * @generated from enum value: k_EClientSettingStore_Registry = 4;
   */
  k_EClientSettingStore_Registry = 4,

  /**
   * @generated from enum value: k_EClientSettingStore_CustomFunc = 5;
   */
  k_EClientSettingStore_CustomFunc = 5,
}

/**
 * Describes the enum EClientSettingStore.
 */
export const EClientSettingStoreSchema: GenEnum<EClientSettingStore> = /*@__PURE__*/
  enumDesc(file_steammessages_clientsettings, 0);

/**
 * @generated from enum EOverlayToggleBarLocation
 */
export enum EOverlayToggleBarLocation {
  /**
   * @generated from enum value: k_EOverlayToggleBarLocation_Bottom = 0;
   */
  k_EOverlayToggleBarLocation_Bottom = 0,

  /**
   * @generated from enum value: k_EOverlayToggleBarLocation_Left = 1;
   */
  k_EOverlayToggleBarLocation_Left = 1,

  /**
   * @generated from enum value: k_EOverlayToggleBarLocation_Right = 2;
   */
  k_EOverlayToggleBarLocation_Right = 2,

  /**
   * @generated from enum value: k_EOverlayToggleBarLocation_Top = 3;
   */
  k_EOverlayToggleBarLocation_Top = 3,
}

/**
 * Describes the enum EOverlayToggleBarLocation.
 */
export const EOverlayToggleBarLocationSchema: GenEnum<EOverlayToggleBarLocation> = /*@__PURE__*/
  enumDesc(file_steammessages_clientsettings, 1);

/**
 * @generated from enum ESettingProfileMode
 */
export enum ESettingProfileMode {
  /**
   * @generated from enum value: k_ESettingProfileMode_None = 0;
   */
  k_ESettingProfileMode_None = 0,

  /**
   * @generated from enum value: k_ESettingProfileMode_PerGame = 1;
   */
  k_ESettingProfileMode_PerGame = 1,

  /**
   * @generated from enum value: k_ESettingProfileMode_PerGamePerDisplay = 2;
   */
  k_ESettingProfileMode_PerGamePerDisplay = 2,

  /**
   * @generated from enum value: k_ESettingProfileMode_PerDisplay = 3;
   */
  k_ESettingProfileMode_PerDisplay = 3,
}

/**
 * Describes the enum ESettingProfileMode.
 */
export const ESettingProfileModeSchema: GenEnum<ESettingProfileMode> = /*@__PURE__*/
  enumDesc(file_steammessages_clientsettings, 2);

/**
 * @generated from enum EGRMode
 */
export enum EGRMode {
  /**
   * @generated from enum value: k_EGRMode_Never = 0;
   */
  k_EGRMode_Never = 0,

  /**
   * @generated from enum value: k_EGRMode_Always = 1;
   */
  k_EGRMode_Always = 1,

  /**
   * @generated from enum value: k_EGRMode_Manual = 2;
   */
  k_EGRMode_Manual = 2,
}

/**
 * Describes the enum EGRMode.
 */
export const EGRModeSchema: GenEnum<EGRMode> = /*@__PURE__*/
  enumDesc(file_steammessages_clientsettings, 3);

/**
 * @generated from enum EGRAudio
 */
export enum EGRAudio {
  /**
   * @generated from enum value: k_EGRAudio_Game = 0;
   */
  k_EGRAudio_Game = 0,

  /**
   * @generated from enum value: k_EGRAudio_System = 1;
   */
  k_EGRAudio_System = 1,

  /**
   * @generated from enum value: k_EGRAudio_Select = 2;
   */
  k_EGRAudio_Select = 2,
}

/**
 * Describes the enum EGRAudio.
 */
export const EGRAudioSchema: GenEnum<EGRAudio> = /*@__PURE__*/
  enumDesc(file_steammessages_clientsettings, 4);

/**
 * @generated from enum EGRExportLimitType
 */
export enum EGRExportLimitType {
  /**
   * @generated from enum value: k_EGRExportLimitType_Native = 0;
   */
  k_EGRExportLimitType_Native = 0,

  /**
   * @generated from enum value: k_EGRExportLimitType_FileSize = 1;
   */
  k_EGRExportLimitType_FileSize = 1,

  /**
   * @generated from enum value: k_EGRExportLimitType_Advanced = 2;
   */
  k_EGRExportLimitType_Advanced = 2,
}

/**
 * Describes the enum EGRExportLimitType.
 */
export const EGRExportLimitTypeSchema: GenEnum<EGRExportLimitType> = /*@__PURE__*/
  enumDesc(file_steammessages_clientsettings, 5);

/**
 * @generated from extension: optional EClientSettingStore setting_store = 60000 [default = k_EClientSettingStore_Invalid];
 */
export const setting_store: GenExtension<FieldOptions, EClientSettingStore> = /*@__PURE__*/
  extDesc(file_steammessages_clientsettings, 0);

/**
 * @generated from extension: optional string setting_name = 60001;
 */
export const setting_name: GenExtension<FieldOptions, string> = /*@__PURE__*/
  extDesc(file_steammessages_clientsettings, 1);

/**
 * @generated from extension: optional bool setting_pre_login = 60002;
 */
export const setting_pre_login: GenExtension<FieldOptions, boolean> = /*@__PURE__*/
  extDesc(file_steammessages_clientsettings, 2);

/**
 * @generated from extension: optional bool setting_default_bool = 60003;
 */
export const setting_default_bool: GenExtension<FieldOptions, boolean> = /*@__PURE__*/
  extDesc(file_steammessages_clientsettings, 3);

/**
 * @generated from extension: optional int32 setting_default_int = 60004;
 */
export const setting_default_int: GenExtension<FieldOptions, number> = /*@__PURE__*/
  extDesc(file_steammessages_clientsettings, 4);

/**
 * @generated from extension: optional uint32 setting_default_uint = 60005;
 */
export const setting_default_uint: GenExtension<FieldOptions, number> = /*@__PURE__*/
  extDesc(file_steammessages_clientsettings, 5);

/**
 * @generated from extension: optional float setting_default_float = 60006;
 */
export const setting_default_float: GenExtension<FieldOptions, number> = /*@__PURE__*/
  extDesc(file_steammessages_clientsettings, 6);

/**
 * @generated from extension: optional string setting_default_string = 60007;
 */
export const setting_default_string: GenExtension<FieldOptions, string> = /*@__PURE__*/
  extDesc(file_steammessages_clientsettings, 7);

/**
 * @generated from extension: optional bool setting_readonly = 60008;
 */
export const setting_readonly: GenExtension<FieldOptions, boolean> = /*@__PURE__*/
  extDesc(file_steammessages_clientsettings, 8);

/**
 * @generated from extension: optional string setting_description = 60009;
 */
export const setting_description: GenExtension<FieldOptions, string> = /*@__PURE__*/
  extDesc(file_steammessages_clientsettings, 9);

/**
 * @generated from extension: optional ESettingProfileMode setting_profile_mode = 60010 [default = k_ESettingProfileMode_None];
 */
export const setting_profile_mode: GenExtension<FieldOptions, ESettingProfileMode> = /*@__PURE__*/
  extDesc(file_steammessages_clientsettings, 10);

/**
 * @generated from extension: optional int64 setting_clamp_min = 60011;
 */
export const setting_clamp_min: GenExtension<FieldOptions, bigint> = /*@__PURE__*/
  extDesc(file_steammessages_clientsettings, 11);

/**
 * @generated from extension: optional int64 setting_clamp_max = 60012;
 */
export const setting_clamp_max: GenExtension<FieldOptions, bigint> = /*@__PURE__*/
  extDesc(file_steammessages_clientsettings, 12);

