// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file webuimessages_sleep.proto (syntax proto2)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_enums } from "./enums_pb";
import { file_steammessages_base } from "./steammessages_base_pb";
import type { WebUINoResponseSchema } from "./webuimessages_base_pb";
import { file_webuimessages_base } from "./webuimessages_base_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file webuimessages_sleep.proto.
 */
export const file_webuimessages_sleep: GenFile = /*@__PURE__*/
  fileDesc("Chl3ZWJ1aW1lc3NhZ2VzX3NsZWVwLnByb3RvIhcKFUNNc2dTbGVlcE1hbmFnZXJTdGF0ZSIgCh5DU2xlZXBNYW5hZ2VyX0dldFN0YXRlX1JlcXVlc3QiSAofQ1NsZWVwTWFuYWdlcl9HZXRTdGF0ZV9SZXNwb25zZRIlCgVzdGF0ZRgBIAEoCzIWLkNNc2dTbGVlcE1hbmFnZXJTdGF0ZSIpCidDU2xlZXBNYW5hZ2VyX1N0YXRlQ2hhbmdlZF9Ob3RpZmljYXRpb24iKwopQ1NsZWVwTWFuYWdlcl9SZXF1ZXN0U3VzcGVuZF9Ob3RpZmljYXRpb24iLgosQ1NsZWVwTWFuYWdlcl9SZXN1bWVGcm9tU3VzcGVuZF9Ob3RpZmljYXRpb24iKgooQ1NsZWVwTWFuYWdlcl9TaG93UG93ZXJNZW51X05vdGlmaWNhdGlvbjK7AwoMU2xlZXBNYW5hZ2VyEk0KCEdldFN0YXRlEh8uQ1NsZWVwTWFuYWdlcl9HZXRTdGF0ZV9SZXF1ZXN0GiAuQ1NsZWVwTWFuYWdlcl9HZXRTdGF0ZV9SZXNwb25zZRJQChJOb3RpZnlTdGF0ZUNoYW5nZWQSKC5DU2xlZXBNYW5hZ2VyX1N0YXRlQ2hhbmdlZF9Ob3RpZmljYXRpb24aEC5XZWJVSU5vUmVzcG9uc2USVAoUTm90aWZ5UmVxdWVzdFN1c3BlbmQSKi5DU2xlZXBNYW5hZ2VyX1JlcXVlc3RTdXNwZW5kX05vdGlmaWNhdGlvbhoQLldlYlVJTm9SZXNwb25zZRJaChdOb3RpZnlSZXN1bWVGcm9tU3VzcGVuZBItLkNTbGVlcE1hbmFnZXJfUmVzdW1lRnJvbVN1c3BlbmRfTm90aWZpY2F0aW9uGhAuV2ViVUlOb1Jlc3BvbnNlElIKE05vdGlmeVNob3dQb3dlck1lbnUSKS5DU2xlZXBNYW5hZ2VyX1Nob3dQb3dlck1lbnVfTm90aWZpY2F0aW9uGhAuV2ViVUlOb1Jlc3BvbnNlGgSAlyIBQgVIAYABAQ", [file_enums, file_steammessages_base, file_webuimessages_base]);

/**
 * @generated from message CMsgSleepManagerState
 */
export type CMsgSleepManagerState = Message<"CMsgSleepManagerState"> & {
};

/**
 * Describes the message CMsgSleepManagerState.
 * Use `create(CMsgSleepManagerStateSchema)` to create a new message.
 */
export const CMsgSleepManagerStateSchema: GenMessage<CMsgSleepManagerState> = /*@__PURE__*/
  messageDesc(file_webuimessages_sleep, 0);

/**
 * @generated from message CSleepManager_GetState_Request
 */
export type CSleepManager_GetState_Request = Message<"CSleepManager_GetState_Request"> & {
};

/**
 * Describes the message CSleepManager_GetState_Request.
 * Use `create(CSleepManager_GetState_RequestSchema)` to create a new message.
 */
export const CSleepManager_GetState_RequestSchema: GenMessage<CSleepManager_GetState_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_sleep, 1);

/**
 * @generated from message CSleepManager_GetState_Response
 */
export type CSleepManager_GetState_Response = Message<"CSleepManager_GetState_Response"> & {
  /**
   * @generated from field: optional CMsgSleepManagerState state = 1;
   */
  state?: CMsgSleepManagerState;
};

/**
 * Describes the message CSleepManager_GetState_Response.
 * Use `create(CSleepManager_GetState_ResponseSchema)` to create a new message.
 */
export const CSleepManager_GetState_ResponseSchema: GenMessage<CSleepManager_GetState_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_sleep, 2);

/**
 * @generated from message CSleepManager_StateChanged_Notification
 */
export type CSleepManager_StateChanged_Notification = Message<"CSleepManager_StateChanged_Notification"> & {
};

/**
 * Describes the message CSleepManager_StateChanged_Notification.
 * Use `create(CSleepManager_StateChanged_NotificationSchema)` to create a new message.
 */
export const CSleepManager_StateChanged_NotificationSchema: GenMessage<CSleepManager_StateChanged_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_sleep, 3);

/**
 * @generated from message CSleepManager_RequestSuspend_Notification
 */
export type CSleepManager_RequestSuspend_Notification = Message<"CSleepManager_RequestSuspend_Notification"> & {
};

/**
 * Describes the message CSleepManager_RequestSuspend_Notification.
 * Use `create(CSleepManager_RequestSuspend_NotificationSchema)` to create a new message.
 */
export const CSleepManager_RequestSuspend_NotificationSchema: GenMessage<CSleepManager_RequestSuspend_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_sleep, 4);

/**
 * @generated from message CSleepManager_ResumeFromSuspend_Notification
 */
export type CSleepManager_ResumeFromSuspend_Notification = Message<"CSleepManager_ResumeFromSuspend_Notification"> & {
};

/**
 * Describes the message CSleepManager_ResumeFromSuspend_Notification.
 * Use `create(CSleepManager_ResumeFromSuspend_NotificationSchema)` to create a new message.
 */
export const CSleepManager_ResumeFromSuspend_NotificationSchema: GenMessage<CSleepManager_ResumeFromSuspend_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_sleep, 5);

/**
 * @generated from message CSleepManager_ShowPowerMenu_Notification
 */
export type CSleepManager_ShowPowerMenu_Notification = Message<"CSleepManager_ShowPowerMenu_Notification"> & {
};

/**
 * Describes the message CSleepManager_ShowPowerMenu_Notification.
 * Use `create(CSleepManager_ShowPowerMenu_NotificationSchema)` to create a new message.
 */
export const CSleepManager_ShowPowerMenu_NotificationSchema: GenMessage<CSleepManager_ShowPowerMenu_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_sleep, 6);

/**
 * @generated from service SleepManager
 */
export const SleepManager: GenService<{
  /**
   * @generated from rpc SleepManager.GetState
   */
  getState: {
    methodKind: "unary";
    input: typeof CSleepManager_GetState_RequestSchema;
    output: typeof CSleepManager_GetState_ResponseSchema;
  },
  /**
   * @generated from rpc SleepManager.NotifyStateChanged
   */
  notifyStateChanged: {
    methodKind: "unary";
    input: typeof CSleepManager_StateChanged_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc SleepManager.NotifyRequestSuspend
   */
  notifyRequestSuspend: {
    methodKind: "unary";
    input: typeof CSleepManager_RequestSuspend_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc SleepManager.NotifyResumeFromSuspend
   */
  notifyResumeFromSuspend: {
    methodKind: "unary";
    input: typeof CSleepManager_ResumeFromSuspend_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc SleepManager.NotifyShowPowerMenu
   */
  notifyShowPowerMenu: {
    methodKind: "unary";
    input: typeof CSleepManager_ShowPowerMenu_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_webuimessages_sleep, 0);

