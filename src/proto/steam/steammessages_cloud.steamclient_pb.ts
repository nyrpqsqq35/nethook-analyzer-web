// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_cloud.steamclient.proto (syntax proto2)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_steammessages_base } from "./steammessages_base_pb";
import type { NoResponseSchema } from "./steammessages_unified_base.steamclient_pb";
import { file_steammessages_unified_base_steamclient } from "./steammessages_unified_base.steamclient_pb";
import type { ECloudStoragePersistState, EPublishedFileStorageSystem } from "./enums_pb";
import { file_enums } from "./enums_pb";
import type { CCloud_PendingRemoteOperation } from "./steammessages_client_objects_pb";
import { file_steammessages_client_objects } from "./steammessages_client_objects_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_cloud.steamclient.proto.
 */
export const file_steammessages_cloud_steamclient: GenFile = /*@__PURE__*/
  fileDesc("", [file_steammessages_base, file_steammessages_unified_base_steamclient, file_enums, file_steammessages_client_objects]);

/**
 * @generated from message CCloud_ClientLogUploadCheck_Notification
 */
export type CCloud_ClientLogUploadCheck_Notification = Message<"CCloud_ClientLogUploadCheck_Notification"> & {
  /**
   * @generated from field: optional uint64 client_id = 1;
   */
  clientId: bigint;
};

/**
 * Describes the message CCloud_ClientLogUploadCheck_Notification.
 * Use `create(CCloud_ClientLogUploadCheck_NotificationSchema)` to create a new message.
 */
export const CCloud_ClientLogUploadCheck_NotificationSchema: GenMessage<CCloud_ClientLogUploadCheck_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 0);

/**
 * @generated from message CCloud_ClientLogUploadComplete_Notification
 */
export type CCloud_ClientLogUploadComplete_Notification = Message<"CCloud_ClientLogUploadComplete_Notification"> & {
  /**
   * @generated from field: optional uint64 client_id = 1;
   */
  clientId: bigint;

  /**
   * @generated from field: optional uint64 request_id = 2;
   */
  requestId: bigint;
};

/**
 * Describes the message CCloud_ClientLogUploadComplete_Notification.
 * Use `create(CCloud_ClientLogUploadComplete_NotificationSchema)` to create a new message.
 */
export const CCloud_ClientLogUploadComplete_NotificationSchema: GenMessage<CCloud_ClientLogUploadComplete_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 1);

/**
 * @generated from message CCloud_BeginHTTPUpload_Request
 */
export type CCloud_BeginHTTPUpload_Request = Message<"CCloud_BeginHTTPUpload_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 file_size = 2;
   */
  fileSize: number;

  /**
   * @generated from field: optional string filename = 3;
   */
  filename: string;

  /**
   * @generated from field: optional string file_sha = 4;
   */
  fileSha: string;

  /**
   * @generated from field: optional bool is_public = 5;
   */
  isPublic: boolean;

  /**
   * @generated from field: repeated string platforms_to_sync = 6;
   */
  platformsToSync: string[];

  /**
   * @generated from field: repeated string request_headers_names = 7;
   */
  requestHeadersNames: string[];

  /**
   * @generated from field: repeated string request_headers_values = 8;
   */
  requestHeadersValues: string[];

  /**
   * @generated from field: optional uint64 upload_batch_id = 9;
   */
  uploadBatchId: bigint;
};

/**
 * Describes the message CCloud_BeginHTTPUpload_Request.
 * Use `create(CCloud_BeginHTTPUpload_RequestSchema)` to create a new message.
 */
export const CCloud_BeginHTTPUpload_RequestSchema: GenMessage<CCloud_BeginHTTPUpload_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 2);

/**
 * @generated from message CCloud_BeginHTTPUpload_Response
 */
export type CCloud_BeginHTTPUpload_Response = Message<"CCloud_BeginHTTPUpload_Response"> & {
  /**
   * @generated from field: optional fixed64 ugcid = 1;
   */
  ugcid: bigint;

  /**
   * @generated from field: optional fixed32 timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: optional string url_host = 3;
   */
  urlHost: string;

  /**
   * @generated from field: optional string url_path = 4;
   */
  urlPath: string;

  /**
   * @generated from field: optional bool use_https = 5;
   */
  useHttps: boolean;

  /**
   * @generated from field: repeated CCloud_BeginHTTPUpload_Response.HTTPHeaders request_headers = 6;
   */
  requestHeaders: CCloud_BeginHTTPUpload_Response_HTTPHeaders[];
};

/**
 * Describes the message CCloud_BeginHTTPUpload_Response.
 * Use `create(CCloud_BeginHTTPUpload_ResponseSchema)` to create a new message.
 */
export const CCloud_BeginHTTPUpload_ResponseSchema: GenMessage<CCloud_BeginHTTPUpload_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 3);

/**
 * @generated from message CCloud_BeginHTTPUpload_Response.HTTPHeaders
 */
export type CCloud_BeginHTTPUpload_Response_HTTPHeaders = Message<"CCloud_BeginHTTPUpload_Response.HTTPHeaders"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional string value = 2;
   */
  value: string;
};

/**
 * Describes the message CCloud_BeginHTTPUpload_Response.HTTPHeaders.
 * Use `create(CCloud_BeginHTTPUpload_Response_HTTPHeadersSchema)` to create a new message.
 */
export const CCloud_BeginHTTPUpload_Response_HTTPHeadersSchema: GenMessage<CCloud_BeginHTTPUpload_Response_HTTPHeaders> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 3, 0);

/**
 * @generated from message CCloud_CommitHTTPUpload_Request
 */
export type CCloud_CommitHTTPUpload_Request = Message<"CCloud_CommitHTTPUpload_Request"> & {
  /**
   * @generated from field: optional bool transfer_succeeded = 1;
   */
  transferSucceeded: boolean;

  /**
   * @generated from field: optional uint32 appid = 2;
   */
  appid: number;

  /**
   * @generated from field: optional string file_sha = 3;
   */
  fileSha: string;

  /**
   * @generated from field: optional string filename = 4;
   */
  filename: string;
};

/**
 * Describes the message CCloud_CommitHTTPUpload_Request.
 * Use `create(CCloud_CommitHTTPUpload_RequestSchema)` to create a new message.
 */
export const CCloud_CommitHTTPUpload_RequestSchema: GenMessage<CCloud_CommitHTTPUpload_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 4);

/**
 * @generated from message CCloud_CommitHTTPUpload_Response
 */
export type CCloud_CommitHTTPUpload_Response = Message<"CCloud_CommitHTTPUpload_Response"> & {
  /**
   * @generated from field: optional bool file_committed = 1;
   */
  fileCommitted: boolean;
};

/**
 * Describes the message CCloud_CommitHTTPUpload_Response.
 * Use `create(CCloud_CommitHTTPUpload_ResponseSchema)` to create a new message.
 */
export const CCloud_CommitHTTPUpload_ResponseSchema: GenMessage<CCloud_CommitHTTPUpload_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 5);

/**
 * @generated from message CCloud_BeginUGCUpload_Request
 */
export type CCloud_BeginUGCUpload_Request = Message<"CCloud_BeginUGCUpload_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 file_size = 2;
   */
  fileSize: number;

  /**
   * @generated from field: optional string filename = 3;
   */
  filename: string;

  /**
   * @generated from field: optional string file_sha = 4;
   */
  fileSha: string;

  /**
   * @generated from field: optional string content_type = 5;
   */
  contentType: string;
};

/**
 * Describes the message CCloud_BeginUGCUpload_Request.
 * Use `create(CCloud_BeginUGCUpload_RequestSchema)` to create a new message.
 */
export const CCloud_BeginUGCUpload_RequestSchema: GenMessage<CCloud_BeginUGCUpload_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 6);

/**
 * @generated from message CCloud_BeginUGCUpload_Response
 */
export type CCloud_BeginUGCUpload_Response = Message<"CCloud_BeginUGCUpload_Response"> & {
  /**
   * @generated from field: optional EPublishedFileStorageSystem storage_system = 1 [default = k_EPublishedFileStorageSystemInvalid];
   */
  storageSystem: EPublishedFileStorageSystem;

  /**
   * @generated from field: optional fixed64 ugcid = 2;
   */
  ugcid: bigint;

  /**
   * @generated from field: optional fixed32 timestamp = 3;
   */
  timestamp: number;

  /**
   * @generated from field: optional string url_host = 4;
   */
  urlHost: string;

  /**
   * @generated from field: optional string url_path = 5;
   */
  urlPath: string;

  /**
   * @generated from field: optional bool use_https = 6;
   */
  useHttps: boolean;

  /**
   * @generated from field: repeated CCloud_BeginUGCUpload_Response.HTTPHeaders request_headers = 7;
   */
  requestHeaders: CCloud_BeginUGCUpload_Response_HTTPHeaders[];
};

/**
 * Describes the message CCloud_BeginUGCUpload_Response.
 * Use `create(CCloud_BeginUGCUpload_ResponseSchema)` to create a new message.
 */
export const CCloud_BeginUGCUpload_ResponseSchema: GenMessage<CCloud_BeginUGCUpload_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 7);

/**
 * @generated from message CCloud_BeginUGCUpload_Response.HTTPHeaders
 */
export type CCloud_BeginUGCUpload_Response_HTTPHeaders = Message<"CCloud_BeginUGCUpload_Response.HTTPHeaders"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional string value = 2;
   */
  value: string;
};

/**
 * Describes the message CCloud_BeginUGCUpload_Response.HTTPHeaders.
 * Use `create(CCloud_BeginUGCUpload_Response_HTTPHeadersSchema)` to create a new message.
 */
export const CCloud_BeginUGCUpload_Response_HTTPHeadersSchema: GenMessage<CCloud_BeginUGCUpload_Response_HTTPHeaders> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 7, 0);

/**
 * @generated from message CCloud_CommitUGCUpload_Request
 */
export type CCloud_CommitUGCUpload_Request = Message<"CCloud_CommitUGCUpload_Request"> & {
  /**
   * @generated from field: optional bool transfer_succeeded = 1;
   */
  transferSucceeded: boolean;

  /**
   * @generated from field: optional uint32 appid = 2;
   */
  appid: number;

  /**
   * @generated from field: optional fixed64 ugcid = 3;
   */
  ugcid: bigint;
};

/**
 * Describes the message CCloud_CommitUGCUpload_Request.
 * Use `create(CCloud_CommitUGCUpload_RequestSchema)` to create a new message.
 */
export const CCloud_CommitUGCUpload_RequestSchema: GenMessage<CCloud_CommitUGCUpload_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 8);

/**
 * @generated from message CCloud_CommitUGCUpload_Response
 */
export type CCloud_CommitUGCUpload_Response = Message<"CCloud_CommitUGCUpload_Response"> & {
  /**
   * @generated from field: optional bool file_committed = 1;
   */
  fileCommitted: boolean;
};

/**
 * Describes the message CCloud_CommitUGCUpload_Response.
 * Use `create(CCloud_CommitUGCUpload_ResponseSchema)` to create a new message.
 */
export const CCloud_CommitUGCUpload_ResponseSchema: GenMessage<CCloud_CommitUGCUpload_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 9);

/**
 * @generated from message CCloud_GetFileDetails_Request
 */
export type CCloud_GetFileDetails_Request = Message<"CCloud_GetFileDetails_Request"> & {
  /**
   * @generated from field: optional uint64 ugcid = 1;
   */
  ugcid: bigint;

  /**
   * @generated from field: optional uint32 appid = 2;
   */
  appid: number;
};

/**
 * Describes the message CCloud_GetFileDetails_Request.
 * Use `create(CCloud_GetFileDetails_RequestSchema)` to create a new message.
 */
export const CCloud_GetFileDetails_RequestSchema: GenMessage<CCloud_GetFileDetails_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 10);

/**
 * @generated from message CCloud_UserFile
 */
export type CCloud_UserFile = Message<"CCloud_UserFile"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint64 ugcid = 2;
   */
  ugcid: bigint;

  /**
   * @generated from field: optional string filename = 3;
   */
  filename: string;

  /**
   * @generated from field: optional uint64 timestamp = 4;
   */
  timestamp: bigint;

  /**
   * @generated from field: optional uint32 file_size = 5;
   */
  fileSize: number;

  /**
   * @generated from field: optional string url = 6;
   */
  url: string;

  /**
   * @generated from field: optional fixed64 steamid_creator = 7;
   */
  steamidCreator: bigint;

  /**
   * @generated from field: optional uint32 flags = 8;
   */
  flags: number;

  /**
   * @generated from field: repeated string platforms_to_sync = 9;
   */
  platformsToSync: string[];

  /**
   * @generated from field: optional string file_sha = 10;
   */
  fileSha: string;
};

/**
 * Describes the message CCloud_UserFile.
 * Use `create(CCloud_UserFileSchema)` to create a new message.
 */
export const CCloud_UserFileSchema: GenMessage<CCloud_UserFile> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 11);

/**
 * @generated from message CCloud_GetFileDetails_Response
 */
export type CCloud_GetFileDetails_Response = Message<"CCloud_GetFileDetails_Response"> & {
  /**
   * @generated from field: optional CCloud_UserFile details = 1;
   */
  details?: CCloud_UserFile;
};

/**
 * Describes the message CCloud_GetFileDetails_Response.
 * Use `create(CCloud_GetFileDetails_ResponseSchema)` to create a new message.
 */
export const CCloud_GetFileDetails_ResponseSchema: GenMessage<CCloud_GetFileDetails_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 12);

/**
 * @generated from message CCloud_EnumerateUserFiles_Request
 */
export type CCloud_EnumerateUserFiles_Request = Message<"CCloud_EnumerateUserFiles_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional bool extended_details = 2;
   */
  extendedDetails: boolean;

  /**
   * @generated from field: optional uint32 count = 3;
   */
  count: number;

  /**
   * @generated from field: optional uint32 start_index = 4;
   */
  startIndex: number;
};

/**
 * Describes the message CCloud_EnumerateUserFiles_Request.
 * Use `create(CCloud_EnumerateUserFiles_RequestSchema)` to create a new message.
 */
export const CCloud_EnumerateUserFiles_RequestSchema: GenMessage<CCloud_EnumerateUserFiles_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 13);

/**
 * @generated from message CCloud_EnumerateUserFiles_Response
 */
export type CCloud_EnumerateUserFiles_Response = Message<"CCloud_EnumerateUserFiles_Response"> & {
  /**
   * @generated from field: repeated CCloud_UserFile files = 1;
   */
  files: CCloud_UserFile[];

  /**
   * @generated from field: optional uint32 total_files = 2;
   */
  totalFiles: number;
};

/**
 * Describes the message CCloud_EnumerateUserFiles_Response.
 * Use `create(CCloud_EnumerateUserFiles_ResponseSchema)` to create a new message.
 */
export const CCloud_EnumerateUserFiles_ResponseSchema: GenMessage<CCloud_EnumerateUserFiles_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 14);

/**
 * @generated from message CCloud_Delete_Request
 */
export type CCloud_Delete_Request = Message<"CCloud_Delete_Request"> & {
  /**
   * @generated from field: optional string filename = 1;
   */
  filename: string;

  /**
   * @generated from field: optional uint32 appid = 2;
   */
  appid: number;

  /**
   * @generated from field: optional uint64 upload_batch_id = 3;
   */
  uploadBatchId: bigint;
};

/**
 * Describes the message CCloud_Delete_Request.
 * Use `create(CCloud_Delete_RequestSchema)` to create a new message.
 */
export const CCloud_Delete_RequestSchema: GenMessage<CCloud_Delete_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 15);

/**
 * @generated from message CCloud_Delete_Response
 */
export type CCloud_Delete_Response = Message<"CCloud_Delete_Response"> & {
};

/**
 * Describes the message CCloud_Delete_Response.
 * Use `create(CCloud_Delete_ResponseSchema)` to create a new message.
 */
export const CCloud_Delete_ResponseSchema: GenMessage<CCloud_Delete_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 16);

/**
 * @generated from message CCloud_GetClientEncryptionKey_Request
 */
export type CCloud_GetClientEncryptionKey_Request = Message<"CCloud_GetClientEncryptionKey_Request"> & {
};

/**
 * Describes the message CCloud_GetClientEncryptionKey_Request.
 * Use `create(CCloud_GetClientEncryptionKey_RequestSchema)` to create a new message.
 */
export const CCloud_GetClientEncryptionKey_RequestSchema: GenMessage<CCloud_GetClientEncryptionKey_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 17);

/**
 * @generated from message CCloud_GetClientEncryptionKey_Response
 */
export type CCloud_GetClientEncryptionKey_Response = Message<"CCloud_GetClientEncryptionKey_Response"> & {
  /**
   * @generated from field: optional bytes key = 1;
   */
  key: Uint8Array;

  /**
   * @generated from field: optional int32 crc = 2;
   */
  crc: number;
};

/**
 * Describes the message CCloud_GetClientEncryptionKey_Response.
 * Use `create(CCloud_GetClientEncryptionKey_ResponseSchema)` to create a new message.
 */
export const CCloud_GetClientEncryptionKey_ResponseSchema: GenMessage<CCloud_GetClientEncryptionKey_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 18);

/**
 * @generated from message CCloud_CDNReport_Notification
 */
export type CCloud_CDNReport_Notification = Message<"CCloud_CDNReport_Notification"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional string url = 2;
   */
  url: string;

  /**
   * @generated from field: optional bool success = 3;
   */
  success: boolean;

  /**
   * @generated from field: optional uint32 http_status_code = 4;
   */
  httpStatusCode: number;

  /**
   * @generated from field: optional uint64 expected_bytes = 5;
   */
  expectedBytes: bigint;

  /**
   * @generated from field: optional uint64 received_bytes = 6;
   */
  receivedBytes: bigint;

  /**
   * @generated from field: optional uint32 duration = 7;
   */
  duration: number;
};

/**
 * Describes the message CCloud_CDNReport_Notification.
 * Use `create(CCloud_CDNReport_NotificationSchema)` to create a new message.
 */
export const CCloud_CDNReport_NotificationSchema: GenMessage<CCloud_CDNReport_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 19);

/**
 * @generated from message CCloud_ExternalStorageTransferReport_Notification
 */
export type CCloud_ExternalStorageTransferReport_Notification = Message<"CCloud_ExternalStorageTransferReport_Notification"> & {
  /**
   * @generated from field: optional string host = 1;
   */
  host: string;

  /**
   * @generated from field: optional string path = 2;
   */
  path: string;

  /**
   * @generated from field: optional bool is_upload = 3;
   */
  isUpload: boolean;

  /**
   * @generated from field: optional bool success = 4;
   */
  success: boolean;

  /**
   * @generated from field: optional uint32 http_status_code = 5;
   */
  httpStatusCode: number;

  /**
   * @generated from field: optional uint64 bytes_expected = 6;
   */
  bytesExpected: bigint;

  /**
   * @generated from field: optional uint64 bytes_actual = 7;
   */
  bytesActual: bigint;

  /**
   * @generated from field: optional uint32 duration_ms = 8;
   */
  durationMs: number;

  /**
   * @generated from field: optional uint32 cellid = 9;
   */
  cellid: number;

  /**
   * @generated from field: optional bool proxied = 10;
   */
  proxied: boolean;

  /**
   * @generated from field: optional bool ipv6_local = 11;
   */
  ipv6Local: boolean;

  /**
   * @generated from field: optional bool ipv6_remote = 12;
   */
  ipv6Remote: boolean;

  /**
   * @generated from field: optional uint32 time_to_connect_ms = 13;
   */
  timeToConnectMs: number;

  /**
   * @generated from field: optional uint32 time_to_send_req_ms = 14;
   */
  timeToSendReqMs: number;

  /**
   * @generated from field: optional uint32 time_to_first_byte_ms = 15;
   */
  timeToFirstByteMs: number;

  /**
   * @generated from field: optional uint32 time_to_last_byte_ms = 16;
   */
  timeToLastByteMs: number;
};

/**
 * Describes the message CCloud_ExternalStorageTransferReport_Notification.
 * Use `create(CCloud_ExternalStorageTransferReport_NotificationSchema)` to create a new message.
 */
export const CCloud_ExternalStorageTransferReport_NotificationSchema: GenMessage<CCloud_ExternalStorageTransferReport_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 20);

/**
 * @generated from message CCloud_BeginAppUploadBatch_Request
 */
export type CCloud_BeginAppUploadBatch_Request = Message<"CCloud_BeginAppUploadBatch_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional string machine_name = 2;
   */
  machineName: string;

  /**
   * @generated from field: repeated string files_to_upload = 3;
   */
  filesToUpload: string[];

  /**
   * @generated from field: repeated string files_to_delete = 4;
   */
  filesToDelete: string[];

  /**
   * @generated from field: optional uint64 client_id = 5;
   */
  clientId: bigint;

  /**
   * @generated from field: optional uint64 app_build_id = 6;
   */
  appBuildId: bigint;
};

/**
 * Describes the message CCloud_BeginAppUploadBatch_Request.
 * Use `create(CCloud_BeginAppUploadBatch_RequestSchema)` to create a new message.
 */
export const CCloud_BeginAppUploadBatch_RequestSchema: GenMessage<CCloud_BeginAppUploadBatch_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 21);

/**
 * @generated from message CCloud_BeginAppUploadBatch_Response
 */
export type CCloud_BeginAppUploadBatch_Response = Message<"CCloud_BeginAppUploadBatch_Response"> & {
  /**
   * @generated from field: optional uint64 batch_id = 1;
   */
  batchId: bigint;

  /**
   * @generated from field: optional uint64 app_change_number = 4;
   */
  appChangeNumber: bigint;
};

/**
 * Describes the message CCloud_BeginAppUploadBatch_Response.
 * Use `create(CCloud_BeginAppUploadBatch_ResponseSchema)` to create a new message.
 */
export const CCloud_BeginAppUploadBatch_ResponseSchema: GenMessage<CCloud_BeginAppUploadBatch_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 22);

/**
 * @generated from message CCloud_CompleteAppUploadBatch_Notification
 */
export type CCloud_CompleteAppUploadBatch_Notification = Message<"CCloud_CompleteAppUploadBatch_Notification"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint64 batch_id = 2;
   */
  batchId: bigint;

  /**
   * @generated from field: optional uint32 batch_eresult = 3;
   */
  batchEresult: number;
};

/**
 * Describes the message CCloud_CompleteAppUploadBatch_Notification.
 * Use `create(CCloud_CompleteAppUploadBatch_NotificationSchema)` to create a new message.
 */
export const CCloud_CompleteAppUploadBatch_NotificationSchema: GenMessage<CCloud_CompleteAppUploadBatch_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 23);

/**
 * @generated from message CCloud_CompleteAppUploadBatch_Request
 */
export type CCloud_CompleteAppUploadBatch_Request = Message<"CCloud_CompleteAppUploadBatch_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint64 batch_id = 2;
   */
  batchId: bigint;

  /**
   * @generated from field: optional uint32 batch_eresult = 3;
   */
  batchEresult: number;
};

/**
 * Describes the message CCloud_CompleteAppUploadBatch_Request.
 * Use `create(CCloud_CompleteAppUploadBatch_RequestSchema)` to create a new message.
 */
export const CCloud_CompleteAppUploadBatch_RequestSchema: GenMessage<CCloud_CompleteAppUploadBatch_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 24);

/**
 * @generated from message CCloud_CompleteAppUploadBatch_Response
 */
export type CCloud_CompleteAppUploadBatch_Response = Message<"CCloud_CompleteAppUploadBatch_Response"> & {
};

/**
 * Describes the message CCloud_CompleteAppUploadBatch_Response.
 * Use `create(CCloud_CompleteAppUploadBatch_ResponseSchema)` to create a new message.
 */
export const CCloud_CompleteAppUploadBatch_ResponseSchema: GenMessage<CCloud_CompleteAppUploadBatch_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 25);

/**
 * @generated from message CCloud_ClientBeginFileUpload_Request
 */
export type CCloud_ClientBeginFileUpload_Request = Message<"CCloud_ClientBeginFileUpload_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 file_size = 2;
   */
  fileSize: number;

  /**
   * @generated from field: optional uint32 raw_file_size = 3;
   */
  rawFileSize: number;

  /**
   * @generated from field: optional bytes file_sha = 4;
   */
  fileSha: Uint8Array;

  /**
   * @generated from field: optional uint64 time_stamp = 5;
   */
  timeStamp: bigint;

  /**
   * @generated from field: optional string filename = 6;
   */
  filename: string;

  /**
   * @generated from field: optional uint32 platforms_to_sync = 7 [default = 4294967295];
   */
  platformsToSync: number;

  /**
   * @generated from field: optional uint32 cell_id = 9;
   */
  cellId: number;

  /**
   * @generated from field: optional bool can_encrypt = 10;
   */
  canEncrypt: boolean;

  /**
   * @generated from field: optional bool is_shared_file = 11;
   */
  isSharedFile: boolean;

  /**
   * @generated from field: optional uint32 deprecated_realm = 12;
   */
  deprecatedRealm: number;

  /**
   * @generated from field: optional uint64 upload_batch_id = 13;
   */
  uploadBatchId: bigint;
};

/**
 * Describes the message CCloud_ClientBeginFileUpload_Request.
 * Use `create(CCloud_ClientBeginFileUpload_RequestSchema)` to create a new message.
 */
export const CCloud_ClientBeginFileUpload_RequestSchema: GenMessage<CCloud_ClientBeginFileUpload_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 26);

/**
 * @generated from message ClientCloudFileUploadBlockDetails
 */
export type ClientCloudFileUploadBlockDetails = Message<"ClientCloudFileUploadBlockDetails"> & {
  /**
   * @generated from field: optional string url_host = 1;
   */
  urlHost: string;

  /**
   * @generated from field: optional string url_path = 2;
   */
  urlPath: string;

  /**
   * @generated from field: optional bool use_https = 3;
   */
  useHttps: boolean;

  /**
   * @generated from field: optional int32 http_method = 4;
   */
  httpMethod: number;

  /**
   * @generated from field: repeated ClientCloudFileUploadBlockDetails.HTTPHeaders request_headers = 5;
   */
  requestHeaders: ClientCloudFileUploadBlockDetails_HTTPHeaders[];

  /**
   * @generated from field: optional uint64 block_offset = 6;
   */
  blockOffset: bigint;

  /**
   * @generated from field: optional uint32 block_length = 7;
   */
  blockLength: number;

  /**
   * @generated from field: optional bytes explicit_body_data = 8;
   */
  explicitBodyData: Uint8Array;

  /**
   * @generated from field: optional bool may_parallelize = 9;
   */
  mayParallelize: boolean;
};

/**
 * Describes the message ClientCloudFileUploadBlockDetails.
 * Use `create(ClientCloudFileUploadBlockDetailsSchema)` to create a new message.
 */
export const ClientCloudFileUploadBlockDetailsSchema: GenMessage<ClientCloudFileUploadBlockDetails> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 27);

/**
 * @generated from message ClientCloudFileUploadBlockDetails.HTTPHeaders
 */
export type ClientCloudFileUploadBlockDetails_HTTPHeaders = Message<"ClientCloudFileUploadBlockDetails.HTTPHeaders"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional string value = 2;
   */
  value: string;
};

/**
 * Describes the message ClientCloudFileUploadBlockDetails.HTTPHeaders.
 * Use `create(ClientCloudFileUploadBlockDetails_HTTPHeadersSchema)` to create a new message.
 */
export const ClientCloudFileUploadBlockDetails_HTTPHeadersSchema: GenMessage<ClientCloudFileUploadBlockDetails_HTTPHeaders> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 27, 0);

/**
 * @generated from message CCloud_ClientBeginFileUpload_Response
 */
export type CCloud_ClientBeginFileUpload_Response = Message<"CCloud_ClientBeginFileUpload_Response"> & {
  /**
   * @generated from field: optional bool encrypt_file = 1;
   */
  encryptFile: boolean;

  /**
   * @generated from field: repeated ClientCloudFileUploadBlockDetails block_requests = 2;
   */
  blockRequests: ClientCloudFileUploadBlockDetails[];
};

/**
 * Describes the message CCloud_ClientBeginFileUpload_Response.
 * Use `create(CCloud_ClientBeginFileUpload_ResponseSchema)` to create a new message.
 */
export const CCloud_ClientBeginFileUpload_ResponseSchema: GenMessage<CCloud_ClientBeginFileUpload_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 28);

/**
 * @generated from message CCloud_ClientCommitFileUpload_Request
 */
export type CCloud_ClientCommitFileUpload_Request = Message<"CCloud_ClientCommitFileUpload_Request"> & {
  /**
   * @generated from field: optional bool transfer_succeeded = 1;
   */
  transferSucceeded: boolean;

  /**
   * @generated from field: optional uint32 appid = 2;
   */
  appid: number;

  /**
   * @generated from field: optional bytes file_sha = 3;
   */
  fileSha: Uint8Array;

  /**
   * @generated from field: optional string filename = 4;
   */
  filename: string;
};

/**
 * Describes the message CCloud_ClientCommitFileUpload_Request.
 * Use `create(CCloud_ClientCommitFileUpload_RequestSchema)` to create a new message.
 */
export const CCloud_ClientCommitFileUpload_RequestSchema: GenMessage<CCloud_ClientCommitFileUpload_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 29);

/**
 * @generated from message CCloud_ClientCommitFileUpload_Response
 */
export type CCloud_ClientCommitFileUpload_Response = Message<"CCloud_ClientCommitFileUpload_Response"> & {
  /**
   * @generated from field: optional bool file_committed = 1;
   */
  fileCommitted: boolean;
};

/**
 * Describes the message CCloud_ClientCommitFileUpload_Response.
 * Use `create(CCloud_ClientCommitFileUpload_ResponseSchema)` to create a new message.
 */
export const CCloud_ClientCommitFileUpload_ResponseSchema: GenMessage<CCloud_ClientCommitFileUpload_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 30);

/**
 * @generated from message CCloud_ClientFileDownload_Request
 */
export type CCloud_ClientFileDownload_Request = Message<"CCloud_ClientFileDownload_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional string filename = 2;
   */
  filename: string;

  /**
   * @generated from field: optional uint32 realm = 3;
   */
  realm: number;

  /**
   * @generated from field: optional bool force_proxy = 4;
   */
  forceProxy: boolean;
};

/**
 * Describes the message CCloud_ClientFileDownload_Request.
 * Use `create(CCloud_ClientFileDownload_RequestSchema)` to create a new message.
 */
export const CCloud_ClientFileDownload_RequestSchema: GenMessage<CCloud_ClientFileDownload_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 31);

/**
 * @generated from message CCloud_ClientFileDownload_Response
 */
export type CCloud_ClientFileDownload_Response = Message<"CCloud_ClientFileDownload_Response"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 file_size = 2;
   */
  fileSize: number;

  /**
   * @generated from field: optional uint32 raw_file_size = 3;
   */
  rawFileSize: number;

  /**
   * @generated from field: optional bytes sha_file = 4;
   */
  shaFile: Uint8Array;

  /**
   * @generated from field: optional uint64 time_stamp = 5;
   */
  timeStamp: bigint;

  /**
   * @generated from field: optional bool is_explicit_delete = 6;
   */
  isExplicitDelete: boolean;

  /**
   * @generated from field: optional string url_host = 7;
   */
  urlHost: string;

  /**
   * @generated from field: optional string url_path = 8;
   */
  urlPath: string;

  /**
   * @generated from field: optional bool use_https = 9;
   */
  useHttps: boolean;

  /**
   * @generated from field: repeated CCloud_ClientFileDownload_Response.HTTPHeaders request_headers = 10;
   */
  requestHeaders: CCloud_ClientFileDownload_Response_HTTPHeaders[];

  /**
   * @generated from field: optional bool encrypted = 11;
   */
  encrypted: boolean;
};

/**
 * Describes the message CCloud_ClientFileDownload_Response.
 * Use `create(CCloud_ClientFileDownload_ResponseSchema)` to create a new message.
 */
export const CCloud_ClientFileDownload_ResponseSchema: GenMessage<CCloud_ClientFileDownload_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 32);

/**
 * @generated from message CCloud_ClientFileDownload_Response.HTTPHeaders
 */
export type CCloud_ClientFileDownload_Response_HTTPHeaders = Message<"CCloud_ClientFileDownload_Response.HTTPHeaders"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional string value = 2;
   */
  value: string;
};

/**
 * Describes the message CCloud_ClientFileDownload_Response.HTTPHeaders.
 * Use `create(CCloud_ClientFileDownload_Response_HTTPHeadersSchema)` to create a new message.
 */
export const CCloud_ClientFileDownload_Response_HTTPHeadersSchema: GenMessage<CCloud_ClientFileDownload_Response_HTTPHeaders> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 32, 0);

/**
 * @generated from message CCloud_ClientDeleteFile_Request
 */
export type CCloud_ClientDeleteFile_Request = Message<"CCloud_ClientDeleteFile_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional string filename = 2;
   */
  filename: string;

  /**
   * @generated from field: optional bool is_explicit_delete = 3;
   */
  isExplicitDelete: boolean;

  /**
   * @generated from field: optional uint64 upload_batch_id = 4;
   */
  uploadBatchId: bigint;
};

/**
 * Describes the message CCloud_ClientDeleteFile_Request.
 * Use `create(CCloud_ClientDeleteFile_RequestSchema)` to create a new message.
 */
export const CCloud_ClientDeleteFile_RequestSchema: GenMessage<CCloud_ClientDeleteFile_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 33);

/**
 * @generated from message CCloud_ClientDeleteFile_Response
 */
export type CCloud_ClientDeleteFile_Response = Message<"CCloud_ClientDeleteFile_Response"> & {
};

/**
 * Describes the message CCloud_ClientDeleteFile_Response.
 * Use `create(CCloud_ClientDeleteFile_ResponseSchema)` to create a new message.
 */
export const CCloud_ClientDeleteFile_ResponseSchema: GenMessage<CCloud_ClientDeleteFile_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 34);

/**
 * @generated from message CCloud_ClientConflictResolution_Notification
 */
export type CCloud_ClientConflictResolution_Notification = Message<"CCloud_ClientConflictResolution_Notification"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional bool chose_local_files = 2;
   */
  choseLocalFiles: boolean;
};

/**
 * Describes the message CCloud_ClientConflictResolution_Notification.
 * Use `create(CCloud_ClientConflictResolution_NotificationSchema)` to create a new message.
 */
export const CCloud_ClientConflictResolution_NotificationSchema: GenMessage<CCloud_ClientConflictResolution_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 35);

/**
 * @generated from message CCloud_GetAppFileChangelist_Request
 */
export type CCloud_GetAppFileChangelist_Request = Message<"CCloud_GetAppFileChangelist_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint64 synced_change_number = 2;
   */
  syncedChangeNumber: bigint;
};

/**
 * Describes the message CCloud_GetAppFileChangelist_Request.
 * Use `create(CCloud_GetAppFileChangelist_RequestSchema)` to create a new message.
 */
export const CCloud_GetAppFileChangelist_RequestSchema: GenMessage<CCloud_GetAppFileChangelist_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 36);

/**
 * @generated from message CCloud_AppFileInfo
 */
export type CCloud_AppFileInfo = Message<"CCloud_AppFileInfo"> & {
  /**
   * @generated from field: optional string file_name = 1;
   */
  fileName: string;

  /**
   * @generated from field: optional bytes sha_file = 2;
   */
  shaFile: Uint8Array;

  /**
   * @generated from field: optional uint64 time_stamp = 3;
   */
  timeStamp: bigint;

  /**
   * @generated from field: optional uint32 raw_file_size = 4;
   */
  rawFileSize: number;

  /**
   * @generated from field: optional ECloudStoragePersistState persist_state = 5 [default = k_ECloudStoragePersistStatePersisted];
   */
  persistState: ECloudStoragePersistState;

  /**
   * @generated from field: optional uint32 platforms_to_sync = 6;
   */
  platformsToSync: number;

  /**
   * @generated from field: optional uint32 path_prefix_index = 7;
   */
  pathPrefixIndex: number;

  /**
   * @generated from field: optional uint32 machine_name_index = 8;
   */
  machineNameIndex: number;
};

/**
 * Describes the message CCloud_AppFileInfo.
 * Use `create(CCloud_AppFileInfoSchema)` to create a new message.
 */
export const CCloud_AppFileInfoSchema: GenMessage<CCloud_AppFileInfo> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 37);

/**
 * @generated from message CCloud_GetAppFileChangelist_Response
 */
export type CCloud_GetAppFileChangelist_Response = Message<"CCloud_GetAppFileChangelist_Response"> & {
  /**
   * @generated from field: optional uint64 current_change_number = 1;
   */
  currentChangeNumber: bigint;

  /**
   * @generated from field: repeated CCloud_AppFileInfo files = 2;
   */
  files: CCloud_AppFileInfo[];

  /**
   * @generated from field: optional bool is_only_delta = 3;
   */
  isOnlyDelta: boolean;

  /**
   * @generated from field: repeated string path_prefixes = 4;
   */
  pathPrefixes: string[];

  /**
   * @generated from field: repeated string machine_names = 5;
   */
  machineNames: string[];

  /**
   * @generated from field: optional uint64 app_buildid_hwm = 6;
   */
  appBuildidHwm: bigint;
};

/**
 * Describes the message CCloud_GetAppFileChangelist_Response.
 * Use `create(CCloud_GetAppFileChangelist_ResponseSchema)` to create a new message.
 */
export const CCloud_GetAppFileChangelist_ResponseSchema: GenMessage<CCloud_GetAppFileChangelist_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 38);

/**
 * @generated from message CCloud_AppSessionSuspend_Request
 */
export type CCloud_AppSessionSuspend_Request = Message<"CCloud_AppSessionSuspend_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint64 client_id = 2;
   */
  clientId: bigint;

  /**
   * @generated from field: optional string machine_name = 3;
   */
  machineName: string;

  /**
   * @generated from field: optional bool cloud_sync_completed = 4;
   */
  cloudSyncCompleted: boolean;
};

/**
 * Describes the message CCloud_AppSessionSuspend_Request.
 * Use `create(CCloud_AppSessionSuspend_RequestSchema)` to create a new message.
 */
export const CCloud_AppSessionSuspend_RequestSchema: GenMessage<CCloud_AppSessionSuspend_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 39);

/**
 * @generated from message CCloud_AppSessionSuspend_Response
 */
export type CCloud_AppSessionSuspend_Response = Message<"CCloud_AppSessionSuspend_Response"> & {
};

/**
 * Describes the message CCloud_AppSessionSuspend_Response.
 * Use `create(CCloud_AppSessionSuspend_ResponseSchema)` to create a new message.
 */
export const CCloud_AppSessionSuspend_ResponseSchema: GenMessage<CCloud_AppSessionSuspend_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 40);

/**
 * @generated from message CCloud_AppSessionResume_Request
 */
export type CCloud_AppSessionResume_Request = Message<"CCloud_AppSessionResume_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint64 client_id = 2;
   */
  clientId: bigint;
};

/**
 * Describes the message CCloud_AppSessionResume_Request.
 * Use `create(CCloud_AppSessionResume_RequestSchema)` to create a new message.
 */
export const CCloud_AppSessionResume_RequestSchema: GenMessage<CCloud_AppSessionResume_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 41);

/**
 * @generated from message CCloud_AppSessionResume_Response
 */
export type CCloud_AppSessionResume_Response = Message<"CCloud_AppSessionResume_Response"> & {
};

/**
 * Describes the message CCloud_AppSessionResume_Response.
 * Use `create(CCloud_AppSessionResume_ResponseSchema)` to create a new message.
 */
export const CCloud_AppSessionResume_ResponseSchema: GenMessage<CCloud_AppSessionResume_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 42);

/**
 * @generated from message CCloud_AppLaunchIntent_Request
 */
export type CCloud_AppLaunchIntent_Request = Message<"CCloud_AppLaunchIntent_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint64 client_id = 2;
   */
  clientId: bigint;

  /**
   * @generated from field: optional string machine_name = 3;
   */
  machineName: string;

  /**
   * @generated from field: optional bool ignore_pending_operations = 4;
   */
  ignorePendingOperations: boolean;

  /**
   * @generated from field: optional int32 os_type = 5;
   */
  osType: number;

  /**
   * @generated from field: optional int32 device_type = 6;
   */
  deviceType: number;
};

/**
 * Describes the message CCloud_AppLaunchIntent_Request.
 * Use `create(CCloud_AppLaunchIntent_RequestSchema)` to create a new message.
 */
export const CCloud_AppLaunchIntent_RequestSchema: GenMessage<CCloud_AppLaunchIntent_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 43);

/**
 * @generated from message CCloud_AppLaunchIntent_Response
 */
export type CCloud_AppLaunchIntent_Response = Message<"CCloud_AppLaunchIntent_Response"> & {
  /**
   * @generated from field: repeated CCloud_PendingRemoteOperation pending_remote_operations = 1;
   */
  pendingRemoteOperations: CCloud_PendingRemoteOperation[];
};

/**
 * Describes the message CCloud_AppLaunchIntent_Response.
 * Use `create(CCloud_AppLaunchIntent_ResponseSchema)` to create a new message.
 */
export const CCloud_AppLaunchIntent_ResponseSchema: GenMessage<CCloud_AppLaunchIntent_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 44);

/**
 * @generated from message CCloud_AppExitSyncDone_Notification
 */
export type CCloud_AppExitSyncDone_Notification = Message<"CCloud_AppExitSyncDone_Notification"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint64 client_id = 2;
   */
  clientId: bigint;

  /**
   * @generated from field: optional bool uploads_completed = 3;
   */
  uploadsCompleted: boolean;

  /**
   * @generated from field: optional bool uploads_required = 4;
   */
  uploadsRequired: boolean;
};

/**
 * Describes the message CCloud_AppExitSyncDone_Notification.
 * Use `create(CCloud_AppExitSyncDone_NotificationSchema)` to create a new message.
 */
export const CCloud_AppExitSyncDone_NotificationSchema: GenMessage<CCloud_AppExitSyncDone_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 45);

/**
 * @generated from message CCloud_ClientGetAppQuotaUsage_Request
 */
export type CCloud_ClientGetAppQuotaUsage_Request = Message<"CCloud_ClientGetAppQuotaUsage_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;
};

/**
 * Describes the message CCloud_ClientGetAppQuotaUsage_Request.
 * Use `create(CCloud_ClientGetAppQuotaUsage_RequestSchema)` to create a new message.
 */
export const CCloud_ClientGetAppQuotaUsage_RequestSchema: GenMessage<CCloud_ClientGetAppQuotaUsage_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 46);

/**
 * @generated from message CCloud_ClientGetAppQuotaUsage_Response
 */
export type CCloud_ClientGetAppQuotaUsage_Response = Message<"CCloud_ClientGetAppQuotaUsage_Response"> & {
  /**
   * @generated from field: optional uint32 existing_files = 1;
   */
  existingFiles: number;

  /**
   * @generated from field: optional uint64 existing_bytes = 2;
   */
  existingBytes: bigint;

  /**
   * @generated from field: optional uint32 max_num_files = 3;
   */
  maxNumFiles: number;

  /**
   * @generated from field: optional uint64 max_num_bytes = 4;
   */
  maxNumBytes: bigint;
};

/**
 * Describes the message CCloud_ClientGetAppQuotaUsage_Response.
 * Use `create(CCloud_ClientGetAppQuotaUsage_ResponseSchema)` to create a new message.
 */
export const CCloud_ClientGetAppQuotaUsage_ResponseSchema: GenMessage<CCloud_ClientGetAppQuotaUsage_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 47);

/**
 * @generated from message CCloud_AppCloudStateChange_Notification
 */
export type CCloud_AppCloudStateChange_Notification = Message<"CCloud_AppCloudStateChange_Notification"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint64 app_change_number = 2;
   */
  appChangeNumber: bigint;
};

/**
 * Describes the message CCloud_AppCloudStateChange_Notification.
 * Use `create(CCloud_AppCloudStateChange_NotificationSchema)` to create a new message.
 */
export const CCloud_AppCloudStateChange_NotificationSchema: GenMessage<CCloud_AppCloudStateChange_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 48);

/**
 * @generated from message CCloud_ClientLogUploadRequest_Notification
 */
export type CCloud_ClientLogUploadRequest_Notification = Message<"CCloud_ClientLogUploadRequest_Notification"> & {
  /**
   * @generated from field: optional uint64 request_id = 1;
   */
  requestId: bigint;
};

/**
 * Describes the message CCloud_ClientLogUploadRequest_Notification.
 * Use `create(CCloud_ClientLogUploadRequest_NotificationSchema)` to create a new message.
 */
export const CCloud_ClientLogUploadRequest_NotificationSchema: GenMessage<CCloud_ClientLogUploadRequest_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_cloud_steamclient, 49);

/**
 * @generated from service Cloud
 */
export const Cloud: GenService<{
  /**
   * @generated from rpc Cloud.ClientLogUploadCheck
   */
  clientLogUploadCheck: {
    methodKind: "unary";
    input: typeof CCloud_ClientLogUploadCheck_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc Cloud.ClientLogUploadComplete
   */
  clientLogUploadComplete: {
    methodKind: "unary";
    input: typeof CCloud_ClientLogUploadComplete_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc Cloud.BeginHTTPUpload
   */
  beginHTTPUpload: {
    methodKind: "unary";
    input: typeof CCloud_BeginHTTPUpload_RequestSchema;
    output: typeof CCloud_BeginHTTPUpload_ResponseSchema;
  },
  /**
   * @generated from rpc Cloud.CommitHTTPUpload
   */
  commitHTTPUpload: {
    methodKind: "unary";
    input: typeof CCloud_CommitHTTPUpload_RequestSchema;
    output: typeof CCloud_CommitHTTPUpload_ResponseSchema;
  },
  /**
   * @generated from rpc Cloud.BeginUGCUpload
   */
  beginUGCUpload: {
    methodKind: "unary";
    input: typeof CCloud_BeginUGCUpload_RequestSchema;
    output: typeof CCloud_BeginUGCUpload_ResponseSchema;
  },
  /**
   * @generated from rpc Cloud.CommitUGCUpload
   */
  commitUGCUpload: {
    methodKind: "unary";
    input: typeof CCloud_CommitUGCUpload_RequestSchema;
    output: typeof CCloud_CommitUGCUpload_ResponseSchema;
  },
  /**
   * @generated from rpc Cloud.GetFileDetails
   */
  getFileDetails: {
    methodKind: "unary";
    input: typeof CCloud_GetFileDetails_RequestSchema;
    output: typeof CCloud_GetFileDetails_ResponseSchema;
  },
  /**
   * @generated from rpc Cloud.EnumerateUserFiles
   */
  enumerateUserFiles: {
    methodKind: "unary";
    input: typeof CCloud_EnumerateUserFiles_RequestSchema;
    output: typeof CCloud_EnumerateUserFiles_ResponseSchema;
  },
  /**
   * @generated from rpc Cloud.Delete
   */
  delete: {
    methodKind: "unary";
    input: typeof CCloud_Delete_RequestSchema;
    output: typeof CCloud_Delete_ResponseSchema;
  },
  /**
   * @generated from rpc Cloud.GetClientEncryptionKey
   */
  getClientEncryptionKey: {
    methodKind: "unary";
    input: typeof CCloud_GetClientEncryptionKey_RequestSchema;
    output: typeof CCloud_GetClientEncryptionKey_ResponseSchema;
  },
  /**
   * @generated from rpc Cloud.CDNReport
   */
  cDNReport: {
    methodKind: "unary";
    input: typeof CCloud_CDNReport_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc Cloud.ExternalStorageTransferReport
   */
  externalStorageTransferReport: {
    methodKind: "unary";
    input: typeof CCloud_ExternalStorageTransferReport_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc Cloud.BeginAppUploadBatch
   */
  beginAppUploadBatch: {
    methodKind: "unary";
    input: typeof CCloud_BeginAppUploadBatch_RequestSchema;
    output: typeof CCloud_BeginAppUploadBatch_ResponseSchema;
  },
  /**
   * @generated from rpc Cloud.CompleteAppUploadBatch
   */
  completeAppUploadBatch: {
    methodKind: "unary";
    input: typeof CCloud_CompleteAppUploadBatch_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc Cloud.CompleteAppUploadBatchBlocking
   */
  completeAppUploadBatchBlocking: {
    methodKind: "unary";
    input: typeof CCloud_CompleteAppUploadBatch_RequestSchema;
    output: typeof CCloud_CompleteAppUploadBatch_ResponseSchema;
  },
  /**
   * @generated from rpc Cloud.ClientBeginFileUpload
   */
  clientBeginFileUpload: {
    methodKind: "unary";
    input: typeof CCloud_ClientBeginFileUpload_RequestSchema;
    output: typeof CCloud_ClientBeginFileUpload_ResponseSchema;
  },
  /**
   * @generated from rpc Cloud.ClientCommitFileUpload
   */
  clientCommitFileUpload: {
    methodKind: "unary";
    input: typeof CCloud_ClientCommitFileUpload_RequestSchema;
    output: typeof CCloud_ClientCommitFileUpload_ResponseSchema;
  },
  /**
   * @generated from rpc Cloud.ClientFileDownload
   */
  clientFileDownload: {
    methodKind: "unary";
    input: typeof CCloud_ClientFileDownload_RequestSchema;
    output: typeof CCloud_ClientFileDownload_ResponseSchema;
  },
  /**
   * @generated from rpc Cloud.ClientDeleteFile
   */
  clientDeleteFile: {
    methodKind: "unary";
    input: typeof CCloud_ClientDeleteFile_RequestSchema;
    output: typeof CCloud_ClientDeleteFile_ResponseSchema;
  },
  /**
   * @generated from rpc Cloud.ClientConflictResolution
   */
  clientConflictResolution: {
    methodKind: "unary";
    input: typeof CCloud_ClientConflictResolution_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc Cloud.GetAppFileChangelist
   */
  getAppFileChangelist: {
    methodKind: "unary";
    input: typeof CCloud_GetAppFileChangelist_RequestSchema;
    output: typeof CCloud_GetAppFileChangelist_ResponseSchema;
  },
  /**
   * @generated from rpc Cloud.SuspendAppSession
   */
  suspendAppSession: {
    methodKind: "unary";
    input: typeof CCloud_AppSessionSuspend_RequestSchema;
    output: typeof CCloud_AppSessionSuspend_ResponseSchema;
  },
  /**
   * @generated from rpc Cloud.ResumeAppSession
   */
  resumeAppSession: {
    methodKind: "unary";
    input: typeof CCloud_AppSessionResume_RequestSchema;
    output: typeof CCloud_AppSessionResume_ResponseSchema;
  },
  /**
   * @generated from rpc Cloud.SignalAppLaunchIntent
   */
  signalAppLaunchIntent: {
    methodKind: "unary";
    input: typeof CCloud_AppLaunchIntent_RequestSchema;
    output: typeof CCloud_AppLaunchIntent_ResponseSchema;
  },
  /**
   * @generated from rpc Cloud.SignalAppExitSyncDone
   */
  signalAppExitSyncDone: {
    methodKind: "unary";
    input: typeof CCloud_AppExitSyncDone_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc Cloud.ClientGetAppQuotaUsage
   */
  clientGetAppQuotaUsage: {
    methodKind: "unary";
    input: typeof CCloud_ClientGetAppQuotaUsage_RequestSchema;
    output: typeof CCloud_ClientGetAppQuotaUsage_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_cloud_steamclient, 0);

/**
 * @generated from service CloudClient
 */
export const CloudClient: GenService<{
  /**
   * @generated from rpc CloudClient.NotifyAppStateChange
   */
  notifyAppStateChange: {
    methodKind: "unary";
    input: typeof CCloud_AppCloudStateChange_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc CloudClient.ClientLogUploadRequest
   */
  clientLogUploadRequest: {
    methodKind: "unary";
    input: typeof CCloud_ClientLogUploadRequest_NotificationSchema;
    output: typeof NoResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_cloud_steamclient, 1);

