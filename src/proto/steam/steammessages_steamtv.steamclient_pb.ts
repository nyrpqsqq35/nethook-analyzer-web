// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_steamtv.steamclient.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_steammessages_base } from "./steammessages_base_pb";
import { file_steammessages_unified_base_steamclient } from "./steammessages_unified_base.steamclient_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_steamtv.steamclient.proto.
 */
export const file_steammessages_steamtv_steamclient: GenFile = /*@__PURE__*/
  fileDesc("", [file_steammessages_base, file_steammessages_unified_base_steamclient]);

/**
 * @generated from message CSteamTV_CreateBroadcastChannel_Request
 */
export type CSteamTV_CreateBroadcastChannel_Request = Message<"CSteamTV_CreateBroadcastChannel_Request"> & {
  /**
   * @generated from field: optional string unique_name = 1;
   */
  uniqueName: string;
};

/**
 * Describes the message CSteamTV_CreateBroadcastChannel_Request.
 * Use `create(CSteamTV_CreateBroadcastChannel_RequestSchema)` to create a new message.
 */
export const CSteamTV_CreateBroadcastChannel_RequestSchema: GenMessage<CSteamTV_CreateBroadcastChannel_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 0);

/**
 * @generated from message CSteamTV_CreateBroadcastChannel_Response
 */
export type CSteamTV_CreateBroadcastChannel_Response = Message<"CSteamTV_CreateBroadcastChannel_Response"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;
};

/**
 * Describes the message CSteamTV_CreateBroadcastChannel_Response.
 * Use `create(CSteamTV_CreateBroadcastChannel_ResponseSchema)` to create a new message.
 */
export const CSteamTV_CreateBroadcastChannel_ResponseSchema: GenMessage<CSteamTV_CreateBroadcastChannel_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 1);

/**
 * @generated from message CSteamTV_GetBroadcastChannelID_Request
 */
export type CSteamTV_GetBroadcastChannelID_Request = Message<"CSteamTV_GetBroadcastChannelID_Request"> & {
  /**
   * @generated from field: optional string unique_name = 1;
   */
  uniqueName: string;
};

/**
 * Describes the message CSteamTV_GetBroadcastChannelID_Request.
 * Use `create(CSteamTV_GetBroadcastChannelID_RequestSchema)` to create a new message.
 */
export const CSteamTV_GetBroadcastChannelID_RequestSchema: GenMessage<CSteamTV_GetBroadcastChannelID_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 2);

/**
 * @generated from message CSteamTV_GetBroadcastChannelID_Response
 */
export type CSteamTV_GetBroadcastChannelID_Response = Message<"CSteamTV_GetBroadcastChannelID_Response"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;

  /**
   * @generated from field: optional string unique_name = 2;
   */
  uniqueName: string;

  /**
   * @generated from field: optional fixed64 steamid = 3;
   */
  steamid: bigint;
};

/**
 * Describes the message CSteamTV_GetBroadcastChannelID_Response.
 * Use `create(CSteamTV_GetBroadcastChannelID_ResponseSchema)` to create a new message.
 */
export const CSteamTV_GetBroadcastChannelID_ResponseSchema: GenMessage<CSteamTV_GetBroadcastChannelID_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 3);

/**
 * @generated from message CSteamTV_SetBroadcastChannelProfile_Request
 */
export type CSteamTV_SetBroadcastChannelProfile_Request = Message<"CSteamTV_SetBroadcastChannelProfile_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;

  /**
   * @generated from field: optional string name = 2;
   */
  name: string;

  /**
   * @generated from field: optional string language = 3;
   */
  language: string;

  /**
   * @generated from field: optional string headline = 4;
   */
  headline: string;

  /**
   * @generated from field: optional string summary = 5;
   */
  summary: string;

  /**
   * @generated from field: optional string avatar_hash = 6;
   */
  avatarHash: string;

  /**
   * @generated from field: optional string schedule = 7;
   */
  schedule: string;

  /**
   * @generated from field: optional string rules = 8;
   */
  rules: string;

  /**
   * @generated from field: optional string panels = 9;
   */
  panels: string;
};

/**
 * Describes the message CSteamTV_SetBroadcastChannelProfile_Request.
 * Use `create(CSteamTV_SetBroadcastChannelProfile_RequestSchema)` to create a new message.
 */
export const CSteamTV_SetBroadcastChannelProfile_RequestSchema: GenMessage<CSteamTV_SetBroadcastChannelProfile_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 4);

/**
 * @generated from message CSteamTV_SetBroadcastChannelProfile_Response
 */
export type CSteamTV_SetBroadcastChannelProfile_Response = Message<"CSteamTV_SetBroadcastChannelProfile_Response"> & {
};

/**
 * Describes the message CSteamTV_SetBroadcastChannelProfile_Response.
 * Use `create(CSteamTV_SetBroadcastChannelProfile_ResponseSchema)` to create a new message.
 */
export const CSteamTV_SetBroadcastChannelProfile_ResponseSchema: GenMessage<CSteamTV_SetBroadcastChannelProfile_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 5);

/**
 * @generated from message CSteamTV_GetBroadcastChannelProfile_Request
 */
export type CSteamTV_GetBroadcastChannelProfile_Request = Message<"CSteamTV_GetBroadcastChannelProfile_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;
};

/**
 * Describes the message CSteamTV_GetBroadcastChannelProfile_Request.
 * Use `create(CSteamTV_GetBroadcastChannelProfile_RequestSchema)` to create a new message.
 */
export const CSteamTV_GetBroadcastChannelProfile_RequestSchema: GenMessage<CSteamTV_GetBroadcastChannelProfile_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 6);

/**
 * @generated from message CSteamTV_GetBroadcastChannelProfile_Response
 */
export type CSteamTV_GetBroadcastChannelProfile_Response = Message<"CSteamTV_GetBroadcastChannelProfile_Response"> & {
  /**
   * @generated from field: optional string unique_name = 1;
   */
  uniqueName: string;

  /**
   * @generated from field: optional fixed64 owner_steamid = 2;
   */
  ownerSteamid: bigint;

  /**
   * @generated from field: optional string name = 3;
   */
  name: string;

  /**
   * @generated from field: optional string language = 4;
   */
  language: string;

  /**
   * @generated from field: optional string headline = 5;
   */
  headline: string;

  /**
   * @generated from field: optional string summary = 6;
   */
  summary: string;

  /**
   * @generated from field: optional string schedule = 7;
   */
  schedule: string;

  /**
   * @generated from field: optional string rules = 8;
   */
  rules: string;

  /**
   * @generated from field: optional string panels = 9;
   */
  panels: string;

  /**
   * @generated from field: optional bool is_partnered = 10;
   */
  isPartnered: boolean;
};

/**
 * Describes the message CSteamTV_GetBroadcastChannelProfile_Response.
 * Use `create(CSteamTV_GetBroadcastChannelProfile_ResponseSchema)` to create a new message.
 */
export const CSteamTV_GetBroadcastChannelProfile_ResponseSchema: GenMessage<CSteamTV_GetBroadcastChannelProfile_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 7);

/**
 * @generated from message CSteamTV_SetBroadcastChannelImage_Request
 */
export type CSteamTV_SetBroadcastChannelImage_Request = Message<"CSteamTV_SetBroadcastChannelImage_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;

  /**
   * @generated from field: optional EBroadcastImageType image_type = 2 [default = k_EBroadcastImageType_None];
   */
  imageType: EBroadcastImageType;

  /**
   * @generated from field: optional uint32 image_index = 3;
   */
  imageIndex: number;

  /**
   * @generated from field: optional uint32 image_width = 4;
   */
  imageWidth: number;

  /**
   * @generated from field: optional uint32 image_height = 5;
   */
  imageHeight: number;

  /**
   * @generated from field: optional uint32 file_size = 6;
   */
  fileSize: number;

  /**
   * @generated from field: optional string file_extension = 7;
   */
  fileExtension: string;

  /**
   * @generated from field: optional string file_hash = 8;
   */
  fileHash: string;

  /**
   * @generated from field: optional bool undo = 9;
   */
  undo: boolean;
};

/**
 * Describes the message CSteamTV_SetBroadcastChannelImage_Request.
 * Use `create(CSteamTV_SetBroadcastChannelImage_RequestSchema)` to create a new message.
 */
export const CSteamTV_SetBroadcastChannelImage_RequestSchema: GenMessage<CSteamTV_SetBroadcastChannelImage_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 8);

/**
 * @generated from message CSteamTV_SetBroadcastChannelImage_Response
 */
export type CSteamTV_SetBroadcastChannelImage_Response = Message<"CSteamTV_SetBroadcastChannelImage_Response"> & {
  /**
   * @generated from field: optional string replace_image_hash = 1;
   */
  replaceImageHash: string;
};

/**
 * Describes the message CSteamTV_SetBroadcastChannelImage_Response.
 * Use `create(CSteamTV_SetBroadcastChannelImage_ResponseSchema)` to create a new message.
 */
export const CSteamTV_SetBroadcastChannelImage_ResponseSchema: GenMessage<CSteamTV_SetBroadcastChannelImage_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 9);

/**
 * @generated from message CSteamTV_GetBroadcastChannelImages_Request
 */
export type CSteamTV_GetBroadcastChannelImages_Request = Message<"CSteamTV_GetBroadcastChannelImages_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;

  /**
   * @generated from field: repeated EBroadcastImageType image_types = 2;
   */
  imageTypes: EBroadcastImageType[];
};

/**
 * Describes the message CSteamTV_GetBroadcastChannelImages_Request.
 * Use `create(CSteamTV_GetBroadcastChannelImages_RequestSchema)` to create a new message.
 */
export const CSteamTV_GetBroadcastChannelImages_RequestSchema: GenMessage<CSteamTV_GetBroadcastChannelImages_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 10);

/**
 * @generated from message CSteamTV_GetBroadcastChannelImages_Response
 */
export type CSteamTV_GetBroadcastChannelImages_Response = Message<"CSteamTV_GetBroadcastChannelImages_Response"> & {
  /**
   * @generated from field: repeated CSteamTV_GetBroadcastChannelImages_Response.Images images = 1;
   */
  images: CSteamTV_GetBroadcastChannelImages_Response_Images[];
};

/**
 * Describes the message CSteamTV_GetBroadcastChannelImages_Response.
 * Use `create(CSteamTV_GetBroadcastChannelImages_ResponseSchema)` to create a new message.
 */
export const CSteamTV_GetBroadcastChannelImages_ResponseSchema: GenMessage<CSteamTV_GetBroadcastChannelImages_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 11);

/**
 * @generated from message CSteamTV_GetBroadcastChannelImages_Response.Images
 */
export type CSteamTV_GetBroadcastChannelImages_Response_Images = Message<"CSteamTV_GetBroadcastChannelImages_Response.Images"> & {
  /**
   * @generated from field: optional EBroadcastImageType image_type = 1 [default = k_EBroadcastImageType_None];
   */
  imageType: EBroadcastImageType;

  /**
   * @generated from field: optional string image_path = 2;
   */
  imagePath: string;

  /**
   * @generated from field: optional uint32 image_index = 3;
   */
  imageIndex: number;
};

/**
 * Describes the message CSteamTV_GetBroadcastChannelImages_Response.Images.
 * Use `create(CSteamTV_GetBroadcastChannelImages_Response_ImagesSchema)` to create a new message.
 */
export const CSteamTV_GetBroadcastChannelImages_Response_ImagesSchema: GenMessage<CSteamTV_GetBroadcastChannelImages_Response_Images> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 11, 0);

/**
 * @generated from message CSteamTV_SetBroadcastChannelLinkRegions_Request
 */
export type CSteamTV_SetBroadcastChannelLinkRegions_Request = Message<"CSteamTV_SetBroadcastChannelLinkRegions_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;

  /**
   * @generated from field: repeated CSteamTV_SetBroadcastChannelLinkRegions_Request.Links links = 2;
   */
  links: CSteamTV_SetBroadcastChannelLinkRegions_Request_Links[];
};

/**
 * Describes the message CSteamTV_SetBroadcastChannelLinkRegions_Request.
 * Use `create(CSteamTV_SetBroadcastChannelLinkRegions_RequestSchema)` to create a new message.
 */
export const CSteamTV_SetBroadcastChannelLinkRegions_RequestSchema: GenMessage<CSteamTV_SetBroadcastChannelLinkRegions_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 12);

/**
 * @generated from message CSteamTV_SetBroadcastChannelLinkRegions_Request.Links
 */
export type CSteamTV_SetBroadcastChannelLinkRegions_Request_Links = Message<"CSteamTV_SetBroadcastChannelLinkRegions_Request.Links"> & {
  /**
   * @generated from field: optional uint32 link_index = 1;
   */
  linkIndex: number;

  /**
   * @generated from field: optional string url = 2;
   */
  url: string;

  /**
   * @generated from field: optional string link_description = 3;
   */
  linkDescription: string;

  /**
   * @generated from field: optional uint32 left = 4;
   */
  left: number;

  /**
   * @generated from field: optional uint32 top = 5;
   */
  top: number;

  /**
   * @generated from field: optional uint32 width = 6;
   */
  width: number;

  /**
   * @generated from field: optional uint32 height = 7;
   */
  height: number;
};

/**
 * Describes the message CSteamTV_SetBroadcastChannelLinkRegions_Request.Links.
 * Use `create(CSteamTV_SetBroadcastChannelLinkRegions_Request_LinksSchema)` to create a new message.
 */
export const CSteamTV_SetBroadcastChannelLinkRegions_Request_LinksSchema: GenMessage<CSteamTV_SetBroadcastChannelLinkRegions_Request_Links> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 12, 0);

/**
 * @generated from message CSteamTV_SetBroadcastChannelLinkRegions_Response
 */
export type CSteamTV_SetBroadcastChannelLinkRegions_Response = Message<"CSteamTV_SetBroadcastChannelLinkRegions_Response"> & {
};

/**
 * Describes the message CSteamTV_SetBroadcastChannelLinkRegions_Response.
 * Use `create(CSteamTV_SetBroadcastChannelLinkRegions_ResponseSchema)` to create a new message.
 */
export const CSteamTV_SetBroadcastChannelLinkRegions_ResponseSchema: GenMessage<CSteamTV_SetBroadcastChannelLinkRegions_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 13);

/**
 * @generated from message CSteamTV_GetBroadcastChannelLinks_Request
 */
export type CSteamTV_GetBroadcastChannelLinks_Request = Message<"CSteamTV_GetBroadcastChannelLinks_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;
};

/**
 * Describes the message CSteamTV_GetBroadcastChannelLinks_Request.
 * Use `create(CSteamTV_GetBroadcastChannelLinks_RequestSchema)` to create a new message.
 */
export const CSteamTV_GetBroadcastChannelLinks_RequestSchema: GenMessage<CSteamTV_GetBroadcastChannelLinks_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 14);

/**
 * @generated from message CSteamTV_GetBroadcastChannelLinks_Response
 */
export type CSteamTV_GetBroadcastChannelLinks_Response = Message<"CSteamTV_GetBroadcastChannelLinks_Response"> & {
  /**
   * @generated from field: repeated CSteamTV_GetBroadcastChannelLinks_Response.Links links = 1;
   */
  links: CSteamTV_GetBroadcastChannelLinks_Response_Links[];
};

/**
 * Describes the message CSteamTV_GetBroadcastChannelLinks_Response.
 * Use `create(CSteamTV_GetBroadcastChannelLinks_ResponseSchema)` to create a new message.
 */
export const CSteamTV_GetBroadcastChannelLinks_ResponseSchema: GenMessage<CSteamTV_GetBroadcastChannelLinks_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 15);

/**
 * @generated from message CSteamTV_GetBroadcastChannelLinks_Response.Links
 */
export type CSteamTV_GetBroadcastChannelLinks_Response_Links = Message<"CSteamTV_GetBroadcastChannelLinks_Response.Links"> & {
  /**
   * @generated from field: optional uint32 link_index = 1;
   */
  linkIndex: number;

  /**
   * @generated from field: optional string url = 2;
   */
  url: string;

  /**
   * @generated from field: optional string link_description = 3;
   */
  linkDescription: string;

  /**
   * @generated from field: optional uint32 left = 4;
   */
  left: number;

  /**
   * @generated from field: optional uint32 top = 5;
   */
  top: number;

  /**
   * @generated from field: optional uint32 width = 6;
   */
  width: number;

  /**
   * @generated from field: optional uint32 height = 7;
   */
  height: number;
};

/**
 * Describes the message CSteamTV_GetBroadcastChannelLinks_Response.Links.
 * Use `create(CSteamTV_GetBroadcastChannelLinks_Response_LinksSchema)` to create a new message.
 */
export const CSteamTV_GetBroadcastChannelLinks_Response_LinksSchema: GenMessage<CSteamTV_GetBroadcastChannelLinks_Response_Links> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 15, 0);

/**
 * @generated from message CSteamTV_GetBroadcastChannelBroadcasters_Request
 */
export type CSteamTV_GetBroadcastChannelBroadcasters_Request = Message<"CSteamTV_GetBroadcastChannelBroadcasters_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;
};

/**
 * Describes the message CSteamTV_GetBroadcastChannelBroadcasters_Request.
 * Use `create(CSteamTV_GetBroadcastChannelBroadcasters_RequestSchema)` to create a new message.
 */
export const CSteamTV_GetBroadcastChannelBroadcasters_RequestSchema: GenMessage<CSteamTV_GetBroadcastChannelBroadcasters_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 16);

/**
 * @generated from message CSteamTV_GetBroadcastChannelBroadcasters_Response
 */
export type CSteamTV_GetBroadcastChannelBroadcasters_Response = Message<"CSteamTV_GetBroadcastChannelBroadcasters_Response"> & {
  /**
   * @generated from field: repeated CSteamTV_GetBroadcastChannelBroadcasters_Response.Broadcaster broadcasters = 1;
   */
  broadcasters: CSteamTV_GetBroadcastChannelBroadcasters_Response_Broadcaster[];
};

/**
 * Describes the message CSteamTV_GetBroadcastChannelBroadcasters_Response.
 * Use `create(CSteamTV_GetBroadcastChannelBroadcasters_ResponseSchema)` to create a new message.
 */
export const CSteamTV_GetBroadcastChannelBroadcasters_ResponseSchema: GenMessage<CSteamTV_GetBroadcastChannelBroadcasters_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 17);

/**
 * @generated from message CSteamTV_GetBroadcastChannelBroadcasters_Response.Broadcaster
 */
export type CSteamTV_GetBroadcastChannelBroadcasters_Response_Broadcaster = Message<"CSteamTV_GetBroadcastChannelBroadcasters_Response.Broadcaster"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional string name = 2;
   */
  name: string;

  /**
   * @generated from field: optional string rtmp_token = 3;
   */
  rtmpToken: string;
};

/**
 * Describes the message CSteamTV_GetBroadcastChannelBroadcasters_Response.Broadcaster.
 * Use `create(CSteamTV_GetBroadcastChannelBroadcasters_Response_BroadcasterSchema)` to create a new message.
 */
export const CSteamTV_GetBroadcastChannelBroadcasters_Response_BroadcasterSchema: GenMessage<CSteamTV_GetBroadcastChannelBroadcasters_Response_Broadcaster> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 17, 0);

/**
 * @generated from message CSteamTV_GetFollowedChannels_Request
 */
export type CSteamTV_GetFollowedChannels_Request = Message<"CSteamTV_GetFollowedChannels_Request"> & {
};

/**
 * Describes the message CSteamTV_GetFollowedChannels_Request.
 * Use `create(CSteamTV_GetFollowedChannels_RequestSchema)` to create a new message.
 */
export const CSteamTV_GetFollowedChannels_RequestSchema: GenMessage<CSteamTV_GetFollowedChannels_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 18);

/**
 * @generated from message GetBroadcastChannelEntry
 */
export type GetBroadcastChannelEntry = Message<"GetBroadcastChannelEntry"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;

  /**
   * @generated from field: optional string unique_name = 2;
   */
  uniqueName: string;

  /**
   * @generated from field: optional string name = 3;
   */
  name: string;

  /**
   * @generated from field: optional uint32 appid = 4;
   */
  appid: number;

  /**
   * @generated from field: optional uint64 viewers = 5;
   */
  viewers: bigint;

  /**
   * @generated from field: optional uint64 views = 6;
   */
  views: bigint;

  /**
   * @generated from field: optional string thumbnail_url = 7;
   */
  thumbnailUrl: string;

  /**
   * @generated from field: optional uint64 followers = 8;
   */
  followers: bigint;

  /**
   * @generated from field: optional string headline = 9;
   */
  headline: string;

  /**
   * @generated from field: optional string avatar_url = 10;
   */
  avatarUrl: string;

  /**
   * @generated from field: optional fixed64 broadcaster_steamid = 11;
   */
  broadcasterSteamid: bigint;

  /**
   * @generated from field: optional uint64 subscribers = 12;
   */
  subscribers: bigint;

  /**
   * @generated from field: optional string background_url = 13;
   */
  backgroundUrl: string;

  /**
   * @generated from field: optional bool is_featured = 14;
   */
  isFeatured: boolean;

  /**
   * @generated from field: optional bool is_disabled = 15;
   */
  isDisabled: boolean;

  /**
   * @generated from field: optional bool is_live = 16;
   */
  isLive: boolean;

  /**
   * @generated from field: optional string language = 17;
   */
  language: string;

  /**
   * @generated from field: optional uint32 reports = 18;
   */
  reports: number;

  /**
   * @generated from field: optional bool is_partnered = 19;
   */
  isPartnered: boolean;
};

/**
 * Describes the message GetBroadcastChannelEntry.
 * Use `create(GetBroadcastChannelEntrySchema)` to create a new message.
 */
export const GetBroadcastChannelEntrySchema: GenMessage<GetBroadcastChannelEntry> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 19);

/**
 * @generated from message CSteamTV_GetFollowedChannels_Response
 */
export type CSteamTV_GetFollowedChannels_Response = Message<"CSteamTV_GetFollowedChannels_Response"> & {
  /**
   * @generated from field: repeated GetBroadcastChannelEntry results = 1;
   */
  results: GetBroadcastChannelEntry[];
};

/**
 * Describes the message CSteamTV_GetFollowedChannels_Response.
 * Use `create(CSteamTV_GetFollowedChannels_ResponseSchema)` to create a new message.
 */
export const CSteamTV_GetFollowedChannels_ResponseSchema: GenMessage<CSteamTV_GetFollowedChannels_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 20);

/**
 * @generated from message CSteamTV_GetSubscribedChannels_Request
 */
export type CSteamTV_GetSubscribedChannels_Request = Message<"CSteamTV_GetSubscribedChannels_Request"> & {
};

/**
 * Describes the message CSteamTV_GetSubscribedChannels_Request.
 * Use `create(CSteamTV_GetSubscribedChannels_RequestSchema)` to create a new message.
 */
export const CSteamTV_GetSubscribedChannels_RequestSchema: GenMessage<CSteamTV_GetSubscribedChannels_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 21);

/**
 * @generated from message CSteamTV_GetSubscribedChannels_Response
 */
export type CSteamTV_GetSubscribedChannels_Response = Message<"CSteamTV_GetSubscribedChannels_Response"> & {
  /**
   * @generated from field: repeated GetBroadcastChannelEntry results = 1;
   */
  results: GetBroadcastChannelEntry[];
};

/**
 * Describes the message CSteamTV_GetSubscribedChannels_Response.
 * Use `create(CSteamTV_GetSubscribedChannels_ResponseSchema)` to create a new message.
 */
export const CSteamTV_GetSubscribedChannels_ResponseSchema: GenMessage<CSteamTV_GetSubscribedChannels_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 22);

/**
 * @generated from message CSteamTV_GetBroadcastChannelStatus_Request
 */
export type CSteamTV_GetBroadcastChannelStatus_Request = Message<"CSteamTV_GetBroadcastChannelStatus_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;
};

/**
 * Describes the message CSteamTV_GetBroadcastChannelStatus_Request.
 * Use `create(CSteamTV_GetBroadcastChannelStatus_RequestSchema)` to create a new message.
 */
export const CSteamTV_GetBroadcastChannelStatus_RequestSchema: GenMessage<CSteamTV_GetBroadcastChannelStatus_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 23);

/**
 * @generated from message CSteamTV_GetBroadcastChannelStatus_Response
 */
export type CSteamTV_GetBroadcastChannelStatus_Response = Message<"CSteamTV_GetBroadcastChannelStatus_Response"> & {
  /**
   * @generated from field: optional bool is_live = 1;
   */
  isLive: boolean;

  /**
   * @generated from field: optional bool is_disabled = 2;
   */
  isDisabled: boolean;

  /**
   * @generated from field: optional uint32 appid = 3;
   */
  appid: number;

  /**
   * @generated from field: optional uint64 viewers = 4;
   */
  viewers: bigint;

  /**
   * @generated from field: optional uint64 views = 5;
   */
  views: bigint;

  /**
   * @generated from field: optional fixed64 broadcaster_steamid = 6;
   */
  broadcasterSteamid: bigint;

  /**
   * @generated from field: optional string thumbnail_url = 7;
   */
  thumbnailUrl: string;

  /**
   * @generated from field: optional uint64 followers = 8;
   */
  followers: bigint;

  /**
   * @generated from field: optional uint64 subscribers = 9;
   */
  subscribers: bigint;

  /**
   * @generated from field: optional string unique_name = 10;
   */
  uniqueName: string;

  /**
   * @generated from field: optional uint64 broadcast_session_id = 11;
   */
  broadcastSessionId: bigint;
};

/**
 * Describes the message CSteamTV_GetBroadcastChannelStatus_Response.
 * Use `create(CSteamTV_GetBroadcastChannelStatus_ResponseSchema)` to create a new message.
 */
export const CSteamTV_GetBroadcastChannelStatus_ResponseSchema: GenMessage<CSteamTV_GetBroadcastChannelStatus_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 24);

/**
 * @generated from message CSteamTV_FollowBroadcastChannel_Request
 */
export type CSteamTV_FollowBroadcastChannel_Request = Message<"CSteamTV_FollowBroadcastChannel_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;

  /**
   * @generated from field: optional bool undo = 2;
   */
  undo: boolean;
};

/**
 * Describes the message CSteamTV_FollowBroadcastChannel_Request.
 * Use `create(CSteamTV_FollowBroadcastChannel_RequestSchema)` to create a new message.
 */
export const CSteamTV_FollowBroadcastChannel_RequestSchema: GenMessage<CSteamTV_FollowBroadcastChannel_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 25);

/**
 * @generated from message CSteamTV_FollowBroadcastChannel_Response
 */
export type CSteamTV_FollowBroadcastChannel_Response = Message<"CSteamTV_FollowBroadcastChannel_Response"> & {
  /**
   * @generated from field: optional bool is_followed = 1;
   */
  isFollowed: boolean;
};

/**
 * Describes the message CSteamTV_FollowBroadcastChannel_Response.
 * Use `create(CSteamTV_FollowBroadcastChannel_ResponseSchema)` to create a new message.
 */
export const CSteamTV_FollowBroadcastChannel_ResponseSchema: GenMessage<CSteamTV_FollowBroadcastChannel_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 26);

/**
 * @generated from message CSteamTV_SubscribeBroadcastChannel_Request
 */
export type CSteamTV_SubscribeBroadcastChannel_Request = Message<"CSteamTV_SubscribeBroadcastChannel_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;
};

/**
 * Describes the message CSteamTV_SubscribeBroadcastChannel_Request.
 * Use `create(CSteamTV_SubscribeBroadcastChannel_RequestSchema)` to create a new message.
 */
export const CSteamTV_SubscribeBroadcastChannel_RequestSchema: GenMessage<CSteamTV_SubscribeBroadcastChannel_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 27);

/**
 * @generated from message CSteamTV_SubscribeBroadcastChannel_Response
 */
export type CSteamTV_SubscribeBroadcastChannel_Response = Message<"CSteamTV_SubscribeBroadcastChannel_Response"> & {
  /**
   * @generated from field: optional bool is_subscribed = 1;
   */
  isSubscribed: boolean;
};

/**
 * Describes the message CSteamTV_SubscribeBroadcastChannel_Response.
 * Use `create(CSteamTV_SubscribeBroadcastChannel_ResponseSchema)` to create a new message.
 */
export const CSteamTV_SubscribeBroadcastChannel_ResponseSchema: GenMessage<CSteamTV_SubscribeBroadcastChannel_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 28);

/**
 * @generated from message CSteamTV_GetBroadcastChannelClips_Request
 */
export type CSteamTV_GetBroadcastChannelClips_Request = Message<"CSteamTV_GetBroadcastChannelClips_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;
};

/**
 * Describes the message CSteamTV_GetBroadcastChannelClips_Request.
 * Use `create(CSteamTV_GetBroadcastChannelClips_RequestSchema)` to create a new message.
 */
export const CSteamTV_GetBroadcastChannelClips_RequestSchema: GenMessage<CSteamTV_GetBroadcastChannelClips_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 29);

/**
 * @generated from message CSteamTV_BroadcastClipInfo
 */
export type CSteamTV_BroadcastClipInfo = Message<"CSteamTV_BroadcastClipInfo"> & {
  /**
   * @generated from field: optional uint64 broadcast_clip_id = 1;
   */
  broadcastClipId: bigint;

  /**
   * @generated from field: optional uint64 channel_id = 2;
   */
  channelId: bigint;

  /**
   * @generated from field: optional uint32 app_id = 3;
   */
  appId: number;

  /**
   * @generated from field: optional fixed64 broadcaster_steamid = 4;
   */
  broadcasterSteamid: bigint;

  /**
   * @generated from field: optional fixed64 creator_steamid = 5;
   */
  creatorSteamid: bigint;

  /**
   * @generated from field: optional string video_description = 6;
   */
  videoDescription: string;

  /**
   * @generated from field: optional uint32 live_time = 7;
   */
  liveTime: number;

  /**
   * @generated from field: optional uint32 length_ms = 8;
   */
  lengthMs: number;

  /**
   * @generated from field: optional string thumbnail_path = 9;
   */
  thumbnailPath: string;
};

/**
 * Describes the message CSteamTV_BroadcastClipInfo.
 * Use `create(CSteamTV_BroadcastClipInfoSchema)` to create a new message.
 */
export const CSteamTV_BroadcastClipInfoSchema: GenMessage<CSteamTV_BroadcastClipInfo> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 30);

/**
 * @generated from message CSteamTV_GetBroadcastChannelClips_Response
 */
export type CSteamTV_GetBroadcastChannelClips_Response = Message<"CSteamTV_GetBroadcastChannelClips_Response"> & {
  /**
   * @generated from field: repeated CSteamTV_BroadcastClipInfo clips = 1;
   */
  clips: CSteamTV_BroadcastClipInfo[];

  /**
   * @generated from field: optional string thumbnail_host = 2;
   */
  thumbnailHost: string;
};

/**
 * Describes the message CSteamTV_GetBroadcastChannelClips_Response.
 * Use `create(CSteamTV_GetBroadcastChannelClips_ResponseSchema)` to create a new message.
 */
export const CSteamTV_GetBroadcastChannelClips_ResponseSchema: GenMessage<CSteamTV_GetBroadcastChannelClips_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 31);

/**
 * @generated from message CSteamTV_ReportBroadcastChannel_Request
 */
export type CSteamTV_ReportBroadcastChannel_Request = Message<"CSteamTV_ReportBroadcastChannel_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;

  /**
   * @generated from field: optional string reason = 2;
   */
  reason: string;
};

/**
 * Describes the message CSteamTV_ReportBroadcastChannel_Request.
 * Use `create(CSteamTV_ReportBroadcastChannel_RequestSchema)` to create a new message.
 */
export const CSteamTV_ReportBroadcastChannel_RequestSchema: GenMessage<CSteamTV_ReportBroadcastChannel_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 32);

/**
 * @generated from message CSteamTV_ReportBroadcastChannel_Response
 */
export type CSteamTV_ReportBroadcastChannel_Response = Message<"CSteamTV_ReportBroadcastChannel_Response"> & {
};

/**
 * Describes the message CSteamTV_ReportBroadcastChannel_Response.
 * Use `create(CSteamTV_ReportBroadcastChannel_ResponseSchema)` to create a new message.
 */
export const CSteamTV_ReportBroadcastChannel_ResponseSchema: GenMessage<CSteamTV_ReportBroadcastChannel_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 33);

/**
 * @generated from message CSteamTV_GetBroadcastChannelInteraction_Request
 */
export type CSteamTV_GetBroadcastChannelInteraction_Request = Message<"CSteamTV_GetBroadcastChannelInteraction_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;
};

/**
 * Describes the message CSteamTV_GetBroadcastChannelInteraction_Request.
 * Use `create(CSteamTV_GetBroadcastChannelInteraction_RequestSchema)` to create a new message.
 */
export const CSteamTV_GetBroadcastChannelInteraction_RequestSchema: GenMessage<CSteamTV_GetBroadcastChannelInteraction_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 34);

/**
 * @generated from message CSteamTV_GetBroadcastChannelInteraction_Response
 */
export type CSteamTV_GetBroadcastChannelInteraction_Response = Message<"CSteamTV_GetBroadcastChannelInteraction_Response"> & {
  /**
   * @generated from field: optional bool is_followed = 1;
   */
  isFollowed: boolean;

  /**
   * @generated from field: optional bool is_subscribed = 2;
   */
  isSubscribed: boolean;
};

/**
 * Describes the message CSteamTV_GetBroadcastChannelInteraction_Response.
 * Use `create(CSteamTV_GetBroadcastChannelInteraction_ResponseSchema)` to create a new message.
 */
export const CSteamTV_GetBroadcastChannelInteraction_ResponseSchema: GenMessage<CSteamTV_GetBroadcastChannelInteraction_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 35);

/**
 * @generated from message CSteamTV_GetGames_Request
 */
export type CSteamTV_GetGames_Request = Message<"CSteamTV_GetGames_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional EGetGamesAlgorithm algorithm = 2 [default = k_EGetGamesAlgorithm_Default];
   */
  algorithm: EGetGamesAlgorithm;

  /**
   * @generated from field: optional uint32 count = 3;
   */
  count: number;
};

/**
 * Describes the message CSteamTV_GetGames_Request.
 * Use `create(CSteamTV_GetGames_RequestSchema)` to create a new message.
 */
export const CSteamTV_GetGames_RequestSchema: GenMessage<CSteamTV_GetGames_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 36);

/**
 * @generated from message CSteamTV_Game
 */
export type CSteamTV_Game = Message<"CSteamTV_Game"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name: string;

  /**
   * @generated from field: optional string image = 3;
   */
  image: string;

  /**
   * @generated from field: optional uint64 viewers = 4;
   */
  viewers: bigint;

  /**
   * @generated from field: repeated GetBroadcastChannelEntry channels = 5;
   */
  channels: GetBroadcastChannelEntry[];

  /**
   * @generated from field: optional string release_date = 6;
   */
  releaseDate: string;

  /**
   * @generated from field: optional string developer = 7;
   */
  developer: string;

  /**
   * @generated from field: optional string publisher = 8;
   */
  publisher: string;
};

/**
 * Describes the message CSteamTV_Game.
 * Use `create(CSteamTV_GameSchema)` to create a new message.
 */
export const CSteamTV_GameSchema: GenMessage<CSteamTV_Game> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 37);

/**
 * @generated from message CSteamTV_GetGames_Response
 */
export type CSteamTV_GetGames_Response = Message<"CSteamTV_GetGames_Response"> & {
  /**
   * @generated from field: repeated CSteamTV_Game results = 1;
   */
  results: CSteamTV_Game[];
};

/**
 * Describes the message CSteamTV_GetGames_Response.
 * Use `create(CSteamTV_GetGames_ResponseSchema)` to create a new message.
 */
export const CSteamTV_GetGames_ResponseSchema: GenMessage<CSteamTV_GetGames_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 38);

/**
 * @generated from message CSteamTV_GetChannels_Request
 */
export type CSteamTV_GetChannels_Request = Message<"CSteamTV_GetChannels_Request"> & {
  /**
   * @generated from field: optional EGetChannelsAlgorithm algorithm = 1 [default = k_EGetChannelsAlgorithm_Default];
   */
  algorithm: EGetChannelsAlgorithm;

  /**
   * @generated from field: optional uint32 count = 2;
   */
  count: number;

  /**
   * @generated from field: optional uint32 appid = 3;
   */
  appid: number;
};

/**
 * Describes the message CSteamTV_GetChannels_Request.
 * Use `create(CSteamTV_GetChannels_RequestSchema)` to create a new message.
 */
export const CSteamTV_GetChannels_RequestSchema: GenMessage<CSteamTV_GetChannels_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 39);

/**
 * @generated from message CSteamTV_GetChannels_Response
 */
export type CSteamTV_GetChannels_Response = Message<"CSteamTV_GetChannels_Response"> & {
  /**
   * @generated from field: repeated GetBroadcastChannelEntry results = 1;
   */
  results: GetBroadcastChannelEntry[];
};

/**
 * Describes the message CSteamTV_GetChannels_Response.
 * Use `create(CSteamTV_GetChannels_ResponseSchema)` to create a new message.
 */
export const CSteamTV_GetChannels_ResponseSchema: GenMessage<CSteamTV_GetChannels_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 40);

/**
 * @generated from message CSteamTV_AddChatBan_Request
 */
export type CSteamTV_AddChatBan_Request = Message<"CSteamTV_AddChatBan_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;

  /**
   * @generated from field: optional fixed64 chatter_steamid = 2;
   */
  chatterSteamid: bigint;

  /**
   * @generated from field: optional uint32 duration = 3;
   */
  duration: number;

  /**
   * @generated from field: optional bool permanent = 4;
   */
  permanent: boolean;

  /**
   * @generated from field: optional bool undo = 5;
   */
  undo: boolean;
};

/**
 * Describes the message CSteamTV_AddChatBan_Request.
 * Use `create(CSteamTV_AddChatBan_RequestSchema)` to create a new message.
 */
export const CSteamTV_AddChatBan_RequestSchema: GenMessage<CSteamTV_AddChatBan_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 41);

/**
 * @generated from message CSteamTV_AddChatBan_Response
 */
export type CSteamTV_AddChatBan_Response = Message<"CSteamTV_AddChatBan_Response"> & {
};

/**
 * Describes the message CSteamTV_AddChatBan_Response.
 * Use `create(CSteamTV_AddChatBan_ResponseSchema)` to create a new message.
 */
export const CSteamTV_AddChatBan_ResponseSchema: GenMessage<CSteamTV_AddChatBan_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 42);

/**
 * @generated from message CSteamTV_GetChatBans_Request
 */
export type CSteamTV_GetChatBans_Request = Message<"CSteamTV_GetChatBans_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;
};

/**
 * Describes the message CSteamTV_GetChatBans_Request.
 * Use `create(CSteamTV_GetChatBans_RequestSchema)` to create a new message.
 */
export const CSteamTV_GetChatBans_RequestSchema: GenMessage<CSteamTV_GetChatBans_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 43);

/**
 * @generated from message CSteamTV_ChatBan
 */
export type CSteamTV_ChatBan = Message<"CSteamTV_ChatBan"> & {
  /**
   * @generated from field: optional fixed64 issuer_steamid = 1;
   */
  issuerSteamid: bigint;

  /**
   * @generated from field: optional fixed64 chatter_steamid = 2;
   */
  chatterSteamid: bigint;

  /**
   * @generated from field: optional string time_expires = 3;
   */
  timeExpires: string;

  /**
   * @generated from field: optional bool permanent = 4;
   */
  permanent: boolean;

  /**
   * @generated from field: optional string name = 5;
   */
  name: string;
};

/**
 * Describes the message CSteamTV_ChatBan.
 * Use `create(CSteamTV_ChatBanSchema)` to create a new message.
 */
export const CSteamTV_ChatBanSchema: GenMessage<CSteamTV_ChatBan> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 44);

/**
 * @generated from message CSteamTV_GetChatBans_Response
 */
export type CSteamTV_GetChatBans_Response = Message<"CSteamTV_GetChatBans_Response"> & {
  /**
   * @generated from field: repeated CSteamTV_ChatBan results = 1;
   */
  results: CSteamTV_ChatBan[];
};

/**
 * Describes the message CSteamTV_GetChatBans_Response.
 * Use `create(CSteamTV_GetChatBans_ResponseSchema)` to create a new message.
 */
export const CSteamTV_GetChatBans_ResponseSchema: GenMessage<CSteamTV_GetChatBans_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 45);

/**
 * @generated from message CSteamTV_AddChatModerator_Request
 */
export type CSteamTV_AddChatModerator_Request = Message<"CSteamTV_AddChatModerator_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;

  /**
   * @generated from field: optional fixed64 moderator_steamid = 2;
   */
  moderatorSteamid: bigint;

  /**
   * @generated from field: optional bool undo = 3;
   */
  undo: boolean;
};

/**
 * Describes the message CSteamTV_AddChatModerator_Request.
 * Use `create(CSteamTV_AddChatModerator_RequestSchema)` to create a new message.
 */
export const CSteamTV_AddChatModerator_RequestSchema: GenMessage<CSteamTV_AddChatModerator_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 46);

/**
 * @generated from message CSteamTV_AddChatModerator_Response
 */
export type CSteamTV_AddChatModerator_Response = Message<"CSteamTV_AddChatModerator_Response"> & {
};

/**
 * Describes the message CSteamTV_AddChatModerator_Response.
 * Use `create(CSteamTV_AddChatModerator_ResponseSchema)` to create a new message.
 */
export const CSteamTV_AddChatModerator_ResponseSchema: GenMessage<CSteamTV_AddChatModerator_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 47);

/**
 * @generated from message CSteamTV_GetChatModerators_Request
 */
export type CSteamTV_GetChatModerators_Request = Message<"CSteamTV_GetChatModerators_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;
};

/**
 * Describes the message CSteamTV_GetChatModerators_Request.
 * Use `create(CSteamTV_GetChatModerators_RequestSchema)` to create a new message.
 */
export const CSteamTV_GetChatModerators_RequestSchema: GenMessage<CSteamTV_GetChatModerators_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 48);

/**
 * @generated from message CSteamTV_ChatModerator
 */
export type CSteamTV_ChatModerator = Message<"CSteamTV_ChatModerator"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional string name = 2;
   */
  name: string;
};

/**
 * Describes the message CSteamTV_ChatModerator.
 * Use `create(CSteamTV_ChatModeratorSchema)` to create a new message.
 */
export const CSteamTV_ChatModeratorSchema: GenMessage<CSteamTV_ChatModerator> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 49);

/**
 * @generated from message CSteamTV_GetChatModerators_Response
 */
export type CSteamTV_GetChatModerators_Response = Message<"CSteamTV_GetChatModerators_Response"> & {
  /**
   * @generated from field: repeated CSteamTV_ChatModerator results = 1;
   */
  results: CSteamTV_ChatModerator[];
};

/**
 * Describes the message CSteamTV_GetChatModerators_Response.
 * Use `create(CSteamTV_GetChatModerators_ResponseSchema)` to create a new message.
 */
export const CSteamTV_GetChatModerators_ResponseSchema: GenMessage<CSteamTV_GetChatModerators_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 50);

/**
 * @generated from message CSteamTV_AddWordBan_Request
 */
export type CSteamTV_AddWordBan_Request = Message<"CSteamTV_AddWordBan_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;

  /**
   * @generated from field: optional string word = 2;
   */
  word: string;

  /**
   * @generated from field: optional bool undo = 3;
   */
  undo: boolean;
};

/**
 * Describes the message CSteamTV_AddWordBan_Request.
 * Use `create(CSteamTV_AddWordBan_RequestSchema)` to create a new message.
 */
export const CSteamTV_AddWordBan_RequestSchema: GenMessage<CSteamTV_AddWordBan_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 51);

/**
 * @generated from message CSteamTV_AddWordBan_Response
 */
export type CSteamTV_AddWordBan_Response = Message<"CSteamTV_AddWordBan_Response"> & {
};

/**
 * Describes the message CSteamTV_AddWordBan_Response.
 * Use `create(CSteamTV_AddWordBan_ResponseSchema)` to create a new message.
 */
export const CSteamTV_AddWordBan_ResponseSchema: GenMessage<CSteamTV_AddWordBan_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 52);

/**
 * @generated from message CSteamTV_GetWordBans_Request
 */
export type CSteamTV_GetWordBans_Request = Message<"CSteamTV_GetWordBans_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;
};

/**
 * Describes the message CSteamTV_GetWordBans_Request.
 * Use `create(CSteamTV_GetWordBans_RequestSchema)` to create a new message.
 */
export const CSteamTV_GetWordBans_RequestSchema: GenMessage<CSteamTV_GetWordBans_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 53);

/**
 * @generated from message CSteamTV_GetWordBans_Response
 */
export type CSteamTV_GetWordBans_Response = Message<"CSteamTV_GetWordBans_Response"> & {
  /**
   * @generated from field: repeated string results = 1;
   */
  results: string[];
};

/**
 * Describes the message CSteamTV_GetWordBans_Response.
 * Use `create(CSteamTV_GetWordBans_ResponseSchema)` to create a new message.
 */
export const CSteamTV_GetWordBans_ResponseSchema: GenMessage<CSteamTV_GetWordBans_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 54);

/**
 * @generated from message CSteamTV_JoinChat_Request
 */
export type CSteamTV_JoinChat_Request = Message<"CSteamTV_JoinChat_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;
};

/**
 * Describes the message CSteamTV_JoinChat_Request.
 * Use `create(CSteamTV_JoinChat_RequestSchema)` to create a new message.
 */
export const CSteamTV_JoinChat_RequestSchema: GenMessage<CSteamTV_JoinChat_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 55);

/**
 * @generated from message CSteamTV_JoinChat_Response
 */
export type CSteamTV_JoinChat_Response = Message<"CSteamTV_JoinChat_Response"> & {
  /**
   * @generated from field: optional fixed64 chat_id = 1;
   */
  chatId: bigint;

  /**
   * @generated from field: optional string view_url_template = 2;
   */
  viewUrlTemplate: string;

  /**
   * @generated from field: repeated uint64 flair_group_ids = 3;
   */
  flairGroupIds: bigint[];
};

/**
 * Describes the message CSteamTV_JoinChat_Response.
 * Use `create(CSteamTV_JoinChat_ResponseSchema)` to create a new message.
 */
export const CSteamTV_JoinChat_ResponseSchema: GenMessage<CSteamTV_JoinChat_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 56);

/**
 * @generated from message CSteamTV_Search_Request
 */
export type CSteamTV_Search_Request = Message<"CSteamTV_Search_Request"> & {
  /**
   * @generated from field: optional string term = 1;
   */
  term: string;
};

/**
 * Describes the message CSteamTV_Search_Request.
 * Use `create(CSteamTV_Search_RequestSchema)` to create a new message.
 */
export const CSteamTV_Search_RequestSchema: GenMessage<CSteamTV_Search_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 57);

/**
 * @generated from message CSteamTV_Search_Response
 */
export type CSteamTV_Search_Response = Message<"CSteamTV_Search_Response"> & {
  /**
   * @generated from field: repeated GetBroadcastChannelEntry results = 1;
   */
  results: GetBroadcastChannelEntry[];
};

/**
 * Describes the message CSteamTV_Search_Response.
 * Use `create(CSteamTV_Search_ResponseSchema)` to create a new message.
 */
export const CSteamTV_Search_ResponseSchema: GenMessage<CSteamTV_Search_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 58);

/**
 * @generated from message CSteamTV_GetSteamTVUserSettings_Request
 */
export type CSteamTV_GetSteamTVUserSettings_Request = Message<"CSteamTV_GetSteamTVUserSettings_Request"> & {
};

/**
 * Describes the message CSteamTV_GetSteamTVUserSettings_Request.
 * Use `create(CSteamTV_GetSteamTVUserSettings_RequestSchema)` to create a new message.
 */
export const CSteamTV_GetSteamTVUserSettings_RequestSchema: GenMessage<CSteamTV_GetSteamTVUserSettings_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 59);

/**
 * @generated from message CSteamTV_GetSteamTVUserSettings_Response
 */
export type CSteamTV_GetSteamTVUserSettings_Response = Message<"CSteamTV_GetSteamTVUserSettings_Response"> & {
  /**
   * @generated from field: optional bool stream_live_email = 1;
   */
  streamLiveEmail: boolean;

  /**
   * @generated from field: optional bool stream_live_notification = 2;
   */
  streamLiveNotification: boolean;
};

/**
 * Describes the message CSteamTV_GetSteamTVUserSettings_Response.
 * Use `create(CSteamTV_GetSteamTVUserSettings_ResponseSchema)` to create a new message.
 */
export const CSteamTV_GetSteamTVUserSettings_ResponseSchema: GenMessage<CSteamTV_GetSteamTVUserSettings_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 60);

/**
 * @generated from message CSteamTV_SetSteamTVUserSettings_Request
 */
export type CSteamTV_SetSteamTVUserSettings_Request = Message<"CSteamTV_SetSteamTVUserSettings_Request"> & {
  /**
   * @generated from field: optional bool stream_live_email = 1;
   */
  streamLiveEmail: boolean;

  /**
   * @generated from field: optional bool stream_live_notification = 2;
   */
  streamLiveNotification: boolean;
};

/**
 * Describes the message CSteamTV_SetSteamTVUserSettings_Request.
 * Use `create(CSteamTV_SetSteamTVUserSettings_RequestSchema)` to create a new message.
 */
export const CSteamTV_SetSteamTVUserSettings_RequestSchema: GenMessage<CSteamTV_SetSteamTVUserSettings_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 61);

/**
 * @generated from message CSteamTV_SetSteamTVUserSettings_Response
 */
export type CSteamTV_SetSteamTVUserSettings_Response = Message<"CSteamTV_SetSteamTVUserSettings_Response"> & {
};

/**
 * Describes the message CSteamTV_SetSteamTVUserSettings_Response.
 * Use `create(CSteamTV_SetSteamTVUserSettings_ResponseSchema)` to create a new message.
 */
export const CSteamTV_SetSteamTVUserSettings_ResponseSchema: GenMessage<CSteamTV_SetSteamTVUserSettings_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 62);

/**
 * @generated from message CSteamTV_GetMyBroadcastChannels_Request
 */
export type CSteamTV_GetMyBroadcastChannels_Request = Message<"CSteamTV_GetMyBroadcastChannels_Request"> & {
};

/**
 * Describes the message CSteamTV_GetMyBroadcastChannels_Request.
 * Use `create(CSteamTV_GetMyBroadcastChannels_RequestSchema)` to create a new message.
 */
export const CSteamTV_GetMyBroadcastChannels_RequestSchema: GenMessage<CSteamTV_GetMyBroadcastChannels_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 63);

/**
 * @generated from message CSteamTV_GetMyBroadcastChannels_Response
 */
export type CSteamTV_GetMyBroadcastChannels_Response = Message<"CSteamTV_GetMyBroadcastChannels_Response"> & {
  /**
   * @generated from field: repeated GetBroadcastChannelEntry results = 1;
   */
  results: GetBroadcastChannelEntry[];
};

/**
 * Describes the message CSteamTV_GetMyBroadcastChannels_Response.
 * Use `create(CSteamTV_GetMyBroadcastChannels_ResponseSchema)` to create a new message.
 */
export const CSteamTV_GetMyBroadcastChannels_ResponseSchema: GenMessage<CSteamTV_GetMyBroadcastChannels_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 64);

/**
 * @generated from message CSteamTV_GetHomePageContents_Request
 */
export type CSteamTV_GetHomePageContents_Request = Message<"CSteamTV_GetHomePageContents_Request"> & {
};

/**
 * Describes the message CSteamTV_GetHomePageContents_Request.
 * Use `create(CSteamTV_GetHomePageContents_RequestSchema)` to create a new message.
 */
export const CSteamTV_GetHomePageContents_RequestSchema: GenMessage<CSteamTV_GetHomePageContents_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 65);

/**
 * @generated from message CSteamTV_HomePageTemplate_Takeover
 */
export type CSteamTV_HomePageTemplate_Takeover = Message<"CSteamTV_HomePageTemplate_Takeover"> & {
  /**
   * @generated from field: repeated GetBroadcastChannelEntry broadcasts = 1;
   */
  broadcasts: GetBroadcastChannelEntry[];
};

/**
 * Describes the message CSteamTV_HomePageTemplate_Takeover.
 * Use `create(CSteamTV_HomePageTemplate_TakeoverSchema)` to create a new message.
 */
export const CSteamTV_HomePageTemplate_TakeoverSchema: GenMessage<CSteamTV_HomePageTemplate_Takeover> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 66);

/**
 * @generated from message CSteamTV_HomePageTemplate_SingleGame
 */
export type CSteamTV_HomePageTemplate_SingleGame = Message<"CSteamTV_HomePageTemplate_SingleGame"> & {
  /**
   * @generated from field: repeated GetBroadcastChannelEntry broadcasts = 1;
   */
  broadcasts: GetBroadcastChannelEntry[];

  /**
   * @generated from field: optional uint32 appid = 2;
   */
  appid: number;

  /**
   * @generated from field: optional string title = 3;
   */
  title: string;
};

/**
 * Describes the message CSteamTV_HomePageTemplate_SingleGame.
 * Use `create(CSteamTV_HomePageTemplate_SingleGameSchema)` to create a new message.
 */
export const CSteamTV_HomePageTemplate_SingleGameSchema: GenMessage<CSteamTV_HomePageTemplate_SingleGame> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 67);

/**
 * @generated from message GameListEntry
 */
export type GameListEntry = Message<"GameListEntry"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional string game_name = 2;
   */
  gameName: string;

  /**
   * @generated from field: optional GetBroadcastChannelEntry broadcast = 3;
   */
  broadcast?: GetBroadcastChannelEntry;
};

/**
 * Describes the message GameListEntry.
 * Use `create(GameListEntrySchema)` to create a new message.
 */
export const GameListEntrySchema: GenMessage<GameListEntry> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 68);

/**
 * @generated from message CSteamTV_HomePageTemplate_GameList
 */
export type CSteamTV_HomePageTemplate_GameList = Message<"CSteamTV_HomePageTemplate_GameList"> & {
  /**
   * @generated from field: repeated GameListEntry entries = 1;
   */
  entries: GameListEntry[];

  /**
   * @generated from field: optional string title = 2;
   */
  title: string;
};

/**
 * Describes the message CSteamTV_HomePageTemplate_GameList.
 * Use `create(CSteamTV_HomePageTemplate_GameListSchema)` to create a new message.
 */
export const CSteamTV_HomePageTemplate_GameListSchema: GenMessage<CSteamTV_HomePageTemplate_GameList> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 69);

/**
 * @generated from message CSteamTV_HomePageTemplate_QuickExplore
 */
export type CSteamTV_HomePageTemplate_QuickExplore = Message<"CSteamTV_HomePageTemplate_QuickExplore"> & {
  /**
   * @generated from field: repeated GetBroadcastChannelEntry broadcasts = 1;
   */
  broadcasts: GetBroadcastChannelEntry[];

  /**
   * @generated from field: optional string title = 2;
   */
  title: string;
};

/**
 * Describes the message CSteamTV_HomePageTemplate_QuickExplore.
 * Use `create(CSteamTV_HomePageTemplate_QuickExploreSchema)` to create a new message.
 */
export const CSteamTV_HomePageTemplate_QuickExploreSchema: GenMessage<CSteamTV_HomePageTemplate_QuickExplore> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 70);

/**
 * @generated from message CSteamTV_HomePageTemplate_ConveyorBelt
 */
export type CSteamTV_HomePageTemplate_ConveyorBelt = Message<"CSteamTV_HomePageTemplate_ConveyorBelt"> & {
  /**
   * @generated from field: repeated GetBroadcastChannelEntry broadcasts = 1;
   */
  broadcasts: GetBroadcastChannelEntry[];

  /**
   * @generated from field: optional string title = 2;
   */
  title: string;
};

/**
 * Describes the message CSteamTV_HomePageTemplate_ConveyorBelt.
 * Use `create(CSteamTV_HomePageTemplate_ConveyorBeltSchema)` to create a new message.
 */
export const CSteamTV_HomePageTemplate_ConveyorBeltSchema: GenMessage<CSteamTV_HomePageTemplate_ConveyorBelt> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 71);

/**
 * @generated from message CSteamTV_HomePageTemplate_WatchParty
 */
export type CSteamTV_HomePageTemplate_WatchParty = Message<"CSteamTV_HomePageTemplate_WatchParty"> & {
  /**
   * @generated from field: optional GetBroadcastChannelEntry broadcast = 1;
   */
  broadcast?: GetBroadcastChannelEntry;

  /**
   * @generated from field: optional string title = 2;
   */
  title: string;

  /**
   * @generated from field: optional uint64 chat_group_id = 3;
   */
  chatGroupId: bigint;
};

/**
 * Describes the message CSteamTV_HomePageTemplate_WatchParty.
 * Use `create(CSteamTV_HomePageTemplate_WatchPartySchema)` to create a new message.
 */
export const CSteamTV_HomePageTemplate_WatchPartySchema: GenMessage<CSteamTV_HomePageTemplate_WatchParty> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 72);

/**
 * @generated from message CSteamTV_HomePageTemplate_Developer
 */
export type CSteamTV_HomePageTemplate_Developer = Message<"CSteamTV_HomePageTemplate_Developer"> & {
  /**
   * @generated from field: optional GetBroadcastChannelEntry broadcast = 1;
   */
  broadcast?: GetBroadcastChannelEntry;

  /**
   * @generated from field: optional string title = 2;
   */
  title: string;
};

/**
 * Describes the message CSteamTV_HomePageTemplate_Developer.
 * Use `create(CSteamTV_HomePageTemplate_DeveloperSchema)` to create a new message.
 */
export const CSteamTV_HomePageTemplate_DeveloperSchema: GenMessage<CSteamTV_HomePageTemplate_Developer> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 73);

/**
 * @generated from message CSteamTV_HomePageTemplate_Event
 */
export type CSteamTV_HomePageTemplate_Event = Message<"CSteamTV_HomePageTemplate_Event"> & {
  /**
   * @generated from field: optional string title = 1;
   */
  title: string;
};

/**
 * Describes the message CSteamTV_HomePageTemplate_Event.
 * Use `create(CSteamTV_HomePageTemplate_EventSchema)` to create a new message.
 */
export const CSteamTV_HomePageTemplate_EventSchema: GenMessage<CSteamTV_HomePageTemplate_Event> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 74);

/**
 * @generated from message CSteamTV_HomePageContentRow
 */
export type CSteamTV_HomePageContentRow = Message<"CSteamTV_HomePageContentRow"> & {
  /**
   * @generated from field: optional ESteamTVContentTemplate template_type = 1 [default = k_ESteamTVContentTemplate_Invalid];
   */
  templateType: ESteamTVContentTemplate;

  /**
   * @generated from field: optional CSteamTV_HomePageTemplate_Takeover takeover = 2;
   */
  takeover?: CSteamTV_HomePageTemplate_Takeover;

  /**
   * @generated from field: optional CSteamTV_HomePageTemplate_SingleGame single_game = 3;
   */
  singleGame?: CSteamTV_HomePageTemplate_SingleGame;

  /**
   * @generated from field: optional CSteamTV_HomePageTemplate_GameList game_list = 4;
   */
  gameList?: CSteamTV_HomePageTemplate_GameList;

  /**
   * @generated from field: optional CSteamTV_HomePageTemplate_QuickExplore quick_explore = 5;
   */
  quickExplore?: CSteamTV_HomePageTemplate_QuickExplore;

  /**
   * @generated from field: optional CSteamTV_HomePageTemplate_ConveyorBelt conveyor_belt = 6;
   */
  conveyorBelt?: CSteamTV_HomePageTemplate_ConveyorBelt;

  /**
   * @generated from field: optional CSteamTV_HomePageTemplate_WatchParty watch_party = 7;
   */
  watchParty?: CSteamTV_HomePageTemplate_WatchParty;

  /**
   * @generated from field: optional CSteamTV_HomePageTemplate_Developer developer = 8;
   */
  developer?: CSteamTV_HomePageTemplate_Developer;

  /**
   * @generated from field: optional CSteamTV_HomePageTemplate_Event event = 9;
   */
  event?: CSteamTV_HomePageTemplate_Event;
};

/**
 * Describes the message CSteamTV_HomePageContentRow.
 * Use `create(CSteamTV_HomePageContentRowSchema)` to create a new message.
 */
export const CSteamTV_HomePageContentRowSchema: GenMessage<CSteamTV_HomePageContentRow> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 75);

/**
 * @generated from message CSteamTV_GetHomePageContents_Response
 */
export type CSteamTV_GetHomePageContents_Response = Message<"CSteamTV_GetHomePageContents_Response"> & {
  /**
   * @generated from field: repeated CSteamTV_HomePageContentRow rows = 1;
   */
  rows: CSteamTV_HomePageContentRow[];
};

/**
 * Describes the message CSteamTV_GetHomePageContents_Response.
 * Use `create(CSteamTV_GetHomePageContents_ResponseSchema)` to create a new message.
 */
export const CSteamTV_GetHomePageContents_ResponseSchema: GenMessage<CSteamTV_GetHomePageContents_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 76);

/**
 * @generated from message CSteamTV_AppCheer_SingleCheerType
 */
export type CSteamTV_AppCheer_SingleCheerType = Message<"CSteamTV_AppCheer_SingleCheerType"> & {
  /**
   * @generated from field: optional uint32 cheer_type = 1;
   */
  cheerType: number;

  /**
   * @generated from field: optional uint32 cheer_amount = 2;
   */
  cheerAmount: number;
};

/**
 * Describes the message CSteamTV_AppCheer_SingleCheerType.
 * Use `create(CSteamTV_AppCheer_SingleCheerTypeSchema)` to create a new message.
 */
export const CSteamTV_AppCheer_SingleCheerTypeSchema: GenMessage<CSteamTV_AppCheer_SingleCheerType> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 77);

/**
 * @generated from message CSteamTV_AppCheer_Request
 */
export type CSteamTV_AppCheer_Request = Message<"CSteamTV_AppCheer_Request"> & {
  /**
   * @generated from field: optional uint32 app_id = 1;
   */
  appId: number;

  /**
   * @generated from field: optional fixed64 cheer_target_id = 2;
   */
  cheerTargetId: bigint;

  /**
   * @generated from field: repeated CSteamTV_AppCheer_SingleCheerType cheers = 3;
   */
  cheers: CSteamTV_AppCheer_SingleCheerType[];
};

/**
 * Describes the message CSteamTV_AppCheer_Request.
 * Use `create(CSteamTV_AppCheer_RequestSchema)` to create a new message.
 */
export const CSteamTV_AppCheer_RequestSchema: GenMessage<CSteamTV_AppCheer_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 78);

/**
 * @generated from message CSteamTV_AppCheer_Response
 */
export type CSteamTV_AppCheer_Response = Message<"CSteamTV_AppCheer_Response"> & {
  /**
   * @generated from field: optional uint32 aggregation_delay_ms = 1;
   */
  aggregationDelayMs: number;
};

/**
 * Describes the message CSteamTV_AppCheer_Response.
 * Use `create(CSteamTV_AppCheer_ResponseSchema)` to create a new message.
 */
export const CSteamTV_AppCheer_ResponseSchema: GenMessage<CSteamTV_AppCheer_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_steamtv_steamclient, 79);

/**
 * @generated from enum EBroadcastImageType
 */
export enum EBroadcastImageType {
  /**
   * @generated from enum value: k_EBroadcastImageType_None = 0;
   */
  k_EBroadcastImageType_None = 0,

  /**
   * @generated from enum value: k_EBroadcastImageType_Offline = 1;
   */
  k_EBroadcastImageType_Offline = 1,

  /**
   * @generated from enum value: k_EBroadcastImageType_Standby = 2;
   */
  k_EBroadcastImageType_Standby = 2,

  /**
   * @generated from enum value: k_EBroadcastImageType_Avatar = 3;
   */
  k_EBroadcastImageType_Avatar = 3,

  /**
   * @generated from enum value: k_EBroadcastImageType_Summary = 4;
   */
  k_EBroadcastImageType_Summary = 4,

  /**
   * @generated from enum value: k_EBroadcastImageType_Background = 5;
   */
  k_EBroadcastImageType_Background = 5,

  /**
   * @generated from enum value: k_EBroadcastImageType_Emoticon = 6;
   */
  k_EBroadcastImageType_Emoticon = 6,
}

/**
 * Describes the enum EBroadcastImageType.
 */
export const EBroadcastImageTypeSchema: GenEnum<EBroadcastImageType> = /*@__PURE__*/
  enumDesc(file_steammessages_steamtv_steamclient, 0);

/**
 * @generated from enum EGetGamesAlgorithm
 */
export enum EGetGamesAlgorithm {
  /**
   * @generated from enum value: k_EGetGamesAlgorithm_Default = 1;
   */
  k_EGetGamesAlgorithm_Default = 1,

  /**
   * @generated from enum value: k_EGetGamesAlgorithm_MostPlayed = 2;
   */
  k_EGetGamesAlgorithm_MostPlayed = 2,

  /**
   * @generated from enum value: k_EGetGamesAlgorithm_PopularNew = 3;
   */
  k_EGetGamesAlgorithm_PopularNew = 3,
}

/**
 * Describes the enum EGetGamesAlgorithm.
 */
export const EGetGamesAlgorithmSchema: GenEnum<EGetGamesAlgorithm> = /*@__PURE__*/
  enumDesc(file_steammessages_steamtv_steamclient, 1);

/**
 * @generated from enum EGetChannelsAlgorithm
 */
export enum EGetChannelsAlgorithm {
  /**
   * @generated from enum value: k_EGetChannelsAlgorithm_Default = 1;
   */
  k_EGetChannelsAlgorithm_Default = 1,

  /**
   * @generated from enum value: k_EGetChannelsAlgorithm_Friends = 2;
   */
  k_EGetChannelsAlgorithm_Friends = 2,

  /**
   * @generated from enum value: k_EGetChannelsAlgorithm_Featured = 3;
   */
  k_EGetChannelsAlgorithm_Featured = 3,

  /**
   * @generated from enum value: k_EGetChannelsAlgorithm_Developer = 4;
   */
  k_EGetChannelsAlgorithm_Developer = 4,

  /**
   * @generated from enum value: k_EGetChannelsAlgorithm_Following = 5;
   */
  k_EGetChannelsAlgorithm_Following = 5,
}

/**
 * Describes the enum EGetChannelsAlgorithm.
 */
export const EGetChannelsAlgorithmSchema: GenEnum<EGetChannelsAlgorithm> = /*@__PURE__*/
  enumDesc(file_steammessages_steamtv_steamclient, 2);

/**
 * @generated from enum ESteamTVContentTemplate
 */
export enum ESteamTVContentTemplate {
  /**
   * @generated from enum value: k_ESteamTVContentTemplate_Invalid = 0;
   */
  k_ESteamTVContentTemplate_Invalid = 0,

  /**
   * @generated from enum value: k_ESteamTVContentTemplate_Takeover = 1;
   */
  k_ESteamTVContentTemplate_Takeover = 1,

  /**
   * @generated from enum value: k_ESteamTVContentTemplate_SingleGame = 2;
   */
  k_ESteamTVContentTemplate_SingleGame = 2,

  /**
   * @generated from enum value: k_ESteamTVContentTemplate_GameList = 3;
   */
  k_ESteamTVContentTemplate_GameList = 3,

  /**
   * @generated from enum value: k_ESteamTVContentTemplate_QuickExplore = 4;
   */
  k_ESteamTVContentTemplate_QuickExplore = 4,

  /**
   * @generated from enum value: k_ESteamTVContentTemplate_ConveyorBelt = 5;
   */
  k_ESteamTVContentTemplate_ConveyorBelt = 5,

  /**
   * @generated from enum value: k_ESteamTVContentTemplate_WatchParty = 6;
   */
  k_ESteamTVContentTemplate_WatchParty = 6,

  /**
   * @generated from enum value: k_ESteamTVContentTemplate_Developer = 7;
   */
  k_ESteamTVContentTemplate_Developer = 7,

  /**
   * @generated from enum value: k_ESteamTVContentTemplate_Event = 8;
   */
  k_ESteamTVContentTemplate_Event = 8,
}

/**
 * Describes the enum ESteamTVContentTemplate.
 */
export const ESteamTVContentTemplateSchema: GenEnum<ESteamTVContentTemplate> = /*@__PURE__*/
  enumDesc(file_steammessages_steamtv_steamclient, 3);

/**
 * @generated from service SteamTV
 */
export const SteamTV: GenService<{
  /**
   * @generated from rpc SteamTV.CreateBroadcastChannel
   */
  createBroadcastChannel: {
    methodKind: "unary";
    input: typeof CSteamTV_CreateBroadcastChannel_RequestSchema;
    output: typeof CSteamTV_CreateBroadcastChannel_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.GetBroadcastChannelID
   */
  getBroadcastChannelID: {
    methodKind: "unary";
    input: typeof CSteamTV_GetBroadcastChannelID_RequestSchema;
    output: typeof CSteamTV_GetBroadcastChannelID_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.SetBroadcastChannelProfile
   */
  setBroadcastChannelProfile: {
    methodKind: "unary";
    input: typeof CSteamTV_SetBroadcastChannelProfile_RequestSchema;
    output: typeof CSteamTV_SetBroadcastChannelProfile_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.GetBroadcastChannelProfile
   */
  getBroadcastChannelProfile: {
    methodKind: "unary";
    input: typeof CSteamTV_GetBroadcastChannelProfile_RequestSchema;
    output: typeof CSteamTV_GetBroadcastChannelProfile_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.SetBroadcastChannelImage
   */
  setBroadcastChannelImage: {
    methodKind: "unary";
    input: typeof CSteamTV_SetBroadcastChannelImage_RequestSchema;
    output: typeof CSteamTV_SetBroadcastChannelImage_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.GetBroadcastChannelImages
   */
  getBroadcastChannelImages: {
    methodKind: "unary";
    input: typeof CSteamTV_GetBroadcastChannelImages_RequestSchema;
    output: typeof CSteamTV_GetBroadcastChannelImages_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.SetBroadcastChannelLinkRegions
   */
  setBroadcastChannelLinkRegions: {
    methodKind: "unary";
    input: typeof CSteamTV_SetBroadcastChannelLinkRegions_RequestSchema;
    output: typeof CSteamTV_SetBroadcastChannelLinkRegions_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.GetBroadcastChannelLinks
   */
  getBroadcastChannelLinks: {
    methodKind: "unary";
    input: typeof CSteamTV_GetBroadcastChannelLinks_RequestSchema;
    output: typeof CSteamTV_GetBroadcastChannelLinks_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.GetBroadcastChannelBroadcasters
   */
  getBroadcastChannelBroadcasters: {
    methodKind: "unary";
    input: typeof CSteamTV_GetBroadcastChannelBroadcasters_RequestSchema;
    output: typeof CSteamTV_GetBroadcastChannelBroadcasters_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.GetFollowedChannels
   */
  getFollowedChannels: {
    methodKind: "unary";
    input: typeof CSteamTV_GetFollowedChannels_RequestSchema;
    output: typeof CSteamTV_GetFollowedChannels_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.GetSubscribedChannels
   */
  getSubscribedChannels: {
    methodKind: "unary";
    input: typeof CSteamTV_GetSubscribedChannels_RequestSchema;
    output: typeof CSteamTV_GetSubscribedChannels_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.GetBroadcastChannelStatus
   */
  getBroadcastChannelStatus: {
    methodKind: "unary";
    input: typeof CSteamTV_GetBroadcastChannelStatus_RequestSchema;
    output: typeof CSteamTV_GetBroadcastChannelStatus_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.FollowBroadcastChannel
   */
  followBroadcastChannel: {
    methodKind: "unary";
    input: typeof CSteamTV_FollowBroadcastChannel_RequestSchema;
    output: typeof CSteamTV_FollowBroadcastChannel_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.SubscribeBroadcastChannel
   */
  subscribeBroadcastChannel: {
    methodKind: "unary";
    input: typeof CSteamTV_SubscribeBroadcastChannel_RequestSchema;
    output: typeof CSteamTV_SubscribeBroadcastChannel_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.GetBroadcastChannelClips
   */
  getBroadcastChannelClips: {
    methodKind: "unary";
    input: typeof CSteamTV_GetBroadcastChannelClips_RequestSchema;
    output: typeof CSteamTV_GetBroadcastChannelClips_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.ReportBroadcastChannel
   */
  reportBroadcastChannel: {
    methodKind: "unary";
    input: typeof CSteamTV_ReportBroadcastChannel_RequestSchema;
    output: typeof CSteamTV_ReportBroadcastChannel_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.GetBroadcastChannelInteraction
   */
  getBroadcastChannelInteraction: {
    methodKind: "unary";
    input: typeof CSteamTV_GetBroadcastChannelInteraction_RequestSchema;
    output: typeof CSteamTV_GetBroadcastChannelInteraction_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.GetGames
   */
  getGames: {
    methodKind: "unary";
    input: typeof CSteamTV_GetGames_RequestSchema;
    output: typeof CSteamTV_GetGames_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.GetChannels
   */
  getChannels: {
    methodKind: "unary";
    input: typeof CSteamTV_GetChannels_RequestSchema;
    output: typeof CSteamTV_GetChannels_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.AddChatBan
   */
  addChatBan: {
    methodKind: "unary";
    input: typeof CSteamTV_AddChatBan_RequestSchema;
    output: typeof CSteamTV_AddChatBan_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.GetChatBans
   */
  getChatBans: {
    methodKind: "unary";
    input: typeof CSteamTV_GetChatBans_RequestSchema;
    output: typeof CSteamTV_GetChatBans_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.AddChatModerator
   */
  addChatModerator: {
    methodKind: "unary";
    input: typeof CSteamTV_AddChatModerator_RequestSchema;
    output: typeof CSteamTV_AddChatModerator_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.GetChatModerators
   */
  getChatModerators: {
    methodKind: "unary";
    input: typeof CSteamTV_GetChatModerators_RequestSchema;
    output: typeof CSteamTV_GetChatModerators_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.AddWordBan
   */
  addWordBan: {
    methodKind: "unary";
    input: typeof CSteamTV_AddWordBan_RequestSchema;
    output: typeof CSteamTV_AddWordBan_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.GetWordBans
   */
  getWordBans: {
    methodKind: "unary";
    input: typeof CSteamTV_GetWordBans_RequestSchema;
    output: typeof CSteamTV_GetWordBans_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.JoinChat
   */
  joinChat: {
    methodKind: "unary";
    input: typeof CSteamTV_JoinChat_RequestSchema;
    output: typeof CSteamTV_JoinChat_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.Search
   */
  search: {
    methodKind: "unary";
    input: typeof CSteamTV_Search_RequestSchema;
    output: typeof CSteamTV_Search_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.GetSteamTVUserSettings
   */
  getSteamTVUserSettings: {
    methodKind: "unary";
    input: typeof CSteamTV_GetSteamTVUserSettings_RequestSchema;
    output: typeof CSteamTV_GetSteamTVUserSettings_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.SetSteamTVUserSettings
   */
  setSteamTVUserSettings: {
    methodKind: "unary";
    input: typeof CSteamTV_SetSteamTVUserSettings_RequestSchema;
    output: typeof CSteamTV_SetSteamTVUserSettings_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.GetMyBroadcastChannels
   */
  getMyBroadcastChannels: {
    methodKind: "unary";
    input: typeof CSteamTV_GetMyBroadcastChannels_RequestSchema;
    output: typeof CSteamTV_GetMyBroadcastChannels_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.GetHomePageContents
   */
  getHomePageContents: {
    methodKind: "unary";
    input: typeof CSteamTV_GetHomePageContents_RequestSchema;
    output: typeof CSteamTV_GetHomePageContents_ResponseSchema;
  },
  /**
   * @generated from rpc SteamTV.AppCheer
   */
  appCheer: {
    methodKind: "unary";
    input: typeof CSteamTV_AppCheer_RequestSchema;
    output: typeof CSteamTV_AppCheer_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_steamtv_steamclient, 0);

