// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_clientserver_login.proto (syntax proto2)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { CMsgIPAddress } from "./steammessages_base_pb";
import { file_steammessages_base } from "./steammessages_base_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_clientserver_login.proto.
 */
export const file_steammessages_clientserver_login: GenFile = /*@__PURE__*/
  fileDesc("CiZzdGVhbW1lc3NhZ2VzX2NsaWVudHNlcnZlcl9sb2dpbi5wcm90byIpChNDTXNnQ2xpZW50SGVhcnRCZWF0EhIKCnNlbmRfcmVwbHkYASABKAgiRAogQ01zZ0NsaWVudFNlcnZlclRpbWVzdGFtcFJlcXVlc3QSIAoYY2xpZW50X3JlcXVlc3RfdGltZXN0YW1wGAEgASgEImIKIUNNc2dDbGllbnRTZXJ2ZXJUaW1lc3RhbXBSZXNwb25zZRIgChhjbGllbnRfcmVxdWVzdF90aW1lc3RhbXAYASABKAQSGwoTc2VydmVyX3RpbWVzdGFtcF9tcxgCIAEoBCJhChBDTXNnQ2xpZW50U2VjcmV0Eg8KB3ZlcnNpb24YASABKA0SDQoFYXBwaWQYAiABKA0SEAoIZGV2aWNlaWQYAyABKA0SDQoFbm9uY2UYBCABKAYSDAoEaG1hYxgFIAEoDCIrCg9DTXNnQ2xpZW50SGVsbG8SGAoQcHJvdG9jb2xfdmVyc2lvbhgBIAEoDSKQDQoPQ01zZ0NsaWVudExvZ29uEhgKEHByb3RvY29sX3ZlcnNpb24YASABKA0SKgoiZGVwcmVjYXRlZF9vYmZ1c3R1Y2F0ZWRfcHJpdmF0ZV9pcBgCIAEoDRIPCgdjZWxsX2lkGAMgASgNEhcKD2xhc3Rfc2Vzc2lvbl9pZBgEIAEoDRIeChZjbGllbnRfcGFja2FnZV92ZXJzaW9uGAUgASgNEhcKD2NsaWVudF9sYW5ndWFnZRgGIAEoCRIWCg5jbGllbnRfb3NfdHlwZRgHIAEoDRInChhzaG91bGRfcmVtZW1iZXJfcGFzc3dvcmQYCCABKAg6BWZhbHNlEhQKDHdpbmVfdmVyc2lvbhgJIAEoCRIVCg1kZXByZWNhdGVkXzEwGAogASgNEi0KFW9iZnVzY2F0ZWRfcHJpdmF0ZV9pcBgLIAEoCzIOLkNNc2dJUEFkZHJlc3MSHAoUZGVwcmVjYXRlZF9wdWJsaWNfaXAYFCABKA0SEQoJcW9zX2xldmVsGBUgASgNEiAKGGNsaWVudF9zdXBwbGllZF9zdGVhbV9pZBgWIAEoBhIhCglwdWJsaWNfaXAYFyABKAsyDi5DTXNnSVBBZGRyZXNzEhIKCm1hY2hpbmVfaWQYHiABKAwSGAoNbGF1bmNoZXJfdHlwZRgfIAEoDToBMBISCgd1aV9tb2RlGCAgASgNOgEwEhQKCWNoYXRfbW9kZRghIAEoDToBMBIaChJzdGVhbTJfYXV0aF90aWNrZXQYKSABKAwSFQoNZW1haWxfYWRkcmVzcxgqIAEoCRIgChhydGltZTMyX2FjY291bnRfY3JlYXRpb24YKyABKAcSFAoMYWNjb3VudF9uYW1lGDIgASgJEhAKCHBhc3N3b3JkGDMgASgJEhkKEWdhbWVfc2VydmVyX3Rva2VuGDQgASgJEhEKCWxvZ2luX2tleRg8IAEoCRIrChx3YXNfY29udmVydGVkX2RlcHJlY2F0ZWRfbXNnGEYgASgIOgVmYWxzZRIlCh1hbm9uX3VzZXJfdGFyZ2V0X2FjY291bnRfbmFtZRhQIAEoCRIeChZyZXNvbHZlZF91c2VyX3N0ZWFtX2lkGFEgASgGEhoKEmVyZXN1bHRfc2VudHJ5ZmlsZRhSIAEoBRIWCg5zaGFfc2VudHJ5ZmlsZRhTIAEoDBIRCglhdXRoX2NvZGUYVCABKAkSEAoIb3RwX3R5cGUYVSABKAUSEQoJb3RwX3ZhbHVlGFYgASgNEhYKDm90cF9pZGVudGlmaWVyGFcgASgJEh0KFXN0ZWFtMl90aWNrZXRfcmVxdWVzdBhYIAEoCBIXCg9zb255X3Bzbl90aWNrZXQYWiABKAwSGwoTc29ueV9wc25fc2VydmljZV9pZBhbIAEoCRI2CidjcmVhdGVfbmV3X3Bzbl9saW5rZWRfYWNjb3VudF9pZl9uZWVkZWQYXCABKAg6BWZhbHNlEhUKDXNvbnlfcHNuX25hbWUYXSABKAkSGgoSZ2FtZV9zZXJ2ZXJfYXBwX2lkGF4gASgFEikKIXN0ZWFtZ3VhcmRfZG9udF9yZW1lbWJlcl9jb21wdXRlchhfIAEoCBIUCgxtYWNoaW5lX25hbWUYYCABKAkSHwoXbWFjaGluZV9uYW1lX3VzZXJjaG9zZW4YYSABKAkSGAoQY291bnRyeV9vdmVycmlkZRhiIAEoCRIaChJjbGllbnRfaW5zdGFuY2VfaWQYZCABKAQSFwoPdHdvX2ZhY3Rvcl9jb2RlGGUgASgJEiQKHHN1cHBvcnRzX3JhdGVfbGltaXRfcmVzcG9uc2UYZiABKAgSFwoPd2ViX2xvZ29uX25vbmNlGGcgASgJEhcKD3ByaW9yaXR5X3JlYXNvbhhoIAEoBRIxChZlbWJlZGRlZF9jbGllbnRfc2VjcmV0GGkgASgLMhEuQ01zZ0NsaWVudFNlY3JldBIiChpkaXNhYmxlX3BhcnRuZXJfYXV0b2dyYW50cxhqIAEoCBIUCgxhY2Nlc3NfdG9rZW4YbCABKAkSFAoMaXNfY2hyb21lX29zGG0gASgIEh8KF2lzX3N0ZWFtX2JveF9kZXByZWNhdGVkGGMgASgIEiAKGGlzX3N0ZWFtX2RlY2tfZGVwcmVjYXRlZBhrIAEoCBIbChNpc190ZXNsYV9kZXByZWNhdGVkGG4gASgIEhoKEmdhbWluZ19kZXZpY2VfdHlwZRhvIAEoDSKfBgoXQ01zZ0NsaWVudExvZ29uUmVzcG9uc2USEgoHZXJlc3VsdBgBIAEoBToBMhIsCiRsZWdhY3lfb3V0X29mX2dhbWVfaGVhcnRiZWF0X3NlY29uZHMYAiABKAUSGQoRaGVhcnRiZWF0X3NlY29uZHMYAyABKAUSHAoUZGVwcmVjYXRlZF9wdWJsaWNfaXAYBCABKA0SGwoTcnRpbWUzMl9zZXJ2ZXJfdGltZRgFIAEoBxIVCg1hY2NvdW50X2ZsYWdzGAYgASgNEg8KB2NlbGxfaWQYByABKA0SFAoMZW1haWxfZG9tYWluGAggASgJEhUKDXN0ZWFtMl90aWNrZXQYCSABKAwSGAoQZXJlc3VsdF9leHRlbmRlZBgKIAEoBRIeChZjZWxsX2lkX3BpbmdfdGhyZXNob2xkGAwgASgNEhsKE2RlcHJlY2F0ZWRfdXNlX3BpY3MYDSABKAgSEgoKdmFuaXR5X3VybBgOIAEoCRIhCglwdWJsaWNfaXAYDyABKAsyDi5DTXNnSVBBZGRyZXNzEhQKDHVzZXJfY291bnRyeRgQIAEoCRIfChdjbGllbnRfc3VwcGxpZWRfc3RlYW1pZBgUIAEoBhIXCg9pcF9jb3VudHJ5X2NvZGUYFSABKAkSGQoRcGFyZW50YWxfc2V0dGluZ3MYFiABKAwSIgoacGFyZW50YWxfc2V0dGluZ19zaWduYXR1cmUYFyABKAwSJgoeY291bnRfbG9naW5mYWlsdXJlc190b19taWdyYXRlGBggASgFEiQKHGNvdW50X2Rpc2Nvbm5lY3RzX3RvX21pZ3JhdGUYGSABKAUSIwobb2dzX2RhdGFfcmVwb3J0X3RpbWVfd2luZG93GBogASgFEhoKEmNsaWVudF9pbnN0YW5jZV9pZBgbIAEoBBIhChlmb3JjZV9jbGllbnRfdXBkYXRlX2NoZWNrGBwgASgIEh0KFWFncmVlbWVudF9zZXNzaW9uX3VybBgdIAEoCRIQCgh0b2tlbl9pZBgeIAEoBBIXCg9mYW1pbHlfZ3JvdXBfaWQYHyABKAQiRgosQ01zZ0NsaWVudFJlcXVlc3RXZWJBUElBdXRoZW50aWNhdGVVc2VyTm9uY2USFgoKdG9rZW5fdHlwZRgBIAEoBToCLTEiigEKNENNc2dDbGllbnRSZXF1ZXN0V2ViQVBJQXV0aGVudGljYXRlVXNlck5vbmNlUmVzcG9uc2USEgoHZXJlc3VsdBgBIAEoBToBMhImCh53ZWJhcGlfYXV0aGVudGljYXRlX3VzZXJfbm9uY2UYCyABKAkSFgoKdG9rZW5fdHlwZRgDIAEoBToCLTEiEgoQQ01zZ0NsaWVudExvZ09mZiIpChNDTXNnQ2xpZW50TG9nZ2VkT2ZmEhIKB2VyZXN1bHQYASABKAU6ATIiPQoVQ01zZ0NsaWVudE5ld0xvZ2luS2V5EhEKCXVuaXF1ZV9pZBgBIAEoDRIRCglsb2dpbl9rZXkYAiABKAkiMgodQ01zZ0NsaWVudE5ld0xvZ2luS2V5QWNjZXB0ZWQSEQoJdW5pcXVlX2lkGAEgASgNIscCChVDTXNnQ2xpZW50QWNjb3VudEluZm8SFAoMcGVyc29uYV9uYW1lGAEgASgJEhIKCmlwX2NvdW50cnkYAiABKAkSHgoWY291bnRfYXV0aGVkX2NvbXB1dGVycxgFIAEoBRIVCg1hY2NvdW50X2ZsYWdzGAcgASgNEhMKC2ZhY2Vib29rX2lkGAggASgEEhUKDWZhY2Vib29rX25hbWUYCSABKAkSKwojc3RlYW1ndWFyZF9tYWNoaW5lX25hbWVfdXNlcl9jaG9zZW4YDyABKAkSGQoRaXNfcGhvbmVfdmVyaWZpZWQYECABKAgSGAoQdHdvX2ZhY3Rvcl9zdGF0ZRgRIAEoDRIcChRpc19waG9uZV9pZGVudGlmeWluZxgSIAEoCBIhChlpc19waG9uZV9uZWVkaW5nX3JldmVyaWZ5GBMgASgIIi0KGkNNc2dDbGllbnRDaGFsbGVuZ2VSZXF1ZXN0Eg8KB3N0ZWFtaWQYASABKAYiMAobQ01zZ0NsaWVudENoYWxsZW5nZVJlc3BvbnNlEhEKCWNoYWxsZW5nZRgBIAEoBkIFSAGAAQA", [file_steammessages_base]);

/**
 * @generated from message CMsgClientHeartBeat
 */
export type CMsgClientHeartBeat = Message<"CMsgClientHeartBeat"> & {
  /**
   * @generated from field: optional bool send_reply = 1;
   */
  sendReply: boolean;
};

/**
 * Describes the message CMsgClientHeartBeat.
 * Use `create(CMsgClientHeartBeatSchema)` to create a new message.
 */
export const CMsgClientHeartBeatSchema: GenMessage<CMsgClientHeartBeat> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_login, 0);

/**
 * @generated from message CMsgClientServerTimestampRequest
 */
export type CMsgClientServerTimestampRequest = Message<"CMsgClientServerTimestampRequest"> & {
  /**
   * @generated from field: optional uint64 client_request_timestamp = 1;
   */
  clientRequestTimestamp: bigint;
};

/**
 * Describes the message CMsgClientServerTimestampRequest.
 * Use `create(CMsgClientServerTimestampRequestSchema)` to create a new message.
 */
export const CMsgClientServerTimestampRequestSchema: GenMessage<CMsgClientServerTimestampRequest> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_login, 1);

/**
 * @generated from message CMsgClientServerTimestampResponse
 */
export type CMsgClientServerTimestampResponse = Message<"CMsgClientServerTimestampResponse"> & {
  /**
   * @generated from field: optional uint64 client_request_timestamp = 1;
   */
  clientRequestTimestamp: bigint;

  /**
   * @generated from field: optional uint64 server_timestamp_ms = 2;
   */
  serverTimestampMs: bigint;
};

/**
 * Describes the message CMsgClientServerTimestampResponse.
 * Use `create(CMsgClientServerTimestampResponseSchema)` to create a new message.
 */
export const CMsgClientServerTimestampResponseSchema: GenMessage<CMsgClientServerTimestampResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_login, 2);

/**
 * @generated from message CMsgClientSecret
 */
export type CMsgClientSecret = Message<"CMsgClientSecret"> & {
  /**
   * @generated from field: optional uint32 version = 1;
   */
  version: number;

  /**
   * @generated from field: optional uint32 appid = 2;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 deviceid = 3;
   */
  deviceid: number;

  /**
   * @generated from field: optional fixed64 nonce = 4;
   */
  nonce: bigint;

  /**
   * @generated from field: optional bytes hmac = 5;
   */
  hmac: Uint8Array;
};

/**
 * Describes the message CMsgClientSecret.
 * Use `create(CMsgClientSecretSchema)` to create a new message.
 */
export const CMsgClientSecretSchema: GenMessage<CMsgClientSecret> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_login, 3);

/**
 * @generated from message CMsgClientHello
 */
export type CMsgClientHello = Message<"CMsgClientHello"> & {
  /**
   * @generated from field: optional uint32 protocol_version = 1;
   */
  protocolVersion: number;
};

/**
 * Describes the message CMsgClientHello.
 * Use `create(CMsgClientHelloSchema)` to create a new message.
 */
export const CMsgClientHelloSchema: GenMessage<CMsgClientHello> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_login, 4);

/**
 * @generated from message CMsgClientLogon
 */
export type CMsgClientLogon = Message<"CMsgClientLogon"> & {
  /**
   * @generated from field: optional uint32 protocol_version = 1;
   */
  protocolVersion: number;

  /**
   * @generated from field: optional uint32 deprecated_obfustucated_private_ip = 2;
   */
  deprecatedObfustucatedPrivateIp: number;

  /**
   * @generated from field: optional uint32 cell_id = 3;
   */
  cellId: number;

  /**
   * @generated from field: optional uint32 last_session_id = 4;
   */
  lastSessionId: number;

  /**
   * @generated from field: optional uint32 client_package_version = 5;
   */
  clientPackageVersion: number;

  /**
   * @generated from field: optional string client_language = 6;
   */
  clientLanguage: string;

  /**
   * @generated from field: optional uint32 client_os_type = 7;
   */
  clientOsType: number;

  /**
   * @generated from field: optional bool should_remember_password = 8 [default = false];
   */
  shouldRememberPassword: boolean;

  /**
   * @generated from field: optional string wine_version = 9;
   */
  wineVersion: string;

  /**
   * @generated from field: optional uint32 deprecated_10 = 10;
   */
  deprecated10: number;

  /**
   * @generated from field: optional CMsgIPAddress obfuscated_private_ip = 11;
   */
  obfuscatedPrivateIp?: CMsgIPAddress;

  /**
   * @generated from field: optional uint32 deprecated_public_ip = 20;
   */
  deprecatedPublicIp: number;

  /**
   * @generated from field: optional uint32 qos_level = 21;
   */
  qosLevel: number;

  /**
   * @generated from field: optional fixed64 client_supplied_steam_id = 22;
   */
  clientSuppliedSteamId: bigint;

  /**
   * @generated from field: optional CMsgIPAddress public_ip = 23;
   */
  publicIp?: CMsgIPAddress;

  /**
   * @generated from field: optional bytes machine_id = 30;
   */
  machineId: Uint8Array;

  /**
   * @generated from field: optional uint32 launcher_type = 31 [default = 0];
   */
  launcherType: number;

  /**
   * @generated from field: optional uint32 ui_mode = 32 [default = 0];
   */
  uiMode: number;

  /**
   * @generated from field: optional uint32 chat_mode = 33 [default = 0];
   */
  chatMode: number;

  /**
   * @generated from field: optional bytes steam2_auth_ticket = 41;
   */
  steam2AuthTicket: Uint8Array;

  /**
   * @generated from field: optional string email_address = 42;
   */
  emailAddress: string;

  /**
   * @generated from field: optional fixed32 rtime32_account_creation = 43;
   */
  rtime32AccountCreation: number;

  /**
   * @generated from field: optional string account_name = 50;
   */
  accountName: string;

  /**
   * @generated from field: optional string password = 51;
   */
  password: string;

  /**
   * @generated from field: optional string game_server_token = 52;
   */
  gameServerToken: string;

  /**
   * @generated from field: optional string login_key = 60;
   */
  loginKey: string;

  /**
   * @generated from field: optional bool was_converted_deprecated_msg = 70 [default = false];
   */
  wasConvertedDeprecatedMsg: boolean;

  /**
   * @generated from field: optional string anon_user_target_account_name = 80;
   */
  anonUserTargetAccountName: string;

  /**
   * @generated from field: optional fixed64 resolved_user_steam_id = 81;
   */
  resolvedUserSteamId: bigint;

  /**
   * @generated from field: optional int32 eresult_sentryfile = 82;
   */
  eresultSentryfile: number;

  /**
   * @generated from field: optional bytes sha_sentryfile = 83;
   */
  shaSentryfile: Uint8Array;

  /**
   * @generated from field: optional string auth_code = 84;
   */
  authCode: string;

  /**
   * @generated from field: optional int32 otp_type = 85;
   */
  otpType: number;

  /**
   * @generated from field: optional uint32 otp_value = 86;
   */
  otpValue: number;

  /**
   * @generated from field: optional string otp_identifier = 87;
   */
  otpIdentifier: string;

  /**
   * @generated from field: optional bool steam2_ticket_request = 88;
   */
  steam2TicketRequest: boolean;

  /**
   * @generated from field: optional bytes sony_psn_ticket = 90;
   */
  sonyPsnTicket: Uint8Array;

  /**
   * @generated from field: optional string sony_psn_service_id = 91;
   */
  sonyPsnServiceId: string;

  /**
   * @generated from field: optional bool create_new_psn_linked_account_if_needed = 92 [default = false];
   */
  createNewPsnLinkedAccountIfNeeded: boolean;

  /**
   * @generated from field: optional string sony_psn_name = 93;
   */
  sonyPsnName: string;

  /**
   * @generated from field: optional int32 game_server_app_id = 94;
   */
  gameServerAppId: number;

  /**
   * @generated from field: optional bool steamguard_dont_remember_computer = 95;
   */
  steamguardDontRememberComputer: boolean;

  /**
   * @generated from field: optional string machine_name = 96;
   */
  machineName: string;

  /**
   * @generated from field: optional string machine_name_userchosen = 97;
   */
  machineNameUserchosen: string;

  /**
   * @generated from field: optional string country_override = 98;
   */
  countryOverride: string;

  /**
   * @generated from field: optional uint64 client_instance_id = 100;
   */
  clientInstanceId: bigint;

  /**
   * @generated from field: optional string two_factor_code = 101;
   */
  twoFactorCode: string;

  /**
   * @generated from field: optional bool supports_rate_limit_response = 102;
   */
  supportsRateLimitResponse: boolean;

  /**
   * @generated from field: optional string web_logon_nonce = 103;
   */
  webLogonNonce: string;

  /**
   * @generated from field: optional int32 priority_reason = 104;
   */
  priorityReason: number;

  /**
   * @generated from field: optional CMsgClientSecret embedded_client_secret = 105;
   */
  embeddedClientSecret?: CMsgClientSecret;

  /**
   * @generated from field: optional bool disable_partner_autogrants = 106;
   */
  disablePartnerAutogrants: boolean;

  /**
   * @generated from field: optional string access_token = 108;
   */
  accessToken: string;

  /**
   * @generated from field: optional bool is_chrome_os = 109;
   */
  isChromeOs: boolean;

  /**
   * @generated from field: optional bool is_steam_box_deprecated = 99;
   */
  isSteamBoxDeprecated: boolean;

  /**
   * @generated from field: optional bool is_steam_deck_deprecated = 107;
   */
  isSteamDeckDeprecated: boolean;

  /**
   * @generated from field: optional bool is_tesla_deprecated = 110;
   */
  isTeslaDeprecated: boolean;

  /**
   * @generated from field: optional uint32 gaming_device_type = 111;
   */
  gamingDeviceType: number;
};

/**
 * Describes the message CMsgClientLogon.
 * Use `create(CMsgClientLogonSchema)` to create a new message.
 */
export const CMsgClientLogonSchema: GenMessage<CMsgClientLogon> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_login, 5);

/**
 * @generated from message CMsgClientLogonResponse
 */
export type CMsgClientLogonResponse = Message<"CMsgClientLogonResponse"> & {
  /**
   * @generated from field: optional int32 eresult = 1 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional int32 legacy_out_of_game_heartbeat_seconds = 2;
   */
  legacyOutOfGameHeartbeatSeconds: number;

  /**
   * @generated from field: optional int32 heartbeat_seconds = 3;
   */
  heartbeatSeconds: number;

  /**
   * @generated from field: optional uint32 deprecated_public_ip = 4;
   */
  deprecatedPublicIp: number;

  /**
   * @generated from field: optional fixed32 rtime32_server_time = 5;
   */
  rtime32ServerTime: number;

  /**
   * @generated from field: optional uint32 account_flags = 6;
   */
  accountFlags: number;

  /**
   * @generated from field: optional uint32 cell_id = 7;
   */
  cellId: number;

  /**
   * @generated from field: optional string email_domain = 8;
   */
  emailDomain: string;

  /**
   * @generated from field: optional bytes steam2_ticket = 9;
   */
  steam2Ticket: Uint8Array;

  /**
   * @generated from field: optional int32 eresult_extended = 10;
   */
  eresultExtended: number;

  /**
   * @generated from field: optional uint32 cell_id_ping_threshold = 12;
   */
  cellIdPingThreshold: number;

  /**
   * @generated from field: optional bool deprecated_use_pics = 13;
   */
  deprecatedUsePics: boolean;

  /**
   * @generated from field: optional string vanity_url = 14;
   */
  vanityUrl: string;

  /**
   * @generated from field: optional CMsgIPAddress public_ip = 15;
   */
  publicIp?: CMsgIPAddress;

  /**
   * @generated from field: optional string user_country = 16;
   */
  userCountry: string;

  /**
   * @generated from field: optional fixed64 client_supplied_steamid = 20;
   */
  clientSuppliedSteamid: bigint;

  /**
   * @generated from field: optional string ip_country_code = 21;
   */
  ipCountryCode: string;

  /**
   * @generated from field: optional bytes parental_settings = 22;
   */
  parentalSettings: Uint8Array;

  /**
   * @generated from field: optional bytes parental_setting_signature = 23;
   */
  parentalSettingSignature: Uint8Array;

  /**
   * @generated from field: optional int32 count_loginfailures_to_migrate = 24;
   */
  countLoginfailuresToMigrate: number;

  /**
   * @generated from field: optional int32 count_disconnects_to_migrate = 25;
   */
  countDisconnectsToMigrate: number;

  /**
   * @generated from field: optional int32 ogs_data_report_time_window = 26;
   */
  ogsDataReportTimeWindow: number;

  /**
   * @generated from field: optional uint64 client_instance_id = 27;
   */
  clientInstanceId: bigint;

  /**
   * @generated from field: optional bool force_client_update_check = 28;
   */
  forceClientUpdateCheck: boolean;

  /**
   * @generated from field: optional string agreement_session_url = 29;
   */
  agreementSessionUrl: string;

  /**
   * @generated from field: optional uint64 token_id = 30;
   */
  tokenId: bigint;

  /**
   * @generated from field: optional uint64 family_group_id = 31;
   */
  familyGroupId: bigint;
};

/**
 * Describes the message CMsgClientLogonResponse.
 * Use `create(CMsgClientLogonResponseSchema)` to create a new message.
 */
export const CMsgClientLogonResponseSchema: GenMessage<CMsgClientLogonResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_login, 6);

/**
 * @generated from message CMsgClientRequestWebAPIAuthenticateUserNonce
 */
export type CMsgClientRequestWebAPIAuthenticateUserNonce = Message<"CMsgClientRequestWebAPIAuthenticateUserNonce"> & {
  /**
   * @generated from field: optional int32 token_type = 1 [default = -1];
   */
  tokenType: number;
};

/**
 * Describes the message CMsgClientRequestWebAPIAuthenticateUserNonce.
 * Use `create(CMsgClientRequestWebAPIAuthenticateUserNonceSchema)` to create a new message.
 */
export const CMsgClientRequestWebAPIAuthenticateUserNonceSchema: GenMessage<CMsgClientRequestWebAPIAuthenticateUserNonce> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_login, 7);

/**
 * @generated from message CMsgClientRequestWebAPIAuthenticateUserNonceResponse
 */
export type CMsgClientRequestWebAPIAuthenticateUserNonceResponse = Message<"CMsgClientRequestWebAPIAuthenticateUserNonceResponse"> & {
  /**
   * @generated from field: optional int32 eresult = 1 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional string webapi_authenticate_user_nonce = 11;
   */
  webapiAuthenticateUserNonce: string;

  /**
   * @generated from field: optional int32 token_type = 3 [default = -1];
   */
  tokenType: number;
};

/**
 * Describes the message CMsgClientRequestWebAPIAuthenticateUserNonceResponse.
 * Use `create(CMsgClientRequestWebAPIAuthenticateUserNonceResponseSchema)` to create a new message.
 */
export const CMsgClientRequestWebAPIAuthenticateUserNonceResponseSchema: GenMessage<CMsgClientRequestWebAPIAuthenticateUserNonceResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_login, 8);

/**
 * @generated from message CMsgClientLogOff
 */
export type CMsgClientLogOff = Message<"CMsgClientLogOff"> & {
};

/**
 * Describes the message CMsgClientLogOff.
 * Use `create(CMsgClientLogOffSchema)` to create a new message.
 */
export const CMsgClientLogOffSchema: GenMessage<CMsgClientLogOff> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_login, 9);

/**
 * @generated from message CMsgClientLoggedOff
 */
export type CMsgClientLoggedOff = Message<"CMsgClientLoggedOff"> & {
  /**
   * @generated from field: optional int32 eresult = 1 [default = 2];
   */
  eresult: number;
};

/**
 * Describes the message CMsgClientLoggedOff.
 * Use `create(CMsgClientLoggedOffSchema)` to create a new message.
 */
export const CMsgClientLoggedOffSchema: GenMessage<CMsgClientLoggedOff> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_login, 10);

/**
 * @generated from message CMsgClientNewLoginKey
 */
export type CMsgClientNewLoginKey = Message<"CMsgClientNewLoginKey"> & {
  /**
   * @generated from field: optional uint32 unique_id = 1;
   */
  uniqueId: number;

  /**
   * @generated from field: optional string login_key = 2;
   */
  loginKey: string;
};

/**
 * Describes the message CMsgClientNewLoginKey.
 * Use `create(CMsgClientNewLoginKeySchema)` to create a new message.
 */
export const CMsgClientNewLoginKeySchema: GenMessage<CMsgClientNewLoginKey> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_login, 11);

/**
 * @generated from message CMsgClientNewLoginKeyAccepted
 */
export type CMsgClientNewLoginKeyAccepted = Message<"CMsgClientNewLoginKeyAccepted"> & {
  /**
   * @generated from field: optional uint32 unique_id = 1;
   */
  uniqueId: number;
};

/**
 * Describes the message CMsgClientNewLoginKeyAccepted.
 * Use `create(CMsgClientNewLoginKeyAcceptedSchema)` to create a new message.
 */
export const CMsgClientNewLoginKeyAcceptedSchema: GenMessage<CMsgClientNewLoginKeyAccepted> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_login, 12);

/**
 * @generated from message CMsgClientAccountInfo
 */
export type CMsgClientAccountInfo = Message<"CMsgClientAccountInfo"> & {
  /**
   * @generated from field: optional string persona_name = 1;
   */
  personaName: string;

  /**
   * @generated from field: optional string ip_country = 2;
   */
  ipCountry: string;

  /**
   * @generated from field: optional int32 count_authed_computers = 5;
   */
  countAuthedComputers: number;

  /**
   * @generated from field: optional uint32 account_flags = 7;
   */
  accountFlags: number;

  /**
   * @generated from field: optional uint64 facebook_id = 8;
   */
  facebookId: bigint;

  /**
   * @generated from field: optional string facebook_name = 9;
   */
  facebookName: string;

  /**
   * @generated from field: optional string steamguard_machine_name_user_chosen = 15;
   */
  steamguardMachineNameUserChosen: string;

  /**
   * @generated from field: optional bool is_phone_verified = 16;
   */
  isPhoneVerified: boolean;

  /**
   * @generated from field: optional uint32 two_factor_state = 17;
   */
  twoFactorState: number;

  /**
   * @generated from field: optional bool is_phone_identifying = 18;
   */
  isPhoneIdentifying: boolean;

  /**
   * @generated from field: optional bool is_phone_needing_reverify = 19;
   */
  isPhoneNeedingReverify: boolean;
};

/**
 * Describes the message CMsgClientAccountInfo.
 * Use `create(CMsgClientAccountInfoSchema)` to create a new message.
 */
export const CMsgClientAccountInfoSchema: GenMessage<CMsgClientAccountInfo> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_login, 13);

/**
 * @generated from message CMsgClientChallengeRequest
 */
export type CMsgClientChallengeRequest = Message<"CMsgClientChallengeRequest"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;
};

/**
 * Describes the message CMsgClientChallengeRequest.
 * Use `create(CMsgClientChallengeRequestSchema)` to create a new message.
 */
export const CMsgClientChallengeRequestSchema: GenMessage<CMsgClientChallengeRequest> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_login, 14);

/**
 * @generated from message CMsgClientChallengeResponse
 */
export type CMsgClientChallengeResponse = Message<"CMsgClientChallengeResponse"> & {
  /**
   * @generated from field: optional fixed64 challenge = 1;
   */
  challenge: bigint;
};

/**
 * Describes the message CMsgClientChallengeResponse.
 * Use `create(CMsgClientChallengeResponseSchema)` to create a new message.
 */
export const CMsgClientChallengeResponseSchema: GenMessage<CMsgClientChallengeResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_login, 15);

