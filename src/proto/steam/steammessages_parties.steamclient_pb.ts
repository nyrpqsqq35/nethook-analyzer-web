// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_parties.steamclient.proto (syntax proto2)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_steammessages_base } from "./steammessages_base_pb";
import { file_steammessages_unified_base_steamclient } from "./steammessages_unified_base.steamclient_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_parties.steamclient.proto.
 */
export const file_steammessages_parties_steamclient: GenFile = /*@__PURE__*/
  fileDesc("CidzdGVhbW1lc3NhZ2VzX3BhcnRpZXMuc3RlYW1jbGllbnQucHJvdG8iQAoaQ1BhcnRpZXNfSm9pblBhcnR5X1JlcXVlc3QSDwoHc3RlYW1pZBgBIAEoBhIRCgliZWFjb25faWQYAiABKAQiSAobQ1BhcnRpZXNfSm9pblBhcnR5X1Jlc3BvbnNlEhEKCWJlYWNvbl9pZBgBIAEoBBIWCg5jb25uZWN0X3N0cmluZxgCIAEoCSJFChdDUGFydGllc19CZWFjb25Mb2NhdGlvbhIVCg1sb2NhdGlvbl90eXBlGAEgASgNEhMKC2xvY2F0aW9uX2lkGAIgASgEIp0BCh1DUGFydGllc19DcmVhdGVCZWFjb25fUmVxdWVzdBINCgVhcHBpZBgBIAEoDRIWCg5udW1fb3Blbl9zbG90cxgCIAEoDRIrCglsb2NhdGlvbnMYAyADKAsyGC5DUGFydGllc19CZWFjb25Mb2NhdGlvbhIWCg5jb25uZWN0X3N0cmluZxgEIAEoCRIQCghtZXRhZGF0YRgFIAEoCSIzCh5DUGFydGllc19DcmVhdGVCZWFjb25fUmVzcG9uc2USEQoJYmVhY29uX2lkGAEgASgEIlIKJ0NQYXJ0aWVzX09uUmVzZXJ2YXRpb25Db21wbGV0ZWRfUmVxdWVzdBIRCgliZWFjb25faWQYASABKAQSFAoMdXNlcl9zdGVhbWlkGAIgASgGIj0KKENQYXJ0aWVzX09uUmVzZXJ2YXRpb25Db21wbGV0ZWRfUmVzcG9uc2USEQoJYmVhY29uX2lkGAEgASgEIk0KIkNQYXJ0aWVzX0NhbmNlbFJlc2VydmF0aW9uX1JlcXVlc3QSEQoJYmVhY29uX2lkGAEgASgEEhQKDHVzZXJfc3RlYW1pZBgCIAEoBiI4CiNDUGFydGllc19DYW5jZWxSZXNlcnZhdGlvbl9SZXNwb25zZRIRCgliZWFjb25faWQYASABKAQiUAojQ1BhcnRpZXNfQ2hhbmdlTnVtT3BlblNsb3RzX1JlcXVlc3QSEQoJYmVhY29uX2lkGAEgASgEEhYKDm51bV9vcGVuX3Nsb3RzGAIgASgNIjkKJENQYXJ0aWVzX0NoYW5nZU51bU9wZW5TbG90c19SZXNwb25zZRIRCgliZWFjb25faWQYASABKAQiMwoeQ1BhcnRpZXNfRGVzdHJveUJlYWNvbl9SZXF1ZXN0EhEKCWJlYWNvbl9pZBgBIAEoBCI0Ch9DUGFydGllc19EZXN0cm95QmVhY29uX1Jlc3BvbnNlEhEKCWJlYWNvbl9pZBgBIAEoBDKoBAoHUGFydGllcxJGCglKb2luUGFydHkSGy5DUGFydGllc19Kb2luUGFydHlfUmVxdWVzdBocLkNQYXJ0aWVzX0pvaW5QYXJ0eV9SZXNwb25zZRJPCgxDcmVhdGVCZWFjb24SHi5DUGFydGllc19DcmVhdGVCZWFjb25fUmVxdWVzdBofLkNQYXJ0aWVzX0NyZWF0ZUJlYWNvbl9SZXNwb25zZRJtChZPblJlc2VydmF0aW9uQ29tcGxldGVkEiguQ1BhcnRpZXNfT25SZXNlcnZhdGlvbkNvbXBsZXRlZF9SZXF1ZXN0GikuQ1BhcnRpZXNfT25SZXNlcnZhdGlvbkNvbXBsZXRlZF9SZXNwb25zZRJeChFDYW5jZWxSZXNlcnZhdGlvbhIjLkNQYXJ0aWVzX0NhbmNlbFJlc2VydmF0aW9uX1JlcXVlc3QaJC5DUGFydGllc19DYW5jZWxSZXNlcnZhdGlvbl9SZXNwb25zZRJhChJDaGFuZ2VOdW1PcGVuU2xvdHMSJC5DUGFydGllc19DaGFuZ2VOdW1PcGVuU2xvdHNfUmVxdWVzdBolLkNQYXJ0aWVzX0NoYW5nZU51bU9wZW5TbG90c19SZXNwb25zZRJSCg1EZXN0cm95QmVhY29uEh8uQ1BhcnRpZXNfRGVzdHJveUJlYWNvbl9SZXF1ZXN0GiAuQ1BhcnRpZXNfRGVzdHJveUJlYWNvbl9SZXNwb25zZUIDgAEB", [file_steammessages_base, file_steammessages_unified_base_steamclient]);

/**
 * @generated from message CParties_JoinParty_Request
 */
export type CParties_JoinParty_Request = Message<"CParties_JoinParty_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional uint64 beacon_id = 2;
   */
  beaconId: bigint;
};

/**
 * Describes the message CParties_JoinParty_Request.
 * Use `create(CParties_JoinParty_RequestSchema)` to create a new message.
 */
export const CParties_JoinParty_RequestSchema: GenMessage<CParties_JoinParty_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_parties_steamclient, 0);

/**
 * @generated from message CParties_JoinParty_Response
 */
export type CParties_JoinParty_Response = Message<"CParties_JoinParty_Response"> & {
  /**
   * @generated from field: optional uint64 beacon_id = 1;
   */
  beaconId: bigint;

  /**
   * @generated from field: optional string connect_string = 2;
   */
  connectString: string;
};

/**
 * Describes the message CParties_JoinParty_Response.
 * Use `create(CParties_JoinParty_ResponseSchema)` to create a new message.
 */
export const CParties_JoinParty_ResponseSchema: GenMessage<CParties_JoinParty_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_parties_steamclient, 1);

/**
 * @generated from message CParties_BeaconLocation
 */
export type CParties_BeaconLocation = Message<"CParties_BeaconLocation"> & {
  /**
   * @generated from field: optional uint32 location_type = 1;
   */
  locationType: number;

  /**
   * @generated from field: optional uint64 location_id = 2;
   */
  locationId: bigint;
};

/**
 * Describes the message CParties_BeaconLocation.
 * Use `create(CParties_BeaconLocationSchema)` to create a new message.
 */
export const CParties_BeaconLocationSchema: GenMessage<CParties_BeaconLocation> = /*@__PURE__*/
  messageDesc(file_steammessages_parties_steamclient, 2);

/**
 * @generated from message CParties_CreateBeacon_Request
 */
export type CParties_CreateBeacon_Request = Message<"CParties_CreateBeacon_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 num_open_slots = 2;
   */
  numOpenSlots: number;

  /**
   * @generated from field: repeated CParties_BeaconLocation locations = 3;
   */
  locations: CParties_BeaconLocation[];

  /**
   * @generated from field: optional string connect_string = 4;
   */
  connectString: string;

  /**
   * @generated from field: optional string metadata = 5;
   */
  metadata: string;
};

/**
 * Describes the message CParties_CreateBeacon_Request.
 * Use `create(CParties_CreateBeacon_RequestSchema)` to create a new message.
 */
export const CParties_CreateBeacon_RequestSchema: GenMessage<CParties_CreateBeacon_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_parties_steamclient, 3);

/**
 * @generated from message CParties_CreateBeacon_Response
 */
export type CParties_CreateBeacon_Response = Message<"CParties_CreateBeacon_Response"> & {
  /**
   * @generated from field: optional uint64 beacon_id = 1;
   */
  beaconId: bigint;
};

/**
 * Describes the message CParties_CreateBeacon_Response.
 * Use `create(CParties_CreateBeacon_ResponseSchema)` to create a new message.
 */
export const CParties_CreateBeacon_ResponseSchema: GenMessage<CParties_CreateBeacon_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_parties_steamclient, 4);

/**
 * @generated from message CParties_OnReservationCompleted_Request
 */
export type CParties_OnReservationCompleted_Request = Message<"CParties_OnReservationCompleted_Request"> & {
  /**
   * @generated from field: optional uint64 beacon_id = 1;
   */
  beaconId: bigint;

  /**
   * @generated from field: optional fixed64 user_steamid = 2;
   */
  userSteamid: bigint;
};

/**
 * Describes the message CParties_OnReservationCompleted_Request.
 * Use `create(CParties_OnReservationCompleted_RequestSchema)` to create a new message.
 */
export const CParties_OnReservationCompleted_RequestSchema: GenMessage<CParties_OnReservationCompleted_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_parties_steamclient, 5);

/**
 * @generated from message CParties_OnReservationCompleted_Response
 */
export type CParties_OnReservationCompleted_Response = Message<"CParties_OnReservationCompleted_Response"> & {
  /**
   * @generated from field: optional uint64 beacon_id = 1;
   */
  beaconId: bigint;
};

/**
 * Describes the message CParties_OnReservationCompleted_Response.
 * Use `create(CParties_OnReservationCompleted_ResponseSchema)` to create a new message.
 */
export const CParties_OnReservationCompleted_ResponseSchema: GenMessage<CParties_OnReservationCompleted_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_parties_steamclient, 6);

/**
 * @generated from message CParties_CancelReservation_Request
 */
export type CParties_CancelReservation_Request = Message<"CParties_CancelReservation_Request"> & {
  /**
   * @generated from field: optional uint64 beacon_id = 1;
   */
  beaconId: bigint;

  /**
   * @generated from field: optional fixed64 user_steamid = 2;
   */
  userSteamid: bigint;
};

/**
 * Describes the message CParties_CancelReservation_Request.
 * Use `create(CParties_CancelReservation_RequestSchema)` to create a new message.
 */
export const CParties_CancelReservation_RequestSchema: GenMessage<CParties_CancelReservation_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_parties_steamclient, 7);

/**
 * @generated from message CParties_CancelReservation_Response
 */
export type CParties_CancelReservation_Response = Message<"CParties_CancelReservation_Response"> & {
  /**
   * @generated from field: optional uint64 beacon_id = 1;
   */
  beaconId: bigint;
};

/**
 * Describes the message CParties_CancelReservation_Response.
 * Use `create(CParties_CancelReservation_ResponseSchema)` to create a new message.
 */
export const CParties_CancelReservation_ResponseSchema: GenMessage<CParties_CancelReservation_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_parties_steamclient, 8);

/**
 * @generated from message CParties_ChangeNumOpenSlots_Request
 */
export type CParties_ChangeNumOpenSlots_Request = Message<"CParties_ChangeNumOpenSlots_Request"> & {
  /**
   * @generated from field: optional uint64 beacon_id = 1;
   */
  beaconId: bigint;

  /**
   * @generated from field: optional uint32 num_open_slots = 2;
   */
  numOpenSlots: number;
};

/**
 * Describes the message CParties_ChangeNumOpenSlots_Request.
 * Use `create(CParties_ChangeNumOpenSlots_RequestSchema)` to create a new message.
 */
export const CParties_ChangeNumOpenSlots_RequestSchema: GenMessage<CParties_ChangeNumOpenSlots_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_parties_steamclient, 9);

/**
 * @generated from message CParties_ChangeNumOpenSlots_Response
 */
export type CParties_ChangeNumOpenSlots_Response = Message<"CParties_ChangeNumOpenSlots_Response"> & {
  /**
   * @generated from field: optional uint64 beacon_id = 1;
   */
  beaconId: bigint;
};

/**
 * Describes the message CParties_ChangeNumOpenSlots_Response.
 * Use `create(CParties_ChangeNumOpenSlots_ResponseSchema)` to create a new message.
 */
export const CParties_ChangeNumOpenSlots_ResponseSchema: GenMessage<CParties_ChangeNumOpenSlots_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_parties_steamclient, 10);

/**
 * @generated from message CParties_DestroyBeacon_Request
 */
export type CParties_DestroyBeacon_Request = Message<"CParties_DestroyBeacon_Request"> & {
  /**
   * @generated from field: optional uint64 beacon_id = 1;
   */
  beaconId: bigint;
};

/**
 * Describes the message CParties_DestroyBeacon_Request.
 * Use `create(CParties_DestroyBeacon_RequestSchema)` to create a new message.
 */
export const CParties_DestroyBeacon_RequestSchema: GenMessage<CParties_DestroyBeacon_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_parties_steamclient, 11);

/**
 * @generated from message CParties_DestroyBeacon_Response
 */
export type CParties_DestroyBeacon_Response = Message<"CParties_DestroyBeacon_Response"> & {
  /**
   * @generated from field: optional uint64 beacon_id = 1;
   */
  beaconId: bigint;
};

/**
 * Describes the message CParties_DestroyBeacon_Response.
 * Use `create(CParties_DestroyBeacon_ResponseSchema)` to create a new message.
 */
export const CParties_DestroyBeacon_ResponseSchema: GenMessage<CParties_DestroyBeacon_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_parties_steamclient, 12);

/**
 * @generated from service Parties
 */
export const Parties: GenService<{
  /**
   * @generated from rpc Parties.JoinParty
   */
  joinParty: {
    methodKind: "unary";
    input: typeof CParties_JoinParty_RequestSchema;
    output: typeof CParties_JoinParty_ResponseSchema;
  },
  /**
   * @generated from rpc Parties.CreateBeacon
   */
  createBeacon: {
    methodKind: "unary";
    input: typeof CParties_CreateBeacon_RequestSchema;
    output: typeof CParties_CreateBeacon_ResponseSchema;
  },
  /**
   * @generated from rpc Parties.OnReservationCompleted
   */
  onReservationCompleted: {
    methodKind: "unary";
    input: typeof CParties_OnReservationCompleted_RequestSchema;
    output: typeof CParties_OnReservationCompleted_ResponseSchema;
  },
  /**
   * @generated from rpc Parties.CancelReservation
   */
  cancelReservation: {
    methodKind: "unary";
    input: typeof CParties_CancelReservation_RequestSchema;
    output: typeof CParties_CancelReservation_ResponseSchema;
  },
  /**
   * @generated from rpc Parties.ChangeNumOpenSlots
   */
  changeNumOpenSlots: {
    methodKind: "unary";
    input: typeof CParties_ChangeNumOpenSlots_RequestSchema;
    output: typeof CParties_ChangeNumOpenSlots_ResponseSchema;
  },
  /**
   * @generated from rpc Parties.DestroyBeacon
   */
  destroyBeacon: {
    methodKind: "unary";
    input: typeof CParties_DestroyBeacon_RequestSchema;
    output: typeof CParties_DestroyBeacon_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_parties_steamclient, 0);

