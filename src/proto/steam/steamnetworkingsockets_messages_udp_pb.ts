// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steamnetworkingsockets_messages_udp.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { CMsgSteamDatagramCertificateSigned, CMsgSteamNetworkingIdentityLegacyBinary } from "./steamnetworkingsockets_messages_certs_pb";
import { file_steamnetworkingsockets_messages_certs } from "./steamnetworkingsockets_messages_certs_pb";
import type { CMsgSteamDatagramConnectionQuality, CMsgSteamDatagramSessionCryptInfoSigned } from "./steamnetworkingsockets_messages_pb";
import { file_steamnetworkingsockets_messages } from "./steamnetworkingsockets_messages_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steamnetworkingsockets_messages_udp.proto.
 */
export const file_steamnetworkingsockets_messages_udp: GenFile = /*@__PURE__*/
  fileDesc("CilzdGVhbW5ldHdvcmtpbmdzb2NrZXRzX21lc3NhZ2VzX3VkcC5wcm90byJuCiVDTXNnU3RlYW1Tb2NrZXRzX1VEUF9DaGFsbGVuZ2VSZXF1ZXN0EhUKDWNvbm5lY3Rpb25faWQYASABKAcSFAoMbXlfdGltZXN0YW1wGAMgASgGEhgKEHByb3RvY29sX3ZlcnNpb24YBCABKA0igQEKI0NNc2dTdGVhbVNvY2tldHNfVURQX0NoYWxsZW5nZVJlcGx5EhUKDWNvbm5lY3Rpb25faWQYASABKAcSEQoJY2hhbGxlbmdlGAIgASgGEhYKDnlvdXJfdGltZXN0YW1wGAMgASgGEhgKEHByb3RvY29sX3ZlcnNpb24YBCABKA0ikQMKI0NNc2dTdGVhbVNvY2tldHNfVURQX0Nvbm5lY3RSZXF1ZXN0EhwKFGNsaWVudF9jb25uZWN0aW9uX2lkGAEgASgHEhEKCWNoYWxsZW5nZRgCIAEoBhIUCgxteV90aW1lc3RhbXAYBSABKAYSEwoLcGluZ19lc3RfbXMYBiABKA0SNwoFY3J5cHQYByABKAsyKC5DTXNnU3RlYW1EYXRhZ3JhbVNlc3Npb25DcnlwdEluZm9TaWduZWQSMQoEY2VydBgEIAEoCzIjLkNNc2dTdGVhbURhdGFncmFtQ2VydGlmaWNhdGVTaWduZWQSHwoXbGVnYWN5X3Byb3RvY29sX3ZlcnNpb24YCCABKA0SFwoPaWRlbnRpdHlfc3RyaW5nGAogASgJEh4KFmxlZ2FjeV9jbGllbnRfc3RlYW1faWQYAyABKAYSSAoWbGVnYWN5X2lkZW50aXR5X2JpbmFyeRgJIAEoCzIoLkNNc2dTdGVhbU5ldHdvcmtpbmdJZGVudGl0eUxlZ2FjeUJpbmFyeSL8AgoeQ01zZ1N0ZWFtU29ja2V0c19VRFBfQ29ubmVjdE9LEhwKFGNsaWVudF9jb25uZWN0aW9uX2lkGAEgASgHEhwKFHNlcnZlcl9jb25uZWN0aW9uX2lkGAUgASgHEhYKDnlvdXJfdGltZXN0YW1wGAMgASgGEhcKD2RlbGF5X3RpbWVfdXNlYxgEIAEoDRI3CgVjcnlwdBgHIAEoCzIoLkNNc2dTdGVhbURhdGFncmFtU2Vzc2lvbkNyeXB0SW5mb1NpZ25lZBIxCgRjZXJ0GAggASgLMiMuQ01zZ1N0ZWFtRGF0YWdyYW1DZXJ0aWZpY2F0ZVNpZ25lZBIXCg9pZGVudGl0eV9zdHJpbmcYCyABKAkSHgoWbGVnYWN5X3NlcnZlcl9zdGVhbV9pZBgCIAEoBhJIChZsZWdhY3lfaWRlbnRpdHlfYmluYXJ5GAogASgLMiguQ01zZ1N0ZWFtTmV0d29ya2luZ0lkZW50aXR5TGVnYWN5QmluYXJ5IoEBCiVDTXNnU3RlYW1Tb2NrZXRzX1VEUF9Db25uZWN0aW9uQ2xvc2VkEhgKEHRvX2Nvbm5lY3Rpb25faWQYBCABKAcSGgoSZnJvbV9jb25uZWN0aW9uX2lkGAUgASgHEg0KBWRlYnVnGAIgASgJEhMKC3JlYXNvbl9jb2RlGAMgASgNIlkKIUNNc2dTdGVhbVNvY2tldHNfVURQX05vQ29ubmVjdGlvbhIaChJmcm9tX2Nvbm5lY3Rpb25faWQYAiABKAcSGAoQdG9fY29ubmVjdGlvbl9pZBgDIAEoByK3AQoaQ01zZ1N0ZWFtU29ja2V0c19VRFBfU3RhdHMSMgoFc3RhdHMYASABKAsyIy5DTXNnU3RlYW1EYXRhZ3JhbUNvbm5lY3Rpb25RdWFsaXR5Eg0KBWZsYWdzGAMgASgNIlYKBUZsYWdzEhMKD0FDS19SRVFVRVNUX0UyRRACEhkKFUFDS19SRVFVRVNUX0lNTUVESUFURRAEEh0KGU5PVF9QUklNQVJZX1RSQU5TUE9SVF9FMkUQECqlAgoYRVN0ZWFtTmV0d29ya2luZ1VEUE1zZ0lEEi0KKWtfRVN0ZWFtTmV0d29ya2luZ1VEUE1zZ19DaGFsbGVuZ2VSZXF1ZXN0ECASKwona19FU3RlYW1OZXR3b3JraW5nVURQTXNnX0NoYWxsZW5nZVJlcGx5ECESKwona19FU3RlYW1OZXR3b3JraW5nVURQTXNnX0Nvbm5lY3RSZXF1ZXN0ECISJgoia19FU3RlYW1OZXR3b3JraW5nVURQTXNnX0Nvbm5lY3RPSxAjEi0KKWtfRVN0ZWFtTmV0d29ya2luZ1VEUE1zZ19Db25uZWN0aW9uQ2xvc2VkECQSKQola19FU3RlYW1OZXR3b3JraW5nVURQTXNnX05vQ29ubmVjdGlvbhAlQgVIAYABAA", [file_steamnetworkingsockets_messages_certs, file_steamnetworkingsockets_messages]);

/**
 * @generated from message CMsgSteamSockets_UDP_ChallengeRequest
 */
export type CMsgSteamSockets_UDP_ChallengeRequest = Message<"CMsgSteamSockets_UDP_ChallengeRequest"> & {
  /**
   * @generated from field: optional fixed32 connection_id = 1;
   */
  connectionId: number;

  /**
   * @generated from field: optional fixed64 my_timestamp = 3;
   */
  myTimestamp: bigint;

  /**
   * @generated from field: optional uint32 protocol_version = 4;
   */
  protocolVersion: number;
};

/**
 * Describes the message CMsgSteamSockets_UDP_ChallengeRequest.
 * Use `create(CMsgSteamSockets_UDP_ChallengeRequestSchema)` to create a new message.
 */
export const CMsgSteamSockets_UDP_ChallengeRequestSchema: GenMessage<CMsgSteamSockets_UDP_ChallengeRequest> = /*@__PURE__*/
  messageDesc(file_steamnetworkingsockets_messages_udp, 0);

/**
 * @generated from message CMsgSteamSockets_UDP_ChallengeReply
 */
export type CMsgSteamSockets_UDP_ChallengeReply = Message<"CMsgSteamSockets_UDP_ChallengeReply"> & {
  /**
   * @generated from field: optional fixed32 connection_id = 1;
   */
  connectionId: number;

  /**
   * @generated from field: optional fixed64 challenge = 2;
   */
  challenge: bigint;

  /**
   * @generated from field: optional fixed64 your_timestamp = 3;
   */
  yourTimestamp: bigint;

  /**
   * @generated from field: optional uint32 protocol_version = 4;
   */
  protocolVersion: number;
};

/**
 * Describes the message CMsgSteamSockets_UDP_ChallengeReply.
 * Use `create(CMsgSteamSockets_UDP_ChallengeReplySchema)` to create a new message.
 */
export const CMsgSteamSockets_UDP_ChallengeReplySchema: GenMessage<CMsgSteamSockets_UDP_ChallengeReply> = /*@__PURE__*/
  messageDesc(file_steamnetworkingsockets_messages_udp, 1);

/**
 * @generated from message CMsgSteamSockets_UDP_ConnectRequest
 */
export type CMsgSteamSockets_UDP_ConnectRequest = Message<"CMsgSteamSockets_UDP_ConnectRequest"> & {
  /**
   * @generated from field: optional fixed32 client_connection_id = 1;
   */
  clientConnectionId: number;

  /**
   * @generated from field: optional fixed64 challenge = 2;
   */
  challenge: bigint;

  /**
   * @generated from field: optional fixed64 my_timestamp = 5;
   */
  myTimestamp: bigint;

  /**
   * @generated from field: optional uint32 ping_est_ms = 6;
   */
  pingEstMs: number;

  /**
   * @generated from field: optional CMsgSteamDatagramSessionCryptInfoSigned crypt = 7;
   */
  crypt?: CMsgSteamDatagramSessionCryptInfoSigned;

  /**
   * @generated from field: optional CMsgSteamDatagramCertificateSigned cert = 4;
   */
  cert?: CMsgSteamDatagramCertificateSigned;

  /**
   * @generated from field: optional uint32 legacy_protocol_version = 8;
   */
  legacyProtocolVersion: number;

  /**
   * @generated from field: optional string identity_string = 10;
   */
  identityString: string;

  /**
   * @generated from field: optional fixed64 legacy_client_steam_id = 3;
   */
  legacyClientSteamId: bigint;

  /**
   * @generated from field: optional CMsgSteamNetworkingIdentityLegacyBinary legacy_identity_binary = 9;
   */
  legacyIdentityBinary?: CMsgSteamNetworkingIdentityLegacyBinary;
};

/**
 * Describes the message CMsgSteamSockets_UDP_ConnectRequest.
 * Use `create(CMsgSteamSockets_UDP_ConnectRequestSchema)` to create a new message.
 */
export const CMsgSteamSockets_UDP_ConnectRequestSchema: GenMessage<CMsgSteamSockets_UDP_ConnectRequest> = /*@__PURE__*/
  messageDesc(file_steamnetworkingsockets_messages_udp, 2);

/**
 * @generated from message CMsgSteamSockets_UDP_ConnectOK
 */
export type CMsgSteamSockets_UDP_ConnectOK = Message<"CMsgSteamSockets_UDP_ConnectOK"> & {
  /**
   * @generated from field: optional fixed32 client_connection_id = 1;
   */
  clientConnectionId: number;

  /**
   * @generated from field: optional fixed32 server_connection_id = 5;
   */
  serverConnectionId: number;

  /**
   * @generated from field: optional fixed64 your_timestamp = 3;
   */
  yourTimestamp: bigint;

  /**
   * @generated from field: optional uint32 delay_time_usec = 4;
   */
  delayTimeUsec: number;

  /**
   * @generated from field: optional CMsgSteamDatagramSessionCryptInfoSigned crypt = 7;
   */
  crypt?: CMsgSteamDatagramSessionCryptInfoSigned;

  /**
   * @generated from field: optional CMsgSteamDatagramCertificateSigned cert = 8;
   */
  cert?: CMsgSteamDatagramCertificateSigned;

  /**
   * @generated from field: optional string identity_string = 11;
   */
  identityString: string;

  /**
   * @generated from field: optional fixed64 legacy_server_steam_id = 2;
   */
  legacyServerSteamId: bigint;

  /**
   * @generated from field: optional CMsgSteamNetworkingIdentityLegacyBinary legacy_identity_binary = 10;
   */
  legacyIdentityBinary?: CMsgSteamNetworkingIdentityLegacyBinary;
};

/**
 * Describes the message CMsgSteamSockets_UDP_ConnectOK.
 * Use `create(CMsgSteamSockets_UDP_ConnectOKSchema)` to create a new message.
 */
export const CMsgSteamSockets_UDP_ConnectOKSchema: GenMessage<CMsgSteamSockets_UDP_ConnectOK> = /*@__PURE__*/
  messageDesc(file_steamnetworkingsockets_messages_udp, 3);

/**
 * @generated from message CMsgSteamSockets_UDP_ConnectionClosed
 */
export type CMsgSteamSockets_UDP_ConnectionClosed = Message<"CMsgSteamSockets_UDP_ConnectionClosed"> & {
  /**
   * @generated from field: optional fixed32 to_connection_id = 4;
   */
  toConnectionId: number;

  /**
   * @generated from field: optional fixed32 from_connection_id = 5;
   */
  fromConnectionId: number;

  /**
   * @generated from field: optional string debug = 2;
   */
  debug: string;

  /**
   * @generated from field: optional uint32 reason_code = 3;
   */
  reasonCode: number;
};

/**
 * Describes the message CMsgSteamSockets_UDP_ConnectionClosed.
 * Use `create(CMsgSteamSockets_UDP_ConnectionClosedSchema)` to create a new message.
 */
export const CMsgSteamSockets_UDP_ConnectionClosedSchema: GenMessage<CMsgSteamSockets_UDP_ConnectionClosed> = /*@__PURE__*/
  messageDesc(file_steamnetworkingsockets_messages_udp, 4);

/**
 * @generated from message CMsgSteamSockets_UDP_NoConnection
 */
export type CMsgSteamSockets_UDP_NoConnection = Message<"CMsgSteamSockets_UDP_NoConnection"> & {
  /**
   * @generated from field: optional fixed32 from_connection_id = 2;
   */
  fromConnectionId: number;

  /**
   * @generated from field: optional fixed32 to_connection_id = 3;
   */
  toConnectionId: number;
};

/**
 * Describes the message CMsgSteamSockets_UDP_NoConnection.
 * Use `create(CMsgSteamSockets_UDP_NoConnectionSchema)` to create a new message.
 */
export const CMsgSteamSockets_UDP_NoConnectionSchema: GenMessage<CMsgSteamSockets_UDP_NoConnection> = /*@__PURE__*/
  messageDesc(file_steamnetworkingsockets_messages_udp, 5);

/**
 * @generated from message CMsgSteamSockets_UDP_Stats
 */
export type CMsgSteamSockets_UDP_Stats = Message<"CMsgSteamSockets_UDP_Stats"> & {
  /**
   * @generated from field: optional CMsgSteamDatagramConnectionQuality stats = 1;
   */
  stats?: CMsgSteamDatagramConnectionQuality;

  /**
   * @generated from field: optional uint32 flags = 3;
   */
  flags: number;
};

/**
 * Describes the message CMsgSteamSockets_UDP_Stats.
 * Use `create(CMsgSteamSockets_UDP_StatsSchema)` to create a new message.
 */
export const CMsgSteamSockets_UDP_StatsSchema: GenMessage<CMsgSteamSockets_UDP_Stats> = /*@__PURE__*/
  messageDesc(file_steamnetworkingsockets_messages_udp, 6);

/**
 * @generated from enum CMsgSteamSockets_UDP_Stats.Flags
 */
export enum CMsgSteamSockets_UDP_Stats_Flags {
  /**
   * @generated from enum value: ACK_REQUEST_E2E = 2;
   */
  ACK_REQUEST_E2E = 2,

  /**
   * @generated from enum value: ACK_REQUEST_IMMEDIATE = 4;
   */
  ACK_REQUEST_IMMEDIATE = 4,

  /**
   * @generated from enum value: NOT_PRIMARY_TRANSPORT_E2E = 16;
   */
  NOT_PRIMARY_TRANSPORT_E2E = 16,
}

/**
 * Describes the enum CMsgSteamSockets_UDP_Stats.Flags.
 */
export const CMsgSteamSockets_UDP_Stats_FlagsSchema: GenEnum<CMsgSteamSockets_UDP_Stats_Flags> = /*@__PURE__*/
  enumDesc(file_steamnetworkingsockets_messages_udp, 6, 0);

/**
 * @generated from enum ESteamNetworkingUDPMsgID
 */
export enum ESteamNetworkingUDPMsgID {
  /**
   * @generated from enum value: k_ESteamNetworkingUDPMsg_ChallengeRequest = 32;
   */
  k_ESteamNetworkingUDPMsg_ChallengeRequest = 32,

  /**
   * @generated from enum value: k_ESteamNetworkingUDPMsg_ChallengeReply = 33;
   */
  k_ESteamNetworkingUDPMsg_ChallengeReply = 33,

  /**
   * @generated from enum value: k_ESteamNetworkingUDPMsg_ConnectRequest = 34;
   */
  k_ESteamNetworkingUDPMsg_ConnectRequest = 34,

  /**
   * @generated from enum value: k_ESteamNetworkingUDPMsg_ConnectOK = 35;
   */
  k_ESteamNetworkingUDPMsg_ConnectOK = 35,

  /**
   * @generated from enum value: k_ESteamNetworkingUDPMsg_ConnectionClosed = 36;
   */
  k_ESteamNetworkingUDPMsg_ConnectionClosed = 36,

  /**
   * @generated from enum value: k_ESteamNetworkingUDPMsg_NoConnection = 37;
   */
  k_ESteamNetworkingUDPMsg_NoConnection = 37,
}

/**
 * Describes the enum ESteamNetworkingUDPMsgID.
 */
export const ESteamNetworkingUDPMsgIDSchema: GenEnum<ESteamNetworkingUDPMsgID> = /*@__PURE__*/
  enumDesc(file_steamnetworkingsockets_messages_udp, 0);

