// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_base.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenExtension, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, extDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { FieldOptions, MessageOptions } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_descriptor } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_base.proto.
 */
export const file_steammessages_base: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_descriptor]);

/**
 * @generated from message CMsgIPAddress
 */
export type CMsgIPAddress = Message<"CMsgIPAddress"> & {
  /**
   * @generated from oneof CMsgIPAddress.ip
   */
  ip: {
    /**
     * @generated from field: fixed32 v4 = 1;
     */
    value: number;
    case: "v4";
  } | {
    /**
     * @generated from field: bytes v6 = 2;
     */
    value: Uint8Array;
    case: "v6";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message CMsgIPAddress.
 * Use `create(CMsgIPAddressSchema)` to create a new message.
 */
export const CMsgIPAddressSchema: GenMessage<CMsgIPAddress> = /*@__PURE__*/
  messageDesc(file_steammessages_base, 0);

/**
 * @generated from message CMsgIPAddressBucket
 */
export type CMsgIPAddressBucket = Message<"CMsgIPAddressBucket"> & {
  /**
   * @generated from field: optional CMsgIPAddress original_ip_address = 1;
   */
  originalIpAddress?: CMsgIPAddress;

  /**
   * @generated from field: optional fixed64 bucket = 2;
   */
  bucket: bigint;
};

/**
 * Describes the message CMsgIPAddressBucket.
 * Use `create(CMsgIPAddressBucketSchema)` to create a new message.
 */
export const CMsgIPAddressBucketSchema: GenMessage<CMsgIPAddressBucket> = /*@__PURE__*/
  messageDesc(file_steammessages_base, 1);

/**
 * @generated from message CMsgGCRoutingProtoBufHeader
 */
export type CMsgGCRoutingProtoBufHeader = Message<"CMsgGCRoutingProtoBufHeader"> & {
  /**
   * @generated from field: optional uint64 dst_gcid_queue = 1;
   */
  dstGcidQueue: bigint;

  /**
   * @generated from field: optional uint32 dst_gc_dir_index = 2;
   */
  dstGcDirIndex: number;
};

/**
 * Describes the message CMsgGCRoutingProtoBufHeader.
 * Use `create(CMsgGCRoutingProtoBufHeaderSchema)` to create a new message.
 */
export const CMsgGCRoutingProtoBufHeaderSchema: GenMessage<CMsgGCRoutingProtoBufHeader> = /*@__PURE__*/
  messageDesc(file_steammessages_base, 2);

/**
 * @generated from message CMsgProtoBufHeader
 */
export type CMsgProtoBufHeader = Message<"CMsgProtoBufHeader"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional int32 client_sessionid = 2;
   */
  clientSessionid: number;

  /**
   * @generated from field: optional uint32 routing_appid = 3;
   */
  routingAppid: number;

  /**
   * @generated from field: optional fixed64 jobid_source = 10 [default = 18446744073709551615];
   */
  jobidSource: bigint;

  /**
   * @generated from field: optional fixed64 jobid_target = 11 [default = 18446744073709551615];
   */
  jobidTarget: bigint;

  /**
   * @generated from field: optional string target_job_name = 12;
   */
  targetJobName: string;

  /**
   * @generated from field: optional int32 seq_num = 24;
   */
  seqNum: number;

  /**
   * @generated from field: optional int32 eresult = 13 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional string error_message = 14;
   */
  errorMessage: string;

  /**
   * @generated from field: optional uint32 auth_account_flags = 16;
   */
  authAccountFlags: number;

  /**
   * @generated from field: optional uint32 token_source = 22;
   */
  tokenSource: number;

  /**
   * @generated from field: optional bool admin_spoofing_user = 23;
   */
  adminSpoofingUser: boolean;

  /**
   * @generated from field: optional int32 transport_error = 17 [default = 1];
   */
  transportError: number;

  /**
   * @generated from field: optional uint64 messageid = 18 [default = 18446744073709551615];
   */
  messageid: bigint;

  /**
   * @generated from field: optional uint32 publisher_group_id = 19;
   */
  publisherGroupId: number;

  /**
   * @generated from field: optional uint32 sysid = 20;
   */
  sysid: number;

  /**
   * @generated from field: optional uint32 webapi_key_id = 25;
   */
  webapiKeyId: number;

  /**
   * @generated from field: optional bool is_from_external_source = 26;
   */
  isFromExternalSource: boolean;

  /**
   * @generated from field: repeated uint32 forward_to_sysid = 27;
   */
  forwardToSysid: number[];

  /**
   * @generated from field: optional uint32 cm_sysid = 28;
   */
  cmSysid: number;

  /**
   * @generated from field: optional uint32 launcher_type = 31 [default = 0];
   */
  launcherType: number;

  /**
   * @generated from field: optional uint32 realm = 32 [default = 0];
   */
  realm: number;

  /**
   * @generated from field: optional int32 timeout_ms = 33 [default = -1];
   */
  timeoutMs: number;

  /**
   * @generated from field: optional string debug_source = 34;
   */
  debugSource: string;

  /**
   * @generated from field: optional uint32 debug_source_string_index = 35;
   */
  debugSourceStringIndex: number;

  /**
   * @generated from field: optional uint64 token_id = 36;
   */
  tokenId: bigint;

  /**
   * @generated from field: optional CMsgGCRoutingProtoBufHeader routing_gc = 37;
   */
  routingGc?: CMsgGCRoutingProtoBufHeader;

  /**
   * @generated from field: optional CMsgProtoBufHeader.ESessionDisposition session_disposition = 38 [default = k_ESessionDispositionNormal];
   */
  sessionDisposition: CMsgProtoBufHeader_ESessionDisposition;

  /**
   * @generated from field: optional string wg_token = 39;
   */
  wgToken: string;

  /**
   * @generated from field: optional string webui_auth_key = 40;
   */
  webuiAuthKey: string;

  /**
   * @generated from field: repeated int32 exclude_client_sessionids = 41;
   */
  excludeClientSessionids: number[];

  /**
   * @generated from field: optional fixed64 admin_request_spoofing_steamid = 43;
   */
  adminRequestSpoofingSteamid: bigint;

  /**
   * @generated from field: optional bool is_valveds = 44;
   */
  isValveds: boolean;

  /**
   * @generated from field: optional fixed64 trace_tag = 45;
   */
  traceTag: bigint;

  /**
   * @generated from oneof CMsgProtoBufHeader.ip_addr
   */
  ipAddr: {
    /**
     * @generated from field: uint32 ip = 15;
     */
    value: number;
    case: "ip";
  } | {
    /**
     * @generated from field: bytes ip_v6 = 29;
     */
    value: Uint8Array;
    case: "ipV6";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message CMsgProtoBufHeader.
 * Use `create(CMsgProtoBufHeaderSchema)` to create a new message.
 */
export const CMsgProtoBufHeaderSchema: GenMessage<CMsgProtoBufHeader> = /*@__PURE__*/
  messageDesc(file_steammessages_base, 3);

/**
 * @generated from enum CMsgProtoBufHeader.ESessionDisposition
 */
export enum CMsgProtoBufHeader_ESessionDisposition {
  /**
   * @generated from enum value: k_ESessionDispositionNormal = 0;
   */
  k_ESessionDispositionNormal = 0,

  /**
   * @generated from enum value: k_ESessionDispositionDisconnect = 1;
   */
  k_ESessionDispositionDisconnect = 1,
}

/**
 * Describes the enum CMsgProtoBufHeader.ESessionDisposition.
 */
export const CMsgProtoBufHeader_ESessionDispositionSchema: GenEnum<CMsgProtoBufHeader_ESessionDisposition> = /*@__PURE__*/
  enumDesc(file_steammessages_base, 3, 0);

/**
 * @generated from message CMsgKubeRPCPacket
 */
export type CMsgKubeRPCPacket = Message<"CMsgKubeRPCPacket"> & {
  /**
   * @generated from field: optional CMsgKubeRPCPacket.Hdr hdr = 1;
   */
  hdr?: CMsgKubeRPCPacket_Hdr;

  /**
   * @generated from field: optional bytes payload = 2;
   */
  payload: Uint8Array;
};

/**
 * Describes the message CMsgKubeRPCPacket.
 * Use `create(CMsgKubeRPCPacketSchema)` to create a new message.
 */
export const CMsgKubeRPCPacketSchema: GenMessage<CMsgKubeRPCPacket> = /*@__PURE__*/
  messageDesc(file_steammessages_base, 4);

/**
 * @generated from message CMsgKubeRPCPacket.Hdr
 */
export type CMsgKubeRPCPacket_Hdr = Message<"CMsgKubeRPCPacket.Hdr"> & {
  /**
   * @generated from field: optional fixed64 jobid_source = 10 [default = 18446744073709551615];
   */
  jobidSource: bigint;

  /**
   * @generated from field: optional fixed64 jobid_target = 11 [default = 18446744073709551615];
   */
  jobidTarget: bigint;

  /**
   * @generated from field: optional int32 eresult = 13 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional string target_job_name = 12;
   */
  targetJobName: string;

  /**
   * @generated from field: optional string error_message = 14;
   */
  errorMessage: string;

  /**
   * @generated from field: optional string reply_address = 42;
   */
  replyAddress: string;
};

/**
 * Describes the message CMsgKubeRPCPacket.Hdr.
 * Use `create(CMsgKubeRPCPacket_HdrSchema)` to create a new message.
 */
export const CMsgKubeRPCPacket_HdrSchema: GenMessage<CMsgKubeRPCPacket_Hdr> = /*@__PURE__*/
  messageDesc(file_steammessages_base, 4, 0);

/**
 * @generated from message CMsgMulti
 */
export type CMsgMulti = Message<"CMsgMulti"> & {
  /**
   * @generated from field: optional uint32 size_unzipped = 1;
   */
  sizeUnzipped: number;

  /**
   * @generated from field: optional bytes message_body = 2;
   */
  messageBody: Uint8Array;
};

/**
 * Describes the message CMsgMulti.
 * Use `create(CMsgMultiSchema)` to create a new message.
 */
export const CMsgMultiSchema: GenMessage<CMsgMulti> = /*@__PURE__*/
  messageDesc(file_steammessages_base, 5);

/**
 * @generated from message CMsgProtobufWrapped
 */
export type CMsgProtobufWrapped = Message<"CMsgProtobufWrapped"> & {
  /**
   * @generated from field: optional bytes message_body = 1;
   */
  messageBody: Uint8Array;
};

/**
 * Describes the message CMsgProtobufWrapped.
 * Use `create(CMsgProtobufWrappedSchema)` to create a new message.
 */
export const CMsgProtobufWrappedSchema: GenMessage<CMsgProtobufWrapped> = /*@__PURE__*/
  messageDesc(file_steammessages_base, 6);

/**
 * @generated from message CMsgAuthTicket
 */
export type CMsgAuthTicket = Message<"CMsgAuthTicket"> & {
  /**
   * @generated from field: optional uint32 estate = 1;
   */
  estate: number;

  /**
   * @generated from field: optional uint32 eresult = 2 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional fixed64 steamid = 3;
   */
  steamid: bigint;

  /**
   * @generated from field: optional fixed64 gameid = 4;
   */
  gameid: bigint;

  /**
   * @generated from field: optional uint32 h_steam_pipe = 5;
   */
  hSteamPipe: number;

  /**
   * @generated from field: optional uint32 ticket_crc = 6;
   */
  ticketCrc: number;

  /**
   * @generated from field: optional bytes ticket = 7;
   */
  ticket: Uint8Array;

  /**
   * @generated from field: optional bytes server_secret = 8;
   */
  serverSecret: Uint8Array;

  /**
   * @generated from field: optional uint32 ticket_type = 9;
   */
  ticketType: number;
};

/**
 * Describes the message CMsgAuthTicket.
 * Use `create(CMsgAuthTicketSchema)` to create a new message.
 */
export const CMsgAuthTicketSchema: GenMessage<CMsgAuthTicket> = /*@__PURE__*/
  messageDesc(file_steammessages_base, 7);

/**
 * @generated from message CCDDBAppDetailCommon
 */
export type CCDDBAppDetailCommon = Message<"CCDDBAppDetailCommon"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name: string;

  /**
   * @generated from field: optional string icon = 3;
   */
  icon: string;

  /**
   * @generated from field: optional bool tool = 6;
   */
  tool: boolean;

  /**
   * @generated from field: optional bool demo = 7;
   */
  demo: boolean;

  /**
   * @generated from field: optional bool media = 8;
   */
  media: boolean;

  /**
   * @generated from field: optional bool community_visible_stats = 9;
   */
  communityVisibleStats: boolean;

  /**
   * @generated from field: optional string friendly_name = 10;
   */
  friendlyName: string;

  /**
   * @generated from field: optional string propagation = 11;
   */
  propagation: string;

  /**
   * @generated from field: optional bool has_adult_content = 12;
   */
  hasAdultContent: boolean;

  /**
   * @generated from field: optional bool is_visible_in_steam_china = 13;
   */
  isVisibleInSteamChina: boolean;

  /**
   * @generated from field: optional uint32 app_type = 14;
   */
  appType: number;

  /**
   * @generated from field: optional bool has_adult_content_sex = 15;
   */
  hasAdultContentSex: boolean;

  /**
   * @generated from field: optional bool has_adult_content_violence = 16;
   */
  hasAdultContentViolence: boolean;

  /**
   * @generated from field: repeated uint32 content_descriptorids = 17;
   */
  contentDescriptorids: number[];

  /**
   * @generated from field: repeated uint32 content_descriptorids_including_dlc = 18;
   */
  contentDescriptoridsIncludingDlc: number[];
};

/**
 * Describes the message CCDDBAppDetailCommon.
 * Use `create(CCDDBAppDetailCommonSchema)` to create a new message.
 */
export const CCDDBAppDetailCommonSchema: GenMessage<CCDDBAppDetailCommon> = /*@__PURE__*/
  messageDesc(file_steammessages_base, 8);

/**
 * @generated from message CMsgAppRights
 */
export type CMsgAppRights = Message<"CMsgAppRights"> & {
  /**
   * @generated from field: optional bool edit_info = 1;
   */
  editInfo: boolean;

  /**
   * @generated from field: optional bool publish = 2;
   */
  publish: boolean;

  /**
   * @generated from field: optional bool view_error_data = 3;
   */
  viewErrorData: boolean;

  /**
   * @generated from field: optional bool download = 4;
   */
  download: boolean;

  /**
   * @generated from field: optional bool upload_cdkeys = 5;
   */
  uploadCdkeys: boolean;

  /**
   * @generated from field: optional bool generate_cdkeys = 6;
   */
  generateCdkeys: boolean;

  /**
   * @generated from field: optional bool view_financials = 7;
   */
  viewFinancials: boolean;

  /**
   * @generated from field: optional bool manage_ceg = 8;
   */
  manageCeg: boolean;

  /**
   * @generated from field: optional bool manage_signing = 9;
   */
  manageSigning: boolean;

  /**
   * @generated from field: optional bool manage_cdkeys = 10;
   */
  manageCdkeys: boolean;

  /**
   * @generated from field: optional bool edit_marketing = 11;
   */
  editMarketing: boolean;

  /**
   * @generated from field: optional bool economy_support = 12;
   */
  economySupport: boolean;

  /**
   * @generated from field: optional bool economy_support_supervisor = 13;
   */
  economySupportSupervisor: boolean;

  /**
   * @generated from field: optional bool manage_pricing = 14;
   */
  managePricing: boolean;

  /**
   * @generated from field: optional bool broadcast_live = 15;
   */
  broadcastLive: boolean;

  /**
   * @generated from field: optional bool view_marketing_traffic = 16;
   */
  viewMarketingTraffic: boolean;

  /**
   * @generated from field: optional bool edit_store_display_content = 17;
   */
  editStoreDisplayContent: boolean;
};

/**
 * Describes the message CMsgAppRights.
 * Use `create(CMsgAppRightsSchema)` to create a new message.
 */
export const CMsgAppRightsSchema: GenMessage<CMsgAppRights> = /*@__PURE__*/
  messageDesc(file_steammessages_base, 9);

/**
 * @generated from message CCuratorPreferences
 */
export type CCuratorPreferences = Message<"CCuratorPreferences"> & {
  /**
   * @generated from field: optional uint32 supported_languages = 1;
   */
  supportedLanguages: number;

  /**
   * @generated from field: optional bool platform_windows = 2;
   */
  platformWindows: boolean;

  /**
   * @generated from field: optional bool platform_mac = 3;
   */
  platformMac: boolean;

  /**
   * @generated from field: optional bool platform_linux = 4;
   */
  platformLinux: boolean;

  /**
   * @generated from field: optional bool vr_content = 5;
   */
  vrContent: boolean;

  /**
   * @generated from field: optional bool adult_content_violence = 6;
   */
  adultContentViolence: boolean;

  /**
   * @generated from field: optional bool adult_content_sex = 7;
   */
  adultContentSex: boolean;

  /**
   * @generated from field: optional uint32 timestamp_updated = 8;
   */
  timestampUpdated: number;

  /**
   * @generated from field: repeated uint32 tagids_curated = 9;
   */
  tagidsCurated: number[];

  /**
   * @generated from field: repeated uint32 tagids_filtered = 10;
   */
  tagidsFiltered: number[];

  /**
   * @generated from field: optional string website_title = 11;
   */
  websiteTitle: string;

  /**
   * @generated from field: optional string website_url = 12;
   */
  websiteUrl: string;

  /**
   * @generated from field: optional string discussion_url = 13;
   */
  discussionUrl: string;

  /**
   * @generated from field: optional bool show_broadcast = 14;
   */
  showBroadcast: boolean;
};

/**
 * Describes the message CCuratorPreferences.
 * Use `create(CCuratorPreferencesSchema)` to create a new message.
 */
export const CCuratorPreferencesSchema: GenMessage<CCuratorPreferences> = /*@__PURE__*/
  messageDesc(file_steammessages_base, 10);

/**
 * @generated from message CLocalizationToken
 */
export type CLocalizationToken = Message<"CLocalizationToken"> & {
  /**
   * @generated from field: optional uint32 language = 1;
   */
  language: number;

  /**
   * @generated from field: optional string localized_string = 2;
   */
  localizedString: string;
};

/**
 * Describes the message CLocalizationToken.
 * Use `create(CLocalizationTokenSchema)` to create a new message.
 */
export const CLocalizationTokenSchema: GenMessage<CLocalizationToken> = /*@__PURE__*/
  messageDesc(file_steammessages_base, 11);

/**
 * @generated from message CClanEventUserNewsTuple
 */
export type CClanEventUserNewsTuple = Message<"CClanEventUserNewsTuple"> & {
  /**
   * @generated from field: optional uint32 clanid = 1;
   */
  clanid: number;

  /**
   * @generated from field: optional fixed64 event_gid = 2;
   */
  eventGid: bigint;

  /**
   * @generated from field: optional fixed64 announcement_gid = 3;
   */
  announcementGid: bigint;

  /**
   * @generated from field: optional uint32 rtime_start = 4;
   */
  rtimeStart: number;

  /**
   * @generated from field: optional uint32 rtime_end = 5;
   */
  rtimeEnd: number;

  /**
   * @generated from field: optional uint32 priority_score = 6;
   */
  priorityScore: number;

  /**
   * @generated from field: optional uint32 type = 7;
   */
  type: number;

  /**
   * @generated from field: optional uint32 clamp_range_slot = 8;
   */
  clampRangeSlot: number;

  /**
   * @generated from field: optional uint32 appid = 9;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 rtime32_last_modified = 10;
   */
  rtime32LastModified: number;
};

/**
 * Describes the message CClanEventUserNewsTuple.
 * Use `create(CClanEventUserNewsTupleSchema)` to create a new message.
 */
export const CClanEventUserNewsTupleSchema: GenMessage<CClanEventUserNewsTuple> = /*@__PURE__*/
  messageDesc(file_steammessages_base, 12);

/**
 * @generated from message CClanMatchEventByRange
 */
export type CClanMatchEventByRange = Message<"CClanMatchEventByRange"> & {
  /**
   * @generated from field: optional uint32 rtime_before = 1;
   */
  rtimeBefore: number;

  /**
   * @generated from field: optional uint32 rtime_after = 2;
   */
  rtimeAfter: number;

  /**
   * @generated from field: optional uint32 qualified = 3;
   */
  qualified: number;

  /**
   * @generated from field: repeated CClanEventUserNewsTuple events = 4;
   */
  events: CClanEventUserNewsTuple[];
};

/**
 * Describes the message CClanMatchEventByRange.
 * Use `create(CClanMatchEventByRangeSchema)` to create a new message.
 */
export const CClanMatchEventByRangeSchema: GenMessage<CClanMatchEventByRange> = /*@__PURE__*/
  messageDesc(file_steammessages_base, 13);

/**
 * @generated from message CCommunity_ClanAnnouncementInfo
 */
export type CCommunity_ClanAnnouncementInfo = Message<"CCommunity_ClanAnnouncementInfo"> & {
  /**
   * @generated from field: optional uint64 gid = 1;
   */
  gid: bigint;

  /**
   * @generated from field: optional uint64 clanid = 2;
   */
  clanid: bigint;

  /**
   * @generated from field: optional uint64 posterid = 3;
   */
  posterid: bigint;

  /**
   * @generated from field: optional string headline = 4;
   */
  headline: string;

  /**
   * @generated from field: optional uint32 posttime = 5;
   */
  posttime: number;

  /**
   * @generated from field: optional uint32 updatetime = 6;
   */
  updatetime: number;

  /**
   * @generated from field: optional string body = 7;
   */
  body: string;

  /**
   * @generated from field: optional int32 commentcount = 8;
   */
  commentcount: number;

  /**
   * @generated from field: repeated string tags = 9;
   */
  tags: string[];

  /**
   * @generated from field: optional int32 language = 10;
   */
  language: number;

  /**
   * @generated from field: optional bool hidden = 11;
   */
  hidden: boolean;

  /**
   * @generated from field: optional fixed64 forum_topic_id = 12;
   */
  forumTopicId: bigint;

  /**
   * @generated from field: optional fixed64 event_gid = 13;
   */
  eventGid: bigint;

  /**
   * @generated from field: optional int32 voteupcount = 14;
   */
  voteupcount: number;

  /**
   * @generated from field: optional int32 votedowncount = 15;
   */
  votedowncount: number;

  /**
   * @generated from field: optional EBanContentCheckResult ban_check_result = 16 [default = k_EBanContentCheckResult_NotScanned];
   */
  banCheckResult: EBanContentCheckResult;

  /**
   * @generated from field: optional bool banned = 17;
   */
  banned: boolean;
};

/**
 * Describes the message CCommunity_ClanAnnouncementInfo.
 * Use `create(CCommunity_ClanAnnouncementInfoSchema)` to create a new message.
 */
export const CCommunity_ClanAnnouncementInfoSchema: GenMessage<CCommunity_ClanAnnouncementInfo> = /*@__PURE__*/
  messageDesc(file_steammessages_base, 14);

/**
 * @generated from message CClanEventData
 */
export type CClanEventData = Message<"CClanEventData"> & {
  /**
   * @generated from field: optional fixed64 gid = 1;
   */
  gid: bigint;

  /**
   * @generated from field: optional fixed64 clan_steamid = 2;
   */
  clanSteamid: bigint;

  /**
   * @generated from field: optional string event_name = 3;
   */
  eventName: string;

  /**
   * @generated from field: optional EProtoClanEventType event_type = 4 [default = k_EClanOtherEvent];
   */
  eventType: EProtoClanEventType;

  /**
   * @generated from field: optional uint32 appid = 5;
   */
  appid: number;

  /**
   * @generated from field: optional string server_address = 6;
   */
  serverAddress: string;

  /**
   * @generated from field: optional string server_password = 7;
   */
  serverPassword: string;

  /**
   * @generated from field: optional uint32 rtime32_start_time = 8;
   */
  rtime32StartTime: number;

  /**
   * @generated from field: optional uint32 rtime32_end_time = 9;
   */
  rtime32EndTime: number;

  /**
   * @generated from field: optional int32 comment_count = 10;
   */
  commentCount: number;

  /**
   * @generated from field: optional fixed64 creator_steamid = 11;
   */
  creatorSteamid: bigint;

  /**
   * @generated from field: optional fixed64 last_update_steamid = 12;
   */
  lastUpdateSteamid: bigint;

  /**
   * @generated from field: optional string event_notes = 13;
   */
  eventNotes: string;

  /**
   * @generated from field: optional string jsondata = 14;
   */
  jsondata: string;

  /**
   * @generated from field: optional CCommunity_ClanAnnouncementInfo announcement_body = 15;
   */
  announcementBody?: CCommunity_ClanAnnouncementInfo;

  /**
   * @generated from field: optional bool published = 16;
   */
  published: boolean;

  /**
   * @generated from field: optional bool hidden = 17;
   */
  hidden: boolean;

  /**
   * @generated from field: optional uint32 rtime32_visibility_start = 18;
   */
  rtime32VisibilityStart: number;

  /**
   * @generated from field: optional uint32 rtime32_visibility_end = 19;
   */
  rtime32VisibilityEnd: number;

  /**
   * @generated from field: optional uint32 broadcaster_accountid = 20;
   */
  broadcasterAccountid: number;

  /**
   * @generated from field: optional uint32 follower_count = 21;
   */
  followerCount: number;

  /**
   * @generated from field: optional uint32 ignore_count = 22;
   */
  ignoreCount: number;

  /**
   * @generated from field: optional fixed64 forum_topic_id = 23;
   */
  forumTopicId: bigint;

  /**
   * @generated from field: optional uint32 rtime32_last_modified = 24;
   */
  rtime32LastModified: number;

  /**
   * @generated from field: optional fixed64 news_post_gid = 25;
   */
  newsPostGid: bigint;

  /**
   * @generated from field: optional uint32 rtime_mod_reviewed = 26;
   */
  rtimeModReviewed: number;

  /**
   * @generated from field: optional uint32 featured_app_tagid = 27;
   */
  featuredAppTagid: number;

  /**
   * @generated from field: repeated uint32 referenced_appids = 28;
   */
  referencedAppids: number[];

  /**
   * @generated from field: optional uint32 build_id = 29;
   */
  buildId: number;

  /**
   * @generated from field: optional string build_branch = 30;
   */
  buildBranch: string;

  /**
   * @generated from field: optional bool unlisted = 31;
   */
  unlisted: boolean;
};

/**
 * Describes the message CClanEventData.
 * Use `create(CClanEventDataSchema)` to create a new message.
 */
export const CClanEventDataSchema: GenMessage<CClanEventData> = /*@__PURE__*/
  messageDesc(file_steammessages_base, 15);

/**
 * @generated from message CBilling_Address
 */
export type CBilling_Address = Message<"CBilling_Address"> & {
  /**
   * @generated from field: optional string first_name = 1;
   */
  firstName: string;

  /**
   * @generated from field: optional string last_name = 2;
   */
  lastName: string;

  /**
   * @generated from field: optional string address1 = 3;
   */
  address1: string;

  /**
   * @generated from field: optional string address2 = 4;
   */
  address2: string;

  /**
   * @generated from field: optional string city = 5;
   */
  city: string;

  /**
   * @generated from field: optional string us_state = 6;
   */
  usState: string;

  /**
   * @generated from field: optional string country_code = 7;
   */
  countryCode: string;

  /**
   * @generated from field: optional string postcode = 8;
   */
  postcode: string;

  /**
   * @generated from field: optional int32 zip_plus4 = 9;
   */
  zipPlus4: number;

  /**
   * @generated from field: optional string phone = 10;
   */
  phone: string;
};

/**
 * Describes the message CBilling_Address.
 * Use `create(CBilling_AddressSchema)` to create a new message.
 */
export const CBilling_AddressSchema: GenMessage<CBilling_Address> = /*@__PURE__*/
  messageDesc(file_steammessages_base, 16);

/**
 * @generated from message CPackageReservationStatus
 */
export type CPackageReservationStatus = Message<"CPackageReservationStatus"> & {
  /**
   * @generated from field: optional uint32 packageid = 1;
   */
  packageid: number;

  /**
   * @generated from field: optional int32 reservation_state = 2;
   */
  reservationState: number;

  /**
   * @generated from field: optional int32 queue_position = 3;
   */
  queuePosition: number;

  /**
   * @generated from field: optional int32 total_queue_size = 4;
   */
  totalQueueSize: number;

  /**
   * @generated from field: optional string reservation_country_code = 5;
   */
  reservationCountryCode: string;

  /**
   * @generated from field: optional bool expired = 6;
   */
  expired: boolean;

  /**
   * @generated from field: optional uint32 time_expires = 7;
   */
  timeExpires: number;

  /**
   * @generated from field: optional uint32 time_reserved = 8;
   */
  timeReserved: number;

  /**
   * @generated from field: optional uint32 rtime_estimated_notification = 9;
   */
  rtimeEstimatedNotification: number;

  /**
   * @generated from field: optional string notificaton_token = 10;
   */
  notificatonToken: string;
};

/**
 * Describes the message CPackageReservationStatus.
 * Use `create(CPackageReservationStatusSchema)` to create a new message.
 */
export const CPackageReservationStatusSchema: GenMessage<CPackageReservationStatus> = /*@__PURE__*/
  messageDesc(file_steammessages_base, 17);

/**
 * @generated from message CMsgKeyValuePair
 */
export type CMsgKeyValuePair = Message<"CMsgKeyValuePair"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional string value = 2;
   */
  value: string;
};

/**
 * Describes the message CMsgKeyValuePair.
 * Use `create(CMsgKeyValuePairSchema)` to create a new message.
 */
export const CMsgKeyValuePairSchema: GenMessage<CMsgKeyValuePair> = /*@__PURE__*/
  messageDesc(file_steammessages_base, 18);

/**
 * @generated from message CMsgKeyValueSet
 */
export type CMsgKeyValueSet = Message<"CMsgKeyValueSet"> & {
  /**
   * @generated from field: repeated CMsgKeyValuePair pairs = 1;
   */
  pairs: CMsgKeyValuePair[];
};

/**
 * Describes the message CMsgKeyValueSet.
 * Use `create(CMsgKeyValueSetSchema)` to create a new message.
 */
export const CMsgKeyValueSetSchema: GenMessage<CMsgKeyValueSet> = /*@__PURE__*/
  messageDesc(file_steammessages_base, 19);

/**
 * @generated from message UserContentDescriptorPreferences
 */
export type UserContentDescriptorPreferences = Message<"UserContentDescriptorPreferences"> & {
  /**
   * @generated from field: repeated UserContentDescriptorPreferences.ContentDescriptor content_descriptors_to_exclude = 1;
   */
  contentDescriptorsToExclude: UserContentDescriptorPreferences_ContentDescriptor[];
};

/**
 * Describes the message UserContentDescriptorPreferences.
 * Use `create(UserContentDescriptorPreferencesSchema)` to create a new message.
 */
export const UserContentDescriptorPreferencesSchema: GenMessage<UserContentDescriptorPreferences> = /*@__PURE__*/
  messageDesc(file_steammessages_base, 20);

/**
 * @generated from message UserContentDescriptorPreferences.ContentDescriptor
 */
export type UserContentDescriptorPreferences_ContentDescriptor = Message<"UserContentDescriptorPreferences.ContentDescriptor"> & {
  /**
   * @generated from field: optional uint32 content_descriptorid = 1;
   */
  contentDescriptorid: number;

  /**
   * @generated from field: optional uint32 timestamp_added = 2;
   */
  timestampAdded: number;
};

/**
 * Describes the message UserContentDescriptorPreferences.ContentDescriptor.
 * Use `create(UserContentDescriptorPreferences_ContentDescriptorSchema)` to create a new message.
 */
export const UserContentDescriptorPreferences_ContentDescriptorSchema: GenMessage<UserContentDescriptorPreferences_ContentDescriptor> = /*@__PURE__*/
  messageDesc(file_steammessages_base, 20, 0);

/**
 * @generated from enum EBanContentCheckResult
 */
export enum EBanContentCheckResult {
  /**
   * @generated from enum value: k_EBanContentCheckResult_NotScanned = 0;
   */
  k_EBanContentCheckResult_NotScanned = 0,

  /**
   * @generated from enum value: k_EBanContentCheckResult_Reset = 1;
   */
  k_EBanContentCheckResult_Reset = 1,

  /**
   * @generated from enum value: k_EBanContentCheckResult_NeedsChecking = 2;
   */
  k_EBanContentCheckResult_NeedsChecking = 2,

  /**
   * @generated from enum value: k_EBanContentCheckResult_VeryUnlikely = 5;
   */
  k_EBanContentCheckResult_VeryUnlikely = 5,

  /**
   * @generated from enum value: k_EBanContentCheckResult_Unlikely = 30;
   */
  k_EBanContentCheckResult_Unlikely = 30,

  /**
   * @generated from enum value: k_EBanContentCheckResult_Possible = 50;
   */
  k_EBanContentCheckResult_Possible = 50,

  /**
   * @generated from enum value: k_EBanContentCheckResult_Likely = 75;
   */
  k_EBanContentCheckResult_Likely = 75,

  /**
   * @generated from enum value: k_EBanContentCheckResult_VeryLikely = 100;
   */
  k_EBanContentCheckResult_VeryLikely = 100,
}

/**
 * Describes the enum EBanContentCheckResult.
 */
export const EBanContentCheckResultSchema: GenEnum<EBanContentCheckResult> = /*@__PURE__*/
  enumDesc(file_steammessages_base, 0);

/**
 * @generated from enum EProtoClanEventType
 */
export enum EProtoClanEventType {
  /**
   * @generated from enum value: k_EClanOtherEvent = 1;
   */
  k_EClanOtherEvent = 1,

  /**
   * @generated from enum value: k_EClanGameEvent = 2;
   */
  k_EClanGameEvent = 2,

  /**
   * @generated from enum value: k_EClanPartyEvent = 3;
   */
  k_EClanPartyEvent = 3,

  /**
   * @generated from enum value: k_EClanMeetingEvent = 4;
   */
  k_EClanMeetingEvent = 4,

  /**
   * @generated from enum value: k_EClanSpecialCauseEvent = 5;
   */
  k_EClanSpecialCauseEvent = 5,

  /**
   * @generated from enum value: k_EClanMusicAndArtsEvent = 6;
   */
  k_EClanMusicAndArtsEvent = 6,

  /**
   * @generated from enum value: k_EClanSportsEvent = 7;
   */
  k_EClanSportsEvent = 7,

  /**
   * @generated from enum value: k_EClanTripEvent = 8;
   */
  k_EClanTripEvent = 8,

  /**
   * @generated from enum value: k_EClanChatEvent = 9;
   */
  k_EClanChatEvent = 9,

  /**
   * @generated from enum value: k_EClanGameReleaseEvent = 10;
   */
  k_EClanGameReleaseEvent = 10,

  /**
   * @generated from enum value: k_EClanBroadcastEvent = 11;
   */
  k_EClanBroadcastEvent = 11,

  /**
   * @generated from enum value: k_EClanSmallUpdateEvent = 12;
   */
  k_EClanSmallUpdateEvent = 12,

  /**
   * @generated from enum value: k_EClanPreAnnounceMajorUpdateEvent = 13;
   */
  k_EClanPreAnnounceMajorUpdateEvent = 13,

  /**
   * @generated from enum value: k_EClanMajorUpdateEvent = 14;
   */
  k_EClanMajorUpdateEvent = 14,

  /**
   * @generated from enum value: k_EClanDLCReleaseEvent = 15;
   */
  k_EClanDLCReleaseEvent = 15,

  /**
   * @generated from enum value: k_EClanFutureReleaseEvent = 16;
   */
  k_EClanFutureReleaseEvent = 16,

  /**
   * @generated from enum value: k_EClanESportTournamentStreamEvent = 17;
   */
  k_EClanESportTournamentStreamEvent = 17,

  /**
   * @generated from enum value: k_EClanDevStreamEvent = 18;
   */
  k_EClanDevStreamEvent = 18,

  /**
   * @generated from enum value: k_EClanFamousStreamEvent = 19;
   */
  k_EClanFamousStreamEvent = 19,

  /**
   * @generated from enum value: k_EClanGameSalesEvent = 20;
   */
  k_EClanGameSalesEvent = 20,

  /**
   * @generated from enum value: k_EClanGameItemSalesEvent = 21;
   */
  k_EClanGameItemSalesEvent = 21,

  /**
   * @generated from enum value: k_EClanInGameBonusXPEvent = 22;
   */
  k_EClanInGameBonusXPEvent = 22,

  /**
   * @generated from enum value: k_EClanInGameLootEvent = 23;
   */
  k_EClanInGameLootEvent = 23,

  /**
   * @generated from enum value: k_EClanInGamePerksEvent = 24;
   */
  k_EClanInGamePerksEvent = 24,

  /**
   * @generated from enum value: k_EClanInGameChallengeEvent = 25;
   */
  k_EClanInGameChallengeEvent = 25,

  /**
   * @generated from enum value: k_EClanInGameContestEvent = 26;
   */
  k_EClanInGameContestEvent = 26,

  /**
   * @generated from enum value: k_EClanIRLEvent = 27;
   */
  k_EClanIRLEvent = 27,

  /**
   * @generated from enum value: k_EClanNewsEvent = 28;
   */
  k_EClanNewsEvent = 28,

  /**
   * @generated from enum value: k_EClanBetaReleaseEvent = 29;
   */
  k_EClanBetaReleaseEvent = 29,

  /**
   * @generated from enum value: k_EClanInGameContentReleaseEvent = 30;
   */
  k_EClanInGameContentReleaseEvent = 30,

  /**
   * @generated from enum value: k_EClanFreeTrial = 31;
   */
  k_EClanFreeTrial = 31,

  /**
   * @generated from enum value: k_EClanSeasonRelease = 32;
   */
  k_EClanSeasonRelease = 32,

  /**
   * @generated from enum value: k_EClanSeasonUpdate = 33;
   */
  k_EClanSeasonUpdate = 33,

  /**
   * @generated from enum value: k_EClanCrosspostEvent = 34;
   */
  k_EClanCrosspostEvent = 34,

  /**
   * @generated from enum value: k_EClanInGameEventGeneral = 35;
   */
  k_EClanInGameEventGeneral = 35,
}

/**
 * Describes the enum EProtoClanEventType.
 */
export const EProtoClanEventTypeSchema: GenEnum<EProtoClanEventType> = /*@__PURE__*/
  enumDesc(file_steammessages_base, 1);

/**
 * @generated from enum PartnerEventNotificationType
 */
export enum PartnerEventNotificationType {
  /**
   * @generated from enum value: k_EEventStart = 0;
   */
  k_EEventStart = 0,

  /**
   * @generated from enum value: k_EEventBroadcastStart = 1;
   */
  k_EEventBroadcastStart = 1,

  /**
   * @generated from enum value: k_EEventMatchStart = 2;
   */
  k_EEventMatchStart = 2,

  /**
   * @generated from enum value: k_EEventPartnerMaxType = 3;
   */
  k_EEventPartnerMaxType = 3,
}

/**
 * Describes the enum PartnerEventNotificationType.
 */
export const PartnerEventNotificationTypeSchema: GenEnum<PartnerEventNotificationType> = /*@__PURE__*/
  enumDesc(file_steammessages_base, 2);

/**
 * @generated from extension: optional int32 msgpool_soft_limit = 50000 [default = 32];
 */
export const msgpool_soft_limit: GenExtension<MessageOptions, number> = /*@__PURE__*/
  extDesc(file_steammessages_base, 0);

/**
 * @generated from extension: optional int32 msgpool_hard_limit = 50001 [default = 384];
 */
export const msgpool_hard_limit: GenExtension<MessageOptions, number> = /*@__PURE__*/
  extDesc(file_steammessages_base, 1);

/**
 * @generated from extension: optional bool php_output_always_number = 50020 [default = false];
 */
export const php_output_always_number: GenExtension<FieldOptions, boolean> = /*@__PURE__*/
  extDesc(file_steammessages_base, 2);

/**
 * @generated from extension: optional bool allow_field_named_steam_id = 50024 [default = false];
 */
export const allow_field_named_steam_id: GenExtension<FieldOptions, boolean> = /*@__PURE__*/
  extDesc(file_steammessages_base, 3);

