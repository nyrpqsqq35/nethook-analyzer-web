// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_community.steamclient.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { CCDDBAppDetailCommon, CClanMatchEventByRange, CMsgIPAddress, EProtoClanEventType } from "./steammessages_base_pb";
import { file_steammessages_base } from "./steammessages_base_pb";
import { file_steammessages_unified_base_steamclient } from "./steammessages_unified_base.steamclient_pb";
import type { ECommentThreadType, EContentReportReason } from "./enums_pb";
import { file_enums } from "./enums_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_community.steamclient.proto.
 */
export const file_steammessages_community_steamclient: GenFile = /*@__PURE__*/
  fileDesc("", [file_steammessages_base, file_steammessages_unified_base_steamclient, file_enums]);

/**
 * @generated from message CCommunity_GetApps_Request
 */
export type CCommunity_GetApps_Request = Message<"CCommunity_GetApps_Request"> & {
  /**
   * @generated from field: repeated int32 appids = 1;
   */
  appids: number[];

  /**
   * @generated from field: optional uint32 language = 2;
   */
  language: number;
};

/**
 * Describes the message CCommunity_GetApps_Request.
 * Use `create(CCommunity_GetApps_RequestSchema)` to create a new message.
 */
export const CCommunity_GetApps_RequestSchema: GenMessage<CCommunity_GetApps_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 0);

/**
 * @generated from message CCommunity_GetApps_Response
 */
export type CCommunity_GetApps_Response = Message<"CCommunity_GetApps_Response"> & {
  /**
   * @generated from field: repeated CCDDBAppDetailCommon apps = 1;
   */
  apps: CCDDBAppDetailCommon[];
};

/**
 * Describes the message CCommunity_GetApps_Response.
 * Use `create(CCommunity_GetApps_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetApps_ResponseSchema: GenMessage<CCommunity_GetApps_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 1);

/**
 * @generated from message CCommunity_GetAppRichPresenceLocalization_Request
 */
export type CCommunity_GetAppRichPresenceLocalization_Request = Message<"CCommunity_GetAppRichPresenceLocalization_Request"> & {
  /**
   * @generated from field: optional int32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional string language = 2;
   */
  language: string;
};

/**
 * Describes the message CCommunity_GetAppRichPresenceLocalization_Request.
 * Use `create(CCommunity_GetAppRichPresenceLocalization_RequestSchema)` to create a new message.
 */
export const CCommunity_GetAppRichPresenceLocalization_RequestSchema: GenMessage<CCommunity_GetAppRichPresenceLocalization_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 2);

/**
 * @generated from message CCommunity_GetAppRichPresenceLocalization_Response
 */
export type CCommunity_GetAppRichPresenceLocalization_Response = Message<"CCommunity_GetAppRichPresenceLocalization_Response"> & {
  /**
   * @generated from field: optional int32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: repeated CCommunity_GetAppRichPresenceLocalization_Response.TokenList token_lists = 2;
   */
  tokenLists: CCommunity_GetAppRichPresenceLocalization_Response_TokenList[];
};

/**
 * Describes the message CCommunity_GetAppRichPresenceLocalization_Response.
 * Use `create(CCommunity_GetAppRichPresenceLocalization_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetAppRichPresenceLocalization_ResponseSchema: GenMessage<CCommunity_GetAppRichPresenceLocalization_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 3);

/**
 * @generated from message CCommunity_GetAppRichPresenceLocalization_Response.Token
 */
export type CCommunity_GetAppRichPresenceLocalization_Response_Token = Message<"CCommunity_GetAppRichPresenceLocalization_Response.Token"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional string value = 2;
   */
  value: string;
};

/**
 * Describes the message CCommunity_GetAppRichPresenceLocalization_Response.Token.
 * Use `create(CCommunity_GetAppRichPresenceLocalization_Response_TokenSchema)` to create a new message.
 */
export const CCommunity_GetAppRichPresenceLocalization_Response_TokenSchema: GenMessage<CCommunity_GetAppRichPresenceLocalization_Response_Token> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 3, 0);

/**
 * @generated from message CCommunity_GetAppRichPresenceLocalization_Response.TokenList
 */
export type CCommunity_GetAppRichPresenceLocalization_Response_TokenList = Message<"CCommunity_GetAppRichPresenceLocalization_Response.TokenList"> & {
  /**
   * @generated from field: optional string language = 1;
   */
  language: string;

  /**
   * @generated from field: repeated CCommunity_GetAppRichPresenceLocalization_Response.Token tokens = 2;
   */
  tokens: CCommunity_GetAppRichPresenceLocalization_Response_Token[];
};

/**
 * Describes the message CCommunity_GetAppRichPresenceLocalization_Response.TokenList.
 * Use `create(CCommunity_GetAppRichPresenceLocalization_Response_TokenListSchema)` to create a new message.
 */
export const CCommunity_GetAppRichPresenceLocalization_Response_TokenListSchema: GenMessage<CCommunity_GetAppRichPresenceLocalization_Response_TokenList> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 3, 1);

/**
 * @generated from message CCommunity_GetCommentThread_Request
 */
export type CCommunity_GetCommentThread_Request = Message<"CCommunity_GetCommentThread_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional ECommentThreadType comment_thread_type = 2 [default = k_ECommentThreadTypeInvalid];
   */
  commentThreadType: ECommentThreadType;

  /**
   * @generated from field: optional fixed64 gidfeature = 3;
   */
  gidfeature: bigint;

  /**
   * @generated from field: optional fixed64 gidfeature2 = 4;
   */
  gidfeature2: bigint;

  /**
   * @generated from field: optional fixed64 commentthreadid = 5;
   */
  commentthreadid: bigint;

  /**
   * @generated from field: optional int32 start = 6;
   */
  start: number;

  /**
   * @generated from field: optional int32 count = 7;
   */
  count: number;

  /**
   * @generated from field: optional int32 upvoters = 8;
   */
  upvoters: number;

  /**
   * @generated from field: optional bool include_deleted = 9;
   */
  includeDeleted: boolean;

  /**
   * @generated from field: optional fixed64 gidcomment = 10;
   */
  gidcomment: bigint;

  /**
   * @generated from field: optional uint32 time_oldest = 11;
   */
  timeOldest: number;

  /**
   * @generated from field: optional bool oldest_first = 12;
   */
  oldestFirst: boolean;
};

/**
 * Describes the message CCommunity_GetCommentThread_Request.
 * Use `create(CCommunity_GetCommentThread_RequestSchema)` to create a new message.
 */
export const CCommunity_GetCommentThread_RequestSchema: GenMessage<CCommunity_GetCommentThread_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 4);

/**
 * @generated from message CCommunity_Comment
 */
export type CCommunity_Comment = Message<"CCommunity_Comment"> & {
  /**
   * @generated from field: optional fixed64 gidcomment = 1;
   */
  gidcomment: bigint;

  /**
   * @generated from field: optional fixed64 steamid = 2;
   */
  steamid: bigint;

  /**
   * @generated from field: optional uint32 timestamp = 3;
   */
  timestamp: number;

  /**
   * @generated from field: optional string text = 4;
   */
  text: string;

  /**
   * @generated from field: optional int32 upvotes = 5;
   */
  upvotes: number;

  /**
   * @generated from field: optional bool hidden = 6;
   */
  hidden: boolean;

  /**
   * @generated from field: optional bool hidden_by_user = 7;
   */
  hiddenByUser: boolean;

  /**
   * @generated from field: optional bool deleted = 8;
   */
  deleted: boolean;

  /**
   * @generated from field: optional CMsgIPAddress ipaddress = 9;
   */
  ipaddress?: CMsgIPAddress;

  /**
   * @generated from field: optional int32 total_hidden = 10;
   */
  totalHidden: number;

  /**
   * @generated from field: optional bool upvoted_by_user = 11;
   */
  upvotedByUser: boolean;

  /**
   * @generated from field: repeated CCommunity_Comment.Reaction reactions = 12;
   */
  reactions: CCommunity_Comment_Reaction[];

  /**
   * @generated from field: optional fixed64 gidparentcomment = 13;
   */
  gidparentcomment: bigint;
};

/**
 * Describes the message CCommunity_Comment.
 * Use `create(CCommunity_CommentSchema)` to create a new message.
 */
export const CCommunity_CommentSchema: GenMessage<CCommunity_Comment> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 5);

/**
 * @generated from message CCommunity_Comment.Reaction
 */
export type CCommunity_Comment_Reaction = Message<"CCommunity_Comment.Reaction"> & {
  /**
   * @generated from field: optional uint32 reactionid = 1;
   */
  reactionid: number;

  /**
   * @generated from field: optional uint32 count = 2;
   */
  count: number;
};

/**
 * Describes the message CCommunity_Comment.Reaction.
 * Use `create(CCommunity_Comment_ReactionSchema)` to create a new message.
 */
export const CCommunity_Comment_ReactionSchema: GenMessage<CCommunity_Comment_Reaction> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 5, 0);

/**
 * @generated from message CCommunity_GetCommentThread_Response
 */
export type CCommunity_GetCommentThread_Response = Message<"CCommunity_GetCommentThread_Response"> & {
  /**
   * @generated from field: repeated CCommunity_Comment comments = 1;
   */
  comments: CCommunity_Comment[];

  /**
   * @generated from field: repeated CCommunity_Comment deleted_comments = 2;
   */
  deletedComments: CCommunity_Comment[];

  /**
   * @generated from field: optional fixed64 steamid = 3;
   */
  steamid: bigint;

  /**
   * @generated from field: optional fixed64 commentthreadid = 4;
   */
  commentthreadid: bigint;

  /**
   * @generated from field: optional int32 start = 5;
   */
  start: number;

  /**
   * @generated from field: optional int32 count = 6;
   */
  count: number;

  /**
   * @generated from field: optional int32 total_count = 7;
   */
  totalCount: number;

  /**
   * @generated from field: optional int32 upvotes = 8;
   */
  upvotes: number;

  /**
   * @generated from field: repeated uint32 upvoters = 9;
   */
  upvoters: number[];

  /**
   * @generated from field: optional bool user_subscribed = 10;
   */
  userSubscribed: boolean;

  /**
   * @generated from field: optional bool user_upvoted = 11;
   */
  userUpvoted: boolean;

  /**
   * @generated from field: optional fixed64 answer_commentid = 12;
   */
  answerCommentid: bigint;

  /**
   * @generated from field: optional uint32 answer_actor = 13;
   */
  answerActor: number;

  /**
   * @generated from field: optional int32 answer_actor_rank = 14;
   */
  answerActorRank: number;

  /**
   * @generated from field: optional bool can_post = 15;
   */
  canPost: boolean;

  /**
   * @generated from field: optional uint32 comment_thread_type = 16;
   */
  commentThreadType: number;

  /**
   * @generated from field: optional fixed64 gidfeature = 17;
   */
  gidfeature: bigint;

  /**
   * @generated from field: optional fixed64 gidfeature2 = 18;
   */
  gidfeature2: bigint;
};

/**
 * Describes the message CCommunity_GetCommentThread_Response.
 * Use `create(CCommunity_GetCommentThread_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetCommentThread_ResponseSchema: GenMessage<CCommunity_GetCommentThread_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 6);

/**
 * @generated from message CCommunity_PostCommentToThread_Request
 */
export type CCommunity_PostCommentToThread_Request = Message<"CCommunity_PostCommentToThread_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional ECommentThreadType comment_thread_type = 2 [default = k_ECommentThreadTypeInvalid];
   */
  commentThreadType: ECommentThreadType;

  /**
   * @generated from field: optional fixed64 gidfeature = 3;
   */
  gidfeature: bigint;

  /**
   * @generated from field: optional fixed64 gidfeature2 = 4;
   */
  gidfeature2: bigint;

  /**
   * @generated from field: optional string text = 6;
   */
  text: string;

  /**
   * @generated from field: optional fixed64 gidparentcomment = 7;
   */
  gidparentcomment: bigint;

  /**
   * @generated from field: optional bool suppress_notifications = 8;
   */
  suppressNotifications: boolean;

  /**
   * @generated from field: optional bool is_report = 9;
   */
  isReport: boolean;

  /**
   * @generated from field: optional bool start_hidden = 10;
   */
  startHidden: boolean;
};

/**
 * Describes the message CCommunity_PostCommentToThread_Request.
 * Use `create(CCommunity_PostCommentToThread_RequestSchema)` to create a new message.
 */
export const CCommunity_PostCommentToThread_RequestSchema: GenMessage<CCommunity_PostCommentToThread_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 7);

/**
 * @generated from message CCommunity_PostCommentToThread_Response
 */
export type CCommunity_PostCommentToThread_Response = Message<"CCommunity_PostCommentToThread_Response"> & {
  /**
   * @generated from field: optional fixed64 gidcomment = 1;
   */
  gidcomment: bigint;

  /**
   * @generated from field: optional fixed64 commentthreadid = 2;
   */
  commentthreadid: bigint;

  /**
   * @generated from field: optional int32 count = 3;
   */
  count: number;

  /**
   * @generated from field: optional int32 upvotes = 4;
   */
  upvotes: number;
};

/**
 * Describes the message CCommunity_PostCommentToThread_Response.
 * Use `create(CCommunity_PostCommentToThread_ResponseSchema)` to create a new message.
 */
export const CCommunity_PostCommentToThread_ResponseSchema: GenMessage<CCommunity_PostCommentToThread_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 8);

/**
 * @generated from message CCommunity_DeleteCommentFromThread_Request
 */
export type CCommunity_DeleteCommentFromThread_Request = Message<"CCommunity_DeleteCommentFromThread_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional ECommentThreadType comment_thread_type = 2 [default = k_ECommentThreadTypeInvalid];
   */
  commentThreadType: ECommentThreadType;

  /**
   * @generated from field: optional fixed64 gidfeature = 3;
   */
  gidfeature: bigint;

  /**
   * @generated from field: optional fixed64 gidfeature2 = 4;
   */
  gidfeature2: bigint;

  /**
   * @generated from field: optional fixed64 gidcomment = 5;
   */
  gidcomment: bigint;

  /**
   * @generated from field: optional bool undelete = 6;
   */
  undelete: boolean;
};

/**
 * Describes the message CCommunity_DeleteCommentFromThread_Request.
 * Use `create(CCommunity_DeleteCommentFromThread_RequestSchema)` to create a new message.
 */
export const CCommunity_DeleteCommentFromThread_RequestSchema: GenMessage<CCommunity_DeleteCommentFromThread_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 9);

/**
 * @generated from message CCommunity_DeleteCommentFromThread_Response
 */
export type CCommunity_DeleteCommentFromThread_Response = Message<"CCommunity_DeleteCommentFromThread_Response"> & {
};

/**
 * Describes the message CCommunity_DeleteCommentFromThread_Response.
 * Use `create(CCommunity_DeleteCommentFromThread_ResponseSchema)` to create a new message.
 */
export const CCommunity_DeleteCommentFromThread_ResponseSchema: GenMessage<CCommunity_DeleteCommentFromThread_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 10);

/**
 * @generated from message CCommunity_RateCommentThread_Request
 */
export type CCommunity_RateCommentThread_Request = Message<"CCommunity_RateCommentThread_Request"> & {
  /**
   * @generated from field: optional string commentthreadtype = 1;
   */
  commentthreadtype: string;

  /**
   * @generated from field: optional uint64 steamid = 2;
   */
  steamid: bigint;

  /**
   * @generated from field: optional uint64 gidfeature = 3;
   */
  gidfeature: bigint;

  /**
   * @generated from field: optional uint64 gidfeature2 = 4;
   */
  gidfeature2: bigint;

  /**
   * @generated from field: optional uint64 gidcomment = 5;
   */
  gidcomment: bigint;

  /**
   * @generated from field: optional bool rate_up = 6;
   */
  rateUp: boolean;

  /**
   * @generated from field: optional bool suppress_notifications = 7;
   */
  suppressNotifications: boolean;
};

/**
 * Describes the message CCommunity_RateCommentThread_Request.
 * Use `create(CCommunity_RateCommentThread_RequestSchema)` to create a new message.
 */
export const CCommunity_RateCommentThread_RequestSchema: GenMessage<CCommunity_RateCommentThread_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 11);

/**
 * @generated from message CCommunity_RateCommentThread_Response
 */
export type CCommunity_RateCommentThread_Response = Message<"CCommunity_RateCommentThread_Response"> & {
  /**
   * @generated from field: optional uint64 gidcomment = 1;
   */
  gidcomment: bigint;

  /**
   * @generated from field: optional uint64 commentthreadid = 2;
   */
  commentthreadid: bigint;

  /**
   * @generated from field: optional uint32 count = 3;
   */
  count: number;

  /**
   * @generated from field: optional uint32 upvotes = 4;
   */
  upvotes: number;

  /**
   * @generated from field: optional bool has_upvoted = 5;
   */
  hasUpvoted: boolean;
};

/**
 * Describes the message CCommunity_RateCommentThread_Response.
 * Use `create(CCommunity_RateCommentThread_ResponseSchema)` to create a new message.
 */
export const CCommunity_RateCommentThread_ResponseSchema: GenMessage<CCommunity_RateCommentThread_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 12);

/**
 * @generated from message CCommunity_GetCommentThreadRatings_Request
 */
export type CCommunity_GetCommentThreadRatings_Request = Message<"CCommunity_GetCommentThreadRatings_Request"> & {
  /**
   * @generated from field: optional string commentthreadtype = 1;
   */
  commentthreadtype: string;

  /**
   * @generated from field: optional uint64 steamid = 2;
   */
  steamid: bigint;

  /**
   * @generated from field: optional uint64 gidfeature = 3;
   */
  gidfeature: bigint;

  /**
   * @generated from field: optional uint64 gidfeature2 = 4;
   */
  gidfeature2: bigint;

  /**
   * @generated from field: optional uint64 gidcomment = 5;
   */
  gidcomment: bigint;

  /**
   * @generated from field: optional uint32 max_results = 6;
   */
  maxResults: number;
};

/**
 * Describes the message CCommunity_GetCommentThreadRatings_Request.
 * Use `create(CCommunity_GetCommentThreadRatings_RequestSchema)` to create a new message.
 */
export const CCommunity_GetCommentThreadRatings_RequestSchema: GenMessage<CCommunity_GetCommentThreadRatings_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 13);

/**
 * @generated from message CCommunity_GetCommentThreadRatings_Response
 */
export type CCommunity_GetCommentThreadRatings_Response = Message<"CCommunity_GetCommentThreadRatings_Response"> & {
  /**
   * @generated from field: optional uint64 commentthreadid = 1;
   */
  commentthreadid: bigint;

  /**
   * @generated from field: optional uint64 gidcomment = 2;
   */
  gidcomment: bigint;

  /**
   * @generated from field: optional uint32 upvotes = 3;
   */
  upvotes: number;

  /**
   * @generated from field: optional bool has_upvoted = 4;
   */
  hasUpvoted: boolean;

  /**
   * @generated from field: repeated uint32 upvoter_accountids = 5;
   */
  upvoterAccountids: number[];
};

/**
 * Describes the message CCommunity_GetCommentThreadRatings_Response.
 * Use `create(CCommunity_GetCommentThreadRatings_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetCommentThreadRatings_ResponseSchema: GenMessage<CCommunity_GetCommentThreadRatings_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 14);

/**
 * @generated from message CCommunity_RateClanAnnouncement_Request
 */
export type CCommunity_RateClanAnnouncement_Request = Message<"CCommunity_RateClanAnnouncement_Request"> & {
  /**
   * @generated from field: optional uint64 announcementid = 1;
   */
  announcementid: bigint;

  /**
   * @generated from field: optional bool vote_up = 2;
   */
  voteUp: boolean;

  /**
   * @generated from field: optional uint32 clan_accountid = 3;
   */
  clanAccountid: number;
};

/**
 * Describes the message CCommunity_RateClanAnnouncement_Request.
 * Use `create(CCommunity_RateClanAnnouncement_RequestSchema)` to create a new message.
 */
export const CCommunity_RateClanAnnouncement_RequestSchema: GenMessage<CCommunity_RateClanAnnouncement_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 15);

/**
 * @generated from message CCommunity_RateClanAnnouncement_Response
 */
export type CCommunity_RateClanAnnouncement_Response = Message<"CCommunity_RateClanAnnouncement_Response"> & {
};

/**
 * Describes the message CCommunity_RateClanAnnouncement_Response.
 * Use `create(CCommunity_RateClanAnnouncement_ResponseSchema)` to create a new message.
 */
export const CCommunity_RateClanAnnouncement_ResponseSchema: GenMessage<CCommunity_RateClanAnnouncement_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 16);

/**
 * @generated from message CCommunity_GetClanAnnouncementVoteForUser_Request
 */
export type CCommunity_GetClanAnnouncementVoteForUser_Request = Message<"CCommunity_GetClanAnnouncementVoteForUser_Request"> & {
  /**
   * @generated from field: optional uint64 announcementid = 1;
   */
  announcementid: bigint;
};

/**
 * Describes the message CCommunity_GetClanAnnouncementVoteForUser_Request.
 * Use `create(CCommunity_GetClanAnnouncementVoteForUser_RequestSchema)` to create a new message.
 */
export const CCommunity_GetClanAnnouncementVoteForUser_RequestSchema: GenMessage<CCommunity_GetClanAnnouncementVoteForUser_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 17);

/**
 * @generated from message CCommunity_GetClanAnnouncementVoteForUser_Response
 */
export type CCommunity_GetClanAnnouncementVoteForUser_Response = Message<"CCommunity_GetClanAnnouncementVoteForUser_Response"> & {
  /**
   * @generated from field: optional bool voted_up = 1;
   */
  votedUp: boolean;

  /**
   * @generated from field: optional bool voted_down = 2;
   */
  votedDown: boolean;
};

/**
 * Describes the message CCommunity_GetClanAnnouncementVoteForUser_Response.
 * Use `create(CCommunity_GetClanAnnouncementVoteForUser_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetClanAnnouncementVoteForUser_ResponseSchema: GenMessage<CCommunity_GetClanAnnouncementVoteForUser_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 18);

/**
 * @generated from message CCommunity_GetClanLocGroupImages_Request
 */
export type CCommunity_GetClanLocGroupImages_Request = Message<"CCommunity_GetClanLocGroupImages_Request"> & {
  /**
   * @generated from field: optional uint64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional EClanImageGroup group = 2 [default = k_EClanImageGroup_None];
   */
  group: EClanImageGroup;

  /**
   * @generated from field: optional uint32 language = 3;
   */
  language: number;

  /**
   * @generated from field: repeated uint64 loc_group_ids = 4;
   */
  locGroupIds: bigint[];
};

/**
 * Describes the message CCommunity_GetClanLocGroupImages_Request.
 * Use `create(CCommunity_GetClanLocGroupImages_RequestSchema)` to create a new message.
 */
export const CCommunity_GetClanLocGroupImages_RequestSchema: GenMessage<CCommunity_GetClanLocGroupImages_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 19);

/**
 * @generated from message CCommunity_ClanLocGroupImage
 */
export type CCommunity_ClanLocGroupImage = Message<"CCommunity_ClanLocGroupImage"> & {
  /**
   * @generated from field: optional uint64 loc_group_id = 1;
   */
  locGroupId: bigint;

  /**
   * @generated from field: optional string image_hash = 2;
   */
  imageHash: string;

  /**
   * @generated from field: optional string thumbnail_hash = 3;
   */
  thumbnailHash: string;

  /**
   * @generated from field: optional EClanImageFileType file_type = 4 [default = k_EClanImageFileType_Unknown];
   */
  fileType: EClanImageFileType;

  /**
   * @generated from field: optional EClanImageGroup group = 5 [default = k_EClanImageGroup_None];
   */
  group: EClanImageGroup;

  /**
   * @generated from field: optional uint32 width = 6;
   */
  width: number;

  /**
   * @generated from field: optional uint32 height = 7;
   */
  height: number;

  /**
   * @generated from field: optional string extensions = 8;
   */
  extensions: string;
};

/**
 * Describes the message CCommunity_ClanLocGroupImage.
 * Use `create(CCommunity_ClanLocGroupImageSchema)` to create a new message.
 */
export const CCommunity_ClanLocGroupImageSchema: GenMessage<CCommunity_ClanLocGroupImage> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 20);

/**
 * @generated from message CCommunity_GetClanLocGroupImages_Response
 */
export type CCommunity_GetClanLocGroupImages_Response = Message<"CCommunity_GetClanLocGroupImages_Response"> & {
  /**
   * @generated from field: repeated CCommunity_ClanLocGroupImage images = 1;
   */
  images: CCommunity_ClanLocGroupImage[];
};

/**
 * Describes the message CCommunity_GetClanLocGroupImages_Response.
 * Use `create(CCommunity_GetClanLocGroupImages_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetClanLocGroupImages_ResponseSchema: GenMessage<CCommunity_GetClanLocGroupImages_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 21);

/**
 * @generated from message CCommunity_GetAvatarHistory_Request
 */
export type CCommunity_GetAvatarHistory_Request = Message<"CCommunity_GetAvatarHistory_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional bool filter_user_uploaded_only = 2;
   */
  filterUserUploadedOnly: boolean;
};

/**
 * Describes the message CCommunity_GetAvatarHistory_Request.
 * Use `create(CCommunity_GetAvatarHistory_RequestSchema)` to create a new message.
 */
export const CCommunity_GetAvatarHistory_RequestSchema: GenMessage<CCommunity_GetAvatarHistory_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 22);

/**
 * @generated from message CCommunity_GetAvatarHistory_Response
 */
export type CCommunity_GetAvatarHistory_Response = Message<"CCommunity_GetAvatarHistory_Response"> & {
  /**
   * @generated from field: repeated CCommunity_GetAvatarHistory_Response.AvatarData avatars = 1;
   */
  avatars: CCommunity_GetAvatarHistory_Response_AvatarData[];
};

/**
 * Describes the message CCommunity_GetAvatarHistory_Response.
 * Use `create(CCommunity_GetAvatarHistory_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetAvatarHistory_ResponseSchema: GenMessage<CCommunity_GetAvatarHistory_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 23);

/**
 * @generated from message CCommunity_GetAvatarHistory_Response.AvatarData
 */
export type CCommunity_GetAvatarHistory_Response_AvatarData = Message<"CCommunity_GetAvatarHistory_Response.AvatarData"> & {
  /**
   * @generated from field: optional string avatar_sha1 = 1;
   */
  avatarSha1: string;

  /**
   * @generated from field: optional bool user_uploaded = 2;
   */
  userUploaded: boolean;

  /**
   * @generated from field: optional uint32 timestamp = 3;
   */
  timestamp: number;
};

/**
 * Describes the message CCommunity_GetAvatarHistory_Response.AvatarData.
 * Use `create(CCommunity_GetAvatarHistory_Response_AvatarDataSchema)` to create a new message.
 */
export const CCommunity_GetAvatarHistory_Response_AvatarDataSchema: GenMessage<CCommunity_GetAvatarHistory_Response_AvatarData> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 23, 0);

/**
 * @generated from message CCommunity_GetClanEventCrowdInMetadata_Request
 */
export type CCommunity_GetClanEventCrowdInMetadata_Request = Message<"CCommunity_GetClanEventCrowdInMetadata_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional uint64 itemid = 2;
   */
  itemid: bigint;
};

/**
 * Describes the message CCommunity_GetClanEventCrowdInMetadata_Request.
 * Use `create(CCommunity_GetClanEventCrowdInMetadata_RequestSchema)` to create a new message.
 */
export const CCommunity_GetClanEventCrowdInMetadata_RequestSchema: GenMessage<CCommunity_GetClanEventCrowdInMetadata_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 24);

/**
 * @generated from message CCommunity_GetClanEventCrowdInMetadata_Response
 */
export type CCommunity_GetClanEventCrowdInMetadata_Response = Message<"CCommunity_GetClanEventCrowdInMetadata_Response"> & {
  /**
   * @generated from field: optional uint64 crowdin_project_id = 1;
   */
  crowdinProjectId: bigint;

  /**
   * @generated from field: optional uint64 crowdin_file_id = 2;
   */
  crowdinFileId: bigint;
};

/**
 * Describes the message CCommunity_GetClanEventCrowdInMetadata_Response.
 * Use `create(CCommunity_GetClanEventCrowdInMetadata_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetClanEventCrowdInMetadata_ResponseSchema: GenMessage<CCommunity_GetClanEventCrowdInMetadata_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 25);

/**
 * @generated from message CCommunity_GetClanCrowdInMetadata_Request
 */
export type CCommunity_GetClanCrowdInMetadata_Request = Message<"CCommunity_GetClanCrowdInMetadata_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;
};

/**
 * Describes the message CCommunity_GetClanCrowdInMetadata_Request.
 * Use `create(CCommunity_GetClanCrowdInMetadata_RequestSchema)` to create a new message.
 */
export const CCommunity_GetClanCrowdInMetadata_RequestSchema: GenMessage<CCommunity_GetClanCrowdInMetadata_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 26);

/**
 * @generated from message CCommunity_GetClanCrowdInMetadata_Response
 */
export type CCommunity_GetClanCrowdInMetadata_Response = Message<"CCommunity_GetClanCrowdInMetadata_Response"> & {
  /**
   * @generated from field: optional uint64 crowdin_project_id = 1;
   */
  crowdinProjectId: bigint;

  /**
   * @generated from field: optional uint64 crowdin_directory_id = 2;
   */
  crowdinDirectoryId: bigint;

  /**
   * @generated from field: optional bool push_by_default = 3;
   */
  pushByDefault: boolean;
};

/**
 * Describes the message CCommunity_GetClanCrowdInMetadata_Response.
 * Use `create(CCommunity_GetClanCrowdInMetadata_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetClanCrowdInMetadata_ResponseSchema: GenMessage<CCommunity_GetClanCrowdInMetadata_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 27);

/**
 * @generated from message CCommunity_FetchTranslationFromCrowdIn_Request
 */
export type CCommunity_FetchTranslationFromCrowdIn_Request = Message<"CCommunity_FetchTranslationFromCrowdIn_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional uint64 itemid = 2;
   */
  itemid: bigint;

  /**
   * @generated from field: optional int32 language = 3;
   */
  language: number;
};

/**
 * Describes the message CCommunity_FetchTranslationFromCrowdIn_Request.
 * Use `create(CCommunity_FetchTranslationFromCrowdIn_RequestSchema)` to create a new message.
 */
export const CCommunity_FetchTranslationFromCrowdIn_RequestSchema: GenMessage<CCommunity_FetchTranslationFromCrowdIn_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 28);

/**
 * @generated from message CCommunity_FetchTranslationFromCrowdIn_Response
 */
export type CCommunity_FetchTranslationFromCrowdIn_Response = Message<"CCommunity_FetchTranslationFromCrowdIn_Response"> & {
};

/**
 * Describes the message CCommunity_FetchTranslationFromCrowdIn_Response.
 * Use `create(CCommunity_FetchTranslationFromCrowdIn_ResponseSchema)` to create a new message.
 */
export const CCommunity_FetchTranslationFromCrowdIn_ResponseSchema: GenMessage<CCommunity_FetchTranslationFromCrowdIn_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 29);

/**
 * @generated from message CCommunity_HideAndReportComment_Request
 */
export type CCommunity_HideAndReportComment_Request = Message<"CCommunity_HideAndReportComment_Request"> & {
  /**
   * @generated from field: optional uint64 gidfeature = 1;
   */
  gidfeature: bigint;

  /**
   * @generated from field: optional uint64 gidfeature2 = 2;
   */
  gidfeature2: bigint;

  /**
   * @generated from field: optional uint64 gidcomment = 3;
   */
  gidcomment: bigint;

  /**
   * @generated from field: optional fixed64 steamid = 4;
   */
  steamid: bigint;

  /**
   * @generated from field: optional string commentthreadtype = 5;
   */
  commentthreadtype: string;

  /**
   * @generated from field: optional bool hide = 6;
   */
  hide: boolean;

  /**
   * @generated from field: optional EContentReportReason report_reason = 7 [default = k_EContentReportReason_Invalid];
   */
  reportReason: EContentReportReason;

  /**
   * @generated from field: optional string report_text = 8;
   */
  reportText: string;
};

/**
 * Describes the message CCommunity_HideAndReportComment_Request.
 * Use `create(CCommunity_HideAndReportComment_RequestSchema)` to create a new message.
 */
export const CCommunity_HideAndReportComment_RequestSchema: GenMessage<CCommunity_HideAndReportComment_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 30);

/**
 * @generated from message CCommunity_HideAndReportComment_Response
 */
export type CCommunity_HideAndReportComment_Response = Message<"CCommunity_HideAndReportComment_Response"> & {
};

/**
 * Describes the message CCommunity_HideAndReportComment_Response.
 * Use `create(CCommunity_HideAndReportComment_ResponseSchema)` to create a new message.
 */
export const CCommunity_HideAndReportComment_ResponseSchema: GenMessage<CCommunity_HideAndReportComment_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 31);

/**
 * @generated from message CAppPriority
 */
export type CAppPriority = Message<"CAppPriority"> & {
  /**
   * @generated from field: optional uint32 priority = 1;
   */
  priority: number;

  /**
   * @generated from field: repeated uint32 appid = 2;
   */
  appid: number[];
};

/**
 * Describes the message CAppPriority.
 * Use `create(CAppPrioritySchema)` to create a new message.
 */
export const CAppPrioritySchema: GenMessage<CAppPriority> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 32);

/**
 * @generated from message CCommunity_GetUserPartnerEventNews_Request
 */
export type CCommunity_GetUserPartnerEventNews_Request = Message<"CCommunity_GetUserPartnerEventNews_Request"> & {
  /**
   * @generated from field: optional uint32 count = 1;
   */
  count: number;

  /**
   * @generated from field: optional uint32 offset = 2;
   */
  offset: number;

  /**
   * @generated from field: optional uint32 rtime32_start_time = 3;
   */
  rtime32StartTime: number;

  /**
   * @generated from field: optional uint32 rtime32_end_time = 4;
   */
  rtime32EndTime: number;

  /**
   * @generated from field: repeated uint32 language_preference = 5;
   */
  languagePreference: number[];

  /**
   * @generated from field: repeated EProtoClanEventType filter_event_type = 6;
   */
  filterEventType: EProtoClanEventType[];

  /**
   * @generated from field: optional bool filter_to_appid = 7;
   */
  filterToAppid: boolean;

  /**
   * @generated from field: repeated CAppPriority app_list = 8;
   */
  appList: CAppPriority[];

  /**
   * @generated from field: optional uint32 count_after = 9 [default = 0];
   */
  countAfter: number;

  /**
   * @generated from field: optional uint32 count_before = 10 [default = 0];
   */
  countBefore: number;
};

/**
 * Describes the message CCommunity_GetUserPartnerEventNews_Request.
 * Use `create(CCommunity_GetUserPartnerEventNews_RequestSchema)` to create a new message.
 */
export const CCommunity_GetUserPartnerEventNews_RequestSchema: GenMessage<CCommunity_GetUserPartnerEventNews_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 33);

/**
 * @generated from message CCommunity_GetUserPartnerEventNews_Response
 */
export type CCommunity_GetUserPartnerEventNews_Response = Message<"CCommunity_GetUserPartnerEventNews_Response"> & {
  /**
   * @generated from field: repeated CClanMatchEventByRange results = 1;
   */
  results: CClanMatchEventByRange[];
};

/**
 * Describes the message CCommunity_GetUserPartnerEventNews_Response.
 * Use `create(CCommunity_GetUserPartnerEventNews_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetUserPartnerEventNews_ResponseSchema: GenMessage<CCommunity_GetUserPartnerEventNews_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 34);

/**
 * @generated from message CCommunity_GetBestEventsForUser_Request
 */
export type CCommunity_GetBestEventsForUser_Request = Message<"CCommunity_GetBestEventsForUser_Request"> & {
  /**
   * @generated from field: optional bool include_steam_blog = 1;
   */
  includeSteamBlog: boolean;

  /**
   * @generated from field: optional uint32 filter_to_played_within_days = 2;
   */
  filterToPlayedWithinDays: number;

  /**
   * @generated from field: optional bool include_only_game_updates = 3;
   */
  includeOnlyGameUpdates: boolean;
};

/**
 * Describes the message CCommunity_GetBestEventsForUser_Request.
 * Use `create(CCommunity_GetBestEventsForUser_RequestSchema)` to create a new message.
 */
export const CCommunity_GetBestEventsForUser_RequestSchema: GenMessage<CCommunity_GetBestEventsForUser_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 35);

/**
 * @generated from message CCommunity_PartnerEventResult
 */
export type CCommunity_PartnerEventResult = Message<"CCommunity_PartnerEventResult"> & {
  /**
   * @generated from field: optional uint32 clanid = 1;
   */
  clanid: number;

  /**
   * @generated from field: optional fixed64 event_gid = 2;
   */
  eventGid: bigint;

  /**
   * @generated from field: optional fixed64 announcement_gid = 3;
   */
  announcementGid: bigint;

  /**
   * @generated from field: optional uint32 appid = 4;
   */
  appid: number;

  /**
   * @generated from field: optional bool possible_takeover = 5;
   */
  possibleTakeover: boolean;

  /**
   * @generated from field: optional uint32 rtime32_last_modified = 6 [default = 0];
   */
  rtime32LastModified: number;

  /**
   * @generated from field: optional int32 user_app_priority = 7;
   */
  userAppPriority: number;
};

/**
 * Describes the message CCommunity_PartnerEventResult.
 * Use `create(CCommunity_PartnerEventResultSchema)` to create a new message.
 */
export const CCommunity_PartnerEventResultSchema: GenMessage<CCommunity_PartnerEventResult> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 36);

/**
 * @generated from message CCommunity_GetBestEventsForUser_Response
 */
export type CCommunity_GetBestEventsForUser_Response = Message<"CCommunity_GetBestEventsForUser_Response"> & {
  /**
   * @generated from field: repeated CCommunity_PartnerEventResult results = 1;
   */
  results: CCommunity_PartnerEventResult[];
};

/**
 * Describes the message CCommunity_GetBestEventsForUser_Response.
 * Use `create(CCommunity_GetBestEventsForUser_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetBestEventsForUser_ResponseSchema: GenMessage<CCommunity_GetBestEventsForUser_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 37);

/**
 * @generated from message CCommunity_MarkPartnerEventsForUser_Request
 */
export type CCommunity_MarkPartnerEventsForUser_Request = Message<"CCommunity_MarkPartnerEventsForUser_Request"> & {
  /**
   * @generated from field: repeated CCommunity_MarkPartnerEventsForUser_Request.PartnerEventMarking markings = 1;
   */
  markings: CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking[];
};

/**
 * Describes the message CCommunity_MarkPartnerEventsForUser_Request.
 * Use `create(CCommunity_MarkPartnerEventsForUser_RequestSchema)` to create a new message.
 */
export const CCommunity_MarkPartnerEventsForUser_RequestSchema: GenMessage<CCommunity_MarkPartnerEventsForUser_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 38);

/**
 * @generated from message CCommunity_MarkPartnerEventsForUser_Request.PartnerEventMarking
 */
export type CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking = Message<"CCommunity_MarkPartnerEventsForUser_Request.PartnerEventMarking"> & {
  /**
   * @generated from field: optional uint32 clanid = 1;
   */
  clanid: number;

  /**
   * @generated from field: optional fixed64 event_gid = 2;
   */
  eventGid: bigint;

  /**
   * @generated from field: optional EPartnerEventDisplayLocation display_location = 3 [default = k_EPartnerEventDisplayLocation_Invalid];
   */
  displayLocation: EPartnerEventDisplayLocation;

  /**
   * @generated from field: optional bool mark_shown = 4;
   */
  markShown: boolean;

  /**
   * @generated from field: optional bool mark_read = 5;
   */
  markRead: boolean;
};

/**
 * Describes the message CCommunity_MarkPartnerEventsForUser_Request.PartnerEventMarking.
 * Use `create(CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarkingSchema)` to create a new message.
 */
export const CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarkingSchema: GenMessage<CCommunity_MarkPartnerEventsForUser_Request_PartnerEventMarking> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 38, 0);

/**
 * @generated from message CCommunity_MarkPartnerEventsForUser_Response
 */
export type CCommunity_MarkPartnerEventsForUser_Response = Message<"CCommunity_MarkPartnerEventsForUser_Response"> & {
};

/**
 * Describes the message CCommunity_MarkPartnerEventsForUser_Response.
 * Use `create(CCommunity_MarkPartnerEventsForUser_ResponseSchema)` to create a new message.
 */
export const CCommunity_MarkPartnerEventsForUser_ResponseSchema: GenMessage<CCommunity_MarkPartnerEventsForUser_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 39);

/**
 * @generated from message CCommunity_GetUserPartnerEventViewStatus_Request
 */
export type CCommunity_GetUserPartnerEventViewStatus_Request = Message<"CCommunity_GetUserPartnerEventViewStatus_Request"> & {
  /**
   * @generated from field: repeated fixed64 event_gids = 1;
   */
  eventGids: bigint[];

  /**
   * @generated from field: optional bool include_read_events_only = 2;
   */
  includeReadEventsOnly: boolean;
};

/**
 * Describes the message CCommunity_GetUserPartnerEventViewStatus_Request.
 * Use `create(CCommunity_GetUserPartnerEventViewStatus_RequestSchema)` to create a new message.
 */
export const CCommunity_GetUserPartnerEventViewStatus_RequestSchema: GenMessage<CCommunity_GetUserPartnerEventViewStatus_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 40);

/**
 * @generated from message CCommunity_GetUserPartnerEventViewStatus_Response
 */
export type CCommunity_GetUserPartnerEventViewStatus_Response = Message<"CCommunity_GetUserPartnerEventViewStatus_Response"> & {
  /**
   * @generated from field: repeated CCommunity_GetUserPartnerEventViewStatus_Response.PartnerEvent events = 1;
   */
  events: CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent[];
};

/**
 * Describes the message CCommunity_GetUserPartnerEventViewStatus_Response.
 * Use `create(CCommunity_GetUserPartnerEventViewStatus_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetUserPartnerEventViewStatus_ResponseSchema: GenMessage<CCommunity_GetUserPartnerEventViewStatus_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 41);

/**
 * @generated from message CCommunity_GetUserPartnerEventViewStatus_Response.PartnerEvent
 */
export type CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent = Message<"CCommunity_GetUserPartnerEventViewStatus_Response.PartnerEvent"> & {
  /**
   * @generated from field: optional fixed64 event_gid = 1;
   */
  eventGid: bigint;

  /**
   * @generated from field: optional uint32 last_shown_time = 2;
   */
  lastShownTime: number;

  /**
   * @generated from field: optional uint32 last_read_time = 3;
   */
  lastReadTime: number;

  /**
   * @generated from field: optional uint32 clan_account_id = 4;
   */
  clanAccountId: number;
};

/**
 * Describes the message CCommunity_GetUserPartnerEventViewStatus_Response.PartnerEvent.
 * Use `create(CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEventSchema)` to create a new message.
 */
export const CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEventSchema: GenMessage<CCommunity_GetUserPartnerEventViewStatus_Response_PartnerEvent> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 41, 0);

/**
 * @generated from message CCommunity_PartnerEventsShowMoreForApp_Request
 */
export type CCommunity_PartnerEventsShowMoreForApp_Request = Message<"CCommunity_PartnerEventsShowMoreForApp_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;
};

/**
 * Describes the message CCommunity_PartnerEventsShowMoreForApp_Request.
 * Use `create(CCommunity_PartnerEventsShowMoreForApp_RequestSchema)` to create a new message.
 */
export const CCommunity_PartnerEventsShowMoreForApp_RequestSchema: GenMessage<CCommunity_PartnerEventsShowMoreForApp_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 42);

/**
 * @generated from message CCommunity_PartnerEventsShowMoreForApp_Response
 */
export type CCommunity_PartnerEventsShowMoreForApp_Response = Message<"CCommunity_PartnerEventsShowMoreForApp_Response"> & {
};

/**
 * Describes the message CCommunity_PartnerEventsShowMoreForApp_Response.
 * Use `create(CCommunity_PartnerEventsShowMoreForApp_ResponseSchema)` to create a new message.
 */
export const CCommunity_PartnerEventsShowMoreForApp_ResponseSchema: GenMessage<CCommunity_PartnerEventsShowMoreForApp_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 43);

/**
 * @generated from message CCommunity_PartnerEventsShowLessForApp_Request
 */
export type CCommunity_PartnerEventsShowLessForApp_Request = Message<"CCommunity_PartnerEventsShowLessForApp_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;
};

/**
 * Describes the message CCommunity_PartnerEventsShowLessForApp_Request.
 * Use `create(CCommunity_PartnerEventsShowLessForApp_RequestSchema)` to create a new message.
 */
export const CCommunity_PartnerEventsShowLessForApp_RequestSchema: GenMessage<CCommunity_PartnerEventsShowLessForApp_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 44);

/**
 * @generated from message CCommunity_PartnerEventsShowLessForApp_Response
 */
export type CCommunity_PartnerEventsShowLessForApp_Response = Message<"CCommunity_PartnerEventsShowLessForApp_Response"> & {
};

/**
 * Describes the message CCommunity_PartnerEventsShowLessForApp_Response.
 * Use `create(CCommunity_PartnerEventsShowLessForApp_ResponseSchema)` to create a new message.
 */
export const CCommunity_PartnerEventsShowLessForApp_ResponseSchema: GenMessage<CCommunity_PartnerEventsShowLessForApp_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 45);

/**
 * @generated from message CCommunity_ClearUserPartnerEventsAppPriorities_Request
 */
export type CCommunity_ClearUserPartnerEventsAppPriorities_Request = Message<"CCommunity_ClearUserPartnerEventsAppPriorities_Request"> & {
};

/**
 * Describes the message CCommunity_ClearUserPartnerEventsAppPriorities_Request.
 * Use `create(CCommunity_ClearUserPartnerEventsAppPriorities_RequestSchema)` to create a new message.
 */
export const CCommunity_ClearUserPartnerEventsAppPriorities_RequestSchema: GenMessage<CCommunity_ClearUserPartnerEventsAppPriorities_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 46);

/**
 * @generated from message CCommunity_ClearUserPartnerEventsAppPriorities_Response
 */
export type CCommunity_ClearUserPartnerEventsAppPriorities_Response = Message<"CCommunity_ClearUserPartnerEventsAppPriorities_Response"> & {
};

/**
 * Describes the message CCommunity_ClearUserPartnerEventsAppPriorities_Response.
 * Use `create(CCommunity_ClearUserPartnerEventsAppPriorities_ResponseSchema)` to create a new message.
 */
export const CCommunity_ClearUserPartnerEventsAppPriorities_ResponseSchema: GenMessage<CCommunity_ClearUserPartnerEventsAppPriorities_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 47);

/**
 * @generated from message CCommunity_GetUserPartnerEventsAppPriorities_Request
 */
export type CCommunity_GetUserPartnerEventsAppPriorities_Request = Message<"CCommunity_GetUserPartnerEventsAppPriorities_Request"> & {
};

/**
 * Describes the message CCommunity_GetUserPartnerEventsAppPriorities_Request.
 * Use `create(CCommunity_GetUserPartnerEventsAppPriorities_RequestSchema)` to create a new message.
 */
export const CCommunity_GetUserPartnerEventsAppPriorities_RequestSchema: GenMessage<CCommunity_GetUserPartnerEventsAppPriorities_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 48);

/**
 * @generated from message CCommunity_PartnerEventsAppPriority
 */
export type CCommunity_PartnerEventsAppPriority = Message<"CCommunity_PartnerEventsAppPriority"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional int32 user_app_priority = 2;
   */
  userAppPriority: number;
};

/**
 * Describes the message CCommunity_PartnerEventsAppPriority.
 * Use `create(CCommunity_PartnerEventsAppPrioritySchema)` to create a new message.
 */
export const CCommunity_PartnerEventsAppPrioritySchema: GenMessage<CCommunity_PartnerEventsAppPriority> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 49);

/**
 * @generated from message CCommunity_GetUserPartnerEventsAppPriorities_Response
 */
export type CCommunity_GetUserPartnerEventsAppPriorities_Response = Message<"CCommunity_GetUserPartnerEventsAppPriorities_Response"> & {
  /**
   * @generated from field: repeated CCommunity_PartnerEventsAppPriority priorities = 1;
   */
  priorities: CCommunity_PartnerEventsAppPriority[];
};

/**
 * Describes the message CCommunity_GetUserPartnerEventsAppPriorities_Response.
 * Use `create(CCommunity_GetUserPartnerEventsAppPriorities_ResponseSchema)` to create a new message.
 */
export const CCommunity_GetUserPartnerEventsAppPriorities_ResponseSchema: GenMessage<CCommunity_GetUserPartnerEventsAppPriorities_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 50);

/**
 * @generated from message CCommunity_ClearSinglePartnerEventsAppPriority_Request
 */
export type CCommunity_ClearSinglePartnerEventsAppPriority_Request = Message<"CCommunity_ClearSinglePartnerEventsAppPriority_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;
};

/**
 * Describes the message CCommunity_ClearSinglePartnerEventsAppPriority_Request.
 * Use `create(CCommunity_ClearSinglePartnerEventsAppPriority_RequestSchema)` to create a new message.
 */
export const CCommunity_ClearSinglePartnerEventsAppPriority_RequestSchema: GenMessage<CCommunity_ClearSinglePartnerEventsAppPriority_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 51);

/**
 * @generated from message CCommunity_ClearSinglePartnerEventsAppPriority_Response
 */
export type CCommunity_ClearSinglePartnerEventsAppPriority_Response = Message<"CCommunity_ClearSinglePartnerEventsAppPriority_Response"> & {
};

/**
 * Describes the message CCommunity_ClearSinglePartnerEventsAppPriority_Response.
 * Use `create(CCommunity_ClearSinglePartnerEventsAppPriority_ResponseSchema)` to create a new message.
 */
export const CCommunity_ClearSinglePartnerEventsAppPriority_ResponseSchema: GenMessage<CCommunity_ClearSinglePartnerEventsAppPriority_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 52);

/**
 * @generated from message CCommunity_SetRecommendationBotReviewStatus_Request
 */
export type CCommunity_SetRecommendationBotReviewStatus_Request = Message<"CCommunity_SetRecommendationBotReviewStatus_Request"> & {
  /**
   * @generated from field: repeated CCommunity_SetRecommendationBotReviewStatus_Request.ReviewLabel review_labels = 1;
   */
  reviewLabels: CCommunity_SetRecommendationBotReviewStatus_Request_ReviewLabel[];
};

/**
 * Describes the message CCommunity_SetRecommendationBotReviewStatus_Request.
 * Use `create(CCommunity_SetRecommendationBotReviewStatus_RequestSchema)` to create a new message.
 */
export const CCommunity_SetRecommendationBotReviewStatus_RequestSchema: GenMessage<CCommunity_SetRecommendationBotReviewStatus_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 53);

/**
 * @generated from message CCommunity_SetRecommendationBotReviewStatus_Request.ReviewLabel
 */
export type CCommunity_SetRecommendationBotReviewStatus_Request_ReviewLabel = Message<"CCommunity_SetRecommendationBotReviewStatus_Request.ReviewLabel"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint64 recommendationid = 2;
   */
  recommendationid: bigint;

  /**
   * @generated from field: optional bool is_bot_review = 3;
   */
  isBotReview: boolean;
};

/**
 * Describes the message CCommunity_SetRecommendationBotReviewStatus_Request.ReviewLabel.
 * Use `create(CCommunity_SetRecommendationBotReviewStatus_Request_ReviewLabelSchema)` to create a new message.
 */
export const CCommunity_SetRecommendationBotReviewStatus_Request_ReviewLabelSchema: GenMessage<CCommunity_SetRecommendationBotReviewStatus_Request_ReviewLabel> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 53, 0);

/**
 * @generated from message CCommunity_SetRecommendationBotReviewStatus_Response
 */
export type CCommunity_SetRecommendationBotReviewStatus_Response = Message<"CCommunity_SetRecommendationBotReviewStatus_Response"> & {
};

/**
 * Describes the message CCommunity_SetRecommendationBotReviewStatus_Response.
 * Use `create(CCommunity_SetRecommendationBotReviewStatus_ResponseSchema)` to create a new message.
 */
export const CCommunity_SetRecommendationBotReviewStatus_ResponseSchema: GenMessage<CCommunity_SetRecommendationBotReviewStatus_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_community_steamclient, 54);

/**
 * @generated from enum EClanImageGroup
 */
export enum EClanImageGroup {
  /**
   * @generated from enum value: k_EClanImageGroup_None = 0;
   */
  k_EClanImageGroup_None = 0,

  /**
   * @generated from enum value: k_EClanImageGroup_Announcement = 1;
   */
  k_EClanImageGroup_Announcement = 1,

  /**
   * @generated from enum value: k_EClanImageGroup_Curator = 2;
   */
  k_EClanImageGroup_Curator = 2,
}

/**
 * Describes the enum EClanImageGroup.
 */
export const EClanImageGroupSchema: GenEnum<EClanImageGroup> = /*@__PURE__*/
  enumDesc(file_steammessages_community_steamclient, 0);

/**
 * @generated from enum EClanImageFileType
 */
export enum EClanImageFileType {
  /**
   * @generated from enum value: k_EClanImageFileType_Unknown = 0;
   */
  k_EClanImageFileType_Unknown = 0,

  /**
   * @generated from enum value: k_EClanImageFileType_JPEG = 1;
   */
  k_EClanImageFileType_JPEG = 1,

  /**
   * @generated from enum value: k_EClanImageFileType_GIF = 2;
   */
  k_EClanImageFileType_GIF = 2,

  /**
   * @generated from enum value: k_EClanImageFileType_PNG = 3;
   */
  k_EClanImageFileType_PNG = 3,

  /**
   * @generated from enum value: k_EClanImageFileType_MP4 = 4;
   */
  k_EClanImageFileType_MP4 = 4,

  /**
   * @generated from enum value: k_EClanImageFileType_WEBM = 5;
   */
  k_EClanImageFileType_WEBM = 5,

  /**
   * @generated from enum value: k_EClanImageFileType_VTT = 6;
   */
  k_EClanImageFileType_VTT = 6,

  /**
   * @generated from enum value: k_EClanImageFileType_SRT = 7;
   */
  k_EClanImageFileType_SRT = 7,

  /**
   * @generated from enum value: k_EClanImageFileType_SVG = 8;
   */
  k_EClanImageFileType_SVG = 8,

  /**
   * @generated from enum value: k_EClanImageFileType_XML = 9;
   */
  k_EClanImageFileType_XML = 9,

  /**
   * @generated from enum value: k_EClanImageFileType_WEBP = 10;
   */
  k_EClanImageFileType_WEBP = 10,
}

/**
 * Describes the enum EClanImageFileType.
 */
export const EClanImageFileTypeSchema: GenEnum<EClanImageFileType> = /*@__PURE__*/
  enumDesc(file_steammessages_community_steamclient, 1);

/**
 * @generated from enum EPartnerEventDisplayLocation
 */
export enum EPartnerEventDisplayLocation {
  /**
   * @generated from enum value: k_EPartnerEventDisplayLocation_Invalid = 0;
   */
  k_EPartnerEventDisplayLocation_Invalid = 0,

  /**
   * @generated from enum value: k_EPartnerEventDisplayLocation_AppDetailsSpotlight = 1;
   */
  k_EPartnerEventDisplayLocation_AppDetailsSpotlight = 1,

  /**
   * @generated from enum value: k_EPartnerEventDisplayLocation_LibraryOverview = 2;
   */
  k_EPartnerEventDisplayLocation_LibraryOverview = 2,

  /**
   * @generated from enum value: k_EPartnerEventDisplayLocation_StoreAppPage = 3;
   */
  k_EPartnerEventDisplayLocation_StoreAppPage = 3,

  /**
   * @generated from enum value: k_EPartnerEventDisplayLocation_EventScroller = 4;
   */
  k_EPartnerEventDisplayLocation_EventScroller = 4,

  /**
   * @generated from enum value: k_EPartnerEventDisplayLocation_AppDetailsActivity = 5;
   */
  k_EPartnerEventDisplayLocation_AppDetailsActivity = 5,

  /**
   * @generated from enum value: k_EPartnerEventDisplayLocation_CommunityHub = 6;
   */
  k_EPartnerEventDisplayLocation_CommunityHub = 6,

  /**
   * @generated from enum value: k_EPartnerEventDisplayLocation_StoreFrontPage = 7;
   */
  k_EPartnerEventDisplayLocation_StoreFrontPage = 7,

  /**
   * @generated from enum value: k_EPartnerEventDisplayLocation_NewsHub = 8;
   */
  k_EPartnerEventDisplayLocation_NewsHub = 8,

  /**
   * @generated from enum value: k_EPartnerEventDisplayLocation_GamepadHome = 9;
   */
  k_EPartnerEventDisplayLocation_GamepadHome = 9,

  /**
   * @generated from enum value: k_EPartnerEventDisplayLocation_StoreHub = 10;
   */
  k_EPartnerEventDisplayLocation_StoreHub = 10,
}

/**
 * Describes the enum EPartnerEventDisplayLocation.
 */
export const EPartnerEventDisplayLocationSchema: GenEnum<EPartnerEventDisplayLocation> = /*@__PURE__*/
  enumDesc(file_steammessages_community_steamclient, 2);

/**
 * @generated from service Community
 */
export const Community: GenService<{
  /**
   * @generated from rpc Community.GetApps
   */
  getApps: {
    methodKind: "unary";
    input: typeof CCommunity_GetApps_RequestSchema;
    output: typeof CCommunity_GetApps_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetAppRichPresenceLocalization
   */
  getAppRichPresenceLocalization: {
    methodKind: "unary";
    input: typeof CCommunity_GetAppRichPresenceLocalization_RequestSchema;
    output: typeof CCommunity_GetAppRichPresenceLocalization_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetCommentThread
   */
  getCommentThread: {
    methodKind: "unary";
    input: typeof CCommunity_GetCommentThread_RequestSchema;
    output: typeof CCommunity_GetCommentThread_ResponseSchema;
  },
  /**
   * @generated from rpc Community.PostCommentToThread
   */
  postCommentToThread: {
    methodKind: "unary";
    input: typeof CCommunity_PostCommentToThread_RequestSchema;
    output: typeof CCommunity_PostCommentToThread_ResponseSchema;
  },
  /**
   * @generated from rpc Community.DeleteCommentFromThread
   */
  deleteCommentFromThread: {
    methodKind: "unary";
    input: typeof CCommunity_DeleteCommentFromThread_RequestSchema;
    output: typeof CCommunity_DeleteCommentFromThread_ResponseSchema;
  },
  /**
   * @generated from rpc Community.RateCommentThread
   */
  rateCommentThread: {
    methodKind: "unary";
    input: typeof CCommunity_RateCommentThread_RequestSchema;
    output: typeof CCommunity_RateCommentThread_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetCommentThreadRatings
   */
  getCommentThreadRatings: {
    methodKind: "unary";
    input: typeof CCommunity_GetCommentThreadRatings_RequestSchema;
    output: typeof CCommunity_GetCommentThreadRatings_ResponseSchema;
  },
  /**
   * @generated from rpc Community.RateClanAnnouncement
   */
  rateClanAnnouncement: {
    methodKind: "unary";
    input: typeof CCommunity_RateClanAnnouncement_RequestSchema;
    output: typeof CCommunity_RateClanAnnouncement_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetClanAnnouncementVoteForUser
   */
  getClanAnnouncementVoteForUser: {
    methodKind: "unary";
    input: typeof CCommunity_GetClanAnnouncementVoteForUser_RequestSchema;
    output: typeof CCommunity_GetClanAnnouncementVoteForUser_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetClanLocGroupImages
   */
  getClanLocGroupImages: {
    methodKind: "unary";
    input: typeof CCommunity_GetClanLocGroupImages_RequestSchema;
    output: typeof CCommunity_GetClanLocGroupImages_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetAvatarHistory
   */
  getAvatarHistory: {
    methodKind: "unary";
    input: typeof CCommunity_GetAvatarHistory_RequestSchema;
    output: typeof CCommunity_GetAvatarHistory_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetClanEventCrowdInMetadata
   */
  getClanEventCrowdInMetadata: {
    methodKind: "unary";
    input: typeof CCommunity_GetClanEventCrowdInMetadata_RequestSchema;
    output: typeof CCommunity_GetClanEventCrowdInMetadata_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetClanCrowdInMetadata
   */
  getClanCrowdInMetadata: {
    methodKind: "unary";
    input: typeof CCommunity_GetClanCrowdInMetadata_RequestSchema;
    output: typeof CCommunity_GetClanCrowdInMetadata_ResponseSchema;
  },
  /**
   * @generated from rpc Community.FetchTranslationFromCrowdIn
   */
  fetchTranslationFromCrowdIn: {
    methodKind: "unary";
    input: typeof CCommunity_FetchTranslationFromCrowdIn_RequestSchema;
    output: typeof CCommunity_FetchTranslationFromCrowdIn_ResponseSchema;
  },
  /**
   * @generated from rpc Community.HideAndReportComment
   */
  hideAndReportComment: {
    methodKind: "unary";
    input: typeof CCommunity_HideAndReportComment_RequestSchema;
    output: typeof CCommunity_HideAndReportComment_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetUserPartnerEventNews
   */
  getUserPartnerEventNews: {
    methodKind: "unary";
    input: typeof CCommunity_GetUserPartnerEventNews_RequestSchema;
    output: typeof CCommunity_GetUserPartnerEventNews_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetBestEventsForUser
   */
  getBestEventsForUser: {
    methodKind: "unary";
    input: typeof CCommunity_GetBestEventsForUser_RequestSchema;
    output: typeof CCommunity_GetBestEventsForUser_ResponseSchema;
  },
  /**
   * @generated from rpc Community.MarkPartnerEventsForUser
   */
  markPartnerEventsForUser: {
    methodKind: "unary";
    input: typeof CCommunity_MarkPartnerEventsForUser_RequestSchema;
    output: typeof CCommunity_MarkPartnerEventsForUser_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetUserPartnerEventViewStatus
   */
  getUserPartnerEventViewStatus: {
    methodKind: "unary";
    input: typeof CCommunity_GetUserPartnerEventViewStatus_RequestSchema;
    output: typeof CCommunity_GetUserPartnerEventViewStatus_ResponseSchema;
  },
  /**
   * @generated from rpc Community.PartnerEventsShowMoreForApp
   */
  partnerEventsShowMoreForApp: {
    methodKind: "unary";
    input: typeof CCommunity_PartnerEventsShowMoreForApp_RequestSchema;
    output: typeof CCommunity_PartnerEventsShowMoreForApp_ResponseSchema;
  },
  /**
   * @generated from rpc Community.PartnerEventsShowLessForApp
   */
  partnerEventsShowLessForApp: {
    methodKind: "unary";
    input: typeof CCommunity_PartnerEventsShowLessForApp_RequestSchema;
    output: typeof CCommunity_PartnerEventsShowLessForApp_ResponseSchema;
  },
  /**
   * @generated from rpc Community.ClearUserPartnerEventsAppPriorities
   */
  clearUserPartnerEventsAppPriorities: {
    methodKind: "unary";
    input: typeof CCommunity_ClearUserPartnerEventsAppPriorities_RequestSchema;
    output: typeof CCommunity_ClearUserPartnerEventsAppPriorities_ResponseSchema;
  },
  /**
   * @generated from rpc Community.GetUserPartnerEventsAppPriorities
   */
  getUserPartnerEventsAppPriorities: {
    methodKind: "unary";
    input: typeof CCommunity_GetUserPartnerEventsAppPriorities_RequestSchema;
    output: typeof CCommunity_GetUserPartnerEventsAppPriorities_ResponseSchema;
  },
  /**
   * @generated from rpc Community.ClearSinglePartnerEventsAppPriority
   */
  clearSinglePartnerEventsAppPriority: {
    methodKind: "unary";
    input: typeof CCommunity_ClearSinglePartnerEventsAppPriority_RequestSchema;
    output: typeof CCommunity_ClearSinglePartnerEventsAppPriority_ResponseSchema;
  },
  /**
   * @generated from rpc Community.SetRecommendationBotReviewStatus
   */
  setRecommendationBotReviewStatus: {
    methodKind: "unary";
    input: typeof CCommunity_SetRecommendationBotReviewStatus_RequestSchema;
    output: typeof CCommunity_SetRecommendationBotReviewStatus_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_community_steamclient, 0);

