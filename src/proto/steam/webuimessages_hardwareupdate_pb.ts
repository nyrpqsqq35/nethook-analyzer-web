// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file webuimessages_hardwareupdate.proto (syntax proto2)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_enums } from "./enums_pb";
import { file_steammessages_base } from "./steammessages_base_pb";
import type { WebUINoResponseSchema } from "./webuimessages_base_pb";
import { file_webuimessages_base } from "./webuimessages_base_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file webuimessages_hardwareupdate.proto.
 */
export const file_webuimessages_hardwareupdate: GenFile = /*@__PURE__*/
  fileDesc("CiJ3ZWJ1aW1lc3NhZ2VzX2hhcmR3YXJldXBkYXRlLnByb3RvIiIKIENIYXJkd2FyZVVwZGF0ZV9HZXRTdGF0ZV9SZXF1ZXN0Il8KIUNIYXJkd2FyZVVwZGF0ZV9HZXRTdGF0ZV9SZXNwb25zZRIcChRpc191cGRhdGVyX3N1cHBvcnRlZBgBIAEoCBIcChRoYXNfc2Vlbl9jb250cm9sbGVycxgCIAEoCCIrCilDSGFyZHdhcmVVcGRhdGVfU3RhdGVDaGFuZ2VkX05vdGlmaWNhdGlvbiIpCidDSGFyZHdhcmVVcGRhdGVfQ2hlY2tGb3JVcGRhdGVzX1JlcXVlc3QifwobQ01zZ0F2YWlsYWJsZUhhcmR3YXJlVXBkYXRlEg0KBWV0eXBlGAEgASgNEhMKC2hhcmR3YXJlX2lkGAIgASgNEhUKDXNlcmlhbF9udW1iZXIYAyABKAkSEgoKY3VycmVudF90cxgEIAEoCRIRCgl1cGRhdGVfdHMYBSABKAkiWQooQ0hhcmR3YXJlVXBkYXRlX0NoZWNrRm9yVXBkYXRlc19SZXNwb25zZRItCgd1cGRhdGVzGAEgAygLMhwuQ01zZ0F2YWlsYWJsZUhhcmR3YXJlVXBkYXRlIjcKHkNIYXJkd2FyZVVwZGF0ZV9VcGRhdGVfUmVxdWVzdBIVCg1zZXJpYWxfbnVtYmVyGAEgASgJIiEKH0NIYXJkd2FyZVVwZGF0ZV9VcGRhdGVfUmVzcG9uc2UiPworQ0hhcmR3YXJlVXBkYXRlX1VwZGF0ZVByb2dyZXNzX05vdGlmaWNhdGlvbhIQCghwcm9ncmVzcxgBIAEoBSIxCi9DSGFyZHdhcmVVcGRhdGVfVXBkYXRlU3RhdGVDaGFuZ2VkX05vdGlmaWNhdGlvbjKqBAoOSGFyZHdhcmVVcGRhdGUSUQoIR2V0U3RhdGUSIS5DSGFyZHdhcmVVcGRhdGVfR2V0U3RhdGVfUmVxdWVzdBoiLkNIYXJkd2FyZVVwZGF0ZV9HZXRTdGF0ZV9SZXNwb25zZRJSChJOb3RpZnlTdGF0ZUNoYW5nZWQSKi5DSGFyZHdhcmVVcGRhdGVfU3RhdGVDaGFuZ2VkX05vdGlmaWNhdGlvbhoQLldlYlVJTm9SZXNwb25zZRJmCg9DaGVja0ZvclVwZGF0ZXMSKC5DSGFyZHdhcmVVcGRhdGVfQ2hlY2tGb3JVcGRhdGVzX1JlcXVlc3QaKS5DSGFyZHdhcmVVcGRhdGVfQ2hlY2tGb3JVcGRhdGVzX1Jlc3BvbnNlEksKBlVwZGF0ZRIfLkNIYXJkd2FyZVVwZGF0ZV9VcGRhdGVfUmVxdWVzdBogLkNIYXJkd2FyZVVwZGF0ZV9VcGRhdGVfUmVzcG9uc2USVgoUTm90aWZ5VXBkYXRlUHJvZ3Jlc3MSLC5DSGFyZHdhcmVVcGRhdGVfVXBkYXRlUHJvZ3Jlc3NfTm90aWZpY2F0aW9uGhAuV2ViVUlOb1Jlc3BvbnNlEl4KGE5vdGlmeVVwZGF0ZVN0YXRlQ2hhbmdlZBIwLkNIYXJkd2FyZVVwZGF0ZV9VcGRhdGVTdGF0ZUNoYW5nZWRfTm90aWZpY2F0aW9uGhAuV2ViVUlOb1Jlc3BvbnNlGgSAlyIBQgVIAYABAQ", [file_enums, file_steammessages_base, file_webuimessages_base]);

/**
 * @generated from message CHardwareUpdate_GetState_Request
 */
export type CHardwareUpdate_GetState_Request = Message<"CHardwareUpdate_GetState_Request"> & {
};

/**
 * Describes the message CHardwareUpdate_GetState_Request.
 * Use `create(CHardwareUpdate_GetState_RequestSchema)` to create a new message.
 */
export const CHardwareUpdate_GetState_RequestSchema: GenMessage<CHardwareUpdate_GetState_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_hardwareupdate, 0);

/**
 * @generated from message CHardwareUpdate_GetState_Response
 */
export type CHardwareUpdate_GetState_Response = Message<"CHardwareUpdate_GetState_Response"> & {
  /**
   * @generated from field: optional bool is_updater_supported = 1;
   */
  isUpdaterSupported: boolean;

  /**
   * @generated from field: optional bool has_seen_controllers = 2;
   */
  hasSeenControllers: boolean;
};

/**
 * Describes the message CHardwareUpdate_GetState_Response.
 * Use `create(CHardwareUpdate_GetState_ResponseSchema)` to create a new message.
 */
export const CHardwareUpdate_GetState_ResponseSchema: GenMessage<CHardwareUpdate_GetState_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_hardwareupdate, 1);

/**
 * @generated from message CHardwareUpdate_StateChanged_Notification
 */
export type CHardwareUpdate_StateChanged_Notification = Message<"CHardwareUpdate_StateChanged_Notification"> & {
};

/**
 * Describes the message CHardwareUpdate_StateChanged_Notification.
 * Use `create(CHardwareUpdate_StateChanged_NotificationSchema)` to create a new message.
 */
export const CHardwareUpdate_StateChanged_NotificationSchema: GenMessage<CHardwareUpdate_StateChanged_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_hardwareupdate, 2);

/**
 * @generated from message CHardwareUpdate_CheckForUpdates_Request
 */
export type CHardwareUpdate_CheckForUpdates_Request = Message<"CHardwareUpdate_CheckForUpdates_Request"> & {
};

/**
 * Describes the message CHardwareUpdate_CheckForUpdates_Request.
 * Use `create(CHardwareUpdate_CheckForUpdates_RequestSchema)` to create a new message.
 */
export const CHardwareUpdate_CheckForUpdates_RequestSchema: GenMessage<CHardwareUpdate_CheckForUpdates_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_hardwareupdate, 3);

/**
 * @generated from message CMsgAvailableHardwareUpdate
 */
export type CMsgAvailableHardwareUpdate = Message<"CMsgAvailableHardwareUpdate"> & {
  /**
   * @generated from field: optional uint32 etype = 1;
   */
  etype: number;

  /**
   * @generated from field: optional uint32 hardware_id = 2;
   */
  hardwareId: number;

  /**
   * @generated from field: optional string serial_number = 3;
   */
  serialNumber: string;

  /**
   * @generated from field: optional string current_ts = 4;
   */
  currentTs: string;

  /**
   * @generated from field: optional string update_ts = 5;
   */
  updateTs: string;
};

/**
 * Describes the message CMsgAvailableHardwareUpdate.
 * Use `create(CMsgAvailableHardwareUpdateSchema)` to create a new message.
 */
export const CMsgAvailableHardwareUpdateSchema: GenMessage<CMsgAvailableHardwareUpdate> = /*@__PURE__*/
  messageDesc(file_webuimessages_hardwareupdate, 4);

/**
 * @generated from message CHardwareUpdate_CheckForUpdates_Response
 */
export type CHardwareUpdate_CheckForUpdates_Response = Message<"CHardwareUpdate_CheckForUpdates_Response"> & {
  /**
   * @generated from field: repeated CMsgAvailableHardwareUpdate updates = 1;
   */
  updates: CMsgAvailableHardwareUpdate[];
};

/**
 * Describes the message CHardwareUpdate_CheckForUpdates_Response.
 * Use `create(CHardwareUpdate_CheckForUpdates_ResponseSchema)` to create a new message.
 */
export const CHardwareUpdate_CheckForUpdates_ResponseSchema: GenMessage<CHardwareUpdate_CheckForUpdates_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_hardwareupdate, 5);

/**
 * @generated from message CHardwareUpdate_Update_Request
 */
export type CHardwareUpdate_Update_Request = Message<"CHardwareUpdate_Update_Request"> & {
  /**
   * @generated from field: optional string serial_number = 1;
   */
  serialNumber: string;
};

/**
 * Describes the message CHardwareUpdate_Update_Request.
 * Use `create(CHardwareUpdate_Update_RequestSchema)` to create a new message.
 */
export const CHardwareUpdate_Update_RequestSchema: GenMessage<CHardwareUpdate_Update_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_hardwareupdate, 6);

/**
 * @generated from message CHardwareUpdate_Update_Response
 */
export type CHardwareUpdate_Update_Response = Message<"CHardwareUpdate_Update_Response"> & {
};

/**
 * Describes the message CHardwareUpdate_Update_Response.
 * Use `create(CHardwareUpdate_Update_ResponseSchema)` to create a new message.
 */
export const CHardwareUpdate_Update_ResponseSchema: GenMessage<CHardwareUpdate_Update_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_hardwareupdate, 7);

/**
 * @generated from message CHardwareUpdate_UpdateProgress_Notification
 */
export type CHardwareUpdate_UpdateProgress_Notification = Message<"CHardwareUpdate_UpdateProgress_Notification"> & {
  /**
   * @generated from field: optional int32 progress = 1;
   */
  progress: number;
};

/**
 * Describes the message CHardwareUpdate_UpdateProgress_Notification.
 * Use `create(CHardwareUpdate_UpdateProgress_NotificationSchema)` to create a new message.
 */
export const CHardwareUpdate_UpdateProgress_NotificationSchema: GenMessage<CHardwareUpdate_UpdateProgress_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_hardwareupdate, 8);

/**
 * @generated from message CHardwareUpdate_UpdateStateChanged_Notification
 */
export type CHardwareUpdate_UpdateStateChanged_Notification = Message<"CHardwareUpdate_UpdateStateChanged_Notification"> & {
};

/**
 * Describes the message CHardwareUpdate_UpdateStateChanged_Notification.
 * Use `create(CHardwareUpdate_UpdateStateChanged_NotificationSchema)` to create a new message.
 */
export const CHardwareUpdate_UpdateStateChanged_NotificationSchema: GenMessage<CHardwareUpdate_UpdateStateChanged_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_hardwareupdate, 9);

/**
 * @generated from service HardwareUpdate
 */
export const HardwareUpdate: GenService<{
  /**
   * @generated from rpc HardwareUpdate.GetState
   */
  getState: {
    methodKind: "unary";
    input: typeof CHardwareUpdate_GetState_RequestSchema;
    output: typeof CHardwareUpdate_GetState_ResponseSchema;
  },
  /**
   * @generated from rpc HardwareUpdate.NotifyStateChanged
   */
  notifyStateChanged: {
    methodKind: "unary";
    input: typeof CHardwareUpdate_StateChanged_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc HardwareUpdate.CheckForUpdates
   */
  checkForUpdates: {
    methodKind: "unary";
    input: typeof CHardwareUpdate_CheckForUpdates_RequestSchema;
    output: typeof CHardwareUpdate_CheckForUpdates_ResponseSchema;
  },
  /**
   * @generated from rpc HardwareUpdate.Update
   */
  update: {
    methodKind: "unary";
    input: typeof CHardwareUpdate_Update_RequestSchema;
    output: typeof CHardwareUpdate_Update_ResponseSchema;
  },
  /**
   * @generated from rpc HardwareUpdate.NotifyUpdateProgress
   */
  notifyUpdateProgress: {
    methodKind: "unary";
    input: typeof CHardwareUpdate_UpdateProgress_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc HardwareUpdate.NotifyUpdateStateChanged
   */
  notifyUpdateStateChanged: {
    methodKind: "unary";
    input: typeof CHardwareUpdate_UpdateStateChanged_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_webuimessages_hardwareupdate, 0);

