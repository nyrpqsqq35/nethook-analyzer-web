// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steamdatagram_messages_auth.proto (syntax proto2)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { CMsgSteamDatagramCertificateSigned } from "./steamnetworkingsockets_messages_certs_pb";
import { file_steamnetworkingsockets_messages_certs } from "./steamnetworkingsockets_messages_certs_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steamdatagram_messages_auth.proto.
 */
export const file_steamdatagram_messages_auth: GenFile = /*@__PURE__*/
  fileDesc("CiFzdGVhbWRhdGFncmFtX21lc3NhZ2VzX2F1dGgucHJvdG8izwQKIENNc2dTdGVhbURhdGFncmFtUmVsYXlBdXRoVGlja2V0EhMKC3RpbWVfZXhwaXJ5GAEgASgHEikKIWF1dGhvcml6ZWRfY2xpZW50X2lkZW50aXR5X3N0cmluZxgOIAEoCRIiChpnYW1lc2VydmVyX2lkZW50aXR5X3N0cmluZxgPIAEoCRIcChRhdXRob3JpemVkX3B1YmxpY19pcBgDIAEoBxIaChJnYW1lc2VydmVyX2FkZHJlc3MYCyABKAwSDgoGYXBwX2lkGAcgASgNEhQKDHZpcnR1YWxfcG9ydBgKIAEoDRJCCgxleHRyYV9maWVsZHMYCCADKAsyLC5DTXNnU3RlYW1EYXRhZ3JhbVJlbGF5QXV0aFRpY2tldC5FeHRyYUZpZWxkEiIKGmxlZ2FjeV9hdXRob3JpemVkX3N0ZWFtX2lkGAIgASgGEiIKGmxlZ2FjeV9nYW1lc2VydmVyX3N0ZWFtX2lkGAQgASgGEiAKGGxlZ2FjeV9nYW1lc2VydmVyX3BvcF9pZBgJIAEoBxIwCihsZWdhY3lfYXV0aG9yaXplZF9jbGllbnRfaWRlbnRpdHlfYmluYXJ5GAwgASgMEikKIWxlZ2FjeV9nYW1lc2VydmVyX2lkZW50aXR5X2JpbmFyeRgNIAEoDBpcCgpFeHRyYUZpZWxkEgwKBG5hbWUYASABKAkSFAoMc3RyaW5nX3ZhbHVlGAIgASgJEhMKC2ludDY0X3ZhbHVlGAMgASgSEhUKDWZpeGVkNjRfdmFsdWUYBSABKAYirAEKJkNNc2dTdGVhbURhdGFncmFtU2lnbmVkUmVsYXlBdXRoVGlja2V0EhsKE3Jlc2VydmVkX2RvX25vdF91c2UYASABKAYSDgoGdGlja2V0GAMgASgMEhEKCXNpZ25hdHVyZRgEIAEoDBIOCgZrZXlfaWQYAiABKAYSMgoFY2VydHMYBSADKAsyIy5DTXNnU3RlYW1EYXRhZ3JhbUNlcnRpZmljYXRlU2lnbmVkImQKKENNc2dTdGVhbURhdGFncmFtQ2FjaGVkQ3JlZGVudGlhbHNGb3JBcHASEwoLcHJpdmF0ZV9rZXkYASABKAwSDAoEY2VydBgCIAEoDBIVCg1yZWxheV90aWNrZXRzGAMgAygMIscBCitDTXNnU3RlYW1EYXRhZ3JhbUdhbWVDb29yZGluYXRvclNlcnZlckxvZ2luEhYKDnRpbWVfZ2VuZXJhdGVkGAEgASgNEg0KBWFwcGlkGAIgASgNEg8KB3JvdXRpbmcYAyABKAwSDwoHYXBwZGF0YRgEIAEoDBIeChZsZWdhY3lfaWRlbnRpdHlfYmluYXJ5GAUgASgMEhcKD2lkZW50aXR5X3N0cmluZxgGIAEoCRIWCg5kdW1teV9zdGVhbV9pZBhjIAEoBiKIAQoxQ01zZ1N0ZWFtRGF0YWdyYW1TaWduZWRHYW1lQ29vcmRpbmF0b3JTZXJ2ZXJMb2dpbhIxCgRjZXJ0GAEgASgLMiMuQ01zZ1N0ZWFtRGF0YWdyYW1DZXJ0aWZpY2F0ZVNpZ25lZBINCgVsb2dpbhgCIAEoDBIRCglzaWduYXR1cmUYAyABKAwiiwEKLUNNc2dTdGVhbURhdGFncmFtSG9zdGVkU2VydmVyQWRkcmVzc1BsYWludGV4dBIMCgRpcHY0GAEgASgHEgwKBGlwdjYYAiABKAwSDAoEcG9ydBgDIAEoDRIWCg5yb3V0aW5nX3NlY3JldBgEIAEoBhIYChBwcm90b2NvbF92ZXJzaW9uGAUgASgNQgVIAYABAA", [file_steamnetworkingsockets_messages_certs]);

/**
 * @generated from message CMsgSteamDatagramRelayAuthTicket
 */
export type CMsgSteamDatagramRelayAuthTicket = Message<"CMsgSteamDatagramRelayAuthTicket"> & {
  /**
   * @generated from field: optional fixed32 time_expiry = 1;
   */
  timeExpiry: number;

  /**
   * @generated from field: optional string authorized_client_identity_string = 14;
   */
  authorizedClientIdentityString: string;

  /**
   * @generated from field: optional string gameserver_identity_string = 15;
   */
  gameserverIdentityString: string;

  /**
   * @generated from field: optional fixed32 authorized_public_ip = 3;
   */
  authorizedPublicIp: number;

  /**
   * @generated from field: optional bytes gameserver_address = 11;
   */
  gameserverAddress: Uint8Array;

  /**
   * @generated from field: optional uint32 app_id = 7;
   */
  appId: number;

  /**
   * @generated from field: optional uint32 virtual_port = 10;
   */
  virtualPort: number;

  /**
   * @generated from field: repeated CMsgSteamDatagramRelayAuthTicket.ExtraField extra_fields = 8;
   */
  extraFields: CMsgSteamDatagramRelayAuthTicket_ExtraField[];

  /**
   * @generated from field: optional fixed64 legacy_authorized_steam_id = 2;
   */
  legacyAuthorizedSteamId: bigint;

  /**
   * @generated from field: optional fixed64 legacy_gameserver_steam_id = 4;
   */
  legacyGameserverSteamId: bigint;

  /**
   * @generated from field: optional fixed32 legacy_gameserver_pop_id = 9;
   */
  legacyGameserverPopId: number;

  /**
   * @generated from field: optional bytes legacy_authorized_client_identity_binary = 12;
   */
  legacyAuthorizedClientIdentityBinary: Uint8Array;

  /**
   * @generated from field: optional bytes legacy_gameserver_identity_binary = 13;
   */
  legacyGameserverIdentityBinary: Uint8Array;
};

/**
 * Describes the message CMsgSteamDatagramRelayAuthTicket.
 * Use `create(CMsgSteamDatagramRelayAuthTicketSchema)` to create a new message.
 */
export const CMsgSteamDatagramRelayAuthTicketSchema: GenMessage<CMsgSteamDatagramRelayAuthTicket> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_auth, 0);

/**
 * @generated from message CMsgSteamDatagramRelayAuthTicket.ExtraField
 */
export type CMsgSteamDatagramRelayAuthTicket_ExtraField = Message<"CMsgSteamDatagramRelayAuthTicket.ExtraField"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional string string_value = 2;
   */
  stringValue: string;

  /**
   * @generated from field: optional sint64 int64_value = 3;
   */
  int64Value: bigint;

  /**
   * @generated from field: optional fixed64 fixed64_value = 5;
   */
  fixed64Value: bigint;
};

/**
 * Describes the message CMsgSteamDatagramRelayAuthTicket.ExtraField.
 * Use `create(CMsgSteamDatagramRelayAuthTicket_ExtraFieldSchema)` to create a new message.
 */
export const CMsgSteamDatagramRelayAuthTicket_ExtraFieldSchema: GenMessage<CMsgSteamDatagramRelayAuthTicket_ExtraField> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_auth, 0, 0);

/**
 * @generated from message CMsgSteamDatagramSignedRelayAuthTicket
 */
export type CMsgSteamDatagramSignedRelayAuthTicket = Message<"CMsgSteamDatagramSignedRelayAuthTicket"> & {
  /**
   * @generated from field: optional fixed64 reserved_do_not_use = 1;
   */
  reservedDoNotUse: bigint;

  /**
   * @generated from field: optional bytes ticket = 3;
   */
  ticket: Uint8Array;

  /**
   * @generated from field: optional bytes signature = 4;
   */
  signature: Uint8Array;

  /**
   * @generated from field: optional fixed64 key_id = 2;
   */
  keyId: bigint;

  /**
   * @generated from field: repeated CMsgSteamDatagramCertificateSigned certs = 5;
   */
  certs: CMsgSteamDatagramCertificateSigned[];
};

/**
 * Describes the message CMsgSteamDatagramSignedRelayAuthTicket.
 * Use `create(CMsgSteamDatagramSignedRelayAuthTicketSchema)` to create a new message.
 */
export const CMsgSteamDatagramSignedRelayAuthTicketSchema: GenMessage<CMsgSteamDatagramSignedRelayAuthTicket> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_auth, 1);

/**
 * @generated from message CMsgSteamDatagramCachedCredentialsForApp
 */
export type CMsgSteamDatagramCachedCredentialsForApp = Message<"CMsgSteamDatagramCachedCredentialsForApp"> & {
  /**
   * @generated from field: optional bytes private_key = 1;
   */
  privateKey: Uint8Array;

  /**
   * @generated from field: optional bytes cert = 2;
   */
  cert: Uint8Array;

  /**
   * @generated from field: repeated bytes relay_tickets = 3;
   */
  relayTickets: Uint8Array[];
};

/**
 * Describes the message CMsgSteamDatagramCachedCredentialsForApp.
 * Use `create(CMsgSteamDatagramCachedCredentialsForAppSchema)` to create a new message.
 */
export const CMsgSteamDatagramCachedCredentialsForAppSchema: GenMessage<CMsgSteamDatagramCachedCredentialsForApp> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_auth, 2);

/**
 * @generated from message CMsgSteamDatagramGameCoordinatorServerLogin
 */
export type CMsgSteamDatagramGameCoordinatorServerLogin = Message<"CMsgSteamDatagramGameCoordinatorServerLogin"> & {
  /**
   * @generated from field: optional uint32 time_generated = 1;
   */
  timeGenerated: number;

  /**
   * @generated from field: optional uint32 appid = 2;
   */
  appid: number;

  /**
   * @generated from field: optional bytes routing = 3;
   */
  routing: Uint8Array;

  /**
   * @generated from field: optional bytes appdata = 4;
   */
  appdata: Uint8Array;

  /**
   * @generated from field: optional bytes legacy_identity_binary = 5;
   */
  legacyIdentityBinary: Uint8Array;

  /**
   * @generated from field: optional string identity_string = 6;
   */
  identityString: string;

  /**
   * @generated from field: optional fixed64 dummy_steam_id = 99;
   */
  dummySteamId: bigint;
};

/**
 * Describes the message CMsgSteamDatagramGameCoordinatorServerLogin.
 * Use `create(CMsgSteamDatagramGameCoordinatorServerLoginSchema)` to create a new message.
 */
export const CMsgSteamDatagramGameCoordinatorServerLoginSchema: GenMessage<CMsgSteamDatagramGameCoordinatorServerLogin> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_auth, 3);

/**
 * @generated from message CMsgSteamDatagramSignedGameCoordinatorServerLogin
 */
export type CMsgSteamDatagramSignedGameCoordinatorServerLogin = Message<"CMsgSteamDatagramSignedGameCoordinatorServerLogin"> & {
  /**
   * @generated from field: optional CMsgSteamDatagramCertificateSigned cert = 1;
   */
  cert?: CMsgSteamDatagramCertificateSigned;

  /**
   * @generated from field: optional bytes login = 2;
   */
  login: Uint8Array;

  /**
   * @generated from field: optional bytes signature = 3;
   */
  signature: Uint8Array;
};

/**
 * Describes the message CMsgSteamDatagramSignedGameCoordinatorServerLogin.
 * Use `create(CMsgSteamDatagramSignedGameCoordinatorServerLoginSchema)` to create a new message.
 */
export const CMsgSteamDatagramSignedGameCoordinatorServerLoginSchema: GenMessage<CMsgSteamDatagramSignedGameCoordinatorServerLogin> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_auth, 4);

/**
 * @generated from message CMsgSteamDatagramHostedServerAddressPlaintext
 */
export type CMsgSteamDatagramHostedServerAddressPlaintext = Message<"CMsgSteamDatagramHostedServerAddressPlaintext"> & {
  /**
   * @generated from field: optional fixed32 ipv4 = 1;
   */
  ipv4: number;

  /**
   * @generated from field: optional bytes ipv6 = 2;
   */
  ipv6: Uint8Array;

  /**
   * @generated from field: optional uint32 port = 3;
   */
  port: number;

  /**
   * @generated from field: optional fixed64 routing_secret = 4;
   */
  routingSecret: bigint;

  /**
   * @generated from field: optional uint32 protocol_version = 5;
   */
  protocolVersion: number;
};

/**
 * Describes the message CMsgSteamDatagramHostedServerAddressPlaintext.
 * Use `create(CMsgSteamDatagramHostedServerAddressPlaintextSchema)` to create a new message.
 */
export const CMsgSteamDatagramHostedServerAddressPlaintextSchema: GenMessage<CMsgSteamDatagramHostedServerAddressPlaintext> = /*@__PURE__*/
  messageDesc(file_steamdatagram_messages_auth, 5);

