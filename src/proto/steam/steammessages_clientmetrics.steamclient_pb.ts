// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_clientmetrics.steamclient.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_steammessages_base } from "./steammessages_base_pb";
import type { NoResponseSchema } from "./steammessages_unified_base.steamclient_pb";
import { file_steammessages_unified_base_steamclient } from "./steammessages_unified_base.steamclient_pb";
import type { CClientMetrics_ClientBootstrap_Summary, CClientMetrics_ContentDownloadResponse_Hosts } from "./clientmetrics_pb";
import { file_clientmetrics } from "./clientmetrics_pb";
import type { EGameRecordingType } from "./enums_pb";
import { file_enums } from "./enums_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_clientmetrics.steamclient.proto.
 */
export const file_steammessages_clientmetrics_steamclient: GenFile = /*@__PURE__*/
  fileDesc("", [file_steammessages_base, file_steammessages_unified_base_steamclient, file_clientmetrics, file_enums]);

/**
 * @generated from message CClientMetrics_AppInterfaceCreation
 */
export type CClientMetrics_AppInterfaceCreation = Message<"CClientMetrics_AppInterfaceCreation"> & {
  /**
   * @generated from field: optional string raw_version = 1;
   */
  rawVersion: string;

  /**
   * @generated from field: optional string requested_interface_type = 2;
   */
  requestedInterfaceType: string;
};

/**
 * Describes the message CClientMetrics_AppInterfaceCreation.
 * Use `create(CClientMetrics_AppInterfaceCreationSchema)` to create a new message.
 */
export const CClientMetrics_AppInterfaceCreationSchema: GenMessage<CClientMetrics_AppInterfaceCreation> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 0);

/**
 * @generated from message CClientMetrics_AppInterfaceMethodCounts
 */
export type CClientMetrics_AppInterfaceMethodCounts = Message<"CClientMetrics_AppInterfaceMethodCounts"> & {
  /**
   * @generated from field: optional string interface_name = 1;
   */
  interfaceName: string;

  /**
   * @generated from field: optional string method_name = 2;
   */
  methodName: string;

  /**
   * @generated from field: optional uint32 call_count = 3;
   */
  callCount: number;
};

/**
 * Describes the message CClientMetrics_AppInterfaceMethodCounts.
 * Use `create(CClientMetrics_AppInterfaceMethodCountsSchema)` to create a new message.
 */
export const CClientMetrics_AppInterfaceMethodCountsSchema: GenMessage<CClientMetrics_AppInterfaceMethodCounts> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 1);

/**
 * @generated from message CClientMetrics_AppInterfaceStats_Notification
 */
export type CClientMetrics_AppInterfaceStats_Notification = Message<"CClientMetrics_AppInterfaceStats_Notification"> & {
  /**
   * @generated from field: optional uint64 game_id = 1;
   */
  gameId: bigint;

  /**
   * @generated from field: repeated CClientMetrics_AppInterfaceCreation interfaces_created = 2;
   */
  interfacesCreated: CClientMetrics_AppInterfaceCreation[];

  /**
   * @generated from field: repeated CClientMetrics_AppInterfaceMethodCounts methods_called = 3;
   */
  methodsCalled: CClientMetrics_AppInterfaceMethodCounts[];

  /**
   * @generated from field: optional uint32 session_length_seconds = 4;
   */
  sessionLengthSeconds: number;
};

/**
 * Describes the message CClientMetrics_AppInterfaceStats_Notification.
 * Use `create(CClientMetrics_AppInterfaceStats_NotificationSchema)` to create a new message.
 */
export const CClientMetrics_AppInterfaceStats_NotificationSchema: GenMessage<CClientMetrics_AppInterfaceStats_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 2);

/**
 * @generated from message CClientMetrics_IPv6Connectivity_Result
 */
export type CClientMetrics_IPv6Connectivity_Result = Message<"CClientMetrics_IPv6Connectivity_Result"> & {
  /**
   * @generated from field: optional uint32 protocol_tested = 1;
   */
  protocolTested: number;

  /**
   * @generated from field: optional uint32 connectivity_state = 2;
   */
  connectivityState: number;
};

/**
 * Describes the message CClientMetrics_IPv6Connectivity_Result.
 * Use `create(CClientMetrics_IPv6Connectivity_ResultSchema)` to create a new message.
 */
export const CClientMetrics_IPv6Connectivity_ResultSchema: GenMessage<CClientMetrics_IPv6Connectivity_Result> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 3);

/**
 * @generated from message CClientMetrics_IPv6Connectivity_Notification
 */
export type CClientMetrics_IPv6Connectivity_Notification = Message<"CClientMetrics_IPv6Connectivity_Notification"> & {
  /**
   * @generated from field: optional uint32 cell_id = 1;
   */
  cellId: number;

  /**
   * @generated from field: repeated CClientMetrics_IPv6Connectivity_Result results = 2;
   */
  results: CClientMetrics_IPv6Connectivity_Result[];

  /**
   * @generated from field: optional bool private_ip_is_rfc6598 = 3;
   */
  privateIpIsRfc6598: boolean;
};

/**
 * Describes the message CClientMetrics_IPv6Connectivity_Notification.
 * Use `create(CClientMetrics_IPv6Connectivity_NotificationSchema)` to create a new message.
 */
export const CClientMetrics_IPv6Connectivity_NotificationSchema: GenMessage<CClientMetrics_IPv6Connectivity_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 4);

/**
 * @generated from message CClientMetrics_SteamPipeWorkStats_Operation
 */
export type CClientMetrics_SteamPipeWorkStats_Operation = Message<"CClientMetrics_SteamPipeWorkStats_Operation"> & {
  /**
   * @generated from field: optional ESteamPipeOperationType type = 1 [default = k_ESteamPipeOperationType_Invalid];
   */
  type: ESteamPipeOperationType;

  /**
   * @generated from field: optional uint32 num_ops = 2;
   */
  numOps: number;

  /**
   * @generated from field: optional uint64 num_bytes = 3;
   */
  numBytes: bigint;

  /**
   * @generated from field: optional uint64 busy_time_ms = 4;
   */
  busyTimeMs: bigint;

  /**
   * @generated from field: optional uint64 idle_time_ms = 5;
   */
  idleTimeMs: bigint;

  /**
   * @generated from field: optional uint64 sum_run_time_ms = 6;
   */
  sumRunTimeMs: bigint;

  /**
   * @generated from field: optional uint64 sum_wait_time_ms = 7;
   */
  sumWaitTimeMs: bigint;
};

/**
 * Describes the message CClientMetrics_SteamPipeWorkStats_Operation.
 * Use `create(CClientMetrics_SteamPipeWorkStats_OperationSchema)` to create a new message.
 */
export const CClientMetrics_SteamPipeWorkStats_OperationSchema: GenMessage<CClientMetrics_SteamPipeWorkStats_Operation> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 5);

/**
 * @generated from message CClientMetrics_SteamPipeWorkStats_Notification
 */
export type CClientMetrics_SteamPipeWorkStats_Notification = Message<"CClientMetrics_SteamPipeWorkStats_Notification"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 depotid = 2;
   */
  depotid: number;

  /**
   * @generated from field: optional ESteamPipeWorkType work_type = 3 [default = k_ESteamPipeClientWorkType_Invalid];
   */
  workType: ESteamPipeWorkType;

  /**
   * @generated from field: repeated CClientMetrics_SteamPipeWorkStats_Operation operations = 4;
   */
  operations: CClientMetrics_SteamPipeWorkStats_Operation[];

  /**
   * @generated from field: optional uint32 hardware_type = 5;
   */
  hardwareType: number;
};

/**
 * Describes the message CClientMetrics_SteamPipeWorkStats_Notification.
 * Use `create(CClientMetrics_SteamPipeWorkStats_NotificationSchema)` to create a new message.
 */
export const CClientMetrics_SteamPipeWorkStats_NotificationSchema: GenMessage<CClientMetrics_SteamPipeWorkStats_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 6);

/**
 * @generated from message CClientMetrics_ReportReactUsage_Notification
 */
export type CClientMetrics_ReportReactUsage_Notification = Message<"CClientMetrics_ReportReactUsage_Notification"> & {
  /**
   * @generated from field: optional string product = 1;
   */
  product: string;

  /**
   * @generated from field: optional string version = 2;
   */
  version: string;

  /**
   * @generated from field: repeated CClientMetrics_ReportReactUsage_Notification.RouteData routes = 3;
   */
  routes: CClientMetrics_ReportReactUsage_Notification_RouteData[];

  /**
   * @generated from field: repeated CClientMetrics_ReportReactUsage_Notification.ComponentData components = 4;
   */
  components: CClientMetrics_ReportReactUsage_Notification_ComponentData[];

  /**
   * @generated from field: repeated CClientMetrics_ReportReactUsage_Notification.ActionData actions = 5;
   */
  actions: CClientMetrics_ReportReactUsage_Notification_ActionData[];
};

/**
 * Describes the message CClientMetrics_ReportReactUsage_Notification.
 * Use `create(CClientMetrics_ReportReactUsage_NotificationSchema)` to create a new message.
 */
export const CClientMetrics_ReportReactUsage_NotificationSchema: GenMessage<CClientMetrics_ReportReactUsage_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 7);

/**
 * @generated from message CClientMetrics_ReportReactUsage_Notification.RouteData
 */
export type CClientMetrics_ReportReactUsage_Notification_RouteData = Message<"CClientMetrics_ReportReactUsage_Notification.RouteData"> & {
  /**
   * @generated from field: optional string route = 1;
   */
  route: string;

  /**
   * @generated from field: optional uint32 count = 2;
   */
  count: number;
};

/**
 * Describes the message CClientMetrics_ReportReactUsage_Notification.RouteData.
 * Use `create(CClientMetrics_ReportReactUsage_Notification_RouteDataSchema)` to create a new message.
 */
export const CClientMetrics_ReportReactUsage_Notification_RouteDataSchema: GenMessage<CClientMetrics_ReportReactUsage_Notification_RouteData> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 7, 0);

/**
 * @generated from message CClientMetrics_ReportReactUsage_Notification.ComponentData
 */
export type CClientMetrics_ReportReactUsage_Notification_ComponentData = Message<"CClientMetrics_ReportReactUsage_Notification.ComponentData"> & {
  /**
   * @generated from field: optional string component = 1;
   */
  component: string;

  /**
   * @generated from field: optional uint32 count = 2;
   */
  count: number;
};

/**
 * Describes the message CClientMetrics_ReportReactUsage_Notification.ComponentData.
 * Use `create(CClientMetrics_ReportReactUsage_Notification_ComponentDataSchema)` to create a new message.
 */
export const CClientMetrics_ReportReactUsage_Notification_ComponentDataSchema: GenMessage<CClientMetrics_ReportReactUsage_Notification_ComponentData> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 7, 1);

/**
 * @generated from message CClientMetrics_ReportReactUsage_Notification.ActionData
 */
export type CClientMetrics_ReportReactUsage_Notification_ActionData = Message<"CClientMetrics_ReportReactUsage_Notification.ActionData"> & {
  /**
   * @generated from field: optional string action = 1;
   */
  action: string;

  /**
   * @generated from field: optional uint32 count = 2;
   */
  count: number;
};

/**
 * Describes the message CClientMetrics_ReportReactUsage_Notification.ActionData.
 * Use `create(CClientMetrics_ReportReactUsage_Notification_ActionDataSchema)` to create a new message.
 */
export const CClientMetrics_ReportReactUsage_Notification_ActionDataSchema: GenMessage<CClientMetrics_ReportReactUsage_Notification_ActionData> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 7, 2);

/**
 * @generated from message CClientMetrics_ReportClientError_Notification
 */
export type CClientMetrics_ReportClientError_Notification = Message<"CClientMetrics_ReportClientError_Notification"> & {
  /**
   * @generated from field: optional string product = 1;
   */
  product: string;

  /**
   * @generated from field: optional string version = 2;
   */
  version: string;

  /**
   * @generated from field: repeated CClientMetrics_ReportClientError_Notification.Error errors = 3;
   */
  errors: CClientMetrics_ReportClientError_Notification_Error[];

  /**
   * @generated from field: repeated string tags = 4;
   */
  tags: string[];
};

/**
 * Describes the message CClientMetrics_ReportClientError_Notification.
 * Use `create(CClientMetrics_ReportClientError_NotificationSchema)` to create a new message.
 */
export const CClientMetrics_ReportClientError_NotificationSchema: GenMessage<CClientMetrics_ReportClientError_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 8);

/**
 * @generated from message CClientMetrics_ReportClientError_Notification.Error
 */
export type CClientMetrics_ReportClientError_Notification_Error = Message<"CClientMetrics_ReportClientError_Notification.Error"> & {
  /**
   * @generated from field: optional string identifier = 1;
   */
  identifier: string;

  /**
   * @generated from field: optional string message = 2;
   */
  message: string;

  /**
   * @generated from field: optional uint32 count = 3;
   */
  count: number;

  /**
   * @generated from field: optional string context = 4;
   */
  context: string;
};

/**
 * Describes the message CClientMetrics_ReportClientError_Notification.Error.
 * Use `create(CClientMetrics_ReportClientError_Notification_ErrorSchema)` to create a new message.
 */
export const CClientMetrics_ReportClientError_Notification_ErrorSchema: GenMessage<CClientMetrics_ReportClientError_Notification_Error> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 8, 0);

/**
 * @generated from message CClientMetrics_ClientBootstrap_Notification
 */
export type CClientMetrics_ClientBootstrap_Notification = Message<"CClientMetrics_ClientBootstrap_Notification"> & {
  /**
   * @generated from field: optional CClientMetrics_ClientBootstrap_Summary summary = 1;
   */
  summary?: CClientMetrics_ClientBootstrap_Summary;
};

/**
 * Describes the message CClientMetrics_ClientBootstrap_Notification.
 * Use `create(CClientMetrics_ClientBootstrap_NotificationSchema)` to create a new message.
 */
export const CClientMetrics_ClientBootstrap_NotificationSchema: GenMessage<CClientMetrics_ClientBootstrap_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 9);

/**
 * @generated from message CClientMetrics_DownloadRates_Notification
 */
export type CClientMetrics_DownloadRates_Notification = Message<"CClientMetrics_DownloadRates_Notification"> & {
  /**
   * @generated from field: optional uint32 cell_id = 1;
   */
  cellId: number;

  /**
   * @generated from field: repeated CClientMetrics_DownloadRates_Notification.StatsInfo stats = 2;
   */
  stats: CClientMetrics_DownloadRates_Notification_StatsInfo[];

  /**
   * @generated from field: optional uint32 throttling_kbps = 3;
   */
  throttlingKbps: number;

  /**
   * @generated from field: optional uint32 os_type = 4;
   */
  osType: number;

  /**
   * @generated from field: optional uint32 device_type = 5;
   */
  deviceType: number;
};

/**
 * Describes the message CClientMetrics_DownloadRates_Notification.
 * Use `create(CClientMetrics_DownloadRates_NotificationSchema)` to create a new message.
 */
export const CClientMetrics_DownloadRates_NotificationSchema: GenMessage<CClientMetrics_DownloadRates_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 10);

/**
 * @generated from message CClientMetrics_DownloadRates_Notification.StatsInfo
 */
export type CClientMetrics_DownloadRates_Notification_StatsInfo = Message<"CClientMetrics_DownloadRates_Notification.StatsInfo"> & {
  /**
   * @generated from field: optional uint32 source_type = 1;
   */
  sourceType: number;

  /**
   * @generated from field: optional uint32 source_id = 2;
   */
  sourceId: number;

  /**
   * @generated from field: optional uint64 bytes = 3;
   */
  bytes: bigint;

  /**
   * @generated from field: optional string host_name = 4;
   */
  hostName: string;

  /**
   * @generated from field: optional uint64 microseconds = 5;
   */
  microseconds: bigint;

  /**
   * @generated from field: optional bool used_ipv6 = 6;
   */
  usedIpv6: boolean;

  /**
   * @generated from field: optional bool proxied = 7;
   */
  proxied: boolean;

  /**
   * @generated from field: optional bool used_http2 = 8;
   */
  usedHttp2: boolean;

  /**
   * @generated from field: optional uint32 cache_hits = 9;
   */
  cacheHits: number;

  /**
   * @generated from field: optional uint32 cache_misses = 10;
   */
  cacheMisses: number;

  /**
   * @generated from field: optional uint64 hit_bytes = 11;
   */
  hitBytes: bigint;

  /**
   * @generated from field: optional uint64 miss_bytes = 12;
   */
  missBytes: bigint;
};

/**
 * Describes the message CClientMetrics_DownloadRates_Notification.StatsInfo.
 * Use `create(CClientMetrics_DownloadRates_Notification_StatsInfoSchema)` to create a new message.
 */
export const CClientMetrics_DownloadRates_Notification_StatsInfoSchema: GenMessage<CClientMetrics_DownloadRates_Notification_StatsInfo> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 10, 0);

/**
 * @generated from message CClientMetrics_ContentValidation_Notification
 */
export type CClientMetrics_ContentValidation_Notification = Message<"CClientMetrics_ContentValidation_Notification"> & {
  /**
   * @generated from field: optional int32 validation_result = 1;
   */
  validationResult: number;

  /**
   * @generated from field: optional uint32 app_id = 2;
   */
  appId: number;

  /**
   * @generated from field: optional bool staged_files = 3;
   */
  stagedFiles: boolean;

  /**
   * @generated from field: optional bool user_initiated = 4;
   */
  userInitiated: boolean;

  /**
   * @generated from field: optional bool early_out = 5;
   */
  earlyOut: boolean;

  /**
   * @generated from field: optional uint32 chunks_scanned = 6;
   */
  chunksScanned: number;

  /**
   * @generated from field: optional uint32 chunks_corrupt = 7;
   */
  chunksCorrupt: number;

  /**
   * @generated from field: optional uint64 bytes_scanned = 8;
   */
  bytesScanned: bigint;

  /**
   * @generated from field: optional uint64 chunk_bytes_corrupt = 9;
   */
  chunkBytesCorrupt: bigint;

  /**
   * @generated from field: optional uint64 total_file_size_corrupt = 10;
   */
  totalFileSizeCorrupt: bigint;
};

/**
 * Describes the message CClientMetrics_ContentValidation_Notification.
 * Use `create(CClientMetrics_ContentValidation_NotificationSchema)` to create a new message.
 */
export const CClientMetrics_ContentValidation_NotificationSchema: GenMessage<CClientMetrics_ContentValidation_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 11);

/**
 * @generated from message CClientMetrics_CloudAppSyncStats_Notification
 */
export type CClientMetrics_CloudAppSyncStats_Notification = Message<"CClientMetrics_CloudAppSyncStats_Notification"> & {
  /**
   * @generated from field: optional uint32 app_id = 1;
   */
  appId: number;

  /**
   * @generated from field: optional uint32 platform_type = 2;
   */
  platformType: number;

  /**
   * @generated from field: optional bool preload = 3;
   */
  preload: boolean;

  /**
   * @generated from field: optional bool blocking_app_launch = 4;
   */
  blockingAppLaunch: boolean;

  /**
   * @generated from field: optional uint32 files_uploaded = 5;
   */
  filesUploaded: number;

  /**
   * @generated from field: optional uint32 files_downloaded = 6;
   */
  filesDownloaded: number;

  /**
   * @generated from field: optional uint32 files_deleted = 7;
   */
  filesDeleted: number;

  /**
   * @generated from field: optional uint64 bytes_uploaded = 8;
   */
  bytesUploaded: bigint;

  /**
   * @generated from field: optional uint64 bytes_downloaded = 9;
   */
  bytesDownloaded: bigint;

  /**
   * @generated from field: optional uint64 microsec_total = 10;
   */
  microsecTotal: bigint;

  /**
   * @generated from field: optional uint64 microsec_init_caches = 11;
   */
  microsecInitCaches: bigint;

  /**
   * @generated from field: optional uint64 microsec_validate_state = 12;
   */
  microsecValidateState: bigint;

  /**
   * @generated from field: optional uint64 microsec_ac_launch = 13;
   */
  microsecAcLaunch: bigint;

  /**
   * @generated from field: optional uint64 microsec_ac_prep_user_files = 14;
   */
  microsecAcPrepUserFiles: bigint;

  /**
   * @generated from field: optional uint64 microsec_ac_exit = 15;
   */
  microsecAcExit: bigint;

  /**
   * @generated from field: optional uint64 microsec_build_sync_list = 16;
   */
  microsecBuildSyncList: bigint;

  /**
   * @generated from field: optional uint64 microsec_delete_files = 17;
   */
  microsecDeleteFiles: bigint;

  /**
   * @generated from field: optional uint64 microsec_download_files = 18;
   */
  microsecDownloadFiles: bigint;

  /**
   * @generated from field: optional uint64 microsec_upload_files = 19;
   */
  microsecUploadFiles: bigint;

  /**
   * @generated from field: optional uint32 hardware_type = 20;
   */
  hardwareType: number;

  /**
   * @generated from field: optional uint32 files_managed = 21;
   */
  filesManaged: number;
};

/**
 * Describes the message CClientMetrics_CloudAppSyncStats_Notification.
 * Use `create(CClientMetrics_CloudAppSyncStats_NotificationSchema)` to create a new message.
 */
export const CClientMetrics_CloudAppSyncStats_NotificationSchema: GenMessage<CClientMetrics_CloudAppSyncStats_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 12);

/**
 * @generated from message CClientMetrics_ContentDownloadResponse_Counts_Notification
 */
export type CClientMetrics_ContentDownloadResponse_Counts_Notification = Message<"CClientMetrics_ContentDownloadResponse_Counts_Notification"> & {
  /**
   * @generated from field: optional uint32 cell_id = 1;
   */
  cellId: number;

  /**
   * @generated from field: optional CClientMetrics_ContentDownloadResponse_Hosts data = 2;
   */
  data?: CClientMetrics_ContentDownloadResponse_Hosts;
};

/**
 * Describes the message CClientMetrics_ContentDownloadResponse_Counts_Notification.
 * Use `create(CClientMetrics_ContentDownloadResponse_Counts_NotificationSchema)` to create a new message.
 */
export const CClientMetrics_ContentDownloadResponse_Counts_NotificationSchema: GenMessage<CClientMetrics_ContentDownloadResponse_Counts_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 13);

/**
 * @generated from message CClientMetrics_ReportClientArgs_Notification
 */
export type CClientMetrics_ReportClientArgs_Notification = Message<"CClientMetrics_ReportClientArgs_Notification"> & {
  /**
   * @generated from field: repeated string client_args = 1;
   */
  clientArgs: string[];

  /**
   * @generated from field: optional bool gpu_webview_regkey_disabled = 2;
   */
  gpuWebviewRegkeyDisabled: boolean;

  /**
   * @generated from field: optional bool suppress_gpu_chrome = 3;
   */
  suppressGpuChrome: boolean;

  /**
   * @generated from field: optional bool browser_not_supported = 4;
   */
  browserNotSupported: boolean;

  /**
   * @generated from field: optional bool hw_accel_video_regkey_disabled = 5;
   */
  hwAccelVideoRegkeyDisabled: boolean;

  /**
   * @generated from field: optional bool mini_mode_enabled = 6;
   */
  miniModeEnabled: boolean;

  /**
   * @generated from field: optional bool fps_counter_enabled = 7;
   */
  fpsCounterEnabled: boolean;

  /**
   * @generated from field: optional bool library_low_bandwidth_mode_enabled = 8;
   */
  libraryLowBandwidthModeEnabled: boolean;

  /**
   * @generated from field: optional bool library_low_perf_mode_enabled = 9;
   */
  libraryLowPerfModeEnabled: boolean;

  /**
   * @generated from field: optional int32 gr_mode = 10;
   */
  grMode: number;
};

/**
 * Describes the message CClientMetrics_ReportClientArgs_Notification.
 * Use `create(CClientMetrics_ReportClientArgs_NotificationSchema)` to create a new message.
 */
export const CClientMetrics_ReportClientArgs_NotificationSchema: GenMessage<CClientMetrics_ReportClientArgs_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 14);

/**
 * @generated from message CClientMetrics_ReportLinuxStats_Notification
 */
export type CClientMetrics_ReportLinuxStats_Notification = Message<"CClientMetrics_ReportLinuxStats_Notification"> & {
  /**
   * @generated from field: optional int32 glibc_version_major = 1;
   */
  glibcVersionMajor: number;

  /**
   * @generated from field: optional int32 glibc_version_minor = 2;
   */
  glibcVersionMinor: number;

  /**
   * @generated from field: optional int32 account_type = 3;
   */
  accountType: number;

  /**
   * @generated from field: optional int32 launcher_type = 4;
   */
  launcherType: number;

  /**
   * @generated from field: optional int32 game_server_appid = 5;
   */
  gameServerAppid: number;

  /**
   * @generated from field: optional string process_name = 6;
   */
  processName: string;
};

/**
 * Describes the message CClientMetrics_ReportLinuxStats_Notification.
 * Use `create(CClientMetrics_ReportLinuxStats_NotificationSchema)` to create a new message.
 */
export const CClientMetrics_ReportLinuxStats_NotificationSchema: GenMessage<CClientMetrics_ReportLinuxStats_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 15);

/**
 * @generated from message CClientMetrics_ReportAccessibilitySettings_Notification
 */
export type CClientMetrics_ReportAccessibilitySettings_Notification = Message<"CClientMetrics_ReportAccessibilitySettings_Notification"> & {
  /**
   * @generated from field: optional float accessibility_desktop_ui_scale = 1;
   */
  accessibilityDesktopUiScale: number;

  /**
   * @generated from field: optional bool accessibility_screen_reader_enabled = 2;
   */
  accessibilityScreenReaderEnabled: boolean;

  /**
   * @generated from field: optional bool accessibility_high_contrast_mode = 3;
   */
  accessibilityHighContrastMode: boolean;

  /**
   * @generated from field: optional bool accessibility_reduce_motion = 4;
   */
  accessibilityReduceMotion: boolean;

  /**
   * @generated from field: optional string accessibility_color_filter_name = 5;
   */
  accessibilityColorFilterName: string;
};

/**
 * Describes the message CClientMetrics_ReportAccessibilitySettings_Notification.
 * Use `create(CClientMetrics_ReportAccessibilitySettings_NotificationSchema)` to create a new message.
 */
export const CClientMetrics_ReportAccessibilitySettings_NotificationSchema: GenMessage<CClientMetrics_ReportAccessibilitySettings_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 16);

/**
 * @generated from message CClientMetrics_ClipShare_Notification
 */
export type CClientMetrics_ClipShare_Notification = Message<"CClientMetrics_ClipShare_Notification"> & {
  /**
   * @generated from field: optional uint32 eresult = 1 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional EClipShareMethod share_method = 2 [default = k_EClipShareMethod_Chat];
   */
  shareMethod: EClipShareMethod;

  /**
   * @generated from field: optional float seconds = 3;
   */
  seconds: number;

  /**
   * @generated from field: optional uint64 bytes = 4;
   */
  bytes: bigint;

  /**
   * @generated from field: optional fixed64 gameid = 5;
   */
  gameid: bigint;
};

/**
 * Describes the message CClientMetrics_ClipShare_Notification.
 * Use `create(CClientMetrics_ClipShare_NotificationSchema)` to create a new message.
 */
export const CClientMetrics_ClipShare_NotificationSchema: GenMessage<CClientMetrics_ClipShare_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 17);

/**
 * @generated from message CClientMetrics_ClipRange_Notification
 */
export type CClientMetrics_ClipRange_Notification = Message<"CClientMetrics_ClipRange_Notification"> & {
  /**
   * @generated from field: optional EClipRangeMethod original_range_method = 1 [default = k_EClipRangeMethod_CreateClipButton];
   */
  originalRangeMethod: EClipRangeMethod;

  /**
   * @generated from field: optional CClientMetrics_ClipRange_Notification.RelativeRangeEdge start = 2;
   */
  start?: CClientMetrics_ClipRange_Notification_RelativeRangeEdge;

  /**
   * @generated from field: optional CClientMetrics_ClipRange_Notification.RelativeRangeEdge end = 3;
   */
  end?: CClientMetrics_ClipRange_Notification_RelativeRangeEdge;

  /**
   * @generated from field: optional float seconds = 4;
   */
  seconds: number;

  /**
   * @generated from field: optional fixed64 gameid = 5;
   */
  gameid: bigint;
};

/**
 * Describes the message CClientMetrics_ClipRange_Notification.
 * Use `create(CClientMetrics_ClipRange_NotificationSchema)` to create a new message.
 */
export const CClientMetrics_ClipRange_NotificationSchema: GenMessage<CClientMetrics_ClipRange_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 18);

/**
 * @generated from message CClientMetrics_ClipRange_Notification.RelativeRangeEdge
 */
export type CClientMetrics_ClipRange_Notification_RelativeRangeEdge = Message<"CClientMetrics_ClipRange_Notification.RelativeRangeEdge"> & {
  /**
   * @generated from field: optional EClipRangeMethod original_range_method = 1 [default = k_EClipRangeMethod_CreateClipButton];
   */
  originalRangeMethod: EClipRangeMethod;

  /**
   * @generated from field: optional EClipRangeMethod latest_range_method = 2 [default = k_EClipRangeMethod_CreateClipButton];
   */
  latestRangeMethod: EClipRangeMethod;

  /**
   * @generated from field: optional int32 delta_ms = 3;
   */
  deltaMs: number;
};

/**
 * Describes the message CClientMetrics_ClipRange_Notification.RelativeRangeEdge.
 * Use `create(CClientMetrics_ClipRange_Notification_RelativeRangeEdgeSchema)` to create a new message.
 */
export const CClientMetrics_ClipRange_Notification_RelativeRangeEdgeSchema: GenMessage<CClientMetrics_ClipRange_Notification_RelativeRangeEdge> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 18, 0);

/**
 * @generated from message CClientMetrics_EndGameRecording_Notification
 */
export type CClientMetrics_EndGameRecording_Notification = Message<"CClientMetrics_EndGameRecording_Notification"> & {
  /**
   * @generated from field: optional EGameRecordingType recording_type = 1 [default = k_EGameRecordingType_Unknown];
   */
  recordingType: EGameRecordingType;

  /**
   * @generated from field: optional float seconds = 2;
   */
  seconds: number;

  /**
   * @generated from field: optional uint64 bytes = 3;
   */
  bytes: bigint;

  /**
   * @generated from field: optional fixed64 gameid = 4;
   */
  gameid: bigint;

  /**
   * @generated from field: optional bool instant_clip = 5;
   */
  instantClip: boolean;
};

/**
 * Describes the message CClientMetrics_EndGameRecording_Notification.
 * Use `create(CClientMetrics_EndGameRecording_NotificationSchema)` to create a new message.
 */
export const CClientMetrics_EndGameRecording_NotificationSchema: GenMessage<CClientMetrics_EndGameRecording_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 19);

/**
 * @generated from message CClientMetrics_GamePerformance_Notification
 */
export type CClientMetrics_GamePerformance_Notification = Message<"CClientMetrics_GamePerformance_Notification"> & {
  /**
   * @generated from field: repeated CClientMetrics_GamePerformance_Notification.FrameRateReport reports = 1;
   */
  reports: CClientMetrics_GamePerformance_Notification_FrameRateReport[];
};

/**
 * Describes the message CClientMetrics_GamePerformance_Notification.
 * Use `create(CClientMetrics_GamePerformance_NotificationSchema)` to create a new message.
 */
export const CClientMetrics_GamePerformance_NotificationSchema: GenMessage<CClientMetrics_GamePerformance_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 20);

/**
 * @generated from message CClientMetrics_GamePerformance_Notification.FrameRateReport
 */
export type CClientMetrics_GamePerformance_Notification_FrameRateReport = Message<"CClientMetrics_GamePerformance_Notification.FrameRateReport"> & {
  /**
   * @generated from field: optional fixed64 gameid = 1;
   */
  gameid: bigint;

  /**
   * @generated from field: optional uint32 frame_rate = 2;
   */
  frameRate: number;

  /**
   * @generated from field: optional string manufacturer = 3;
   */
  manufacturer: string;

  /**
   * @generated from field: optional string model = 4;
   */
  model: string;

  /**
   * @generated from field: optional string dx_video_card = 5;
   */
  dxVideoCard: string;

  /**
   * @generated from field: optional int32 dx_vendorid = 6;
   */
  dxVendorid: number;

  /**
   * @generated from field: optional int32 dx_deviceid = 7;
   */
  dxDeviceid: number;

  /**
   * @generated from field: optional uint32 num_gpu = 8;
   */
  numGpu: number;

  /**
   * @generated from field: optional uint64 system_ram = 9;
   */
  systemRam: bigint;

  /**
   * @generated from field: optional int32 session_seconds = 10;
   */
  sessionSeconds: number;
};

/**
 * Describes the message CClientMetrics_GamePerformance_Notification.FrameRateReport.
 * Use `create(CClientMetrics_GamePerformance_Notification_FrameRateReportSchema)` to create a new message.
 */
export const CClientMetrics_GamePerformance_Notification_FrameRateReportSchema: GenMessage<CClientMetrics_GamePerformance_Notification_FrameRateReport> = /*@__PURE__*/
  messageDesc(file_steammessages_clientmetrics_steamclient, 20, 0);

/**
 * @generated from enum ESteamPipeWorkType
 */
export enum ESteamPipeWorkType {
  /**
   * @generated from enum value: k_ESteamPipeClientWorkType_Invalid = 0;
   */
  k_ESteamPipeClientWorkType_Invalid = 0,

  /**
   * @generated from enum value: k_ESteamPipeClientWorkType_StageFromChunkStores = 1;
   */
  k_ESteamPipeClientWorkType_StageFromChunkStores = 1,
}

/**
 * Describes the enum ESteamPipeWorkType.
 */
export const ESteamPipeWorkTypeSchema: GenEnum<ESteamPipeWorkType> = /*@__PURE__*/
  enumDesc(file_steammessages_clientmetrics_steamclient, 0);

/**
 * @generated from enum ESteamPipeOperationType
 */
export enum ESteamPipeOperationType {
  /**
   * @generated from enum value: k_ESteamPipeOperationType_Invalid = 0;
   */
  k_ESteamPipeOperationType_Invalid = 0,

  /**
   * @generated from enum value: k_ESteamPipeOperationType_DecryptCPU = 1;
   */
  k_ESteamPipeOperationType_DecryptCPU = 1,

  /**
   * @generated from enum value: k_ESteamPipeOperationType_DiskRead = 2;
   */
  k_ESteamPipeOperationType_DiskRead = 2,

  /**
   * @generated from enum value: k_ESteamPipeOperationType_DiskWrite = 3;
   */
  k_ESteamPipeOperationType_DiskWrite = 3,
}

/**
 * Describes the enum ESteamPipeOperationType.
 */
export const ESteamPipeOperationTypeSchema: GenEnum<ESteamPipeOperationType> = /*@__PURE__*/
  enumDesc(file_steammessages_clientmetrics_steamclient, 1);

/**
 * @generated from enum EClipShareMethod
 */
export enum EClipShareMethod {
  /**
   * @generated from enum value: k_EClipShareMethod_Chat = 1;
   */
  k_EClipShareMethod_Chat = 1,

  /**
   * @generated from enum value: k_EClipShareMethod_Clipboard = 2;
   */
  k_EClipShareMethod_Clipboard = 2,

  /**
   * @generated from enum value: k_EClipShareMethod_File = 3;
   */
  k_EClipShareMethod_File = 3,

  /**
   * @generated from enum value: k_EClipShareMethod_SendClip = 4;
   */
  k_EClipShareMethod_SendClip = 4,

  /**
   * @generated from enum value: k_EClipShareMethod_SaveToMedia = 5;
   */
  k_EClipShareMethod_SaveToMedia = 5,

  /**
   * @generated from enum value: k_EClipShareMethod_CreateLink = 6;
   */
  k_EClipShareMethod_CreateLink = 6,
}

/**
 * Describes the enum EClipShareMethod.
 */
export const EClipShareMethodSchema: GenEnum<EClipShareMethod> = /*@__PURE__*/
  enumDesc(file_steammessages_clientmetrics_steamclient, 2);

/**
 * @generated from enum EClipRangeMethod
 */
export enum EClipRangeMethod {
  /**
   * @generated from enum value: k_EClipRangeMethod_CreateClipButton = 1;
   */
  k_EClipRangeMethod_CreateClipButton = 1,

  /**
   * @generated from enum value: k_EClipRangeMethod_Highlight = 2;
   */
  k_EClipRangeMethod_Highlight = 2,

  /**
   * @generated from enum value: k_EClipRangeMethod_BeginEndButtons = 3;
   */
  k_EClipRangeMethod_BeginEndButtons = 3,

  /**
   * @generated from enum value: k_EClipRangeMethod_ContextMenu = 4;
   */
  k_EClipRangeMethod_ContextMenu = 4,

  /**
   * @generated from enum value: k_EClipRangeMethod_Drag = 5;
   */
  k_EClipRangeMethod_Drag = 5,

  /**
   * @generated from enum value: k_EClipRangeMethod_EntireClip = 6;
   */
  k_EClipRangeMethod_EntireClip = 6,

  /**
   * @generated from enum value: k_EClipRangeMethod_PhaseRecording = 7;
   */
  k_EClipRangeMethod_PhaseRecording = 7,
}

/**
 * Describes the enum EClipRangeMethod.
 */
export const EClipRangeMethodSchema: GenEnum<EClipRangeMethod> = /*@__PURE__*/
  enumDesc(file_steammessages_clientmetrics_steamclient, 3);

/**
 * @generated from service ClientMetrics
 */
export const ClientMetrics: GenService<{
  /**
   * @generated from rpc ClientMetrics.ClientAppInterfaceStatsReport
   */
  clientAppInterfaceStatsReport: {
    methodKind: "unary";
    input: typeof CClientMetrics_AppInterfaceStats_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc ClientMetrics.ClientIPv6ConnectivityReport
   */
  clientIPv6ConnectivityReport: {
    methodKind: "unary";
    input: typeof CClientMetrics_IPv6Connectivity_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc ClientMetrics.SteamPipeWorkStatsReport
   */
  steamPipeWorkStatsReport: {
    methodKind: "unary";
    input: typeof CClientMetrics_SteamPipeWorkStats_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc ClientMetrics.ReportReactUsage
   */
  reportReactUsage: {
    methodKind: "unary";
    input: typeof CClientMetrics_ReportReactUsage_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc ClientMetrics.ReportClientError
   */
  reportClientError: {
    methodKind: "unary";
    input: typeof CClientMetrics_ReportClientError_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc ClientMetrics.ClientBootstrapReport
   */
  clientBootstrapReport: {
    methodKind: "unary";
    input: typeof CClientMetrics_ClientBootstrap_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc ClientMetrics.ClientDownloadRatesReport
   */
  clientDownloadRatesReport: {
    methodKind: "unary";
    input: typeof CClientMetrics_DownloadRates_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc ClientMetrics.ClientContentValidationReport
   */
  clientContentValidationReport: {
    methodKind: "unary";
    input: typeof CClientMetrics_ContentValidation_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc ClientMetrics.ClientCloudAppSyncStats
   */
  clientCloudAppSyncStats: {
    methodKind: "unary";
    input: typeof CClientMetrics_CloudAppSyncStats_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc ClientMetrics.ClientDownloadResponseCodeCounts
   */
  clientDownloadResponseCodeCounts: {
    methodKind: "unary";
    input: typeof CClientMetrics_ContentDownloadResponse_Counts_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc ClientMetrics.ReportClientArgs
   */
  reportClientArgs: {
    methodKind: "unary";
    input: typeof CClientMetrics_ReportClientArgs_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc ClientMetrics.ReportLinuxStats
   */
  reportLinuxStats: {
    methodKind: "unary";
    input: typeof CClientMetrics_ReportLinuxStats_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc ClientMetrics.ReportAccessibilitySettings
   */
  reportAccessibilitySettings: {
    methodKind: "unary";
    input: typeof CClientMetrics_ReportAccessibilitySettings_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc ClientMetrics.ReportClipShare
   */
  reportClipShare: {
    methodKind: "unary";
    input: typeof CClientMetrics_ClipShare_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc ClientMetrics.ReportClipRange
   */
  reportClipRange: {
    methodKind: "unary";
    input: typeof CClientMetrics_ClipRange_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc ClientMetrics.ReportEndGameRecording
   */
  reportEndGameRecording: {
    methodKind: "unary";
    input: typeof CClientMetrics_EndGameRecording_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc ClientMetrics.ReportGamePerformance
   */
  reportGamePerformance: {
    methodKind: "unary";
    input: typeof CClientMetrics_GamePerformance_NotificationSchema;
    output: typeof NoResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_clientmetrics_steamclient, 0);

