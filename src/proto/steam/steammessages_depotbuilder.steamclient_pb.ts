// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_depotbuilder.steamclient.proto (syntax proto2)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_steammessages_base } from "./steammessages_base_pb";
import { file_steammessages_unified_base_steamclient } from "./steammessages_unified_base.steamclient_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_depotbuilder.steamclient.proto.
 */
export const file_steammessages_depotbuilder_steamclient: GenFile = /*@__PURE__*/
  fileDesc("CixzdGVhbW1lc3NhZ2VzX2RlcG90YnVpbGRlci5zdGVhbWNsaWVudC5wcm90byKkAQomQ0NvbnRlbnRCdWlsZGVyX0luaXREZXBvdEJ1aWxkX1JlcXVlc3QSDQoFYXBwaWQYASABKA0SDwoHZGVwb3RpZBgCIAEoDRIXCg93b3Jrc2hvcF9pdGVtaWQYAyABKAQSFAoMZm9yX2xvY2FsX2NzGAQgASgIEhUKDXRhcmdldF9icmFuY2gYBSABKAkSFAoMc2hhZGVyX2RlcG90GAYgASgIIqQDCidDQ29udGVudEJ1aWxkZXJfSW5pdERlcG90QnVpbGRfUmVzcG9uc2USGwoTYmFzZWxpbmVfbWFuaWZlc3RpZBgBIAEoBBISCgpjaHVua19zaXplGAIgASgNEg8KB2Flc19rZXkYAyABKAwSDwoHcnNhX2tleRgEIAEoDBIQCgh1cmxfaG9zdBgFIAEoCRIgChhvZmZzZXRfZGV0ZWN0aW9uX2VuYWJsZWQYBiABKAgSKAogb2Zmc2V0X2RldGVjdGlvbl9taW5fY2xlYW5fY2h1bmsYByABKA0SKQohb2Zmc2V0X2RldGVjdGlvbl9ibGFzdF9yYWRpdXNfcHJlGAggASgNEioKIm9mZnNldF9kZXRlY3Rpb25fYmxhc3RfcmFkaXVzX3Bvc3QYCSABKA0SKQohb2Zmc2V0X2RldGVjdGlvbl9tYXhfZGlzdGFuY2VfcHJlGAogASgNEioKIm9mZnNldF9kZXRlY3Rpb25fbWF4X2Rpc3RhbmNlX3Bvc3QYCyABKA0SGgoSY29tcHJlc3Npb25fbWV0aG9kGAwgASgNIq0BCihDQ29udGVudEJ1aWxkZXJfU3RhcnREZXBvdFVwbG9hZF9SZXF1ZXN0Eg0KBWFwcGlkGAEgASgNEg8KB2RlcG90aWQYAiABKA0SFwoPd29ya3Nob3BfaXRlbWlkGAMgASgEEhQKDGZvcl9sb2NhbF9jcxgEIAEoCBIbChNiYXNlbGluZV9tYW5pZmVzdGlkGAUgASgEEhUKDW1hbmlmZXN0X3NpemUYBiABKA0iRwopQ0NvbnRlbnRCdWlsZGVyX1N0YXJ0RGVwb3RVcGxvYWRfUmVzcG9uc2USGgoSZGVwb3RfYnVpbGRfaGFuZGxlGAEgASgEIloKLUNDb250ZW50QnVpbGRlcl9HZXRNaXNzaW5nRGVwb3RDaHVua3NfUmVxdWVzdBINCgVhcHBpZBgBIAEoDRIaChJkZXBvdF9idWlsZF9oYW5kbGUYAiABKAQi0gEKLkNDb250ZW50QnVpbGRlcl9HZXRNaXNzaW5nRGVwb3RDaHVua3NfUmVzcG9uc2USTgoObWlzc2luZ19jaHVua3MYASADKAsyNi5DQ29udGVudEJ1aWxkZXJfR2V0TWlzc2luZ0RlcG90Q2h1bmtzX1Jlc3BvbnNlLkNodW5rcxIcChR0b3RhbF9taXNzaW5nX2NodW5rcxgCIAEoDRIbChN0b3RhbF9taXNzaW5nX2J5dGVzGAMgASgEGhUKBkNodW5rcxILCgNzaGEYASABKAwiVgopQ0NvbnRlbnRCdWlsZGVyX0ZpbmlzaERlcG90VXBsb2FkX1JlcXVlc3QSDQoFYXBwaWQYASABKA0SGgoSZGVwb3RfYnVpbGRfaGFuZGxlGAIgASgEIlUKKkNDb250ZW50QnVpbGRlcl9GaW5pc2hEZXBvdFVwbG9hZF9SZXNwb25zZRISCgptYW5pZmVzdGlkGAEgASgEEhMKC3ByZXZfcmV1c2VkGAIgASgIIu8BCiZDQ29udGVudEJ1aWxkZXJfQ29tbWl0QXBwQnVpbGRfUmVxdWVzdBINCgVhcHBpZBgBIAEoDRJHCg9kZXBvdF9tYW5pZmVzdHMYAiADKAsyLi5DQ29udGVudEJ1aWxkZXJfQ29tbWl0QXBwQnVpbGRfUmVxdWVzdC5EZXBvdHMSEwoLYnVpbGRfbm90ZXMYBCABKAkSEwoLbGl2ZV9icmFuY2gYBSABKAkSFAoMZm9yX2xvY2FsX2NzGAYgASgIGi0KBkRlcG90cxIPCgdkZXBvdGlkGAEgASgNEhIKCm1hbmlmZXN0aWQYAiABKAQiOgonQ0NvbnRlbnRCdWlsZGVyX0NvbW1pdEFwcEJ1aWxkX1Jlc3BvbnNlEg8KB2J1aWxkaWQYASABKA0iYwopQ0NvbnRlbnRCdWlsZGVyX1NpZ25JbnN0YWxsU2NyaXB0X1JlcXVlc3QSDQoFYXBwaWQYASABKA0SDwoHZGVwb3RpZBgCIAEoDRIWCg5pbnN0YWxsX3NjcmlwdBgDIAEoCSJLCipDQ29udGVudEJ1aWxkZXJfU2lnbkluc3RhbGxTY3JpcHRfUmVzcG9uc2USHQoVc2lnbmVkX2luc3RhbGxfc2NyaXB0GAEgASgJMpsFCg5Db250ZW50QnVpbGRlchJjCg5Jbml0RGVwb3RCdWlsZBInLkNDb250ZW50QnVpbGRlcl9Jbml0RGVwb3RCdWlsZF9SZXF1ZXN0GiguQ0NvbnRlbnRCdWlsZGVyX0luaXREZXBvdEJ1aWxkX1Jlc3BvbnNlEmkKEFN0YXJ0RGVwb3RVcGxvYWQSKS5DQ29udGVudEJ1aWxkZXJfU3RhcnREZXBvdFVwbG9hZF9SZXF1ZXN0GiouQ0NvbnRlbnRCdWlsZGVyX1N0YXJ0RGVwb3RVcGxvYWRfUmVzcG9uc2USeAoVR2V0TWlzc2luZ0RlcG90Q2h1bmtzEi4uQ0NvbnRlbnRCdWlsZGVyX0dldE1pc3NpbmdEZXBvdENodW5rc19SZXF1ZXN0Gi8uQ0NvbnRlbnRCdWlsZGVyX0dldE1pc3NpbmdEZXBvdENodW5rc19SZXNwb25zZRJsChFGaW5pc2hEZXBvdFVwbG9hZBIqLkNDb250ZW50QnVpbGRlcl9GaW5pc2hEZXBvdFVwbG9hZF9SZXF1ZXN0GisuQ0NvbnRlbnRCdWlsZGVyX0ZpbmlzaERlcG90VXBsb2FkX1Jlc3BvbnNlEmMKDkNvbW1pdEFwcEJ1aWxkEicuQ0NvbnRlbnRCdWlsZGVyX0NvbW1pdEFwcEJ1aWxkX1JlcXVlc3QaKC5DQ29udGVudEJ1aWxkZXJfQ29tbWl0QXBwQnVpbGRfUmVzcG9uc2USbAoRU2lnbkluc3RhbGxTY3JpcHQSKi5DQ29udGVudEJ1aWxkZXJfU2lnbkluc3RhbGxTY3JpcHRfUmVxdWVzdBorLkNDb250ZW50QnVpbGRlcl9TaWduSW5zdGFsbFNjcmlwdF9SZXNwb25zZUIDgAEB", [file_steammessages_base, file_steammessages_unified_base_steamclient]);

/**
 * @generated from message CContentBuilder_InitDepotBuild_Request
 */
export type CContentBuilder_InitDepotBuild_Request = Message<"CContentBuilder_InitDepotBuild_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 depotid = 2;
   */
  depotid: number;

  /**
   * @generated from field: optional uint64 workshop_itemid = 3;
   */
  workshopItemid: bigint;

  /**
   * @generated from field: optional bool for_local_cs = 4;
   */
  forLocalCs: boolean;

  /**
   * @generated from field: optional string target_branch = 5;
   */
  targetBranch: string;

  /**
   * @generated from field: optional bool shader_depot = 6;
   */
  shaderDepot: boolean;
};

/**
 * Describes the message CContentBuilder_InitDepotBuild_Request.
 * Use `create(CContentBuilder_InitDepotBuild_RequestSchema)` to create a new message.
 */
export const CContentBuilder_InitDepotBuild_RequestSchema: GenMessage<CContentBuilder_InitDepotBuild_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_depotbuilder_steamclient, 0);

/**
 * @generated from message CContentBuilder_InitDepotBuild_Response
 */
export type CContentBuilder_InitDepotBuild_Response = Message<"CContentBuilder_InitDepotBuild_Response"> & {
  /**
   * @generated from field: optional uint64 baseline_manifestid = 1;
   */
  baselineManifestid: bigint;

  /**
   * @generated from field: optional uint32 chunk_size = 2;
   */
  chunkSize: number;

  /**
   * @generated from field: optional bytes aes_key = 3;
   */
  aesKey: Uint8Array;

  /**
   * @generated from field: optional bytes rsa_key = 4;
   */
  rsaKey: Uint8Array;

  /**
   * @generated from field: optional string url_host = 5;
   */
  urlHost: string;

  /**
   * @generated from field: optional bool offset_detection_enabled = 6;
   */
  offsetDetectionEnabled: boolean;

  /**
   * @generated from field: optional uint32 offset_detection_min_clean_chunk = 7;
   */
  offsetDetectionMinCleanChunk: number;

  /**
   * @generated from field: optional uint32 offset_detection_blast_radius_pre = 8;
   */
  offsetDetectionBlastRadiusPre: number;

  /**
   * @generated from field: optional uint32 offset_detection_blast_radius_post = 9;
   */
  offsetDetectionBlastRadiusPost: number;

  /**
   * @generated from field: optional uint32 offset_detection_max_distance_pre = 10;
   */
  offsetDetectionMaxDistancePre: number;

  /**
   * @generated from field: optional uint32 offset_detection_max_distance_post = 11;
   */
  offsetDetectionMaxDistancePost: number;

  /**
   * @generated from field: optional uint32 compression_method = 12;
   */
  compressionMethod: number;
};

/**
 * Describes the message CContentBuilder_InitDepotBuild_Response.
 * Use `create(CContentBuilder_InitDepotBuild_ResponseSchema)` to create a new message.
 */
export const CContentBuilder_InitDepotBuild_ResponseSchema: GenMessage<CContentBuilder_InitDepotBuild_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_depotbuilder_steamclient, 1);

/**
 * @generated from message CContentBuilder_StartDepotUpload_Request
 */
export type CContentBuilder_StartDepotUpload_Request = Message<"CContentBuilder_StartDepotUpload_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 depotid = 2;
   */
  depotid: number;

  /**
   * @generated from field: optional uint64 workshop_itemid = 3;
   */
  workshopItemid: bigint;

  /**
   * @generated from field: optional bool for_local_cs = 4;
   */
  forLocalCs: boolean;

  /**
   * @generated from field: optional uint64 baseline_manifestid = 5;
   */
  baselineManifestid: bigint;

  /**
   * @generated from field: optional uint32 manifest_size = 6;
   */
  manifestSize: number;
};

/**
 * Describes the message CContentBuilder_StartDepotUpload_Request.
 * Use `create(CContentBuilder_StartDepotUpload_RequestSchema)` to create a new message.
 */
export const CContentBuilder_StartDepotUpload_RequestSchema: GenMessage<CContentBuilder_StartDepotUpload_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_depotbuilder_steamclient, 2);

/**
 * @generated from message CContentBuilder_StartDepotUpload_Response
 */
export type CContentBuilder_StartDepotUpload_Response = Message<"CContentBuilder_StartDepotUpload_Response"> & {
  /**
   * @generated from field: optional uint64 depot_build_handle = 1;
   */
  depotBuildHandle: bigint;
};

/**
 * Describes the message CContentBuilder_StartDepotUpload_Response.
 * Use `create(CContentBuilder_StartDepotUpload_ResponseSchema)` to create a new message.
 */
export const CContentBuilder_StartDepotUpload_ResponseSchema: GenMessage<CContentBuilder_StartDepotUpload_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_depotbuilder_steamclient, 3);

/**
 * @generated from message CContentBuilder_GetMissingDepotChunks_Request
 */
export type CContentBuilder_GetMissingDepotChunks_Request = Message<"CContentBuilder_GetMissingDepotChunks_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint64 depot_build_handle = 2;
   */
  depotBuildHandle: bigint;
};

/**
 * Describes the message CContentBuilder_GetMissingDepotChunks_Request.
 * Use `create(CContentBuilder_GetMissingDepotChunks_RequestSchema)` to create a new message.
 */
export const CContentBuilder_GetMissingDepotChunks_RequestSchema: GenMessage<CContentBuilder_GetMissingDepotChunks_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_depotbuilder_steamclient, 4);

/**
 * @generated from message CContentBuilder_GetMissingDepotChunks_Response
 */
export type CContentBuilder_GetMissingDepotChunks_Response = Message<"CContentBuilder_GetMissingDepotChunks_Response"> & {
  /**
   * @generated from field: repeated CContentBuilder_GetMissingDepotChunks_Response.Chunks missing_chunks = 1;
   */
  missingChunks: CContentBuilder_GetMissingDepotChunks_Response_Chunks[];

  /**
   * @generated from field: optional uint32 total_missing_chunks = 2;
   */
  totalMissingChunks: number;

  /**
   * @generated from field: optional uint64 total_missing_bytes = 3;
   */
  totalMissingBytes: bigint;
};

/**
 * Describes the message CContentBuilder_GetMissingDepotChunks_Response.
 * Use `create(CContentBuilder_GetMissingDepotChunks_ResponseSchema)` to create a new message.
 */
export const CContentBuilder_GetMissingDepotChunks_ResponseSchema: GenMessage<CContentBuilder_GetMissingDepotChunks_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_depotbuilder_steamclient, 5);

/**
 * @generated from message CContentBuilder_GetMissingDepotChunks_Response.Chunks
 */
export type CContentBuilder_GetMissingDepotChunks_Response_Chunks = Message<"CContentBuilder_GetMissingDepotChunks_Response.Chunks"> & {
  /**
   * @generated from field: optional bytes sha = 1;
   */
  sha: Uint8Array;
};

/**
 * Describes the message CContentBuilder_GetMissingDepotChunks_Response.Chunks.
 * Use `create(CContentBuilder_GetMissingDepotChunks_Response_ChunksSchema)` to create a new message.
 */
export const CContentBuilder_GetMissingDepotChunks_Response_ChunksSchema: GenMessage<CContentBuilder_GetMissingDepotChunks_Response_Chunks> = /*@__PURE__*/
  messageDesc(file_steammessages_depotbuilder_steamclient, 5, 0);

/**
 * @generated from message CContentBuilder_FinishDepotUpload_Request
 */
export type CContentBuilder_FinishDepotUpload_Request = Message<"CContentBuilder_FinishDepotUpload_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint64 depot_build_handle = 2;
   */
  depotBuildHandle: bigint;
};

/**
 * Describes the message CContentBuilder_FinishDepotUpload_Request.
 * Use `create(CContentBuilder_FinishDepotUpload_RequestSchema)` to create a new message.
 */
export const CContentBuilder_FinishDepotUpload_RequestSchema: GenMessage<CContentBuilder_FinishDepotUpload_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_depotbuilder_steamclient, 6);

/**
 * @generated from message CContentBuilder_FinishDepotUpload_Response
 */
export type CContentBuilder_FinishDepotUpload_Response = Message<"CContentBuilder_FinishDepotUpload_Response"> & {
  /**
   * @generated from field: optional uint64 manifestid = 1;
   */
  manifestid: bigint;

  /**
   * @generated from field: optional bool prev_reused = 2;
   */
  prevReused: boolean;
};

/**
 * Describes the message CContentBuilder_FinishDepotUpload_Response.
 * Use `create(CContentBuilder_FinishDepotUpload_ResponseSchema)` to create a new message.
 */
export const CContentBuilder_FinishDepotUpload_ResponseSchema: GenMessage<CContentBuilder_FinishDepotUpload_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_depotbuilder_steamclient, 7);

/**
 * @generated from message CContentBuilder_CommitAppBuild_Request
 */
export type CContentBuilder_CommitAppBuild_Request = Message<"CContentBuilder_CommitAppBuild_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: repeated CContentBuilder_CommitAppBuild_Request.Depots depot_manifests = 2;
   */
  depotManifests: CContentBuilder_CommitAppBuild_Request_Depots[];

  /**
   * @generated from field: optional string build_notes = 4;
   */
  buildNotes: string;

  /**
   * @generated from field: optional string live_branch = 5;
   */
  liveBranch: string;

  /**
   * @generated from field: optional bool for_local_cs = 6;
   */
  forLocalCs: boolean;
};

/**
 * Describes the message CContentBuilder_CommitAppBuild_Request.
 * Use `create(CContentBuilder_CommitAppBuild_RequestSchema)` to create a new message.
 */
export const CContentBuilder_CommitAppBuild_RequestSchema: GenMessage<CContentBuilder_CommitAppBuild_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_depotbuilder_steamclient, 8);

/**
 * @generated from message CContentBuilder_CommitAppBuild_Request.Depots
 */
export type CContentBuilder_CommitAppBuild_Request_Depots = Message<"CContentBuilder_CommitAppBuild_Request.Depots"> & {
  /**
   * @generated from field: optional uint32 depotid = 1;
   */
  depotid: number;

  /**
   * @generated from field: optional uint64 manifestid = 2;
   */
  manifestid: bigint;
};

/**
 * Describes the message CContentBuilder_CommitAppBuild_Request.Depots.
 * Use `create(CContentBuilder_CommitAppBuild_Request_DepotsSchema)` to create a new message.
 */
export const CContentBuilder_CommitAppBuild_Request_DepotsSchema: GenMessage<CContentBuilder_CommitAppBuild_Request_Depots> = /*@__PURE__*/
  messageDesc(file_steammessages_depotbuilder_steamclient, 8, 0);

/**
 * @generated from message CContentBuilder_CommitAppBuild_Response
 */
export type CContentBuilder_CommitAppBuild_Response = Message<"CContentBuilder_CommitAppBuild_Response"> & {
  /**
   * @generated from field: optional uint32 buildid = 1;
   */
  buildid: number;
};

/**
 * Describes the message CContentBuilder_CommitAppBuild_Response.
 * Use `create(CContentBuilder_CommitAppBuild_ResponseSchema)` to create a new message.
 */
export const CContentBuilder_CommitAppBuild_ResponseSchema: GenMessage<CContentBuilder_CommitAppBuild_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_depotbuilder_steamclient, 9);

/**
 * @generated from message CContentBuilder_SignInstallScript_Request
 */
export type CContentBuilder_SignInstallScript_Request = Message<"CContentBuilder_SignInstallScript_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 depotid = 2;
   */
  depotid: number;

  /**
   * @generated from field: optional string install_script = 3;
   */
  installScript: string;
};

/**
 * Describes the message CContentBuilder_SignInstallScript_Request.
 * Use `create(CContentBuilder_SignInstallScript_RequestSchema)` to create a new message.
 */
export const CContentBuilder_SignInstallScript_RequestSchema: GenMessage<CContentBuilder_SignInstallScript_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_depotbuilder_steamclient, 10);

/**
 * @generated from message CContentBuilder_SignInstallScript_Response
 */
export type CContentBuilder_SignInstallScript_Response = Message<"CContentBuilder_SignInstallScript_Response"> & {
  /**
   * @generated from field: optional string signed_install_script = 1;
   */
  signedInstallScript: string;
};

/**
 * Describes the message CContentBuilder_SignInstallScript_Response.
 * Use `create(CContentBuilder_SignInstallScript_ResponseSchema)` to create a new message.
 */
export const CContentBuilder_SignInstallScript_ResponseSchema: GenMessage<CContentBuilder_SignInstallScript_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_depotbuilder_steamclient, 11);

/**
 * @generated from service ContentBuilder
 */
export const ContentBuilder: GenService<{
  /**
   * @generated from rpc ContentBuilder.InitDepotBuild
   */
  initDepotBuild: {
    methodKind: "unary";
    input: typeof CContentBuilder_InitDepotBuild_RequestSchema;
    output: typeof CContentBuilder_InitDepotBuild_ResponseSchema;
  },
  /**
   * @generated from rpc ContentBuilder.StartDepotUpload
   */
  startDepotUpload: {
    methodKind: "unary";
    input: typeof CContentBuilder_StartDepotUpload_RequestSchema;
    output: typeof CContentBuilder_StartDepotUpload_ResponseSchema;
  },
  /**
   * @generated from rpc ContentBuilder.GetMissingDepotChunks
   */
  getMissingDepotChunks: {
    methodKind: "unary";
    input: typeof CContentBuilder_GetMissingDepotChunks_RequestSchema;
    output: typeof CContentBuilder_GetMissingDepotChunks_ResponseSchema;
  },
  /**
   * @generated from rpc ContentBuilder.FinishDepotUpload
   */
  finishDepotUpload: {
    methodKind: "unary";
    input: typeof CContentBuilder_FinishDepotUpload_RequestSchema;
    output: typeof CContentBuilder_FinishDepotUpload_ResponseSchema;
  },
  /**
   * @generated from rpc ContentBuilder.CommitAppBuild
   */
  commitAppBuild: {
    methodKind: "unary";
    input: typeof CContentBuilder_CommitAppBuild_RequestSchema;
    output: typeof CContentBuilder_CommitAppBuild_ResponseSchema;
  },
  /**
   * @generated from rpc ContentBuilder.SignInstallScript
   */
  signInstallScript: {
    methodKind: "unary";
    input: typeof CContentBuilder_SignInstallScript_RequestSchema;
    output: typeof CContentBuilder_SignInstallScript_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_depotbuilder_steamclient, 0);

