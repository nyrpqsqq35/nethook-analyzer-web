// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steamnetworkingsockets_messages.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { CMsgSteamDatagramCertificateSigned } from "./steamnetworkingsockets_messages_certs_pb";
import { file_steamnetworkingsockets_messages_certs } from "./steamnetworkingsockets_messages_certs_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steamnetworkingsockets_messages.proto.
 */
export const file_steamnetworkingsockets_messages: GenFile = /*@__PURE__*/
  fileDesc("CiVzdGVhbW5ldHdvcmtpbmdzb2NrZXRzX21lc3NhZ2VzLnByb3RvIoACCiFDTXNnU3RlYW1EYXRhZ3JhbVNlc3Npb25DcnlwdEluZm8SRgoIa2V5X3R5cGUYASABKA4yKy5DTXNnU3RlYW1EYXRhZ3JhbVNlc3Npb25DcnlwdEluZm8uRUtleVR5cGU6B0lOVkFMSUQSEAoIa2V5X2RhdGEYAiABKAwSDQoFbm9uY2UYAyABKAYSGAoQcHJvdG9jb2xfdmVyc2lvbhgEIAEoDRIvCgdjaXBoZXJzGAUgAygOMh4uRVN0ZWFtTmV0d29ya2luZ1NvY2tldHNDaXBoZXIiJwoIRUtleVR5cGUSCwoHSU5WQUxJRBAAEg4KCkNVUlZFMjU1MTkQASJKCidDTXNnU3RlYW1EYXRhZ3JhbVNlc3Npb25DcnlwdEluZm9TaWduZWQSDAoEaW5mbxgBIAEoDBIRCglzaWduYXR1cmUYAiABKAwiPQobQ01zZ1N0ZWFtRGF0YWdyYW1EaWFnbm9zdGljEhAKCHNldmVyaXR5GAEgASgNEgwKBHRleHQYAiABKAkiiwIKJ0NNc2dTdGVhbURhdGFncmFtTGlua0luc3RhbnRhbmVvdXNTdGF0cxIfChdvdXRfcGFja2V0c19wZXJfc2VjX3gxMBgBIAEoDRIZChFvdXRfYnl0ZXNfcGVyX3NlYxgCIAEoDRIeChZpbl9wYWNrZXRzX3Blcl9zZWNfeDEwGAMgASgNEhgKEGluX2J5dGVzX3Blcl9zZWMYBCABKA0SDwoHcGluZ19tcxgFIAEoDRIbChNwYWNrZXRzX2Ryb3BwZWRfcGN0GAYgASgNEiIKGnBhY2tldHNfd2VpcmRfc2VxdWVuY2VfcGN0GAcgASgNEhgKEHBlYWtfaml0dGVyX3VzZWMYCCABKA0i7QoKIkNNc2dTdGVhbURhdGFncmFtTGlua0xpZmV0aW1lU3RhdHMSGQoRY29ubmVjdGVkX3NlY29uZHMYAiABKA0SFAoMcGFja2V0c19zZW50GAMgASgEEg8KB2tiX3NlbnQYBCABKAQSFAoMcGFja2V0c19yZWN2GAUgASgEEg8KB2tiX3JlY3YYBiABKAQSHgoWcGFja2V0c19yZWN2X3NlcXVlbmNlZBgHIAEoBBIcChRwYWNrZXRzX3JlY3ZfZHJvcHBlZBgIIAEoBBIhChlwYWNrZXRzX3JlY3Zfb3V0X29mX29yZGVyGAkgASgEEisKI3BhY2tldHNfcmVjdl9vdXRfb2Zfb3JkZXJfY29ycmVjdGVkGA8gASgEEh4KFnBhY2tldHNfcmVjdl9kdXBsaWNhdGUYCiABKAQSGgoScGFja2V0c19yZWN2X2x1cmNoGAsgASgEEigKIG11bHRpcGF0aF9wYWNrZXRzX3JlY3Zfc2VxdWVuY2VkGAwgAygEEiQKHG11bHRpcGF0aF9wYWNrZXRzX3JlY3ZfbGF0ZXIYDSADKAQSHgoWbXVsdGlwYXRoX3NlbmRfZW5hYmxlZBgOIAEoDRIdChVxdWFsaXR5X2hpc3RvZ3JhbV8xMDAYFSABKA0SHAoUcXVhbGl0eV9oaXN0b2dyYW1fOTkYFiABKA0SHAoUcXVhbGl0eV9oaXN0b2dyYW1fOTcYFyABKA0SHAoUcXVhbGl0eV9oaXN0b2dyYW1fOTUYGCABKA0SHAoUcXVhbGl0eV9oaXN0b2dyYW1fOTAYGSABKA0SHAoUcXVhbGl0eV9oaXN0b2dyYW1fNzUYGiABKA0SHAoUcXVhbGl0eV9oaXN0b2dyYW1fNTAYGyABKA0SGwoTcXVhbGl0eV9oaXN0b2dyYW1fMRgcIAEoDRIeChZxdWFsaXR5X2hpc3RvZ3JhbV9kZWFkGB0gASgNEhkKEXF1YWxpdHlfbnRpbGVfMm5kGB4gASgNEhkKEXF1YWxpdHlfbnRpbGVfNXRoGB8gASgNEhoKEnF1YWxpdHlfbnRpbGVfMjV0aBggIAEoDRIaChJxdWFsaXR5X250aWxlXzUwdGgYISABKA0SGQoRcGluZ19oaXN0b2dyYW1fMjUYKSABKA0SGQoRcGluZ19oaXN0b2dyYW1fNTAYKiABKA0SGQoRcGluZ19oaXN0b2dyYW1fNzUYKyABKA0SGgoScGluZ19oaXN0b2dyYW1fMTAwGCwgASgNEhoKEnBpbmdfaGlzdG9ncmFtXzEyNRgtIAEoDRIaChJwaW5nX2hpc3RvZ3JhbV8xNTAYLiABKA0SGgoScGluZ19oaXN0b2dyYW1fMjAwGC8gASgNEhoKEnBpbmdfaGlzdG9ncmFtXzMwMBgwIAEoDRIaChJwaW5nX2hpc3RvZ3JhbV9tYXgYMSABKA0SFgoOcGluZ19udGlsZV81dGgYMiABKA0SFwoPcGluZ19udGlsZV81MHRoGDMgASgNEhcKD3BpbmdfbnRpbGVfNzV0aBg0IAEoDRIXCg9waW5nX250aWxlXzk1dGgYNSABKA0SFwoPcGluZ19udGlsZV85OHRoGDYgASgNEiMKG2ppdHRlcl9oaXN0b2dyYW1fbmVnbGlnaWJsZRg9IAEoDRIaChJqaXR0ZXJfaGlzdG9ncmFtXzEYPiABKA0SGgoSaml0dGVyX2hpc3RvZ3JhbV8yGD8gASgNEhoKEmppdHRlcl9oaXN0b2dyYW1fNRhAIAEoDRIbChNqaXR0ZXJfaGlzdG9ncmFtXzEwGEEgASgNEhsKE2ppdHRlcl9oaXN0b2dyYW1fMjAYQiABKA0inAEKIkNNc2dTdGVhbURhdGFncmFtQ29ubmVjdGlvblF1YWxpdHkSPwoNaW5zdGFudGFuZW91cxgBIAEoCzIoLkNNc2dTdGVhbURhdGFncmFtTGlua0luc3RhbnRhbmVvdXNTdGF0cxI1CghsaWZldGltZRgCIAEoCzIjLkNNc2dTdGVhbURhdGFncmFtTGlua0xpZmV0aW1lU3RhdHMiJQoQQ01zZ0lDRUNhbmRpZGF0ZRIRCgljYW5kaWRhdGUYAyABKAkifgoRQ01zZ0lDRVJlbmRlenZvdXMSJQoEYXV0aBgCIAEoCzIXLkNNc2dJQ0VSZW5kZXp2b3VzLkF1dGgSKAoNYWRkX2NhbmRpZGF0ZRgBIAEoCzIRLkNNc2dJQ0VDYW5kaWRhdGUaGAoEQXV0aBIQCghwd2RfZnJhZxgBIAEoCSKjCQogQ01zZ1N0ZWFtTmV0d29ya2luZ1AyUFJlbmRlenZvdXMSFQoNZnJvbV9pZGVudGl0eRgIIAEoCRIaChJmcm9tX2Nvbm5lY3Rpb25faWQYCSABKAcSEwoLdG9faWRlbnRpdHkYCiABKAkSGAoQdG9fY29ubmVjdGlvbl9pZBgBIAEoBxISCgpzZHJfcm91dGVzGAIgASgMEiAKGGFja19wZWVyX3JvdXRlc19yZXZpc2lvbhgDIAEoDRITCgtpY2VfZW5hYmxlZBgHIAEoCBIcChRob3N0ZWRfc2VydmVyX3RpY2tldBgOIAEoDBJJCg9jb25uZWN0X3JlcXVlc3QYBCABKAsyMC5DTXNnU3RlYW1OZXR3b3JraW5nUDJQUmVuZGV6dm91cy5Db25uZWN0UmVxdWVzdBI/Cgpjb25uZWN0X29rGAUgASgLMisuQ01zZ1N0ZWFtTmV0d29ya2luZ1AyUFJlbmRlenZvdXMuQ29ubmVjdE9LEk0KEWNvbm5lY3Rpb25fY2xvc2VkGAYgASgLMjIuQ01zZ1N0ZWFtTmV0d29ya2luZ1AyUFJlbmRlenZvdXMuQ29ubmVjdGlvbkNsb3NlZBIYChBhY2tfcmVsaWFibGVfbXNnGAsgASgNEhoKEmZpcnN0X3JlbGlhYmxlX21zZxgMIAEoDRJMChFyZWxpYWJsZV9tZXNzYWdlcxgNIAMoCzIxLkNNc2dTdGVhbU5ldHdvcmtpbmdQMlBSZW5kZXp2b3VzLlJlbGlhYmxlTWVzc2FnZRJSChRhcHBsaWNhdGlvbl9tZXNzYWdlcxgPIAMoCzI0LkNNc2dTdGVhbU5ldHdvcmtpbmdQMlBSZW5kZXp2b3VzLkFwcGxpY2F0aW9uTWVzc2FnZRrFAQoOQ29ubmVjdFJlcXVlc3QSNwoFY3J5cHQYBiABKAsyKC5DTXNnU3RlYW1EYXRhZ3JhbVNlc3Npb25DcnlwdEluZm9TaWduZWQSMQoEY2VydBgHIAEoCzIjLkNNc2dTdGVhbURhdGFncmFtQ2VydGlmaWNhdGVTaWduZWQSFwoPdG9fdmlydHVhbF9wb3J0GAkgASgNEhkKEWZyb21fdmlydHVhbF9wb3J0GAogASgNEhMKC2Zyb21fZmFrZWlwGAsgASgJGncKCUNvbm5lY3RPSxI3CgVjcnlwdBgFIAEoCzIoLkNNc2dTdGVhbURhdGFncmFtU2Vzc2lvbkNyeXB0SW5mb1NpZ25lZBIxCgRjZXJ0GAYgASgLMiMuQ01zZ1N0ZWFtRGF0YWdyYW1DZXJ0aWZpY2F0ZVNpZ25lZBo2ChBDb25uZWN0aW9uQ2xvc2VkEg0KBWRlYnVnGAUgASgJEhMKC3JlYXNvbl9jb2RlGAYgASgNGjIKD1JlbGlhYmxlTWVzc2FnZRIfCgNpY2UYASABKAsyEi5DTXNnSUNFUmVuZGV6dm91cxpUChJBcHBsaWNhdGlvbk1lc3NhZ2USDAoEZGF0YRgBIAEoDBIPCgdtc2dfbnVtGAIgASgEEg0KBWZsYWdzGAMgASgNEhAKCGxhbmVfaWR4GAQgASgNIqYDCiRDTXNnU3RlYW1OZXR3b3JraW5nSUNFU2Vzc2lvblN1bW1hcnkSGwoTZmFpbHVyZV9yZWFzb25fY29kZRgHIAEoDRIdChVsb2NhbF9jYW5kaWRhdGVfdHlwZXMYASABKA0SHgoWcmVtb3RlX2NhbmRpZGF0ZV90eXBlcxgCIAEoDRIaChJpbml0aWFsX3JvdXRlX2tpbmQYAyABKA0SFAoMaW5pdGlhbF9waW5nGAQgASgNEhUKDWluaXRpYWxfc2NvcmUYBiABKA0SFgoObmVnb3RpYXRpb25fbXMYBSABKA0SFwoPYmVzdF9yb3V0ZV9raW5kGBAgASgNEhEKCWJlc3RfcGluZxgRIAEoDRISCgpiZXN0X3Njb3JlGBIgASgNEhEKCWJlc3RfdGltZRgTIAEoDRIYChBzZWxlY3RlZF9zZWNvbmRzGAwgASgNEhUKDXVzZXJfc2V0dGluZ3MYDSABKA0SFgoOaWNlX2VuYWJsZV92YXIYDiABKA0SJQodbG9jYWxfY2FuZGlkYXRlX3R5cGVzX2FsbG93ZWQYDyABKA0qpwEKHUVTdGVhbU5ldHdvcmtpbmdTb2NrZXRzQ2lwaGVyEisKJ2tfRVN0ZWFtTmV0d29ya2luZ1NvY2tldHNDaXBoZXJfSU5WQUxJRBAAEigKJGtfRVN0ZWFtTmV0d29ya2luZ1NvY2tldHNDaXBoZXJfTlVMTBABEi8KK2tfRVN0ZWFtTmV0d29ya2luZ1NvY2tldHNDaXBoZXJfQUVTXzI1Nl9HQ00QAkIFSAGAAQA", [file_steamnetworkingsockets_messages_certs]);

/**
 * @generated from message CMsgSteamDatagramSessionCryptInfo
 */
export type CMsgSteamDatagramSessionCryptInfo = Message<"CMsgSteamDatagramSessionCryptInfo"> & {
  /**
   * @generated from field: optional CMsgSteamDatagramSessionCryptInfo.EKeyType key_type = 1 [default = INVALID];
   */
  keyType: CMsgSteamDatagramSessionCryptInfo_EKeyType;

  /**
   * @generated from field: optional bytes key_data = 2;
   */
  keyData: Uint8Array;

  /**
   * @generated from field: optional fixed64 nonce = 3;
   */
  nonce: bigint;

  /**
   * @generated from field: optional uint32 protocol_version = 4;
   */
  protocolVersion: number;

  /**
   * @generated from field: repeated ESteamNetworkingSocketsCipher ciphers = 5;
   */
  ciphers: ESteamNetworkingSocketsCipher[];
};

/**
 * Describes the message CMsgSteamDatagramSessionCryptInfo.
 * Use `create(CMsgSteamDatagramSessionCryptInfoSchema)` to create a new message.
 */
export const CMsgSteamDatagramSessionCryptInfoSchema: GenMessage<CMsgSteamDatagramSessionCryptInfo> = /*@__PURE__*/
  messageDesc(file_steamnetworkingsockets_messages, 0);

/**
 * @generated from enum CMsgSteamDatagramSessionCryptInfo.EKeyType
 */
export enum CMsgSteamDatagramSessionCryptInfo_EKeyType {
  /**
   * @generated from enum value: INVALID = 0;
   */
  INVALID = 0,

  /**
   * @generated from enum value: CURVE25519 = 1;
   */
  CURVE25519 = 1,
}

/**
 * Describes the enum CMsgSteamDatagramSessionCryptInfo.EKeyType.
 */
export const CMsgSteamDatagramSessionCryptInfo_EKeyTypeSchema: GenEnum<CMsgSteamDatagramSessionCryptInfo_EKeyType> = /*@__PURE__*/
  enumDesc(file_steamnetworkingsockets_messages, 0, 0);

/**
 * @generated from message CMsgSteamDatagramSessionCryptInfoSigned
 */
export type CMsgSteamDatagramSessionCryptInfoSigned = Message<"CMsgSteamDatagramSessionCryptInfoSigned"> & {
  /**
   * @generated from field: optional bytes info = 1;
   */
  info: Uint8Array;

  /**
   * @generated from field: optional bytes signature = 2;
   */
  signature: Uint8Array;
};

/**
 * Describes the message CMsgSteamDatagramSessionCryptInfoSigned.
 * Use `create(CMsgSteamDatagramSessionCryptInfoSignedSchema)` to create a new message.
 */
export const CMsgSteamDatagramSessionCryptInfoSignedSchema: GenMessage<CMsgSteamDatagramSessionCryptInfoSigned> = /*@__PURE__*/
  messageDesc(file_steamnetworkingsockets_messages, 1);

/**
 * @generated from message CMsgSteamDatagramDiagnostic
 */
export type CMsgSteamDatagramDiagnostic = Message<"CMsgSteamDatagramDiagnostic"> & {
  /**
   * @generated from field: optional uint32 severity = 1;
   */
  severity: number;

  /**
   * @generated from field: optional string text = 2;
   */
  text: string;
};

/**
 * Describes the message CMsgSteamDatagramDiagnostic.
 * Use `create(CMsgSteamDatagramDiagnosticSchema)` to create a new message.
 */
export const CMsgSteamDatagramDiagnosticSchema: GenMessage<CMsgSteamDatagramDiagnostic> = /*@__PURE__*/
  messageDesc(file_steamnetworkingsockets_messages, 2);

/**
 * @generated from message CMsgSteamDatagramLinkInstantaneousStats
 */
export type CMsgSteamDatagramLinkInstantaneousStats = Message<"CMsgSteamDatagramLinkInstantaneousStats"> & {
  /**
   * @generated from field: optional uint32 out_packets_per_sec_x10 = 1;
   */
  outPacketsPerSecX10: number;

  /**
   * @generated from field: optional uint32 out_bytes_per_sec = 2;
   */
  outBytesPerSec: number;

  /**
   * @generated from field: optional uint32 in_packets_per_sec_x10 = 3;
   */
  inPacketsPerSecX10: number;

  /**
   * @generated from field: optional uint32 in_bytes_per_sec = 4;
   */
  inBytesPerSec: number;

  /**
   * @generated from field: optional uint32 ping_ms = 5;
   */
  pingMs: number;

  /**
   * @generated from field: optional uint32 packets_dropped_pct = 6;
   */
  packetsDroppedPct: number;

  /**
   * @generated from field: optional uint32 packets_weird_sequence_pct = 7;
   */
  packetsWeirdSequencePct: number;

  /**
   * @generated from field: optional uint32 peak_jitter_usec = 8;
   */
  peakJitterUsec: number;
};

/**
 * Describes the message CMsgSteamDatagramLinkInstantaneousStats.
 * Use `create(CMsgSteamDatagramLinkInstantaneousStatsSchema)` to create a new message.
 */
export const CMsgSteamDatagramLinkInstantaneousStatsSchema: GenMessage<CMsgSteamDatagramLinkInstantaneousStats> = /*@__PURE__*/
  messageDesc(file_steamnetworkingsockets_messages, 3);

/**
 * @generated from message CMsgSteamDatagramLinkLifetimeStats
 */
export type CMsgSteamDatagramLinkLifetimeStats = Message<"CMsgSteamDatagramLinkLifetimeStats"> & {
  /**
   * @generated from field: optional uint32 connected_seconds = 2;
   */
  connectedSeconds: number;

  /**
   * @generated from field: optional uint64 packets_sent = 3;
   */
  packetsSent: bigint;

  /**
   * @generated from field: optional uint64 kb_sent = 4;
   */
  kbSent: bigint;

  /**
   * @generated from field: optional uint64 packets_recv = 5;
   */
  packetsRecv: bigint;

  /**
   * @generated from field: optional uint64 kb_recv = 6;
   */
  kbRecv: bigint;

  /**
   * @generated from field: optional uint64 packets_recv_sequenced = 7;
   */
  packetsRecvSequenced: bigint;

  /**
   * @generated from field: optional uint64 packets_recv_dropped = 8;
   */
  packetsRecvDropped: bigint;

  /**
   * @generated from field: optional uint64 packets_recv_out_of_order = 9;
   */
  packetsRecvOutOfOrder: bigint;

  /**
   * @generated from field: optional uint64 packets_recv_out_of_order_corrected = 15;
   */
  packetsRecvOutOfOrderCorrected: bigint;

  /**
   * @generated from field: optional uint64 packets_recv_duplicate = 10;
   */
  packetsRecvDuplicate: bigint;

  /**
   * @generated from field: optional uint64 packets_recv_lurch = 11;
   */
  packetsRecvLurch: bigint;

  /**
   * @generated from field: repeated uint64 multipath_packets_recv_sequenced = 12;
   */
  multipathPacketsRecvSequenced: bigint[];

  /**
   * @generated from field: repeated uint64 multipath_packets_recv_later = 13;
   */
  multipathPacketsRecvLater: bigint[];

  /**
   * @generated from field: optional uint32 multipath_send_enabled = 14;
   */
  multipathSendEnabled: number;

  /**
   * @generated from field: optional uint32 quality_histogram_100 = 21;
   */
  qualityHistogram100: number;

  /**
   * @generated from field: optional uint32 quality_histogram_99 = 22;
   */
  qualityHistogram99: number;

  /**
   * @generated from field: optional uint32 quality_histogram_97 = 23;
   */
  qualityHistogram97: number;

  /**
   * @generated from field: optional uint32 quality_histogram_95 = 24;
   */
  qualityHistogram95: number;

  /**
   * @generated from field: optional uint32 quality_histogram_90 = 25;
   */
  qualityHistogram90: number;

  /**
   * @generated from field: optional uint32 quality_histogram_75 = 26;
   */
  qualityHistogram75: number;

  /**
   * @generated from field: optional uint32 quality_histogram_50 = 27;
   */
  qualityHistogram50: number;

  /**
   * @generated from field: optional uint32 quality_histogram_1 = 28;
   */
  qualityHistogram1: number;

  /**
   * @generated from field: optional uint32 quality_histogram_dead = 29;
   */
  qualityHistogramDead: number;

  /**
   * @generated from field: optional uint32 quality_ntile_2nd = 30;
   */
  qualityNtile2nd: number;

  /**
   * @generated from field: optional uint32 quality_ntile_5th = 31;
   */
  qualityNtile5th: number;

  /**
   * @generated from field: optional uint32 quality_ntile_25th = 32;
   */
  qualityNtile25th: number;

  /**
   * @generated from field: optional uint32 quality_ntile_50th = 33;
   */
  qualityNtile50th: number;

  /**
   * @generated from field: optional uint32 ping_histogram_25 = 41;
   */
  pingHistogram25: number;

  /**
   * @generated from field: optional uint32 ping_histogram_50 = 42;
   */
  pingHistogram50: number;

  /**
   * @generated from field: optional uint32 ping_histogram_75 = 43;
   */
  pingHistogram75: number;

  /**
   * @generated from field: optional uint32 ping_histogram_100 = 44;
   */
  pingHistogram100: number;

  /**
   * @generated from field: optional uint32 ping_histogram_125 = 45;
   */
  pingHistogram125: number;

  /**
   * @generated from field: optional uint32 ping_histogram_150 = 46;
   */
  pingHistogram150: number;

  /**
   * @generated from field: optional uint32 ping_histogram_200 = 47;
   */
  pingHistogram200: number;

  /**
   * @generated from field: optional uint32 ping_histogram_300 = 48;
   */
  pingHistogram300: number;

  /**
   * @generated from field: optional uint32 ping_histogram_max = 49;
   */
  pingHistogramMax: number;

  /**
   * @generated from field: optional uint32 ping_ntile_5th = 50;
   */
  pingNtile5th: number;

  /**
   * @generated from field: optional uint32 ping_ntile_50th = 51;
   */
  pingNtile50th: number;

  /**
   * @generated from field: optional uint32 ping_ntile_75th = 52;
   */
  pingNtile75th: number;

  /**
   * @generated from field: optional uint32 ping_ntile_95th = 53;
   */
  pingNtile95th: number;

  /**
   * @generated from field: optional uint32 ping_ntile_98th = 54;
   */
  pingNtile98th: number;

  /**
   * @generated from field: optional uint32 jitter_histogram_negligible = 61;
   */
  jitterHistogramNegligible: number;

  /**
   * @generated from field: optional uint32 jitter_histogram_1 = 62;
   */
  jitterHistogram1: number;

  /**
   * @generated from field: optional uint32 jitter_histogram_2 = 63;
   */
  jitterHistogram2: number;

  /**
   * @generated from field: optional uint32 jitter_histogram_5 = 64;
   */
  jitterHistogram5: number;

  /**
   * @generated from field: optional uint32 jitter_histogram_10 = 65;
   */
  jitterHistogram10: number;

  /**
   * @generated from field: optional uint32 jitter_histogram_20 = 66;
   */
  jitterHistogram20: number;
};

/**
 * Describes the message CMsgSteamDatagramLinkLifetimeStats.
 * Use `create(CMsgSteamDatagramLinkLifetimeStatsSchema)` to create a new message.
 */
export const CMsgSteamDatagramLinkLifetimeStatsSchema: GenMessage<CMsgSteamDatagramLinkLifetimeStats> = /*@__PURE__*/
  messageDesc(file_steamnetworkingsockets_messages, 4);

/**
 * @generated from message CMsgSteamDatagramConnectionQuality
 */
export type CMsgSteamDatagramConnectionQuality = Message<"CMsgSteamDatagramConnectionQuality"> & {
  /**
   * @generated from field: optional CMsgSteamDatagramLinkInstantaneousStats instantaneous = 1;
   */
  instantaneous?: CMsgSteamDatagramLinkInstantaneousStats;

  /**
   * @generated from field: optional CMsgSteamDatagramLinkLifetimeStats lifetime = 2;
   */
  lifetime?: CMsgSteamDatagramLinkLifetimeStats;
};

/**
 * Describes the message CMsgSteamDatagramConnectionQuality.
 * Use `create(CMsgSteamDatagramConnectionQualitySchema)` to create a new message.
 */
export const CMsgSteamDatagramConnectionQualitySchema: GenMessage<CMsgSteamDatagramConnectionQuality> = /*@__PURE__*/
  messageDesc(file_steamnetworkingsockets_messages, 5);

/**
 * @generated from message CMsgICECandidate
 */
export type CMsgICECandidate = Message<"CMsgICECandidate"> & {
  /**
   * @generated from field: optional string candidate = 3;
   */
  candidate: string;
};

/**
 * Describes the message CMsgICECandidate.
 * Use `create(CMsgICECandidateSchema)` to create a new message.
 */
export const CMsgICECandidateSchema: GenMessage<CMsgICECandidate> = /*@__PURE__*/
  messageDesc(file_steamnetworkingsockets_messages, 6);

/**
 * @generated from message CMsgICERendezvous
 */
export type CMsgICERendezvous = Message<"CMsgICERendezvous"> & {
  /**
   * @generated from field: optional CMsgICERendezvous.Auth auth = 2;
   */
  auth?: CMsgICERendezvous_Auth;

  /**
   * @generated from field: optional CMsgICECandidate add_candidate = 1;
   */
  addCandidate?: CMsgICECandidate;
};

/**
 * Describes the message CMsgICERendezvous.
 * Use `create(CMsgICERendezvousSchema)` to create a new message.
 */
export const CMsgICERendezvousSchema: GenMessage<CMsgICERendezvous> = /*@__PURE__*/
  messageDesc(file_steamnetworkingsockets_messages, 7);

/**
 * @generated from message CMsgICERendezvous.Auth
 */
export type CMsgICERendezvous_Auth = Message<"CMsgICERendezvous.Auth"> & {
  /**
   * @generated from field: optional string pwd_frag = 1;
   */
  pwdFrag: string;
};

/**
 * Describes the message CMsgICERendezvous.Auth.
 * Use `create(CMsgICERendezvous_AuthSchema)` to create a new message.
 */
export const CMsgICERendezvous_AuthSchema: GenMessage<CMsgICERendezvous_Auth> = /*@__PURE__*/
  messageDesc(file_steamnetworkingsockets_messages, 7, 0);

/**
 * @generated from message CMsgSteamNetworkingP2PRendezvous
 */
export type CMsgSteamNetworkingP2PRendezvous = Message<"CMsgSteamNetworkingP2PRendezvous"> & {
  /**
   * @generated from field: optional string from_identity = 8;
   */
  fromIdentity: string;

  /**
   * @generated from field: optional fixed32 from_connection_id = 9;
   */
  fromConnectionId: number;

  /**
   * @generated from field: optional string to_identity = 10;
   */
  toIdentity: string;

  /**
   * @generated from field: optional fixed32 to_connection_id = 1;
   */
  toConnectionId: number;

  /**
   * @generated from field: optional bytes sdr_routes = 2;
   */
  sdrRoutes: Uint8Array;

  /**
   * @generated from field: optional uint32 ack_peer_routes_revision = 3;
   */
  ackPeerRoutesRevision: number;

  /**
   * @generated from field: optional bool ice_enabled = 7;
   */
  iceEnabled: boolean;

  /**
   * @generated from field: optional bytes hosted_server_ticket = 14;
   */
  hostedServerTicket: Uint8Array;

  /**
   * @generated from field: optional CMsgSteamNetworkingP2PRendezvous.ConnectRequest connect_request = 4;
   */
  connectRequest?: CMsgSteamNetworkingP2PRendezvous_ConnectRequest;

  /**
   * @generated from field: optional CMsgSteamNetworkingP2PRendezvous.ConnectOK connect_ok = 5;
   */
  connectOk?: CMsgSteamNetworkingP2PRendezvous_ConnectOK;

  /**
   * @generated from field: optional CMsgSteamNetworkingP2PRendezvous.ConnectionClosed connection_closed = 6;
   */
  connectionClosed?: CMsgSteamNetworkingP2PRendezvous_ConnectionClosed;

  /**
   * @generated from field: optional uint32 ack_reliable_msg = 11;
   */
  ackReliableMsg: number;

  /**
   * @generated from field: optional uint32 first_reliable_msg = 12;
   */
  firstReliableMsg: number;

  /**
   * @generated from field: repeated CMsgSteamNetworkingP2PRendezvous.ReliableMessage reliable_messages = 13;
   */
  reliableMessages: CMsgSteamNetworkingP2PRendezvous_ReliableMessage[];

  /**
   * @generated from field: repeated CMsgSteamNetworkingP2PRendezvous.ApplicationMessage application_messages = 15;
   */
  applicationMessages: CMsgSteamNetworkingP2PRendezvous_ApplicationMessage[];
};

/**
 * Describes the message CMsgSteamNetworkingP2PRendezvous.
 * Use `create(CMsgSteamNetworkingP2PRendezvousSchema)` to create a new message.
 */
export const CMsgSteamNetworkingP2PRendezvousSchema: GenMessage<CMsgSteamNetworkingP2PRendezvous> = /*@__PURE__*/
  messageDesc(file_steamnetworkingsockets_messages, 8);

/**
 * @generated from message CMsgSteamNetworkingP2PRendezvous.ConnectRequest
 */
export type CMsgSteamNetworkingP2PRendezvous_ConnectRequest = Message<"CMsgSteamNetworkingP2PRendezvous.ConnectRequest"> & {
  /**
   * @generated from field: optional CMsgSteamDatagramSessionCryptInfoSigned crypt = 6;
   */
  crypt?: CMsgSteamDatagramSessionCryptInfoSigned;

  /**
   * @generated from field: optional CMsgSteamDatagramCertificateSigned cert = 7;
   */
  cert?: CMsgSteamDatagramCertificateSigned;

  /**
   * @generated from field: optional uint32 to_virtual_port = 9;
   */
  toVirtualPort: number;

  /**
   * @generated from field: optional uint32 from_virtual_port = 10;
   */
  fromVirtualPort: number;

  /**
   * @generated from field: optional string from_fakeip = 11;
   */
  fromFakeip: string;
};

/**
 * Describes the message CMsgSteamNetworkingP2PRendezvous.ConnectRequest.
 * Use `create(CMsgSteamNetworkingP2PRendezvous_ConnectRequestSchema)` to create a new message.
 */
export const CMsgSteamNetworkingP2PRendezvous_ConnectRequestSchema: GenMessage<CMsgSteamNetworkingP2PRendezvous_ConnectRequest> = /*@__PURE__*/
  messageDesc(file_steamnetworkingsockets_messages, 8, 0);

/**
 * @generated from message CMsgSteamNetworkingP2PRendezvous.ConnectOK
 */
export type CMsgSteamNetworkingP2PRendezvous_ConnectOK = Message<"CMsgSteamNetworkingP2PRendezvous.ConnectOK"> & {
  /**
   * @generated from field: optional CMsgSteamDatagramSessionCryptInfoSigned crypt = 5;
   */
  crypt?: CMsgSteamDatagramSessionCryptInfoSigned;

  /**
   * @generated from field: optional CMsgSteamDatagramCertificateSigned cert = 6;
   */
  cert?: CMsgSteamDatagramCertificateSigned;
};

/**
 * Describes the message CMsgSteamNetworkingP2PRendezvous.ConnectOK.
 * Use `create(CMsgSteamNetworkingP2PRendezvous_ConnectOKSchema)` to create a new message.
 */
export const CMsgSteamNetworkingP2PRendezvous_ConnectOKSchema: GenMessage<CMsgSteamNetworkingP2PRendezvous_ConnectOK> = /*@__PURE__*/
  messageDesc(file_steamnetworkingsockets_messages, 8, 1);

/**
 * @generated from message CMsgSteamNetworkingP2PRendezvous.ConnectionClosed
 */
export type CMsgSteamNetworkingP2PRendezvous_ConnectionClosed = Message<"CMsgSteamNetworkingP2PRendezvous.ConnectionClosed"> & {
  /**
   * @generated from field: optional string debug = 5;
   */
  debug: string;

  /**
   * @generated from field: optional uint32 reason_code = 6;
   */
  reasonCode: number;
};

/**
 * Describes the message CMsgSteamNetworkingP2PRendezvous.ConnectionClosed.
 * Use `create(CMsgSteamNetworkingP2PRendezvous_ConnectionClosedSchema)` to create a new message.
 */
export const CMsgSteamNetworkingP2PRendezvous_ConnectionClosedSchema: GenMessage<CMsgSteamNetworkingP2PRendezvous_ConnectionClosed> = /*@__PURE__*/
  messageDesc(file_steamnetworkingsockets_messages, 8, 2);

/**
 * @generated from message CMsgSteamNetworkingP2PRendezvous.ReliableMessage
 */
export type CMsgSteamNetworkingP2PRendezvous_ReliableMessage = Message<"CMsgSteamNetworkingP2PRendezvous.ReliableMessage"> & {
  /**
   * @generated from field: optional CMsgICERendezvous ice = 1;
   */
  ice?: CMsgICERendezvous;
};

/**
 * Describes the message CMsgSteamNetworkingP2PRendezvous.ReliableMessage.
 * Use `create(CMsgSteamNetworkingP2PRendezvous_ReliableMessageSchema)` to create a new message.
 */
export const CMsgSteamNetworkingP2PRendezvous_ReliableMessageSchema: GenMessage<CMsgSteamNetworkingP2PRendezvous_ReliableMessage> = /*@__PURE__*/
  messageDesc(file_steamnetworkingsockets_messages, 8, 3);

/**
 * @generated from message CMsgSteamNetworkingP2PRendezvous.ApplicationMessage
 */
export type CMsgSteamNetworkingP2PRendezvous_ApplicationMessage = Message<"CMsgSteamNetworkingP2PRendezvous.ApplicationMessage"> & {
  /**
   * @generated from field: optional bytes data = 1;
   */
  data: Uint8Array;

  /**
   * @generated from field: optional uint64 msg_num = 2;
   */
  msgNum: bigint;

  /**
   * @generated from field: optional uint32 flags = 3;
   */
  flags: number;

  /**
   * @generated from field: optional uint32 lane_idx = 4;
   */
  laneIdx: number;
};

/**
 * Describes the message CMsgSteamNetworkingP2PRendezvous.ApplicationMessage.
 * Use `create(CMsgSteamNetworkingP2PRendezvous_ApplicationMessageSchema)` to create a new message.
 */
export const CMsgSteamNetworkingP2PRendezvous_ApplicationMessageSchema: GenMessage<CMsgSteamNetworkingP2PRendezvous_ApplicationMessage> = /*@__PURE__*/
  messageDesc(file_steamnetworkingsockets_messages, 8, 4);

/**
 * @generated from message CMsgSteamNetworkingICESessionSummary
 */
export type CMsgSteamNetworkingICESessionSummary = Message<"CMsgSteamNetworkingICESessionSummary"> & {
  /**
   * @generated from field: optional uint32 failure_reason_code = 7;
   */
  failureReasonCode: number;

  /**
   * @generated from field: optional uint32 local_candidate_types = 1;
   */
  localCandidateTypes: number;

  /**
   * @generated from field: optional uint32 remote_candidate_types = 2;
   */
  remoteCandidateTypes: number;

  /**
   * @generated from field: optional uint32 initial_route_kind = 3;
   */
  initialRouteKind: number;

  /**
   * @generated from field: optional uint32 initial_ping = 4;
   */
  initialPing: number;

  /**
   * @generated from field: optional uint32 initial_score = 6;
   */
  initialScore: number;

  /**
   * @generated from field: optional uint32 negotiation_ms = 5;
   */
  negotiationMs: number;

  /**
   * @generated from field: optional uint32 best_route_kind = 16;
   */
  bestRouteKind: number;

  /**
   * @generated from field: optional uint32 best_ping = 17;
   */
  bestPing: number;

  /**
   * @generated from field: optional uint32 best_score = 18;
   */
  bestScore: number;

  /**
   * @generated from field: optional uint32 best_time = 19;
   */
  bestTime: number;

  /**
   * @generated from field: optional uint32 selected_seconds = 12;
   */
  selectedSeconds: number;

  /**
   * @generated from field: optional uint32 user_settings = 13;
   */
  userSettings: number;

  /**
   * @generated from field: optional uint32 ice_enable_var = 14;
   */
  iceEnableVar: number;

  /**
   * @generated from field: optional uint32 local_candidate_types_allowed = 15;
   */
  localCandidateTypesAllowed: number;
};

/**
 * Describes the message CMsgSteamNetworkingICESessionSummary.
 * Use `create(CMsgSteamNetworkingICESessionSummarySchema)` to create a new message.
 */
export const CMsgSteamNetworkingICESessionSummarySchema: GenMessage<CMsgSteamNetworkingICESessionSummary> = /*@__PURE__*/
  messageDesc(file_steamnetworkingsockets_messages, 9);

/**
 * @generated from enum ESteamNetworkingSocketsCipher
 */
export enum ESteamNetworkingSocketsCipher {
  /**
   * @generated from enum value: k_ESteamNetworkingSocketsCipher_INVALID = 0;
   */
  k_ESteamNetworkingSocketsCipher_INVALID = 0,

  /**
   * @generated from enum value: k_ESteamNetworkingSocketsCipher_NULL = 1;
   */
  k_ESteamNetworkingSocketsCipher_NULL = 1,

  /**
   * @generated from enum value: k_ESteamNetworkingSocketsCipher_AES_256_GCM = 2;
   */
  k_ESteamNetworkingSocketsCipher_AES_256_GCM = 2,
}

/**
 * Describes the enum ESteamNetworkingSocketsCipher.
 */
export const ESteamNetworkingSocketsCipherSchema: GenEnum<ESteamNetworkingSocketsCipher> = /*@__PURE__*/
  enumDesc(file_steamnetworkingsockets_messages, 0);

