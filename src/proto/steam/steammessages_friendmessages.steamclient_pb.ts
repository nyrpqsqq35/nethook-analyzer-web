// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_friendmessages.steamclient.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_steammessages_base } from "./steammessages_base_pb";
import type { NoResponseSchema } from "./steammessages_unified_base.steamclient_pb";
import { file_steammessages_unified_base_steamclient } from "./steammessages_unified_base.steamclient_pb";
import type { EContentReportReason, EContentReportResolution } from "./enums_pb";
import { file_enums } from "./enums_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_friendmessages.steamclient.proto.
 */
export const file_steammessages_friendmessages_steamclient: GenFile = /*@__PURE__*/
  fileDesc("Ci5zdGVhbW1lc3NhZ2VzX2ZyaWVuZG1lc3NhZ2VzLnN0ZWFtY2xpZW50LnByb3RvIvMBCilDRnJpZW5kTWVzc2FnZXNfR2V0UmVjZW50TWVzc2FnZXNfUmVxdWVzdBIQCghzdGVhbWlkMRgBIAEoBhIQCghzdGVhbWlkMhgCIAEoBhINCgVjb3VudBgDIAEoDRIgChhtb3N0X3JlY2VudF9jb252ZXJzYXRpb24YBCABKAgSGgoScnRpbWUzMl9zdGFydF90aW1lGAUgASgHEhUKDWJiY29kZV9mb3JtYXQYBiABKAgSFQoNc3RhcnRfb3JkaW5hbBgHIAEoDRIRCgl0aW1lX2xhc3QYCCABKA0SFAoMb3JkaW5hbF9sYXN0GAkgASgNIs8DCipDRnJpZW5kTWVzc2FnZXNfR2V0UmVjZW50TWVzc2FnZXNfUmVzcG9uc2USSwoIbWVzc2FnZXMYASADKAsyOS5DRnJpZW5kTWVzc2FnZXNfR2V0UmVjZW50TWVzc2FnZXNfUmVzcG9uc2UuRnJpZW5kTWVzc2FnZRIWCg5tb3JlX2F2YWlsYWJsZRgEIAEoCBq7AgoNRnJpZW5kTWVzc2FnZRIRCglhY2NvdW50aWQYASABKA0SEQoJdGltZXN0YW1wGAIgASgNEg8KB21lc3NhZ2UYAyABKAkSDwoHb3JkaW5hbBgEIAEoDRJcCglyZWFjdGlvbnMYBSADKAsySS5DRnJpZW5kTWVzc2FnZXNfR2V0UmVjZW50TWVzc2FnZXNfUmVzcG9uc2UuRnJpZW5kTWVzc2FnZS5NZXNzYWdlUmVhY3Rpb24agwEKD01lc3NhZ2VSZWFjdGlvbhJMCg1yZWFjdGlvbl90eXBlGAEgASgOMhUuRU1lc3NhZ2VSZWFjdGlvblR5cGU6HmtfRU1lc3NhZ2VSZWFjdGlvblR5cGVfSW52YWxpZBIQCghyZWFjdGlvbhgCIAEoCRIQCghyZWFjdG9ycxgDIAMoDSJzCjFDRnJpZW5kc01lc3NhZ2VzX0dldEFjdGl2ZU1lc3NhZ2VTZXNzaW9uc19SZXF1ZXN0EhkKEWxhc3RtZXNzYWdlX3NpbmNlGAEgASgNEiMKG29ubHlfc2Vzc2lvbnNfd2l0aF9tZXNzYWdlcxgCIAEoCCKkAgoyQ0ZyaWVuZHNNZXNzYWdlc19HZXRBY3RpdmVNZXNzYWdlU2Vzc2lvbnNfUmVzcG9uc2USYgoQbWVzc2FnZV9zZXNzaW9ucxgBIAMoCzJILkNGcmllbmRzTWVzc2FnZXNfR2V0QWN0aXZlTWVzc2FnZVNlc3Npb25zX1Jlc3BvbnNlLkZyaWVuZE1lc3NhZ2VTZXNzaW9uEhEKCXRpbWVzdGFtcBgCIAEoDRp3ChRGcmllbmRNZXNzYWdlU2Vzc2lvbhIYChBhY2NvdW50aWRfZnJpZW5kGAEgASgNEhQKDGxhc3RfbWVzc2FnZRgCIAEoDRIRCglsYXN0X3ZpZXcYAyABKA0SHAoUdW5yZWFkX21lc3NhZ2VfY291bnQYBCABKA0iwgEKI0NGcmllbmRNZXNzYWdlc19TZW5kTWVzc2FnZV9SZXF1ZXN0Eg8KB3N0ZWFtaWQYASABKAYSFwoPY2hhdF9lbnRyeV90eXBlGAIgASgFEg8KB21lc3NhZ2UYAyABKAkSFwoPY29udGFpbnNfYmJjb2RlGAQgASgIEhYKDmVjaG9fdG9fc2VuZGVyGAUgASgIEhQKDGxvd19wcmlvcml0eRgGIAEoCBIZChFjbGllbnRfbWVzc2FnZV9pZBgIIAEoCSKMAQokQ0ZyaWVuZE1lc3NhZ2VzX1NlbmRNZXNzYWdlX1Jlc3BvbnNlEhgKEG1vZGlmaWVkX21lc3NhZ2UYASABKAkSGAoQc2VydmVyX3RpbWVzdGFtcBgCIAEoDRIPCgdvcmRpbmFsGAMgASgNEh8KF21lc3NhZ2Vfd2l0aG91dF9iYl9jb2RlGAQgASgJIlUKJ0NGcmllbmRNZXNzYWdlc19BY2tNZXNzYWdlX05vdGlmaWNhdGlvbhIXCg9zdGVhbWlkX3BhcnRuZXIYASABKAYSEQoJdGltZXN0YW1wGAIgASgNIjwKKUNGcmllbmRNZXNzYWdlc19Jc0luRnJpZW5kc1VJQmV0YV9SZXF1ZXN0Eg8KB3N0ZWFtaWQYASABKAYiZQoqQ0ZyaWVuZE1lc3NhZ2VzX0lzSW5GcmllbmRzVUlCZXRhX1Jlc3BvbnNlEhsKE29ubGluZV9pbl9mcmllbmRzdWkYASABKAgSGgoSaGFzX3VzZWRfZnJpZW5kc3VpGAIgASgIItsBCi1DRnJpZW5kTWVzc2FnZXNfVXBkYXRlTWVzc2FnZVJlYWN0aW9uX1JlcXVlc3QSDwoHc3RlYW1pZBgBIAEoBhIYChBzZXJ2ZXJfdGltZXN0YW1wGAIgASgNEg8KB29yZGluYWwYAyABKA0STAoNcmVhY3Rpb25fdHlwZRgEIAEoDjIVLkVNZXNzYWdlUmVhY3Rpb25UeXBlOh5rX0VNZXNzYWdlUmVhY3Rpb25UeXBlX0ludmFsaWQSEAoIcmVhY3Rpb24YBSABKAkSDgoGaXNfYWRkGAYgASgIIkIKLkNGcmllbmRNZXNzYWdlc19VcGRhdGVNZXNzYWdlUmVhY3Rpb25fUmVzcG9uc2USEAoIcmVhY3RvcnMYASADKA0i6gEKJUNGcmllbmRNZXNzYWdlc19SZXBvcnRNZXNzYWdlX1JlcXVlc3QSFAoMc3RlYW1pZF9mcm9tGAEgASgGEhIKCnN0ZWFtaWRfdG8YAiABKAYSEQoJdGltZXN0YW1wGAMgASgNEg8KB29yZGluYWwYBCABKA0STAoNcmVwb3J0X3JlYXNvbhgFIAEoDjIVLkVDb250ZW50UmVwb3J0UmVhc29uOh5rX0VDb250ZW50UmVwb3J0UmVhc29uX0ludmFsaWQSEwoLcmVwb3J0X3RleHQYBiABKAkSEAoIbGFuZ3VhZ2UYByABKAkiKAomQ0ZyaWVuZE1lc3NhZ2VzX1JlcG9ydE1lc3NhZ2VfUmVzcG9uc2UinAIKJUNGcmllbmRNZXNzYWdlc19SZXNvbHZlUmVwb3J0X1JlcXVlc3QSFAoMc3RlYW1pZF9mcm9tGAEgASgGEhIKCnN0ZWFtaWRfdG8YAiABKAYSGAoQc3ViamVjdF9ncm91cF9pZBgDIAEoBBISCgpzdWJqZWN0X2lkGAQgASgEElQKCnJlc29sdXRpb24YBSABKA4yGS5FQ29udGVudFJlcG9ydFJlc29sdXRpb246JWtfRUNvbnRlbnRSZXBvcnRSZXNvbHV0aW9uX1VucmVzb2x2ZWQSRQoGcmVhc29uGAYgASgOMhUuRUNvbnRlbnRSZXBvcnRSZWFzb246HmtfRUNvbnRlbnRSZXBvcnRSZWFzb25fSW52YWxpZCIoCiZDRnJpZW5kTWVzc2FnZXNfUmVzb2x2ZVJlcG9ydF9SZXNwb25zZSKGAgosQ0ZyaWVuZE1lc3NhZ2VzX0luY29taW5nTWVzc2FnZV9Ob3RpZmljYXRpb24SFgoOc3RlYW1pZF9mcmllbmQYASABKAYSFwoPY2hhdF9lbnRyeV90eXBlGAIgASgFEhwKFGZyb21fbGltaXRlZF9hY2NvdW50GAMgASgIEg8KB21lc3NhZ2UYBCABKAkSIAoYcnRpbWUzMl9zZXJ2ZXJfdGltZXN0YW1wGAUgASgHEg8KB29yZGluYWwYBiABKA0SEgoKbG9jYWxfZWNobxgHIAEoCBIZChFtZXNzYWdlX25vX2JiY29kZRgIIAEoCRIUCgxsb3dfcHJpb3JpdHkYCSABKAgi8gEKLENGcmllbmRNZXNzYWdlc19NZXNzYWdlUmVhY3Rpb25fTm90aWZpY2F0aW9uEhYKDnN0ZWFtaWRfZnJpZW5kGAEgASgGEhgKEHNlcnZlcl90aW1lc3RhbXAYAiABKA0SDwoHb3JkaW5hbBgDIAEoDRIPCgdyZWFjdG9yGAQgASgGEkwKDXJlYWN0aW9uX3R5cGUYBSABKA4yFS5FTWVzc2FnZVJlYWN0aW9uVHlwZToea19FTWVzc2FnZVJlYWN0aW9uVHlwZV9JbnZhbGlkEhAKCHJlYWN0aW9uGAYgASgJEg4KBmlzX2FkZBgHIAEoCCqDAQoURU1lc3NhZ2VSZWFjdGlvblR5cGUSIgoea19FTWVzc2FnZVJlYWN0aW9uVHlwZV9JbnZhbGlkEAASIwofa19FTWVzc2FnZVJlYWN0aW9uVHlwZV9FbW90aWNvbhABEiIKHmtfRU1lc3NhZ2VSZWFjdGlvblR5cGVfU3RpY2tlchACMtEGCg5GcmllbmRNZXNzYWdlcxJsChFHZXRSZWNlbnRNZXNzYWdlcxIqLkNGcmllbmRNZXNzYWdlc19HZXRSZWNlbnRNZXNzYWdlc19SZXF1ZXN0GisuQ0ZyaWVuZE1lc3NhZ2VzX0dldFJlY2VudE1lc3NhZ2VzX1Jlc3BvbnNlEoMBChhHZXRBY3RpdmVNZXNzYWdlU2Vzc2lvbnMSMi5DRnJpZW5kc01lc3NhZ2VzX0dldEFjdGl2ZU1lc3NhZ2VTZXNzaW9uc19SZXF1ZXN0GjMuQ0ZyaWVuZHNNZXNzYWdlc19HZXRBY3RpdmVNZXNzYWdlU2Vzc2lvbnNfUmVzcG9uc2USWgoLU2VuZE1lc3NhZ2USJC5DRnJpZW5kTWVzc2FnZXNfU2VuZE1lc3NhZ2VfUmVxdWVzdBolLkNGcmllbmRNZXNzYWdlc19TZW5kTWVzc2FnZV9SZXNwb25zZRJDCgpBY2tNZXNzYWdlEiguQ0ZyaWVuZE1lc3NhZ2VzX0Fja01lc3NhZ2VfTm90aWZpY2F0aW9uGgsuTm9SZXNwb25zZRJsChFJc0luRnJpZW5kc1VJQmV0YRIqLkNGcmllbmRNZXNzYWdlc19Jc0luRnJpZW5kc1VJQmV0YV9SZXF1ZXN0GisuQ0ZyaWVuZE1lc3NhZ2VzX0lzSW5GcmllbmRzVUlCZXRhX1Jlc3BvbnNlEngKFVVwZGF0ZU1lc3NhZ2VSZWFjdGlvbhIuLkNGcmllbmRNZXNzYWdlc19VcGRhdGVNZXNzYWdlUmVhY3Rpb25fUmVxdWVzdBovLkNGcmllbmRNZXNzYWdlc19VcGRhdGVNZXNzYWdlUmVhY3Rpb25fUmVzcG9uc2USYAoNUmVwb3J0TWVzc2FnZRImLkNGcmllbmRNZXNzYWdlc19SZXBvcnRNZXNzYWdlX1JlcXVlc3QaJy5DRnJpZW5kTWVzc2FnZXNfUmVwb3J0TWVzc2FnZV9SZXNwb25zZRJgCg1SZXNvbHZlUmVwb3J0EiYuQ0ZyaWVuZE1lc3NhZ2VzX1Jlc29sdmVSZXBvcnRfUmVxdWVzdBonLkNGcmllbmRNZXNzYWdlc19SZXNvbHZlUmVwb3J0X1Jlc3BvbnNlMokCChRGcmllbmRNZXNzYWdlc0NsaWVudBJNCg9JbmNvbWluZ01lc3NhZ2USLS5DRnJpZW5kTWVzc2FnZXNfSW5jb21pbmdNZXNzYWdlX05vdGlmaWNhdGlvbhoLLk5vUmVzcG9uc2USTQoUTm90aWZ5QWNrTWVzc2FnZUVjaG8SKC5DRnJpZW5kTWVzc2FnZXNfQWNrTWVzc2FnZV9Ob3RpZmljYXRpb24aCy5Ob1Jlc3BvbnNlEk0KD01lc3NhZ2VSZWFjdGlvbhItLkNGcmllbmRNZXNzYWdlc19NZXNzYWdlUmVhY3Rpb25fTm90aWZpY2F0aW9uGgsuTm9SZXNwb25zZRoEwLUYAkIDgAEB", [file_steammessages_base, file_steammessages_unified_base_steamclient, file_enums]);

/**
 * @generated from message CFriendMessages_GetRecentMessages_Request
 */
export type CFriendMessages_GetRecentMessages_Request = Message<"CFriendMessages_GetRecentMessages_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid1 = 1;
   */
  steamid1: bigint;

  /**
   * @generated from field: optional fixed64 steamid2 = 2;
   */
  steamid2: bigint;

  /**
   * @generated from field: optional uint32 count = 3;
   */
  count: number;

  /**
   * @generated from field: optional bool most_recent_conversation = 4;
   */
  mostRecentConversation: boolean;

  /**
   * @generated from field: optional fixed32 rtime32_start_time = 5;
   */
  rtime32StartTime: number;

  /**
   * @generated from field: optional bool bbcode_format = 6;
   */
  bbcodeFormat: boolean;

  /**
   * @generated from field: optional uint32 start_ordinal = 7;
   */
  startOrdinal: number;

  /**
   * @generated from field: optional uint32 time_last = 8;
   */
  timeLast: number;

  /**
   * @generated from field: optional uint32 ordinal_last = 9;
   */
  ordinalLast: number;
};

/**
 * Describes the message CFriendMessages_GetRecentMessages_Request.
 * Use `create(CFriendMessages_GetRecentMessages_RequestSchema)` to create a new message.
 */
export const CFriendMessages_GetRecentMessages_RequestSchema: GenMessage<CFriendMessages_GetRecentMessages_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_friendmessages_steamclient, 0);

/**
 * @generated from message CFriendMessages_GetRecentMessages_Response
 */
export type CFriendMessages_GetRecentMessages_Response = Message<"CFriendMessages_GetRecentMessages_Response"> & {
  /**
   * @generated from field: repeated CFriendMessages_GetRecentMessages_Response.FriendMessage messages = 1;
   */
  messages: CFriendMessages_GetRecentMessages_Response_FriendMessage[];

  /**
   * @generated from field: optional bool more_available = 4;
   */
  moreAvailable: boolean;
};

/**
 * Describes the message CFriendMessages_GetRecentMessages_Response.
 * Use `create(CFriendMessages_GetRecentMessages_ResponseSchema)` to create a new message.
 */
export const CFriendMessages_GetRecentMessages_ResponseSchema: GenMessage<CFriendMessages_GetRecentMessages_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_friendmessages_steamclient, 1);

/**
 * @generated from message CFriendMessages_GetRecentMessages_Response.FriendMessage
 */
export type CFriendMessages_GetRecentMessages_Response_FriendMessage = Message<"CFriendMessages_GetRecentMessages_Response.FriendMessage"> & {
  /**
   * @generated from field: optional uint32 accountid = 1;
   */
  accountid: number;

  /**
   * @generated from field: optional uint32 timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: optional string message = 3;
   */
  message: string;

  /**
   * @generated from field: optional uint32 ordinal = 4;
   */
  ordinal: number;

  /**
   * @generated from field: repeated CFriendMessages_GetRecentMessages_Response.FriendMessage.MessageReaction reactions = 5;
   */
  reactions: CFriendMessages_GetRecentMessages_Response_FriendMessage_MessageReaction[];
};

/**
 * Describes the message CFriendMessages_GetRecentMessages_Response.FriendMessage.
 * Use `create(CFriendMessages_GetRecentMessages_Response_FriendMessageSchema)` to create a new message.
 */
export const CFriendMessages_GetRecentMessages_Response_FriendMessageSchema: GenMessage<CFriendMessages_GetRecentMessages_Response_FriendMessage> = /*@__PURE__*/
  messageDesc(file_steammessages_friendmessages_steamclient, 1, 0);

/**
 * @generated from message CFriendMessages_GetRecentMessages_Response.FriendMessage.MessageReaction
 */
export type CFriendMessages_GetRecentMessages_Response_FriendMessage_MessageReaction = Message<"CFriendMessages_GetRecentMessages_Response.FriendMessage.MessageReaction"> & {
  /**
   * @generated from field: optional EMessageReactionType reaction_type = 1 [default = k_EMessageReactionType_Invalid];
   */
  reactionType: EMessageReactionType;

  /**
   * @generated from field: optional string reaction = 2;
   */
  reaction: string;

  /**
   * @generated from field: repeated uint32 reactors = 3;
   */
  reactors: number[];
};

/**
 * Describes the message CFriendMessages_GetRecentMessages_Response.FriendMessage.MessageReaction.
 * Use `create(CFriendMessages_GetRecentMessages_Response_FriendMessage_MessageReactionSchema)` to create a new message.
 */
export const CFriendMessages_GetRecentMessages_Response_FriendMessage_MessageReactionSchema: GenMessage<CFriendMessages_GetRecentMessages_Response_FriendMessage_MessageReaction> = /*@__PURE__*/
  messageDesc(file_steammessages_friendmessages_steamclient, 1, 0, 0);

/**
 * @generated from message CFriendsMessages_GetActiveMessageSessions_Request
 */
export type CFriendsMessages_GetActiveMessageSessions_Request = Message<"CFriendsMessages_GetActiveMessageSessions_Request"> & {
  /**
   * @generated from field: optional uint32 lastmessage_since = 1;
   */
  lastmessageSince: number;

  /**
   * @generated from field: optional bool only_sessions_with_messages = 2;
   */
  onlySessionsWithMessages: boolean;
};

/**
 * Describes the message CFriendsMessages_GetActiveMessageSessions_Request.
 * Use `create(CFriendsMessages_GetActiveMessageSessions_RequestSchema)` to create a new message.
 */
export const CFriendsMessages_GetActiveMessageSessions_RequestSchema: GenMessage<CFriendsMessages_GetActiveMessageSessions_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_friendmessages_steamclient, 2);

/**
 * @generated from message CFriendsMessages_GetActiveMessageSessions_Response
 */
export type CFriendsMessages_GetActiveMessageSessions_Response = Message<"CFriendsMessages_GetActiveMessageSessions_Response"> & {
  /**
   * @generated from field: repeated CFriendsMessages_GetActiveMessageSessions_Response.FriendMessageSession message_sessions = 1;
   */
  messageSessions: CFriendsMessages_GetActiveMessageSessions_Response_FriendMessageSession[];

  /**
   * @generated from field: optional uint32 timestamp = 2;
   */
  timestamp: number;
};

/**
 * Describes the message CFriendsMessages_GetActiveMessageSessions_Response.
 * Use `create(CFriendsMessages_GetActiveMessageSessions_ResponseSchema)` to create a new message.
 */
export const CFriendsMessages_GetActiveMessageSessions_ResponseSchema: GenMessage<CFriendsMessages_GetActiveMessageSessions_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_friendmessages_steamclient, 3);

/**
 * @generated from message CFriendsMessages_GetActiveMessageSessions_Response.FriendMessageSession
 */
export type CFriendsMessages_GetActiveMessageSessions_Response_FriendMessageSession = Message<"CFriendsMessages_GetActiveMessageSessions_Response.FriendMessageSession"> & {
  /**
   * @generated from field: optional uint32 accountid_friend = 1;
   */
  accountidFriend: number;

  /**
   * @generated from field: optional uint32 last_message = 2;
   */
  lastMessage: number;

  /**
   * @generated from field: optional uint32 last_view = 3;
   */
  lastView: number;

  /**
   * @generated from field: optional uint32 unread_message_count = 4;
   */
  unreadMessageCount: number;
};

/**
 * Describes the message CFriendsMessages_GetActiveMessageSessions_Response.FriendMessageSession.
 * Use `create(CFriendsMessages_GetActiveMessageSessions_Response_FriendMessageSessionSchema)` to create a new message.
 */
export const CFriendsMessages_GetActiveMessageSessions_Response_FriendMessageSessionSchema: GenMessage<CFriendsMessages_GetActiveMessageSessions_Response_FriendMessageSession> = /*@__PURE__*/
  messageDesc(file_steammessages_friendmessages_steamclient, 3, 0);

/**
 * @generated from message CFriendMessages_SendMessage_Request
 */
export type CFriendMessages_SendMessage_Request = Message<"CFriendMessages_SendMessage_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional int32 chat_entry_type = 2;
   */
  chatEntryType: number;

  /**
   * @generated from field: optional string message = 3;
   */
  message: string;

  /**
   * @generated from field: optional bool contains_bbcode = 4;
   */
  containsBbcode: boolean;

  /**
   * @generated from field: optional bool echo_to_sender = 5;
   */
  echoToSender: boolean;

  /**
   * @generated from field: optional bool low_priority = 6;
   */
  lowPriority: boolean;

  /**
   * @generated from field: optional string client_message_id = 8;
   */
  clientMessageId: string;
};

/**
 * Describes the message CFriendMessages_SendMessage_Request.
 * Use `create(CFriendMessages_SendMessage_RequestSchema)` to create a new message.
 */
export const CFriendMessages_SendMessage_RequestSchema: GenMessage<CFriendMessages_SendMessage_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_friendmessages_steamclient, 4);

/**
 * @generated from message CFriendMessages_SendMessage_Response
 */
export type CFriendMessages_SendMessage_Response = Message<"CFriendMessages_SendMessage_Response"> & {
  /**
   * @generated from field: optional string modified_message = 1;
   */
  modifiedMessage: string;

  /**
   * @generated from field: optional uint32 server_timestamp = 2;
   */
  serverTimestamp: number;

  /**
   * @generated from field: optional uint32 ordinal = 3;
   */
  ordinal: number;

  /**
   * @generated from field: optional string message_without_bb_code = 4;
   */
  messageWithoutBbCode: string;
};

/**
 * Describes the message CFriendMessages_SendMessage_Response.
 * Use `create(CFriendMessages_SendMessage_ResponseSchema)` to create a new message.
 */
export const CFriendMessages_SendMessage_ResponseSchema: GenMessage<CFriendMessages_SendMessage_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_friendmessages_steamclient, 5);

/**
 * @generated from message CFriendMessages_AckMessage_Notification
 */
export type CFriendMessages_AckMessage_Notification = Message<"CFriendMessages_AckMessage_Notification"> & {
  /**
   * @generated from field: optional fixed64 steamid_partner = 1;
   */
  steamidPartner: bigint;

  /**
   * @generated from field: optional uint32 timestamp = 2;
   */
  timestamp: number;
};

/**
 * Describes the message CFriendMessages_AckMessage_Notification.
 * Use `create(CFriendMessages_AckMessage_NotificationSchema)` to create a new message.
 */
export const CFriendMessages_AckMessage_NotificationSchema: GenMessage<CFriendMessages_AckMessage_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_friendmessages_steamclient, 6);

/**
 * @generated from message CFriendMessages_IsInFriendsUIBeta_Request
 */
export type CFriendMessages_IsInFriendsUIBeta_Request = Message<"CFriendMessages_IsInFriendsUIBeta_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;
};

/**
 * Describes the message CFriendMessages_IsInFriendsUIBeta_Request.
 * Use `create(CFriendMessages_IsInFriendsUIBeta_RequestSchema)` to create a new message.
 */
export const CFriendMessages_IsInFriendsUIBeta_RequestSchema: GenMessage<CFriendMessages_IsInFriendsUIBeta_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_friendmessages_steamclient, 7);

/**
 * @generated from message CFriendMessages_IsInFriendsUIBeta_Response
 */
export type CFriendMessages_IsInFriendsUIBeta_Response = Message<"CFriendMessages_IsInFriendsUIBeta_Response"> & {
  /**
   * @generated from field: optional bool online_in_friendsui = 1;
   */
  onlineInFriendsui: boolean;

  /**
   * @generated from field: optional bool has_used_friendsui = 2;
   */
  hasUsedFriendsui: boolean;
};

/**
 * Describes the message CFriendMessages_IsInFriendsUIBeta_Response.
 * Use `create(CFriendMessages_IsInFriendsUIBeta_ResponseSchema)` to create a new message.
 */
export const CFriendMessages_IsInFriendsUIBeta_ResponseSchema: GenMessage<CFriendMessages_IsInFriendsUIBeta_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_friendmessages_steamclient, 8);

/**
 * @generated from message CFriendMessages_UpdateMessageReaction_Request
 */
export type CFriendMessages_UpdateMessageReaction_Request = Message<"CFriendMessages_UpdateMessageReaction_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional uint32 server_timestamp = 2;
   */
  serverTimestamp: number;

  /**
   * @generated from field: optional uint32 ordinal = 3;
   */
  ordinal: number;

  /**
   * @generated from field: optional EMessageReactionType reaction_type = 4 [default = k_EMessageReactionType_Invalid];
   */
  reactionType: EMessageReactionType;

  /**
   * @generated from field: optional string reaction = 5;
   */
  reaction: string;

  /**
   * @generated from field: optional bool is_add = 6;
   */
  isAdd: boolean;
};

/**
 * Describes the message CFriendMessages_UpdateMessageReaction_Request.
 * Use `create(CFriendMessages_UpdateMessageReaction_RequestSchema)` to create a new message.
 */
export const CFriendMessages_UpdateMessageReaction_RequestSchema: GenMessage<CFriendMessages_UpdateMessageReaction_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_friendmessages_steamclient, 9);

/**
 * @generated from message CFriendMessages_UpdateMessageReaction_Response
 */
export type CFriendMessages_UpdateMessageReaction_Response = Message<"CFriendMessages_UpdateMessageReaction_Response"> & {
  /**
   * @generated from field: repeated uint32 reactors = 1;
   */
  reactors: number[];
};

/**
 * Describes the message CFriendMessages_UpdateMessageReaction_Response.
 * Use `create(CFriendMessages_UpdateMessageReaction_ResponseSchema)` to create a new message.
 */
export const CFriendMessages_UpdateMessageReaction_ResponseSchema: GenMessage<CFriendMessages_UpdateMessageReaction_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_friendmessages_steamclient, 10);

/**
 * @generated from message CFriendMessages_ReportMessage_Request
 */
export type CFriendMessages_ReportMessage_Request = Message<"CFriendMessages_ReportMessage_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid_from = 1;
   */
  steamidFrom: bigint;

  /**
   * @generated from field: optional fixed64 steamid_to = 2;
   */
  steamidTo: bigint;

  /**
   * @generated from field: optional uint32 timestamp = 3;
   */
  timestamp: number;

  /**
   * @generated from field: optional uint32 ordinal = 4;
   */
  ordinal: number;

  /**
   * @generated from field: optional EContentReportReason report_reason = 5 [default = k_EContentReportReason_Invalid];
   */
  reportReason: EContentReportReason;

  /**
   * @generated from field: optional string report_text = 6;
   */
  reportText: string;

  /**
   * @generated from field: optional string language = 7;
   */
  language: string;
};

/**
 * Describes the message CFriendMessages_ReportMessage_Request.
 * Use `create(CFriendMessages_ReportMessage_RequestSchema)` to create a new message.
 */
export const CFriendMessages_ReportMessage_RequestSchema: GenMessage<CFriendMessages_ReportMessage_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_friendmessages_steamclient, 11);

/**
 * @generated from message CFriendMessages_ReportMessage_Response
 */
export type CFriendMessages_ReportMessage_Response = Message<"CFriendMessages_ReportMessage_Response"> & {
};

/**
 * Describes the message CFriendMessages_ReportMessage_Response.
 * Use `create(CFriendMessages_ReportMessage_ResponseSchema)` to create a new message.
 */
export const CFriendMessages_ReportMessage_ResponseSchema: GenMessage<CFriendMessages_ReportMessage_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_friendmessages_steamclient, 12);

/**
 * @generated from message CFriendMessages_ResolveReport_Request
 */
export type CFriendMessages_ResolveReport_Request = Message<"CFriendMessages_ResolveReport_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid_from = 1;
   */
  steamidFrom: bigint;

  /**
   * @generated from field: optional fixed64 steamid_to = 2;
   */
  steamidTo: bigint;

  /**
   * @generated from field: optional uint64 subject_group_id = 3;
   */
  subjectGroupId: bigint;

  /**
   * @generated from field: optional uint64 subject_id = 4;
   */
  subjectId: bigint;

  /**
   * @generated from field: optional EContentReportResolution resolution = 5 [default = k_EContentReportResolution_Unresolved];
   */
  resolution: EContentReportResolution;

  /**
   * @generated from field: optional EContentReportReason reason = 6 [default = k_EContentReportReason_Invalid];
   */
  reason: EContentReportReason;
};

/**
 * Describes the message CFriendMessages_ResolveReport_Request.
 * Use `create(CFriendMessages_ResolveReport_RequestSchema)` to create a new message.
 */
export const CFriendMessages_ResolveReport_RequestSchema: GenMessage<CFriendMessages_ResolveReport_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_friendmessages_steamclient, 13);

/**
 * @generated from message CFriendMessages_ResolveReport_Response
 */
export type CFriendMessages_ResolveReport_Response = Message<"CFriendMessages_ResolveReport_Response"> & {
};

/**
 * Describes the message CFriendMessages_ResolveReport_Response.
 * Use `create(CFriendMessages_ResolveReport_ResponseSchema)` to create a new message.
 */
export const CFriendMessages_ResolveReport_ResponseSchema: GenMessage<CFriendMessages_ResolveReport_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_friendmessages_steamclient, 14);

/**
 * @generated from message CFriendMessages_IncomingMessage_Notification
 */
export type CFriendMessages_IncomingMessage_Notification = Message<"CFriendMessages_IncomingMessage_Notification"> & {
  /**
   * @generated from field: optional fixed64 steamid_friend = 1;
   */
  steamidFriend: bigint;

  /**
   * @generated from field: optional int32 chat_entry_type = 2;
   */
  chatEntryType: number;

  /**
   * @generated from field: optional bool from_limited_account = 3;
   */
  fromLimitedAccount: boolean;

  /**
   * @generated from field: optional string message = 4;
   */
  message: string;

  /**
   * @generated from field: optional fixed32 rtime32_server_timestamp = 5;
   */
  rtime32ServerTimestamp: number;

  /**
   * @generated from field: optional uint32 ordinal = 6;
   */
  ordinal: number;

  /**
   * @generated from field: optional bool local_echo = 7;
   */
  localEcho: boolean;

  /**
   * @generated from field: optional string message_no_bbcode = 8;
   */
  messageNoBbcode: string;

  /**
   * @generated from field: optional bool low_priority = 9;
   */
  lowPriority: boolean;
};

/**
 * Describes the message CFriendMessages_IncomingMessage_Notification.
 * Use `create(CFriendMessages_IncomingMessage_NotificationSchema)` to create a new message.
 */
export const CFriendMessages_IncomingMessage_NotificationSchema: GenMessage<CFriendMessages_IncomingMessage_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_friendmessages_steamclient, 15);

/**
 * @generated from message CFriendMessages_MessageReaction_Notification
 */
export type CFriendMessages_MessageReaction_Notification = Message<"CFriendMessages_MessageReaction_Notification"> & {
  /**
   * @generated from field: optional fixed64 steamid_friend = 1;
   */
  steamidFriend: bigint;

  /**
   * @generated from field: optional uint32 server_timestamp = 2;
   */
  serverTimestamp: number;

  /**
   * @generated from field: optional uint32 ordinal = 3;
   */
  ordinal: number;

  /**
   * @generated from field: optional fixed64 reactor = 4;
   */
  reactor: bigint;

  /**
   * @generated from field: optional EMessageReactionType reaction_type = 5 [default = k_EMessageReactionType_Invalid];
   */
  reactionType: EMessageReactionType;

  /**
   * @generated from field: optional string reaction = 6;
   */
  reaction: string;

  /**
   * @generated from field: optional bool is_add = 7;
   */
  isAdd: boolean;
};

/**
 * Describes the message CFriendMessages_MessageReaction_Notification.
 * Use `create(CFriendMessages_MessageReaction_NotificationSchema)` to create a new message.
 */
export const CFriendMessages_MessageReaction_NotificationSchema: GenMessage<CFriendMessages_MessageReaction_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_friendmessages_steamclient, 16);

/**
 * @generated from enum EMessageReactionType
 */
export enum EMessageReactionType {
  /**
   * @generated from enum value: k_EMessageReactionType_Invalid = 0;
   */
  k_EMessageReactionType_Invalid = 0,

  /**
   * @generated from enum value: k_EMessageReactionType_Emoticon = 1;
   */
  k_EMessageReactionType_Emoticon = 1,

  /**
   * @generated from enum value: k_EMessageReactionType_Sticker = 2;
   */
  k_EMessageReactionType_Sticker = 2,
}

/**
 * Describes the enum EMessageReactionType.
 */
export const EMessageReactionTypeSchema: GenEnum<EMessageReactionType> = /*@__PURE__*/
  enumDesc(file_steammessages_friendmessages_steamclient, 0);

/**
 * @generated from service FriendMessages
 */
export const FriendMessages: GenService<{
  /**
   * @generated from rpc FriendMessages.GetRecentMessages
   */
  getRecentMessages: {
    methodKind: "unary";
    input: typeof CFriendMessages_GetRecentMessages_RequestSchema;
    output: typeof CFriendMessages_GetRecentMessages_ResponseSchema;
  },
  /**
   * @generated from rpc FriendMessages.GetActiveMessageSessions
   */
  getActiveMessageSessions: {
    methodKind: "unary";
    input: typeof CFriendsMessages_GetActiveMessageSessions_RequestSchema;
    output: typeof CFriendsMessages_GetActiveMessageSessions_ResponseSchema;
  },
  /**
   * @generated from rpc FriendMessages.SendMessage
   */
  sendMessage: {
    methodKind: "unary";
    input: typeof CFriendMessages_SendMessage_RequestSchema;
    output: typeof CFriendMessages_SendMessage_ResponseSchema;
  },
  /**
   * @generated from rpc FriendMessages.AckMessage
   */
  ackMessage: {
    methodKind: "unary";
    input: typeof CFriendMessages_AckMessage_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc FriendMessages.IsInFriendsUIBeta
   */
  isInFriendsUIBeta: {
    methodKind: "unary";
    input: typeof CFriendMessages_IsInFriendsUIBeta_RequestSchema;
    output: typeof CFriendMessages_IsInFriendsUIBeta_ResponseSchema;
  },
  /**
   * @generated from rpc FriendMessages.UpdateMessageReaction
   */
  updateMessageReaction: {
    methodKind: "unary";
    input: typeof CFriendMessages_UpdateMessageReaction_RequestSchema;
    output: typeof CFriendMessages_UpdateMessageReaction_ResponseSchema;
  },
  /**
   * @generated from rpc FriendMessages.ReportMessage
   */
  reportMessage: {
    methodKind: "unary";
    input: typeof CFriendMessages_ReportMessage_RequestSchema;
    output: typeof CFriendMessages_ReportMessage_ResponseSchema;
  },
  /**
   * @generated from rpc FriendMessages.ResolveReport
   */
  resolveReport: {
    methodKind: "unary";
    input: typeof CFriendMessages_ResolveReport_RequestSchema;
    output: typeof CFriendMessages_ResolveReport_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_friendmessages_steamclient, 0);

/**
 * @generated from service FriendMessagesClient
 */
export const FriendMessagesClient: GenService<{
  /**
   * @generated from rpc FriendMessagesClient.IncomingMessage
   */
  incomingMessage: {
    methodKind: "unary";
    input: typeof CFriendMessages_IncomingMessage_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc FriendMessagesClient.NotifyAckMessageEcho
   */
  notifyAckMessageEcho: {
    methodKind: "unary";
    input: typeof CFriendMessages_AckMessage_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc FriendMessagesClient.MessageReaction
   */
  messageReaction: {
    methodKind: "unary";
    input: typeof CFriendMessages_MessageReaction_NotificationSchema;
    output: typeof NoResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_friendmessages_steamclient, 1);

