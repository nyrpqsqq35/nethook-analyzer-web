// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_datapublisher.steamclient.proto (syntax proto2)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_steammessages_base } from "./steammessages_base_pb";
import type { NoResponseSchema } from "./steammessages_unified_base.steamclient_pb";
import { file_steammessages_unified_base_steamclient } from "./steammessages_unified_base.steamclient_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_datapublisher.steamclient.proto.
 */
export const file_steammessages_datapublisher_steamclient: GenFile = /*@__PURE__*/
  fileDesc("Ci1zdGVhbW1lc3NhZ2VzX2RhdGFwdWJsaXNoZXIuc3RlYW1jbGllbnQucHJvdG8iiAIKOUNEYXRhUHVibGlzaGVyX0NsaWVudENvbnRlbnRDb3JydXB0aW9uUmVwb3J0X05vdGlmaWNhdGlvbhINCgVhcHBpZBgBIAEoDRIPCgdkZXBvdGlkGAIgASgNEhcKD2Rvd25sb2FkX3NvdXJjZRgDIAEoCRIQCghvYmplY3RpZBgEIAEoCRIOCgZjZWxsaWQYBSABKA0SEwoLaXNfbWFuaWZlc3QYBiABKAgSEwoLb2JqZWN0X3NpemUYByABKAQSFwoPY29ycnVwdGlvbl90eXBlGAggASgNEhIKCnVzZWRfaHR0cHMYCSABKAgSGQoRb2NfcHJveHlfZGV0ZWN0ZWQYCiABKAgi+AQKLkNEYXRhUHVibGlzaGVyX0NsaWVudFVwZGF0ZUFwcEpvYl9Ob3RpZmljYXRpb24SDgoGYXBwX2lkGAEgASgNEhEKCWRlcG90X2lkcxgCIAMoDRIRCglhcHBfc3RhdGUYAyABKA0SFQoNam9iX2FwcF9lcnJvchgEIAEoDRIVCg1lcnJvcl9kZXRhaWxzGAUgASgJEhQKDGpvYl9kdXJhdGlvbhgGIAEoDRIfChdmaWxlc192YWxpZGF0aW9uX2ZhaWxlZBgHIAEoDRIcChRqb2JfYnl0ZXNfZG93bmxvYWRlZBgIIAEoBBIYChBqb2JfYnl0ZXNfc3RhZ2VkGAkgASgEEhYKDmJ5dGVzX2NvbWl0dGVkGAogASgEEhcKD3N0YXJ0X2FwcF9zdGF0ZRgLIAEoDRIYChBzdGF0c19tYWNoaW5lX2lkGAwgASgGEhMKC2JyYW5jaF9uYW1lGA0gASgJEh4KFnRvdGFsX2J5dGVzX2Rvd25sb2FkZWQYDiABKAQSGgoSdG90YWxfYnl0ZXNfc3RhZ2VkGA8gASgEEhwKFHRvdGFsX2J5dGVzX3Jlc3RvcmVkGBAgASgEEhMKC2lzX2JvcnJvd2VkGBEgASgIEhcKD2lzX2ZyZWVfd2Vla2VuZBgSIAEoCBIbChN0b3RhbF9ieXRlc19wYXRjaGVkGBQgASgEEhkKEXRvdGFsX2J5dGVzX3NhdmVkGBUgASgEEg8KB2NlbGxfaWQYFiABKA0SEwoLaXNfd29ya3Nob3AYFyABKAgSEQoJaXNfc2hhZGVyGBggASgIEhoKEnNlY29uZHNfbm90X3BsYXllZBgZIAEoDSI9CiZDRGF0YVB1Ymxpc2hlcl9HZXRWUkRldmljZUluZm9fUmVxdWVzdBITCgttb250aF9jb3VudBgBIAEoDSLdAQonQ0RhdGFQdWJsaXNoZXJfR2V0VlJEZXZpY2VJbmZvX1Jlc3BvbnNlEj8KBmRldmljZRgBIAMoCzIvLkNEYXRhUHVibGlzaGVyX0dldFZSRGV2aWNlSW5mb19SZXNwb25zZS5EZXZpY2UacQoGRGV2aWNlEgwKBG5hbWUYASABKAkSCwoDcmVmGAIgASgNEhcKD2FnZ3JlZ2F0aW9uX3JlZhgDIAEoDRINCgV0b3RhbBgEIAEoDRIOCgZkcml2ZXIYBSABKAkSFAoMZGV2aWNlX2NsYXNzGAYgASgFImIKOkNEYXRhUHVibGlzaGVyX1NldFZSRGV2aWNlSW5mb0FnZ3JlZ2F0aW9uUmVmZXJlbmNlX1JlcXVlc3QSCwoDcmVmGAEgASgNEhcKD2FnZ3JlZ2F0aW9uX3JlZhgCIAEoDSJNCjtDRGF0YVB1Ymxpc2hlcl9TZXRWUkRldmljZUluZm9BZ2dyZWdhdGlvblJlZmVyZW5jZV9SZXNwb25zZRIOCgZyZXN1bHQYASABKA0ijAEKJkNEYXRhUHVibGlzaGVyX0FkZFZSRGV2aWNlSW5mb19SZXF1ZXN0EhQKDG1hbnVmYWN0dXJlchgBIAEoCRINCgVtb2RlbBgCIAEoCRIOCgZkcml2ZXIYAyABKAkSFwoPY29udHJvbGxlcl90eXBlGAQgASgJEhQKDGRldmljZV9jbGFzcxgFIAEoBSJGCidDRGF0YVB1Ymxpc2hlcl9BZGRWUkRldmljZUluZm9fUmVzcG9uc2USDgoGcmVzdWx0GAEgASgNEgsKA3JlZhgCIAEoDSJjCihDVmFsdmVIV1N1cnZleV9HZXRTdXJ2ZXlTY2hlZHVsZV9SZXF1ZXN0EhcKD3N1cnZleWRhdGV0b2tlbhgBIAEoCRIeChZzdXJ2ZXlkYXRldG9rZW52ZXJzaW9uGAIgASgGImQKKUNWYWx2ZUhXU3VydmV5X0dldFN1cnZleVNjaGVkdWxlX1Jlc3BvbnNlEhcKD3N1cnZleWRhdGV0b2tlbhgBIAEoDRIeChZzdXJ2ZXlkYXRldG9rZW52ZXJzaW9uGAIgASgGMsIECg1EYXRhUHVibGlzaGVyEmgKHUNsaWVudENvbnRlbnRDb3JydXB0aW9uUmVwb3J0EjouQ0RhdGFQdWJsaXNoZXJfQ2xpZW50Q29udGVudENvcnJ1cHRpb25SZXBvcnRfTm90aWZpY2F0aW9uGgsuTm9SZXNwb25zZRJYChhDbGllbnRVcGRhdGVBcHBKb2JSZXBvcnQSLy5DRGF0YVB1Ymxpc2hlcl9DbGllbnRVcGRhdGVBcHBKb2JfTm90aWZpY2F0aW9uGgsuTm9SZXNwb25zZRJkCg9HZXRWUkRldmljZUluZm8SJy5DRGF0YVB1Ymxpc2hlcl9HZXRWUkRldmljZUluZm9fUmVxdWVzdBooLkNEYXRhUHVibGlzaGVyX0dldFZSRGV2aWNlSW5mb19SZXNwb25zZRKgAQojU2V0VlJEZXZpY2VJbmZvQWdncmVnYXRpb25SZWZlcmVuY2USOy5DRGF0YVB1Ymxpc2hlcl9TZXRWUkRldmljZUluZm9BZ2dyZWdhdGlvblJlZmVyZW5jZV9SZXF1ZXN0GjwuQ0RhdGFQdWJsaXNoZXJfU2V0VlJEZXZpY2VJbmZvQWdncmVnYXRpb25SZWZlcmVuY2VfUmVzcG9uc2USZAoPQWRkVlJEZXZpY2VJbmZvEicuQ0RhdGFQdWJsaXNoZXJfQWRkVlJEZXZpY2VJbmZvX1JlcXVlc3QaKC5DRGF0YVB1Ymxpc2hlcl9BZGRWUkRldmljZUluZm9fUmVzcG9uc2UyewoNVmFsdmVIV1N1cnZleRJqChFHZXRTdXJ2ZXlTY2hlZHVsZRIpLkNWYWx2ZUhXU3VydmV5X0dldFN1cnZleVNjaGVkdWxlX1JlcXVlc3QaKi5DVmFsdmVIV1N1cnZleV9HZXRTdXJ2ZXlTY2hlZHVsZV9SZXNwb25zZUIDgAEB", [file_steammessages_base, file_steammessages_unified_base_steamclient]);

/**
 * @generated from message CDataPublisher_ClientContentCorruptionReport_Notification
 */
export type CDataPublisher_ClientContentCorruptionReport_Notification = Message<"CDataPublisher_ClientContentCorruptionReport_Notification"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 depotid = 2;
   */
  depotid: number;

  /**
   * @generated from field: optional string download_source = 3;
   */
  downloadSource: string;

  /**
   * @generated from field: optional string objectid = 4;
   */
  objectid: string;

  /**
   * @generated from field: optional uint32 cellid = 5;
   */
  cellid: number;

  /**
   * @generated from field: optional bool is_manifest = 6;
   */
  isManifest: boolean;

  /**
   * @generated from field: optional uint64 object_size = 7;
   */
  objectSize: bigint;

  /**
   * @generated from field: optional uint32 corruption_type = 8;
   */
  corruptionType: number;

  /**
   * @generated from field: optional bool used_https = 9;
   */
  usedHttps: boolean;

  /**
   * @generated from field: optional bool oc_proxy_detected = 10;
   */
  ocProxyDetected: boolean;
};

/**
 * Describes the message CDataPublisher_ClientContentCorruptionReport_Notification.
 * Use `create(CDataPublisher_ClientContentCorruptionReport_NotificationSchema)` to create a new message.
 */
export const CDataPublisher_ClientContentCorruptionReport_NotificationSchema: GenMessage<CDataPublisher_ClientContentCorruptionReport_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_datapublisher_steamclient, 0);

/**
 * @generated from message CDataPublisher_ClientUpdateAppJob_Notification
 */
export type CDataPublisher_ClientUpdateAppJob_Notification = Message<"CDataPublisher_ClientUpdateAppJob_Notification"> & {
  /**
   * @generated from field: optional uint32 app_id = 1;
   */
  appId: number;

  /**
   * @generated from field: repeated uint32 depot_ids = 2;
   */
  depotIds: number[];

  /**
   * @generated from field: optional uint32 app_state = 3;
   */
  appState: number;

  /**
   * @generated from field: optional uint32 job_app_error = 4;
   */
  jobAppError: number;

  /**
   * @generated from field: optional string error_details = 5;
   */
  errorDetails: string;

  /**
   * @generated from field: optional uint32 job_duration = 6;
   */
  jobDuration: number;

  /**
   * @generated from field: optional uint32 files_validation_failed = 7;
   */
  filesValidationFailed: number;

  /**
   * @generated from field: optional uint64 job_bytes_downloaded = 8;
   */
  jobBytesDownloaded: bigint;

  /**
   * @generated from field: optional uint64 job_bytes_staged = 9;
   */
  jobBytesStaged: bigint;

  /**
   * @generated from field: optional uint64 bytes_comitted = 10;
   */
  bytesComitted: bigint;

  /**
   * @generated from field: optional uint32 start_app_state = 11;
   */
  startAppState: number;

  /**
   * @generated from field: optional fixed64 stats_machine_id = 12;
   */
  statsMachineId: bigint;

  /**
   * @generated from field: optional string branch_name = 13;
   */
  branchName: string;

  /**
   * @generated from field: optional uint64 total_bytes_downloaded = 14;
   */
  totalBytesDownloaded: bigint;

  /**
   * @generated from field: optional uint64 total_bytes_staged = 15;
   */
  totalBytesStaged: bigint;

  /**
   * @generated from field: optional uint64 total_bytes_restored = 16;
   */
  totalBytesRestored: bigint;

  /**
   * @generated from field: optional bool is_borrowed = 17;
   */
  isBorrowed: boolean;

  /**
   * @generated from field: optional bool is_free_weekend = 18;
   */
  isFreeWeekend: boolean;

  /**
   * @generated from field: optional uint64 total_bytes_patched = 20;
   */
  totalBytesPatched: bigint;

  /**
   * @generated from field: optional uint64 total_bytes_saved = 21;
   */
  totalBytesSaved: bigint;

  /**
   * @generated from field: optional uint32 cell_id = 22;
   */
  cellId: number;

  /**
   * @generated from field: optional bool is_workshop = 23;
   */
  isWorkshop: boolean;

  /**
   * @generated from field: optional bool is_shader = 24;
   */
  isShader: boolean;

  /**
   * @generated from field: optional uint32 seconds_not_played = 25;
   */
  secondsNotPlayed: number;
};

/**
 * Describes the message CDataPublisher_ClientUpdateAppJob_Notification.
 * Use `create(CDataPublisher_ClientUpdateAppJob_NotificationSchema)` to create a new message.
 */
export const CDataPublisher_ClientUpdateAppJob_NotificationSchema: GenMessage<CDataPublisher_ClientUpdateAppJob_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_datapublisher_steamclient, 1);

/**
 * @generated from message CDataPublisher_GetVRDeviceInfo_Request
 */
export type CDataPublisher_GetVRDeviceInfo_Request = Message<"CDataPublisher_GetVRDeviceInfo_Request"> & {
  /**
   * @generated from field: optional uint32 month_count = 1;
   */
  monthCount: number;
};

/**
 * Describes the message CDataPublisher_GetVRDeviceInfo_Request.
 * Use `create(CDataPublisher_GetVRDeviceInfo_RequestSchema)` to create a new message.
 */
export const CDataPublisher_GetVRDeviceInfo_RequestSchema: GenMessage<CDataPublisher_GetVRDeviceInfo_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_datapublisher_steamclient, 2);

/**
 * @generated from message CDataPublisher_GetVRDeviceInfo_Response
 */
export type CDataPublisher_GetVRDeviceInfo_Response = Message<"CDataPublisher_GetVRDeviceInfo_Response"> & {
  /**
   * @generated from field: repeated CDataPublisher_GetVRDeviceInfo_Response.Device device = 1;
   */
  device: CDataPublisher_GetVRDeviceInfo_Response_Device[];
};

/**
 * Describes the message CDataPublisher_GetVRDeviceInfo_Response.
 * Use `create(CDataPublisher_GetVRDeviceInfo_ResponseSchema)` to create a new message.
 */
export const CDataPublisher_GetVRDeviceInfo_ResponseSchema: GenMessage<CDataPublisher_GetVRDeviceInfo_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_datapublisher_steamclient, 3);

/**
 * @generated from message CDataPublisher_GetVRDeviceInfo_Response.Device
 */
export type CDataPublisher_GetVRDeviceInfo_Response_Device = Message<"CDataPublisher_GetVRDeviceInfo_Response.Device"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional uint32 ref = 2;
   */
  ref: number;

  /**
   * @generated from field: optional uint32 aggregation_ref = 3;
   */
  aggregationRef: number;

  /**
   * @generated from field: optional uint32 total = 4;
   */
  total: number;

  /**
   * @generated from field: optional string driver = 5;
   */
  driver: string;

  /**
   * @generated from field: optional int32 device_class = 6;
   */
  deviceClass: number;
};

/**
 * Describes the message CDataPublisher_GetVRDeviceInfo_Response.Device.
 * Use `create(CDataPublisher_GetVRDeviceInfo_Response_DeviceSchema)` to create a new message.
 */
export const CDataPublisher_GetVRDeviceInfo_Response_DeviceSchema: GenMessage<CDataPublisher_GetVRDeviceInfo_Response_Device> = /*@__PURE__*/
  messageDesc(file_steammessages_datapublisher_steamclient, 3, 0);

/**
 * @generated from message CDataPublisher_SetVRDeviceInfoAggregationReference_Request
 */
export type CDataPublisher_SetVRDeviceInfoAggregationReference_Request = Message<"CDataPublisher_SetVRDeviceInfoAggregationReference_Request"> & {
  /**
   * @generated from field: optional uint32 ref = 1;
   */
  ref: number;

  /**
   * @generated from field: optional uint32 aggregation_ref = 2;
   */
  aggregationRef: number;
};

/**
 * Describes the message CDataPublisher_SetVRDeviceInfoAggregationReference_Request.
 * Use `create(CDataPublisher_SetVRDeviceInfoAggregationReference_RequestSchema)` to create a new message.
 */
export const CDataPublisher_SetVRDeviceInfoAggregationReference_RequestSchema: GenMessage<CDataPublisher_SetVRDeviceInfoAggregationReference_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_datapublisher_steamclient, 4);

/**
 * @generated from message CDataPublisher_SetVRDeviceInfoAggregationReference_Response
 */
export type CDataPublisher_SetVRDeviceInfoAggregationReference_Response = Message<"CDataPublisher_SetVRDeviceInfoAggregationReference_Response"> & {
  /**
   * @generated from field: optional uint32 result = 1;
   */
  result: number;
};

/**
 * Describes the message CDataPublisher_SetVRDeviceInfoAggregationReference_Response.
 * Use `create(CDataPublisher_SetVRDeviceInfoAggregationReference_ResponseSchema)` to create a new message.
 */
export const CDataPublisher_SetVRDeviceInfoAggregationReference_ResponseSchema: GenMessage<CDataPublisher_SetVRDeviceInfoAggregationReference_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_datapublisher_steamclient, 5);

/**
 * @generated from message CDataPublisher_AddVRDeviceInfo_Request
 */
export type CDataPublisher_AddVRDeviceInfo_Request = Message<"CDataPublisher_AddVRDeviceInfo_Request"> & {
  /**
   * @generated from field: optional string manufacturer = 1;
   */
  manufacturer: string;

  /**
   * @generated from field: optional string model = 2;
   */
  model: string;

  /**
   * @generated from field: optional string driver = 3;
   */
  driver: string;

  /**
   * @generated from field: optional string controller_type = 4;
   */
  controllerType: string;

  /**
   * @generated from field: optional int32 device_class = 5;
   */
  deviceClass: number;
};

/**
 * Describes the message CDataPublisher_AddVRDeviceInfo_Request.
 * Use `create(CDataPublisher_AddVRDeviceInfo_RequestSchema)` to create a new message.
 */
export const CDataPublisher_AddVRDeviceInfo_RequestSchema: GenMessage<CDataPublisher_AddVRDeviceInfo_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_datapublisher_steamclient, 6);

/**
 * @generated from message CDataPublisher_AddVRDeviceInfo_Response
 */
export type CDataPublisher_AddVRDeviceInfo_Response = Message<"CDataPublisher_AddVRDeviceInfo_Response"> & {
  /**
   * @generated from field: optional uint32 result = 1;
   */
  result: number;

  /**
   * @generated from field: optional uint32 ref = 2;
   */
  ref: number;
};

/**
 * Describes the message CDataPublisher_AddVRDeviceInfo_Response.
 * Use `create(CDataPublisher_AddVRDeviceInfo_ResponseSchema)` to create a new message.
 */
export const CDataPublisher_AddVRDeviceInfo_ResponseSchema: GenMessage<CDataPublisher_AddVRDeviceInfo_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_datapublisher_steamclient, 7);

/**
 * @generated from message CValveHWSurvey_GetSurveySchedule_Request
 */
export type CValveHWSurvey_GetSurveySchedule_Request = Message<"CValveHWSurvey_GetSurveySchedule_Request"> & {
  /**
   * @generated from field: optional string surveydatetoken = 1;
   */
  surveydatetoken: string;

  /**
   * @generated from field: optional fixed64 surveydatetokenversion = 2;
   */
  surveydatetokenversion: bigint;
};

/**
 * Describes the message CValveHWSurvey_GetSurveySchedule_Request.
 * Use `create(CValveHWSurvey_GetSurveySchedule_RequestSchema)` to create a new message.
 */
export const CValveHWSurvey_GetSurveySchedule_RequestSchema: GenMessage<CValveHWSurvey_GetSurveySchedule_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_datapublisher_steamclient, 8);

/**
 * @generated from message CValveHWSurvey_GetSurveySchedule_Response
 */
export type CValveHWSurvey_GetSurveySchedule_Response = Message<"CValveHWSurvey_GetSurveySchedule_Response"> & {
  /**
   * @generated from field: optional uint32 surveydatetoken = 1;
   */
  surveydatetoken: number;

  /**
   * @generated from field: optional fixed64 surveydatetokenversion = 2;
   */
  surveydatetokenversion: bigint;
};

/**
 * Describes the message CValveHWSurvey_GetSurveySchedule_Response.
 * Use `create(CValveHWSurvey_GetSurveySchedule_ResponseSchema)` to create a new message.
 */
export const CValveHWSurvey_GetSurveySchedule_ResponseSchema: GenMessage<CValveHWSurvey_GetSurveySchedule_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_datapublisher_steamclient, 9);

/**
 * @generated from service DataPublisher
 */
export const DataPublisher: GenService<{
  /**
   * @generated from rpc DataPublisher.ClientContentCorruptionReport
   */
  clientContentCorruptionReport: {
    methodKind: "unary";
    input: typeof CDataPublisher_ClientContentCorruptionReport_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc DataPublisher.ClientUpdateAppJobReport
   */
  clientUpdateAppJobReport: {
    methodKind: "unary";
    input: typeof CDataPublisher_ClientUpdateAppJob_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc DataPublisher.GetVRDeviceInfo
   */
  getVRDeviceInfo: {
    methodKind: "unary";
    input: typeof CDataPublisher_GetVRDeviceInfo_RequestSchema;
    output: typeof CDataPublisher_GetVRDeviceInfo_ResponseSchema;
  },
  /**
   * @generated from rpc DataPublisher.SetVRDeviceInfoAggregationReference
   */
  setVRDeviceInfoAggregationReference: {
    methodKind: "unary";
    input: typeof CDataPublisher_SetVRDeviceInfoAggregationReference_RequestSchema;
    output: typeof CDataPublisher_SetVRDeviceInfoAggregationReference_ResponseSchema;
  },
  /**
   * @generated from rpc DataPublisher.AddVRDeviceInfo
   */
  addVRDeviceInfo: {
    methodKind: "unary";
    input: typeof CDataPublisher_AddVRDeviceInfo_RequestSchema;
    output: typeof CDataPublisher_AddVRDeviceInfo_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_datapublisher_steamclient, 0);

/**
 * @generated from service ValveHWSurvey
 */
export const ValveHWSurvey: GenService<{
  /**
   * @generated from rpc ValveHWSurvey.GetSurveySchedule
   */
  getSurveySchedule: {
    methodKind: "unary";
    input: typeof CValveHWSurvey_GetSurveySchedule_RequestSchema;
    output: typeof CValveHWSurvey_GetSurveySchedule_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_datapublisher_steamclient, 1);

