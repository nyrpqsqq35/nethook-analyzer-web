// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_gamerecording.steamclient.proto (syntax proto2)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_steammessages_base } from "./steammessages_base_pb";
import { file_steammessages_unified_base_steamclient } from "./steammessages_unified_base.steamclient_pb";
import type { CMsgVideoGameRecordingDef, CVideo_GameRecordingSegmentInfo, CVideo_GameRecordingSegmentUploadInfo } from "./steammessages_clientserver_video_pb";
import { file_steammessages_clientserver_video } from "./steammessages_clientserver_video_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_gamerecording.steamclient.proto.
 */
export const file_steammessages_gamerecording_steamclient: GenFile = /*@__PURE__*/
  fileDesc("Ci1zdGVhbW1lc3NhZ2VzX2dhbWVyZWNvcmRpbmcuc3RlYW1jbGllbnQucHJvdG8itAEKE0NWaWRlb01hbmFnZXJDbGlwSUQSHQoVdmlkZW9fbWFuYWdlcl9jbGlwX2lkGAEgASgGEh4KFnZpZGVvX21hbmFnZXJfdmlkZW9faWQYAiABKAYSGgoSc2VydmVyX3RpbWVsaW5lX2lkGAMgASgGEhQKDG1hbmlmZXN0X3VybBgEIAEoCRITCgtkdXJhdGlvbl9tcxgFIAEoDRIXCg9zdGFydF9vZmZzZXRfbXMYBiABKA0i2QEKEkNHYW1lUmVjb3JkaW5nQ2xpcBIPCgdjbGlwX2lkGAEgASgGEg4KBmdhbWVpZBgCIAEoBBIVCg1kYXRlX3JlY29yZGVkGAQgASgNEh0KFXRvdGFsX2ZpbGVfc2l6ZV9ieXRlcxgHIAEoBBInCgl2aWRlb19pZHMYCSADKAsyFC5DVmlkZW9NYW5hZ2VyQ2xpcElEEhUKDW93bmVyX3N0ZWFtaWQYCiABKAYSFwoPdXBsb2FkX2NvbXBsZXRlGAsgASgIEhMKC2R1cmF0aW9uX21zGAwgASgNInoKJkNHYW1lUmVjb3JkaW5nX0NyZWF0ZVNoYXJlQ2xpcF9SZXF1ZXN0EiEKBGNsaXAYAiABKAsyEy5DR2FtZVJlY29yZGluZ0NsaXASLQoJdmlkZW9fZGVmGAMgAygLMhouQ01zZ1ZpZGVvR2FtZVJlY29yZGluZ0RlZiJMCidDR2FtZVJlY29yZGluZ19DcmVhdGVTaGFyZUNsaXBfUmVzcG9uc2USIQoEY2xpcBgBIAEoCzITLkNHYW1lUmVjb3JkaW5nQ2xpcCI6CidDR2FtZVJlY29yZGluZ19EZWxldGVTaGFyZWRDbGlwX1JlcXVlc3QSDwoHY2xpcF9pZBgCIAEoBiIqCihDR2FtZVJlY29yZGluZ19EZWxldGVTaGFyZWRDbGlwX1Jlc3BvbnNlIj0KKkNHYW1lUmVjb3JkaW5nX0dldFNpbmdsZVNoYXJlZENsaXBfUmVxdWVzdBIPCgdjbGlwX2lkGAIgASgGIlAKK0NHYW1lUmVjb3JkaW5nX0dldFNpbmdsZVNoYXJlZENsaXBfUmVzcG9uc2USIQoEY2xpcBgBIAEoCzITLkNHYW1lUmVjb3JkaW5nQ2xpcCK5AQovQ1ZpZGVvX0JlZ2luR2FtZVJlY29yZGluZ1NlZ21lbnRzVXBsb2FkX1JlcXVlc3QSFAoMcmVjb3JkaW5nX2lkGAEgASgEEhYKDmNvbXBvbmVudF9uYW1lGAIgASgJEhsKE3JlcHJlc2VudGF0aW9uX25hbWUYAyABKAkSOwoRc2VnbWVudHNfdG9fc3RvcmUYBCADKAsyIC5DVmlkZW9fR2FtZVJlY29yZGluZ1NlZ21lbnRJbmZvIocBCjBDVmlkZW9fQmVnaW5HYW1lUmVjb3JkaW5nU2VnbWVudHNVcGxvYWRfUmVzcG9uc2USPwoPc2VnbWVudHNfbmVlZGVkGAEgAygLMiYuQ1ZpZGVvX0dhbWVSZWNvcmRpbmdTZWdtZW50VXBsb2FkSW5mbxISCgpjYWxsX2FnYWluGAIgASgIIsgBCjBDVmlkZW9fQ29tbWl0R2FtZVJlY29yZGluZ1NlZ21lbnRzVXBsb2FkX1JlcXVlc3QSFAoMcmVjb3JkaW5nX2lkGAEgASgEEhYKDmNvbXBvbmVudF9uYW1lGAIgASgJEhsKE3JlcHJlc2VudGF0aW9uX25hbWUYAyABKAkSHAoUZmlyc3Rfc2VnbWVudF9udW1iZXIYBCABKA0SFAoMbnVtX3NlZ21lbnRzGAUgASgNEhUKDXVwbG9hZF9yZXN1bHQYBiABKA0iMwoxQ1ZpZGVvX0NvbW1pdEdhbWVSZWNvcmRpbmdTZWdtZW50c1VwbG9hZF9SZXNwb25zZSJSCjpDVmlkZW9fR2FtZVJlY29yZGluZ0dldE5leHRCYXRjaE9mU2VnbWVudHNUb1VwbG9hZF9SZXF1ZXN0EhQKDHJlY29yZGluZ19pZBgBIAEoBCJ+CjtDVmlkZW9fR2FtZVJlY29yZGluZ0dldE5leHRCYXRjaE9mU2VnbWVudHNUb1VwbG9hZF9SZXNwb25zZRI/Cg9zZWdtZW50c19uZWVkZWQYASADKAsyJi5DVmlkZW9fR2FtZVJlY29yZGluZ1NlZ21lbnRVcGxvYWRJbmZvIoUBCjBDVmlkZW9fR2FtZVJlY29yZGluZ0NvbW1pdFNlZ21lbnRVcGxvYWRzX1JlcXVlc3QSFAoMcmVjb3JkaW5nX2lkGAEgASgEEjsKEXNlZ21lbnRzX3VwbG9hZGVkGAIgAygLMiAuQ1ZpZGVvX0dhbWVSZWNvcmRpbmdTZWdtZW50SW5mbyIzCjFDVmlkZW9fR2FtZVJlY29yZGluZ0NvbW1pdFNlZ21lbnRVcGxvYWRzX1Jlc3BvbnNlMtQCChFHYW1lUmVjb3JkaW5nQ2xpcBJkCg9DcmVhdGVTaGFyZUNsaXASJy5DR2FtZVJlY29yZGluZ19DcmVhdGVTaGFyZUNsaXBfUmVxdWVzdBooLkNHYW1lUmVjb3JkaW5nX0NyZWF0ZVNoYXJlQ2xpcF9SZXNwb25zZRJnChBEZWxldGVTaGFyZWRDbGlwEiguQ0dhbWVSZWNvcmRpbmdfRGVsZXRlU2hhcmVkQ2xpcF9SZXF1ZXN0GikuQ0dhbWVSZWNvcmRpbmdfRGVsZXRlU2hhcmVkQ2xpcF9SZXNwb25zZRJwChNHZXRTaW5nbGVTaGFyZWRDbGlwEisuQ0dhbWVSZWNvcmRpbmdfR2V0U2luZ2xlU2hhcmVkQ2xpcF9SZXF1ZXN0GiwuQ0dhbWVSZWNvcmRpbmdfR2V0U2luZ2xlU2hhcmVkQ2xpcF9SZXNwb25zZTK/BAoJVmlkZW9DbGlwEocBCiBCZWdpbkdhbWVSZWNvcmRpbmdTZWdtZW50c1VwbG9hZBIwLkNWaWRlb19CZWdpbkdhbWVSZWNvcmRpbmdTZWdtZW50c1VwbG9hZF9SZXF1ZXN0GjEuQ1ZpZGVvX0JlZ2luR2FtZVJlY29yZGluZ1NlZ21lbnRzVXBsb2FkX1Jlc3BvbnNlEooBCiFDb21taXRHYW1lUmVjb3JkaW5nU2VnbWVudHNVcGxvYWQSMS5DVmlkZW9fQ29tbWl0R2FtZVJlY29yZGluZ1NlZ21lbnRzVXBsb2FkX1JlcXVlc3QaMi5DVmlkZW9fQ29tbWl0R2FtZVJlY29yZGluZ1NlZ21lbnRzVXBsb2FkX1Jlc3BvbnNlEpsBCh5HZXROZXh0QmF0Y2hPZlNlZ21lbnRzVG9VcGxvYWQSOy5DVmlkZW9fR2FtZVJlY29yZGluZ0dldE5leHRCYXRjaE9mU2VnbWVudHNUb1VwbG9hZF9SZXF1ZXN0GjwuQ1ZpZGVvX0dhbWVSZWNvcmRpbmdHZXROZXh0QmF0Y2hPZlNlZ21lbnRzVG9VcGxvYWRfUmVzcG9uc2USfQoUQ29tbWl0U2VnbWVudFVwbG9hZHMSMS5DVmlkZW9fR2FtZVJlY29yZGluZ0NvbW1pdFNlZ21lbnRVcGxvYWRzX1JlcXVlc3QaMi5DVmlkZW9fR2FtZVJlY29yZGluZ0NvbW1pdFNlZ21lbnRVcGxvYWRzX1Jlc3BvbnNlQgOAAQE", [file_steammessages_base, file_steammessages_unified_base_steamclient, file_steammessages_clientserver_video]);

/**
 * @generated from message CVideoManagerClipID
 */
export type CVideoManagerClipID = Message<"CVideoManagerClipID"> & {
  /**
   * @generated from field: optional fixed64 video_manager_clip_id = 1;
   */
  videoManagerClipId: bigint;

  /**
   * @generated from field: optional fixed64 video_manager_video_id = 2;
   */
  videoManagerVideoId: bigint;

  /**
   * @generated from field: optional fixed64 server_timeline_id = 3;
   */
  serverTimelineId: bigint;

  /**
   * @generated from field: optional string manifest_url = 4;
   */
  manifestUrl: string;

  /**
   * @generated from field: optional uint32 duration_ms = 5;
   */
  durationMs: number;

  /**
   * @generated from field: optional uint32 start_offset_ms = 6;
   */
  startOffsetMs: number;
};

/**
 * Describes the message CVideoManagerClipID.
 * Use `create(CVideoManagerClipIDSchema)` to create a new message.
 */
export const CVideoManagerClipIDSchema: GenMessage<CVideoManagerClipID> = /*@__PURE__*/
  messageDesc(file_steammessages_gamerecording_steamclient, 0);

/**
 * @generated from message CGameRecordingClip
 */
export type CGameRecordingClip = Message<"CGameRecordingClip"> & {
  /**
   * @generated from field: optional fixed64 clip_id = 1;
   */
  clipId: bigint;

  /**
   * @generated from field: optional uint64 gameid = 2;
   */
  gameid: bigint;

  /**
   * @generated from field: optional uint32 date_recorded = 4;
   */
  dateRecorded: number;

  /**
   * @generated from field: optional uint64 total_file_size_bytes = 7;
   */
  totalFileSizeBytes: bigint;

  /**
   * @generated from field: repeated CVideoManagerClipID video_ids = 9;
   */
  videoIds: CVideoManagerClipID[];

  /**
   * @generated from field: optional fixed64 owner_steamid = 10;
   */
  ownerSteamid: bigint;

  /**
   * @generated from field: optional bool upload_complete = 11;
   */
  uploadComplete: boolean;

  /**
   * @generated from field: optional uint32 duration_ms = 12;
   */
  durationMs: number;
};

/**
 * Describes the message CGameRecordingClip.
 * Use `create(CGameRecordingClipSchema)` to create a new message.
 */
export const CGameRecordingClipSchema: GenMessage<CGameRecordingClip> = /*@__PURE__*/
  messageDesc(file_steammessages_gamerecording_steamclient, 1);

/**
 * @generated from message CGameRecording_CreateShareClip_Request
 */
export type CGameRecording_CreateShareClip_Request = Message<"CGameRecording_CreateShareClip_Request"> & {
  /**
   * @generated from field: optional CGameRecordingClip clip = 2;
   */
  clip?: CGameRecordingClip;

  /**
   * @generated from field: repeated CMsgVideoGameRecordingDef video_def = 3;
   */
  videoDef: CMsgVideoGameRecordingDef[];
};

/**
 * Describes the message CGameRecording_CreateShareClip_Request.
 * Use `create(CGameRecording_CreateShareClip_RequestSchema)` to create a new message.
 */
export const CGameRecording_CreateShareClip_RequestSchema: GenMessage<CGameRecording_CreateShareClip_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_gamerecording_steamclient, 2);

/**
 * @generated from message CGameRecording_CreateShareClip_Response
 */
export type CGameRecording_CreateShareClip_Response = Message<"CGameRecording_CreateShareClip_Response"> & {
  /**
   * @generated from field: optional CGameRecordingClip clip = 1;
   */
  clip?: CGameRecordingClip;
};

/**
 * Describes the message CGameRecording_CreateShareClip_Response.
 * Use `create(CGameRecording_CreateShareClip_ResponseSchema)` to create a new message.
 */
export const CGameRecording_CreateShareClip_ResponseSchema: GenMessage<CGameRecording_CreateShareClip_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_gamerecording_steamclient, 3);

/**
 * @generated from message CGameRecording_DeleteSharedClip_Request
 */
export type CGameRecording_DeleteSharedClip_Request = Message<"CGameRecording_DeleteSharedClip_Request"> & {
  /**
   * @generated from field: optional fixed64 clip_id = 2;
   */
  clipId: bigint;
};

/**
 * Describes the message CGameRecording_DeleteSharedClip_Request.
 * Use `create(CGameRecording_DeleteSharedClip_RequestSchema)` to create a new message.
 */
export const CGameRecording_DeleteSharedClip_RequestSchema: GenMessage<CGameRecording_DeleteSharedClip_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_gamerecording_steamclient, 4);

/**
 * @generated from message CGameRecording_DeleteSharedClip_Response
 */
export type CGameRecording_DeleteSharedClip_Response = Message<"CGameRecording_DeleteSharedClip_Response"> & {
};

/**
 * Describes the message CGameRecording_DeleteSharedClip_Response.
 * Use `create(CGameRecording_DeleteSharedClip_ResponseSchema)` to create a new message.
 */
export const CGameRecording_DeleteSharedClip_ResponseSchema: GenMessage<CGameRecording_DeleteSharedClip_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_gamerecording_steamclient, 5);

/**
 * @generated from message CGameRecording_GetSingleSharedClip_Request
 */
export type CGameRecording_GetSingleSharedClip_Request = Message<"CGameRecording_GetSingleSharedClip_Request"> & {
  /**
   * @generated from field: optional fixed64 clip_id = 2;
   */
  clipId: bigint;
};

/**
 * Describes the message CGameRecording_GetSingleSharedClip_Request.
 * Use `create(CGameRecording_GetSingleSharedClip_RequestSchema)` to create a new message.
 */
export const CGameRecording_GetSingleSharedClip_RequestSchema: GenMessage<CGameRecording_GetSingleSharedClip_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_gamerecording_steamclient, 6);

/**
 * @generated from message CGameRecording_GetSingleSharedClip_Response
 */
export type CGameRecording_GetSingleSharedClip_Response = Message<"CGameRecording_GetSingleSharedClip_Response"> & {
  /**
   * @generated from field: optional CGameRecordingClip clip = 1;
   */
  clip?: CGameRecordingClip;
};

/**
 * Describes the message CGameRecording_GetSingleSharedClip_Response.
 * Use `create(CGameRecording_GetSingleSharedClip_ResponseSchema)` to create a new message.
 */
export const CGameRecording_GetSingleSharedClip_ResponseSchema: GenMessage<CGameRecording_GetSingleSharedClip_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_gamerecording_steamclient, 7);

/**
 * @generated from message CVideo_BeginGameRecordingSegmentsUpload_Request
 */
export type CVideo_BeginGameRecordingSegmentsUpload_Request = Message<"CVideo_BeginGameRecordingSegmentsUpload_Request"> & {
  /**
   * @generated from field: optional uint64 recording_id = 1;
   */
  recordingId: bigint;

  /**
   * @generated from field: optional string component_name = 2;
   */
  componentName: string;

  /**
   * @generated from field: optional string representation_name = 3;
   */
  representationName: string;

  /**
   * @generated from field: repeated CVideo_GameRecordingSegmentInfo segments_to_store = 4;
   */
  segmentsToStore: CVideo_GameRecordingSegmentInfo[];
};

/**
 * Describes the message CVideo_BeginGameRecordingSegmentsUpload_Request.
 * Use `create(CVideo_BeginGameRecordingSegmentsUpload_RequestSchema)` to create a new message.
 */
export const CVideo_BeginGameRecordingSegmentsUpload_RequestSchema: GenMessage<CVideo_BeginGameRecordingSegmentsUpload_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_gamerecording_steamclient, 8);

/**
 * @generated from message CVideo_BeginGameRecordingSegmentsUpload_Response
 */
export type CVideo_BeginGameRecordingSegmentsUpload_Response = Message<"CVideo_BeginGameRecordingSegmentsUpload_Response"> & {
  /**
   * @generated from field: repeated CVideo_GameRecordingSegmentUploadInfo segments_needed = 1;
   */
  segmentsNeeded: CVideo_GameRecordingSegmentUploadInfo[];

  /**
   * @generated from field: optional bool call_again = 2;
   */
  callAgain: boolean;
};

/**
 * Describes the message CVideo_BeginGameRecordingSegmentsUpload_Response.
 * Use `create(CVideo_BeginGameRecordingSegmentsUpload_ResponseSchema)` to create a new message.
 */
export const CVideo_BeginGameRecordingSegmentsUpload_ResponseSchema: GenMessage<CVideo_BeginGameRecordingSegmentsUpload_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_gamerecording_steamclient, 9);

/**
 * @generated from message CVideo_CommitGameRecordingSegmentsUpload_Request
 */
export type CVideo_CommitGameRecordingSegmentsUpload_Request = Message<"CVideo_CommitGameRecordingSegmentsUpload_Request"> & {
  /**
   * @generated from field: optional uint64 recording_id = 1;
   */
  recordingId: bigint;

  /**
   * @generated from field: optional string component_name = 2;
   */
  componentName: string;

  /**
   * @generated from field: optional string representation_name = 3;
   */
  representationName: string;

  /**
   * @generated from field: optional uint32 first_segment_number = 4;
   */
  firstSegmentNumber: number;

  /**
   * @generated from field: optional uint32 num_segments = 5;
   */
  numSegments: number;

  /**
   * @generated from field: optional uint32 upload_result = 6;
   */
  uploadResult: number;
};

/**
 * Describes the message CVideo_CommitGameRecordingSegmentsUpload_Request.
 * Use `create(CVideo_CommitGameRecordingSegmentsUpload_RequestSchema)` to create a new message.
 */
export const CVideo_CommitGameRecordingSegmentsUpload_RequestSchema: GenMessage<CVideo_CommitGameRecordingSegmentsUpload_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_gamerecording_steamclient, 10);

/**
 * @generated from message CVideo_CommitGameRecordingSegmentsUpload_Response
 */
export type CVideo_CommitGameRecordingSegmentsUpload_Response = Message<"CVideo_CommitGameRecordingSegmentsUpload_Response"> & {
};

/**
 * Describes the message CVideo_CommitGameRecordingSegmentsUpload_Response.
 * Use `create(CVideo_CommitGameRecordingSegmentsUpload_ResponseSchema)` to create a new message.
 */
export const CVideo_CommitGameRecordingSegmentsUpload_ResponseSchema: GenMessage<CVideo_CommitGameRecordingSegmentsUpload_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_gamerecording_steamclient, 11);

/**
 * @generated from message CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Request
 */
export type CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Request = Message<"CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Request"> & {
  /**
   * @generated from field: optional uint64 recording_id = 1;
   */
  recordingId: bigint;
};

/**
 * Describes the message CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Request.
 * Use `create(CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_RequestSchema)` to create a new message.
 */
export const CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_RequestSchema: GenMessage<CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_gamerecording_steamclient, 12);

/**
 * @generated from message CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Response
 */
export type CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Response = Message<"CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Response"> & {
  /**
   * @generated from field: repeated CVideo_GameRecordingSegmentUploadInfo segments_needed = 1;
   */
  segmentsNeeded: CVideo_GameRecordingSegmentUploadInfo[];
};

/**
 * Describes the message CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Response.
 * Use `create(CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_ResponseSchema)` to create a new message.
 */
export const CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_ResponseSchema: GenMessage<CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_gamerecording_steamclient, 13);

/**
 * @generated from message CVideo_GameRecordingCommitSegmentUploads_Request
 */
export type CVideo_GameRecordingCommitSegmentUploads_Request = Message<"CVideo_GameRecordingCommitSegmentUploads_Request"> & {
  /**
   * @generated from field: optional uint64 recording_id = 1;
   */
  recordingId: bigint;

  /**
   * @generated from field: repeated CVideo_GameRecordingSegmentInfo segments_uploaded = 2;
   */
  segmentsUploaded: CVideo_GameRecordingSegmentInfo[];
};

/**
 * Describes the message CVideo_GameRecordingCommitSegmentUploads_Request.
 * Use `create(CVideo_GameRecordingCommitSegmentUploads_RequestSchema)` to create a new message.
 */
export const CVideo_GameRecordingCommitSegmentUploads_RequestSchema: GenMessage<CVideo_GameRecordingCommitSegmentUploads_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_gamerecording_steamclient, 14);

/**
 * @generated from message CVideo_GameRecordingCommitSegmentUploads_Response
 */
export type CVideo_GameRecordingCommitSegmentUploads_Response = Message<"CVideo_GameRecordingCommitSegmentUploads_Response"> & {
};

/**
 * Describes the message CVideo_GameRecordingCommitSegmentUploads_Response.
 * Use `create(CVideo_GameRecordingCommitSegmentUploads_ResponseSchema)` to create a new message.
 */
export const CVideo_GameRecordingCommitSegmentUploads_ResponseSchema: GenMessage<CVideo_GameRecordingCommitSegmentUploads_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_gamerecording_steamclient, 15);

/**
 * @generated from service GameRecordingClip
 */
export const GameRecordingClip: GenService<{
  /**
   * @generated from rpc GameRecordingClip.CreateShareClip
   */
  createShareClip: {
    methodKind: "unary";
    input: typeof CGameRecording_CreateShareClip_RequestSchema;
    output: typeof CGameRecording_CreateShareClip_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecordingClip.DeleteSharedClip
   */
  deleteSharedClip: {
    methodKind: "unary";
    input: typeof CGameRecording_DeleteSharedClip_RequestSchema;
    output: typeof CGameRecording_DeleteSharedClip_ResponseSchema;
  },
  /**
   * @generated from rpc GameRecordingClip.GetSingleSharedClip
   */
  getSingleSharedClip: {
    methodKind: "unary";
    input: typeof CGameRecording_GetSingleSharedClip_RequestSchema;
    output: typeof CGameRecording_GetSingleSharedClip_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_gamerecording_steamclient, 0);

/**
 * @generated from service VideoClip
 */
export const VideoClip: GenService<{
  /**
   * @generated from rpc VideoClip.BeginGameRecordingSegmentsUpload
   */
  beginGameRecordingSegmentsUpload: {
    methodKind: "unary";
    input: typeof CVideo_BeginGameRecordingSegmentsUpload_RequestSchema;
    output: typeof CVideo_BeginGameRecordingSegmentsUpload_ResponseSchema;
  },
  /**
   * @generated from rpc VideoClip.CommitGameRecordingSegmentsUpload
   */
  commitGameRecordingSegmentsUpload: {
    methodKind: "unary";
    input: typeof CVideo_CommitGameRecordingSegmentsUpload_RequestSchema;
    output: typeof CVideo_CommitGameRecordingSegmentsUpload_ResponseSchema;
  },
  /**
   * @generated from rpc VideoClip.GetNextBatchOfSegmentsToUpload
   */
  getNextBatchOfSegmentsToUpload: {
    methodKind: "unary";
    input: typeof CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_RequestSchema;
    output: typeof CVideo_GameRecordingGetNextBatchOfSegmentsToUpload_ResponseSchema;
  },
  /**
   * @generated from rpc VideoClip.CommitSegmentUploads
   */
  commitSegmentUploads: {
    methodKind: "unary";
    input: typeof CVideo_GameRecordingCommitSegmentUploads_RequestSchema;
    output: typeof CVideo_GameRecordingCommitSegmentUploads_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_gamerecording_steamclient, 1);

