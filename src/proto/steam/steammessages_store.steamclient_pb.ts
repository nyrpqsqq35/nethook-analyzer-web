// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_store.steamclient.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { CPackageReservationStatus, UserContentDescriptorPreferences } from "./steammessages_base_pb";
import { file_steammessages_base } from "./steammessages_base_pb";
import type { NoResponseSchema } from "./steammessages_unified_base.steamclient_pb";
import { file_steammessages_unified_base_steamclient } from "./steammessages_unified_base.steamclient_pb";
import type { CStorePageFilter } from "./contenthubs_pb";
import { file_contenthubs } from "./contenthubs_pb";
import type { StoreBrowseContext, StoreBrowseItemDataRequest, StoreItem } from "./steammessages_storebrowse.steamclient_pb";
import { file_steammessages_storebrowse_steamclient } from "./steammessages_storebrowse.steamclient_pb";
import type { EProvideDeckFeedbackPreference, ESteamDeckCompatibilityFeedback } from "./enums_pb";
import { file_enums } from "./enums_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_store.steamclient.proto.
 */
export const file_steammessages_store_steamclient: GenFile = /*@__PURE__*/
  fileDesc("", [file_steammessages_base, file_steammessages_unified_base_steamclient, file_contenthubs, file_steammessages_storebrowse_steamclient, file_enums]);

/**
 * @generated from message CStore_RegisterCDKey_Request
 */
export type CStore_RegisterCDKey_Request = Message<"CStore_RegisterCDKey_Request"> & {
  /**
   * @generated from field: optional string activation_code = 1;
   */
  activationCode: string;

  /**
   * @generated from field: optional int32 purchase_platform = 2;
   */
  purchasePlatform: number;

  /**
   * @generated from field: optional bool is_request_from_client = 3;
   */
  isRequestFromClient: boolean;
};

/**
 * Describes the message CStore_RegisterCDKey_Request.
 * Use `create(CStore_RegisterCDKey_RequestSchema)` to create a new message.
 */
export const CStore_RegisterCDKey_RequestSchema: GenMessage<CStore_RegisterCDKey_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 0);

/**
 * @generated from message CStore_PurchaseReceiptInfo
 */
export type CStore_PurchaseReceiptInfo = Message<"CStore_PurchaseReceiptInfo"> & {
  /**
   * @generated from field: optional uint64 transactionid = 1;
   */
  transactionid: bigint;

  /**
   * @generated from field: optional uint32 packageid = 2;
   */
  packageid: number;

  /**
   * @generated from field: optional uint32 purchase_status = 3;
   */
  purchaseStatus: number;

  /**
   * @generated from field: optional uint32 result_detail = 4;
   */
  resultDetail: number;

  /**
   * @generated from field: optional uint32 transaction_time = 5;
   */
  transactionTime: number;

  /**
   * @generated from field: optional uint32 payment_method = 6;
   */
  paymentMethod: number;

  /**
   * @generated from field: optional uint64 base_price = 7;
   */
  basePrice: bigint;

  /**
   * @generated from field: optional uint64 total_discount = 8;
   */
  totalDiscount: bigint;

  /**
   * @generated from field: optional uint64 tax = 9;
   */
  tax: bigint;

  /**
   * @generated from field: optional uint64 shipping = 10;
   */
  shipping: bigint;

  /**
   * @generated from field: optional uint32 currency_code = 11;
   */
  currencyCode: number;

  /**
   * @generated from field: optional string country_code = 12;
   */
  countryCode: string;

  /**
   * @generated from field: optional string error_headline = 13;
   */
  errorHeadline: string;

  /**
   * @generated from field: optional string error_string = 14;
   */
  errorString: string;

  /**
   * @generated from field: optional string error_link_text = 15;
   */
  errorLinkText: string;

  /**
   * @generated from field: optional string error_link_url = 16;
   */
  errorLinkUrl: string;

  /**
   * @generated from field: optional uint32 error_appid = 17;
   */
  errorAppid: number;

  /**
   * @generated from field: repeated CStore_PurchaseReceiptInfo.LineItem line_items = 18;
   */
  lineItems: CStore_PurchaseReceiptInfo_LineItem[];
};

/**
 * Describes the message CStore_PurchaseReceiptInfo.
 * Use `create(CStore_PurchaseReceiptInfoSchema)` to create a new message.
 */
export const CStore_PurchaseReceiptInfoSchema: GenMessage<CStore_PurchaseReceiptInfo> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 1);

/**
 * @generated from message CStore_PurchaseReceiptInfo.LineItem
 */
export type CStore_PurchaseReceiptInfo_LineItem = Message<"CStore_PurchaseReceiptInfo.LineItem"> & {
  /**
   * @generated from field: optional uint32 packageid = 1;
   */
  packageid: number;

  /**
   * @generated from field: optional uint32 appid = 2;
   */
  appid: number;

  /**
   * @generated from field: optional string line_item_description = 3;
   */
  lineItemDescription: string;
};

/**
 * Describes the message CStore_PurchaseReceiptInfo.LineItem.
 * Use `create(CStore_PurchaseReceiptInfo_LineItemSchema)` to create a new message.
 */
export const CStore_PurchaseReceiptInfo_LineItemSchema: GenMessage<CStore_PurchaseReceiptInfo_LineItem> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 1, 0);

/**
 * @generated from message CStore_RegisterCDKey_Response
 */
export type CStore_RegisterCDKey_Response = Message<"CStore_RegisterCDKey_Response"> & {
  /**
   * @generated from field: optional int32 purchase_result_details = 1;
   */
  purchaseResultDetails: number;

  /**
   * @generated from field: optional CStore_PurchaseReceiptInfo purchase_receipt_info = 2;
   */
  purchaseReceiptInfo?: CStore_PurchaseReceiptInfo;
};

/**
 * Describes the message CStore_RegisterCDKey_Response.
 * Use `create(CStore_RegisterCDKey_ResponseSchema)` to create a new message.
 */
export const CStore_RegisterCDKey_ResponseSchema: GenMessage<CStore_RegisterCDKey_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 2);

/**
 * @generated from message CStore_GetRecommendedTagsForUser_Request
 */
export type CStore_GetRecommendedTagsForUser_Request = Message<"CStore_GetRecommendedTagsForUser_Request"> & {
  /**
   * @generated from field: optional string language = 2;
   */
  language: string;

  /**
   * @generated from field: optional string country_code = 3;
   */
  countryCode: string;

  /**
   * @generated from field: optional bool favor_rarer_tags = 4;
   */
  favorRarerTags: boolean;
};

/**
 * Describes the message CStore_GetRecommendedTagsForUser_Request.
 * Use `create(CStore_GetRecommendedTagsForUser_RequestSchema)` to create a new message.
 */
export const CStore_GetRecommendedTagsForUser_RequestSchema: GenMessage<CStore_GetRecommendedTagsForUser_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 3);

/**
 * @generated from message CStore_GetRecommendedTagsForUser_Response
 */
export type CStore_GetRecommendedTagsForUser_Response = Message<"CStore_GetRecommendedTagsForUser_Response"> & {
  /**
   * @generated from field: repeated CStore_GetRecommendedTagsForUser_Response.Tag tags = 1;
   */
  tags: CStore_GetRecommendedTagsForUser_Response_Tag[];
};

/**
 * Describes the message CStore_GetRecommendedTagsForUser_Response.
 * Use `create(CStore_GetRecommendedTagsForUser_ResponseSchema)` to create a new message.
 */
export const CStore_GetRecommendedTagsForUser_ResponseSchema: GenMessage<CStore_GetRecommendedTagsForUser_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 4);

/**
 * @generated from message CStore_GetRecommendedTagsForUser_Response.Tag
 */
export type CStore_GetRecommendedTagsForUser_Response_Tag = Message<"CStore_GetRecommendedTagsForUser_Response.Tag"> & {
  /**
   * @generated from field: optional uint32 tagid = 1;
   */
  tagid: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name: string;

  /**
   * @generated from field: optional float weight = 3;
   */
  weight: number;
};

/**
 * Describes the message CStore_GetRecommendedTagsForUser_Response.Tag.
 * Use `create(CStore_GetRecommendedTagsForUser_Response_TagSchema)` to create a new message.
 */
export const CStore_GetRecommendedTagsForUser_Response_TagSchema: GenMessage<CStore_GetRecommendedTagsForUser_Response_Tag> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 4, 0);

/**
 * @generated from message CStore_GetMostPopularTags_Request
 */
export type CStore_GetMostPopularTags_Request = Message<"CStore_GetMostPopularTags_Request"> & {
  /**
   * @generated from field: optional string language = 1;
   */
  language: string;
};

/**
 * Describes the message CStore_GetMostPopularTags_Request.
 * Use `create(CStore_GetMostPopularTags_RequestSchema)` to create a new message.
 */
export const CStore_GetMostPopularTags_RequestSchema: GenMessage<CStore_GetMostPopularTags_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 5);

/**
 * @generated from message CStore_GetMostPopularTags_Response
 */
export type CStore_GetMostPopularTags_Response = Message<"CStore_GetMostPopularTags_Response"> & {
  /**
   * @generated from field: repeated CStore_GetMostPopularTags_Response.Tag tags = 1;
   */
  tags: CStore_GetMostPopularTags_Response_Tag[];
};

/**
 * Describes the message CStore_GetMostPopularTags_Response.
 * Use `create(CStore_GetMostPopularTags_ResponseSchema)` to create a new message.
 */
export const CStore_GetMostPopularTags_ResponseSchema: GenMessage<CStore_GetMostPopularTags_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 6);

/**
 * @generated from message CStore_GetMostPopularTags_Response.Tag
 */
export type CStore_GetMostPopularTags_Response_Tag = Message<"CStore_GetMostPopularTags_Response.Tag"> & {
  /**
   * @generated from field: optional uint32 tagid = 1;
   */
  tagid: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name: string;
};

/**
 * Describes the message CStore_GetMostPopularTags_Response.Tag.
 * Use `create(CStore_GetMostPopularTags_Response_TagSchema)` to create a new message.
 */
export const CStore_GetMostPopularTags_Response_TagSchema: GenMessage<CStore_GetMostPopularTags_Response_Tag> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 6, 0);

/**
 * @generated from message CStore_GetLocalizedNameForTags_Request
 */
export type CStore_GetLocalizedNameForTags_Request = Message<"CStore_GetLocalizedNameForTags_Request"> & {
  /**
   * @generated from field: optional string language = 1;
   */
  language: string;

  /**
   * @generated from field: repeated uint32 tagids = 2;
   */
  tagids: number[];
};

/**
 * Describes the message CStore_GetLocalizedNameForTags_Request.
 * Use `create(CStore_GetLocalizedNameForTags_RequestSchema)` to create a new message.
 */
export const CStore_GetLocalizedNameForTags_RequestSchema: GenMessage<CStore_GetLocalizedNameForTags_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 7);

/**
 * @generated from message CStore_GetLocalizedNameForTags_Response
 */
export type CStore_GetLocalizedNameForTags_Response = Message<"CStore_GetLocalizedNameForTags_Response"> & {
  /**
   * @generated from field: repeated CStore_GetLocalizedNameForTags_Response.Tag tags = 1;
   */
  tags: CStore_GetLocalizedNameForTags_Response_Tag[];
};

/**
 * Describes the message CStore_GetLocalizedNameForTags_Response.
 * Use `create(CStore_GetLocalizedNameForTags_ResponseSchema)` to create a new message.
 */
export const CStore_GetLocalizedNameForTags_ResponseSchema: GenMessage<CStore_GetLocalizedNameForTags_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 8);

/**
 * @generated from message CStore_GetLocalizedNameForTags_Response.Tag
 */
export type CStore_GetLocalizedNameForTags_Response_Tag = Message<"CStore_GetLocalizedNameForTags_Response.Tag"> & {
  /**
   * @generated from field: optional uint32 tagid = 1;
   */
  tagid: number;

  /**
   * @generated from field: optional string english_name = 2;
   */
  englishName: string;

  /**
   * @generated from field: optional string name = 3;
   */
  name: string;

  /**
   * @generated from field: optional string normalized_name = 4;
   */
  normalizedName: string;
};

/**
 * Describes the message CStore_GetLocalizedNameForTags_Response.Tag.
 * Use `create(CStore_GetLocalizedNameForTags_Response_TagSchema)` to create a new message.
 */
export const CStore_GetLocalizedNameForTags_Response_TagSchema: GenMessage<CStore_GetLocalizedNameForTags_Response_Tag> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 8, 0);

/**
 * @generated from message CStore_GetTagList_Request
 */
export type CStore_GetTagList_Request = Message<"CStore_GetTagList_Request"> & {
  /**
   * @generated from field: optional string language = 1;
   */
  language: string;

  /**
   * @generated from field: optional string have_version_hash = 2;
   */
  haveVersionHash: string;
};

/**
 * Describes the message CStore_GetTagList_Request.
 * Use `create(CStore_GetTagList_RequestSchema)` to create a new message.
 */
export const CStore_GetTagList_RequestSchema: GenMessage<CStore_GetTagList_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 9);

/**
 * @generated from message CStore_GetTagList_Response
 */
export type CStore_GetTagList_Response = Message<"CStore_GetTagList_Response"> & {
  /**
   * @generated from field: optional string version_hash = 1;
   */
  versionHash: string;

  /**
   * @generated from field: repeated CStore_GetTagList_Response.Tag tags = 2;
   */
  tags: CStore_GetTagList_Response_Tag[];
};

/**
 * Describes the message CStore_GetTagList_Response.
 * Use `create(CStore_GetTagList_ResponseSchema)` to create a new message.
 */
export const CStore_GetTagList_ResponseSchema: GenMessage<CStore_GetTagList_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 10);

/**
 * @generated from message CStore_GetTagList_Response.Tag
 */
export type CStore_GetTagList_Response_Tag = Message<"CStore_GetTagList_Response.Tag"> & {
  /**
   * @generated from field: optional uint32 tagid = 1;
   */
  tagid: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name: string;
};

/**
 * Describes the message CStore_GetTagList_Response.Tag.
 * Use `create(CStore_GetTagList_Response_TagSchema)` to create a new message.
 */
export const CStore_GetTagList_Response_TagSchema: GenMessage<CStore_GetTagList_Response_Tag> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 10, 0);

/**
 * @generated from message CStoreDiscoveryQueueSettings
 */
export type CStoreDiscoveryQueueSettings = Message<"CStoreDiscoveryQueueSettings"> & {
  /**
   * @generated from field: optional bool os_win = 4;
   */
  osWin: boolean;

  /**
   * @generated from field: optional bool os_mac = 5;
   */
  osMac: boolean;

  /**
   * @generated from field: optional bool os_linux = 6;
   */
  osLinux: boolean;

  /**
   * @generated from field: optional bool full_controller_support = 7;
   */
  fullControllerSupport: boolean;

  /**
   * @generated from field: optional bool native_steam_controller = 8;
   */
  nativeSteamController: boolean;

  /**
   * @generated from field: optional bool include_coming_soon = 9;
   */
  includeComingSoon: boolean;

  /**
   * @generated from field: repeated uint32 excluded_tagids = 10;
   */
  excludedTagids: number[];

  /**
   * @generated from field: optional bool exclude_early_access = 11;
   */
  excludeEarlyAccess: boolean;

  /**
   * @generated from field: optional bool exclude_videos = 12;
   */
  excludeVideos: boolean;

  /**
   * @generated from field: optional bool exclude_software = 13;
   */
  excludeSoftware: boolean;

  /**
   * @generated from field: optional bool exclude_dlc = 14;
   */
  excludeDlc: boolean;

  /**
   * @generated from field: optional bool exclude_soundtracks = 15;
   */
  excludeSoundtracks: boolean;

  /**
   * @generated from field: repeated uint32 featured_tagids = 16;
   */
  featuredTagids: number[];
};

/**
 * Describes the message CStoreDiscoveryQueueSettings.
 * Use `create(CStoreDiscoveryQueueSettingsSchema)` to create a new message.
 */
export const CStoreDiscoveryQueueSettingsSchema: GenMessage<CStoreDiscoveryQueueSettings> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 11);

/**
 * @generated from message CStore_GetDiscoveryQueue_Request
 */
export type CStore_GetDiscoveryQueue_Request = Message<"CStore_GetDiscoveryQueue_Request"> & {
  /**
   * @generated from field: optional EStoreDiscoveryQueueType queue_type = 1 [default = k_EStoreDiscoveryQueueTypeNew];
   */
  queueType: EStoreDiscoveryQueueType;

  /**
   * @generated from field: optional string country_code = 2;
   */
  countryCode: string;

  /**
   * @generated from field: optional bool rebuild_queue = 3;
   */
  rebuildQueue: boolean;

  /**
   * @generated from field: optional bool settings_changed = 4;
   */
  settingsChanged: boolean;

  /**
   * @generated from field: optional CStoreDiscoveryQueueSettings settings = 5;
   */
  settings?: CStoreDiscoveryQueueSettings;

  /**
   * @generated from field: optional bool rebuild_queue_if_stale = 6;
   */
  rebuildQueueIfStale: boolean;

  /**
   * @generated from field: optional bool ignore_user_preferences = 8;
   */
  ignoreUserPreferences: boolean;

  /**
   * @generated from field: optional bool no_experimental_results = 9;
   */
  noExperimentalResults: boolean;

  /**
   * @generated from field: optional uint32 experimental_cohort = 10;
   */
  experimentalCohort: number;

  /**
   * @generated from field: optional bool debug_get_solr_query = 11;
   */
  debugGetSolrQuery: boolean;

  /**
   * @generated from field: optional CStorePageFilter store_page_filter = 12;
   */
  storePageFilter?: CStorePageFilter;

  /**
   * @generated from field: optional StoreBrowseContext context = 13;
   */
  context?: StoreBrowseContext;

  /**
   * @generated from field: optional StoreBrowseItemDataRequest data_request = 14;
   */
  dataRequest?: StoreBrowseItemDataRequest;
};

/**
 * Describes the message CStore_GetDiscoveryQueue_Request.
 * Use `create(CStore_GetDiscoveryQueue_RequestSchema)` to create a new message.
 */
export const CStore_GetDiscoveryQueue_RequestSchema: GenMessage<CStore_GetDiscoveryQueue_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 12);

/**
 * @generated from message CStore_GetDiscoveryQueue_Response
 */
export type CStore_GetDiscoveryQueue_Response = Message<"CStore_GetDiscoveryQueue_Response"> & {
  /**
   * @generated from field: repeated uint32 appids = 1;
   */
  appids: number[];

  /**
   * @generated from field: optional string country_code = 2;
   */
  countryCode: string;

  /**
   * @generated from field: optional CStoreDiscoveryQueueSettings settings = 3;
   */
  settings?: CStoreDiscoveryQueueSettings;

  /**
   * @generated from field: optional int32 skipped = 4;
   */
  skipped: number;

  /**
   * @generated from field: optional bool exhausted = 5;
   */
  exhausted: boolean;

  /**
   * @generated from field: optional uint32 experimental_cohort = 6;
   */
  experimentalCohort: number;

  /**
   * @generated from field: optional string debug_solr_query = 7;
   */
  debugSolrQuery: string;

  /**
   * @generated from field: repeated StoreItem store_items = 8;
   */
  storeItems: StoreItem[];
};

/**
 * Describes the message CStore_GetDiscoveryQueue_Response.
 * Use `create(CStore_GetDiscoveryQueue_ResponseSchema)` to create a new message.
 */
export const CStore_GetDiscoveryQueue_ResponseSchema: GenMessage<CStore_GetDiscoveryQueue_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 13);

/**
 * @generated from message CStore_GetDiscoveryQueueSettings_Request
 */
export type CStore_GetDiscoveryQueueSettings_Request = Message<"CStore_GetDiscoveryQueueSettings_Request"> & {
  /**
   * @generated from field: optional EStoreDiscoveryQueueType queue_type = 1 [default = k_EStoreDiscoveryQueueTypeNew];
   */
  queueType: EStoreDiscoveryQueueType;

  /**
   * @generated from field: optional CStorePageFilter store_page_filter = 2;
   */
  storePageFilter?: CStorePageFilter;
};

/**
 * Describes the message CStore_GetDiscoveryQueueSettings_Request.
 * Use `create(CStore_GetDiscoveryQueueSettings_RequestSchema)` to create a new message.
 */
export const CStore_GetDiscoveryQueueSettings_RequestSchema: GenMessage<CStore_GetDiscoveryQueueSettings_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 14);

/**
 * @generated from message CStore_GetDiscoveryQueueSettings_Response
 */
export type CStore_GetDiscoveryQueueSettings_Response = Message<"CStore_GetDiscoveryQueueSettings_Response"> & {
  /**
   * @generated from field: optional string country_code = 1;
   */
  countryCode: string;

  /**
   * @generated from field: optional CStoreDiscoveryQueueSettings settings = 2;
   */
  settings?: CStoreDiscoveryQueueSettings;
};

/**
 * Describes the message CStore_GetDiscoveryQueueSettings_Response.
 * Use `create(CStore_GetDiscoveryQueueSettings_ResponseSchema)` to create a new message.
 */
export const CStore_GetDiscoveryQueueSettings_ResponseSchema: GenMessage<CStore_GetDiscoveryQueueSettings_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 15);

/**
 * @generated from message CStore_SkipDiscoveryQueueItem_Request
 */
export type CStore_SkipDiscoveryQueueItem_Request = Message<"CStore_SkipDiscoveryQueueItem_Request"> & {
  /**
   * @generated from field: optional EStoreDiscoveryQueueType queue_type = 1 [default = k_EStoreDiscoveryQueueTypeNew];
   */
  queueType: EStoreDiscoveryQueueType;

  /**
   * @generated from field: optional uint32 appid = 2;
   */
  appid: number;

  /**
   * @generated from field: optional CStorePageFilter store_page_filter = 3;
   */
  storePageFilter?: CStorePageFilter;
};

/**
 * Describes the message CStore_SkipDiscoveryQueueItem_Request.
 * Use `create(CStore_SkipDiscoveryQueueItem_RequestSchema)` to create a new message.
 */
export const CStore_SkipDiscoveryQueueItem_RequestSchema: GenMessage<CStore_SkipDiscoveryQueueItem_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 16);

/**
 * @generated from message CStore_SkipDiscoveryQueueItem_Response
 */
export type CStore_SkipDiscoveryQueueItem_Response = Message<"CStore_SkipDiscoveryQueueItem_Response"> & {
};

/**
 * Describes the message CStore_SkipDiscoveryQueueItem_Response.
 * Use `create(CStore_SkipDiscoveryQueueItem_ResponseSchema)` to create a new message.
 */
export const CStore_SkipDiscoveryQueueItem_ResponseSchema: GenMessage<CStore_SkipDiscoveryQueueItem_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 17);

/**
 * @generated from message CStore_GetUserGameInterestState_Request
 */
export type CStore_GetUserGameInterestState_Request = Message<"CStore_GetUserGameInterestState_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 store_appid = 2;
   */
  storeAppid: number;

  /**
   * @generated from field: optional uint32 beta_appid = 3;
   */
  betaAppid: number;
};

/**
 * Describes the message CStore_GetUserGameInterestState_Request.
 * Use `create(CStore_GetUserGameInterestState_RequestSchema)` to create a new message.
 */
export const CStore_GetUserGameInterestState_RequestSchema: GenMessage<CStore_GetUserGameInterestState_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 18);

/**
 * @generated from message CStore_GetUserGameInterestState_Response
 */
export type CStore_GetUserGameInterestState_Response = Message<"CStore_GetUserGameInterestState_Response"> & {
  /**
   * @generated from field: optional bool owned = 1;
   */
  owned: boolean;

  /**
   * @generated from field: optional bool wishlist = 2;
   */
  wishlist: boolean;

  /**
   * @generated from field: optional bool ignored = 3;
   */
  ignored: boolean;

  /**
   * @generated from field: optional bool following = 4;
   */
  following: boolean;

  /**
   * @generated from field: repeated EStoreDiscoveryQueueType in_queues = 5;
   */
  inQueues: EStoreDiscoveryQueueType[];

  /**
   * @generated from field: repeated EStoreDiscoveryQueueType queues_with_skip = 6;
   */
  queuesWithSkip: EStoreDiscoveryQueueType[];

  /**
   * @generated from field: repeated int32 queue_items_remaining = 7;
   */
  queueItemsRemaining: number[];

  /**
   * @generated from field: repeated uint32 queue_items_next_appid = 8;
   */
  queueItemsNextAppid: number[];

  /**
   * @generated from field: optional bool temporarily_owned = 9;
   */
  temporarilyOwned: boolean;

  /**
   * @generated from field: repeated CStore_GetUserGameInterestState_Response.InQueue queues = 10;
   */
  queues: CStore_GetUserGameInterestState_Response_InQueue[];

  /**
   * @generated from field: optional int32 ignored_reason = 11;
   */
  ignoredReason: number;

  /**
   * @generated from field: optional EPlaytestStatus beta_status = 12 [default = k_ETesterStatusNone];
   */
  betaStatus: EPlaytestStatus;
};

/**
 * Describes the message CStore_GetUserGameInterestState_Response.
 * Use `create(CStore_GetUserGameInterestState_ResponseSchema)` to create a new message.
 */
export const CStore_GetUserGameInterestState_ResponseSchema: GenMessage<CStore_GetUserGameInterestState_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 19);

/**
 * @generated from message CStore_GetUserGameInterestState_Response.InQueue
 */
export type CStore_GetUserGameInterestState_Response_InQueue = Message<"CStore_GetUserGameInterestState_Response.InQueue"> & {
  /**
   * @generated from field: optional EStoreDiscoveryQueueType type = 1 [default = k_EStoreDiscoveryQueueTypeNew];
   */
  type: EStoreDiscoveryQueueType;

  /**
   * @generated from field: optional bool skipped = 2;
   */
  skipped: boolean;

  /**
   * @generated from field: optional int32 items_remaining = 3;
   */
  itemsRemaining: number;

  /**
   * @generated from field: optional uint32 next_appid = 4;
   */
  nextAppid: number;

  /**
   * @generated from field: optional uint32 experimental_cohort = 5;
   */
  experimentalCohort: number;
};

/**
 * Describes the message CStore_GetUserGameInterestState_Response.InQueue.
 * Use `create(CStore_GetUserGameInterestState_Response_InQueueSchema)` to create a new message.
 */
export const CStore_GetUserGameInterestState_Response_InQueueSchema: GenMessage<CStore_GetUserGameInterestState_Response_InQueue> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 19, 0);

/**
 * @generated from message CStore_GetDiscoveryQueueSkippedApps_Request
 */
export type CStore_GetDiscoveryQueueSkippedApps_Request = Message<"CStore_GetDiscoveryQueueSkippedApps_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional EStoreDiscoveryQueueType queue_type = 2 [default = k_EStoreDiscoveryQueueTypeNew];
   */
  queueType: EStoreDiscoveryQueueType;

  /**
   * @generated from field: optional CStorePageFilter store_page_filter = 3;
   */
  storePageFilter?: CStorePageFilter;
};

/**
 * Describes the message CStore_GetDiscoveryQueueSkippedApps_Request.
 * Use `create(CStore_GetDiscoveryQueueSkippedApps_RequestSchema)` to create a new message.
 */
export const CStore_GetDiscoveryQueueSkippedApps_RequestSchema: GenMessage<CStore_GetDiscoveryQueueSkippedApps_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 20);

/**
 * @generated from message CStore_GetDiscoveryQueueSkippedApps_Response
 */
export type CStore_GetDiscoveryQueueSkippedApps_Response = Message<"CStore_GetDiscoveryQueueSkippedApps_Response"> & {
  /**
   * @generated from field: repeated uint32 appids = 1;
   */
  appids: number[];
};

/**
 * Describes the message CStore_GetDiscoveryQueueSkippedApps_Response.
 * Use `create(CStore_GetDiscoveryQueueSkippedApps_ResponseSchema)` to create a new message.
 */
export const CStore_GetDiscoveryQueueSkippedApps_ResponseSchema: GenMessage<CStore_GetDiscoveryQueueSkippedApps_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 21);

/**
 * @generated from message CStore_ReportApp_Request
 */
export type CStore_ReportApp_Request = Message<"CStore_ReportApp_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional EAppReportType report_type = 2 [default = k_EAppReportType_Invalid];
   */
  reportType: EAppReportType;

  /**
   * @generated from field: optional string report = 3;
   */
  report: string;
};

/**
 * Describes the message CStore_ReportApp_Request.
 * Use `create(CStore_ReportApp_RequestSchema)` to create a new message.
 */
export const CStore_ReportApp_RequestSchema: GenMessage<CStore_ReportApp_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 22);

/**
 * @generated from message CStore_ReportApp_Response
 */
export type CStore_ReportApp_Response = Message<"CStore_ReportApp_Response"> & {
};

/**
 * Describes the message CStore_ReportApp_Response.
 * Use `create(CStore_ReportApp_ResponseSchema)` to create a new message.
 */
export const CStore_ReportApp_ResponseSchema: GenMessage<CStore_ReportApp_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 23);

/**
 * @generated from message CStore_GetStorePreferences_Request
 */
export type CStore_GetStorePreferences_Request = Message<"CStore_GetStorePreferences_Request"> & {
  /**
   * @generated from field: optional string country_code = 1;
   */
  countryCode: string;
};

/**
 * Describes the message CStore_GetStorePreferences_Request.
 * Use `create(CStore_GetStorePreferences_RequestSchema)` to create a new message.
 */
export const CStore_GetStorePreferences_RequestSchema: GenMessage<CStore_GetStorePreferences_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 24);

/**
 * @generated from message CStore_UserPreferences
 */
export type CStore_UserPreferences = Message<"CStore_UserPreferences"> & {
  /**
   * @generated from field: optional int32 primary_language = 1;
   */
  primaryLanguage: number;

  /**
   * @generated from field: optional uint32 secondary_languages = 2;
   */
  secondaryLanguages: number;

  /**
   * @generated from field: optional bool platform_windows = 3;
   */
  platformWindows: boolean;

  /**
   * @generated from field: optional bool platform_mac = 4;
   */
  platformMac: boolean;

  /**
   * @generated from field: optional bool platform_linux = 5;
   */
  platformLinux: boolean;

  /**
   * @generated from field: optional uint32 timestamp_updated = 8;
   */
  timestampUpdated: number;

  /**
   * @generated from field: optional bool hide_store_broadcast = 9;
   */
  hideStoreBroadcast: boolean;

  /**
   * @generated from field: optional EUserReviewScorePreference review_score_preference = 10 [default = k_EUserReviewScorePreference_Unset];
   */
  reviewScorePreference: EUserReviewScorePreference;

  /**
   * @generated from field: optional int32 timestamp_content_descriptor_preferences_updated = 11;
   */
  timestampContentDescriptorPreferencesUpdated: number;

  /**
   * @generated from field: optional EProvideDeckFeedbackPreference provide_deck_feedback = 12 [default = k_EProvideDeckFeedbackPreference_Unset];
   */
  provideDeckFeedback: EProvideDeckFeedbackPreference;

  /**
   * @generated from field: optional string additional_languages = 13;
   */
  additionalLanguages: string;
};

/**
 * Describes the message CStore_UserPreferences.
 * Use `create(CStore_UserPreferencesSchema)` to create a new message.
 */
export const CStore_UserPreferencesSchema: GenMessage<CStore_UserPreferences> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 25);

/**
 * @generated from message CStore_UserTagPreferences
 */
export type CStore_UserTagPreferences = Message<"CStore_UserTagPreferences"> & {
  /**
   * @generated from field: repeated CStore_UserTagPreferences.Tag tags_to_exclude = 1;
   */
  tagsToExclude: CStore_UserTagPreferences_Tag[];
};

/**
 * Describes the message CStore_UserTagPreferences.
 * Use `create(CStore_UserTagPreferencesSchema)` to create a new message.
 */
export const CStore_UserTagPreferencesSchema: GenMessage<CStore_UserTagPreferences> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 26);

/**
 * @generated from message CStore_UserTagPreferences.Tag
 */
export type CStore_UserTagPreferences_Tag = Message<"CStore_UserTagPreferences.Tag"> & {
  /**
   * @generated from field: optional uint32 tagid = 1;
   */
  tagid: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name: string;

  /**
   * @generated from field: optional uint32 timestamp_added = 3;
   */
  timestampAdded: number;
};

/**
 * Describes the message CStore_UserTagPreferences.Tag.
 * Use `create(CStore_UserTagPreferences_TagSchema)` to create a new message.
 */
export const CStore_UserTagPreferences_TagSchema: GenMessage<CStore_UserTagPreferences_Tag> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 26, 0);

/**
 * @generated from message CStore_GetStorePreferences_Response
 */
export type CStore_GetStorePreferences_Response = Message<"CStore_GetStorePreferences_Response"> & {
  /**
   * @generated from field: optional CStore_UserPreferences preferences = 1;
   */
  preferences?: CStore_UserPreferences;

  /**
   * @generated from field: optional CStore_UserTagPreferences tag_preferences = 2;
   */
  tagPreferences?: CStore_UserTagPreferences;

  /**
   * @generated from field: optional UserContentDescriptorPreferences content_descriptor_preferences = 3;
   */
  contentDescriptorPreferences?: UserContentDescriptorPreferences;
};

/**
 * Describes the message CStore_GetStorePreferences_Response.
 * Use `create(CStore_GetStorePreferences_ResponseSchema)` to create a new message.
 */
export const CStore_GetStorePreferences_ResponseSchema: GenMessage<CStore_GetStorePreferences_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 27);

/**
 * @generated from message CStore_GetTrendingAppsAmongFriends_Request
 */
export type CStore_GetTrendingAppsAmongFriends_Request = Message<"CStore_GetTrendingAppsAmongFriends_Request"> & {
  /**
   * @generated from field: optional uint32 num_apps = 1;
   */
  numApps: number;

  /**
   * @generated from field: optional uint32 num_top_friends = 2;
   */
  numTopFriends: number;
};

/**
 * Describes the message CStore_GetTrendingAppsAmongFriends_Request.
 * Use `create(CStore_GetTrendingAppsAmongFriends_RequestSchema)` to create a new message.
 */
export const CStore_GetTrendingAppsAmongFriends_RequestSchema: GenMessage<CStore_GetTrendingAppsAmongFriends_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 28);

/**
 * @generated from message CStore_GetTrendingAppsAmongFriends_Response
 */
export type CStore_GetTrendingAppsAmongFriends_Response = Message<"CStore_GetTrendingAppsAmongFriends_Response"> & {
  /**
   * @generated from field: repeated CStore_GetTrendingAppsAmongFriends_Response.TrendingAppData trending_apps = 1;
   */
  trendingApps: CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData[];
};

/**
 * Describes the message CStore_GetTrendingAppsAmongFriends_Response.
 * Use `create(CStore_GetTrendingAppsAmongFriends_ResponseSchema)` to create a new message.
 */
export const CStore_GetTrendingAppsAmongFriends_ResponseSchema: GenMessage<CStore_GetTrendingAppsAmongFriends_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 29);

/**
 * @generated from message CStore_GetTrendingAppsAmongFriends_Response.TrendingAppData
 */
export type CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData = Message<"CStore_GetTrendingAppsAmongFriends_Response.TrendingAppData"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: repeated uint64 steamids_top_friends = 2;
   */
  steamidsTopFriends: bigint[];

  /**
   * @generated from field: optional uint32 total_friends = 3;
   */
  totalFriends: number;
};

/**
 * Describes the message CStore_GetTrendingAppsAmongFriends_Response.TrendingAppData.
 * Use `create(CStore_GetTrendingAppsAmongFriends_Response_TrendingAppDataSchema)` to create a new message.
 */
export const CStore_GetTrendingAppsAmongFriends_Response_TrendingAppDataSchema: GenMessage<CStore_GetTrendingAppsAmongFriends_Response_TrendingAppData> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 29, 0);

/**
 * @generated from message CStore_MigratePartnerLinkTracking_Notification
 */
export type CStore_MigratePartnerLinkTracking_Notification = Message<"CStore_MigratePartnerLinkTracking_Notification"> & {
  /**
   * @generated from field: optional uint32 accountid = 1;
   */
  accountid: number;

  /**
   * @generated from field: optional uint64 browserid = 2;
   */
  browserid: bigint;

  /**
   * @generated from field: optional EPartnerLinkTrackingBackfillSource backfill_source = 3 [default = k_EPartnerLinkTrackingBackfillSource_None];
   */
  backfillSource: EPartnerLinkTrackingBackfillSource;
};

/**
 * Describes the message CStore_MigratePartnerLinkTracking_Notification.
 * Use `create(CStore_MigratePartnerLinkTracking_NotificationSchema)` to create a new message.
 */
export const CStore_MigratePartnerLinkTracking_NotificationSchema: GenMessage<CStore_MigratePartnerLinkTracking_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 30);

/**
 * @generated from message CStore_UpdatePackageReservations_Request
 */
export type CStore_UpdatePackageReservations_Request = Message<"CStore_UpdatePackageReservations_Request"> & {
  /**
   * @generated from field: repeated uint32 packages_to_reserve = 1;
   */
  packagesToReserve: number[];

  /**
   * @generated from field: repeated uint32 packages_to_unreserve = 2;
   */
  packagesToUnreserve: number[];

  /**
   * @generated from field: optional string country_code = 3;
   */
  countryCode: string;
};

/**
 * Describes the message CStore_UpdatePackageReservations_Request.
 * Use `create(CStore_UpdatePackageReservations_RequestSchema)` to create a new message.
 */
export const CStore_UpdatePackageReservations_RequestSchema: GenMessage<CStore_UpdatePackageReservations_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 31);

/**
 * @generated from message CStore_UpdatePackageReservations_Response
 */
export type CStore_UpdatePackageReservations_Response = Message<"CStore_UpdatePackageReservations_Response"> & {
  /**
   * @generated from field: repeated CPackageReservationStatus reservation_status = 1;
   */
  reservationStatus: CPackageReservationStatus[];
};

/**
 * Describes the message CStore_UpdatePackageReservations_Response.
 * Use `create(CStore_UpdatePackageReservations_ResponseSchema)` to create a new message.
 */
export const CStore_UpdatePackageReservations_ResponseSchema: GenMessage<CStore_UpdatePackageReservations_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 32);

/**
 * @generated from message CStore_GetWishlistDemoEmailStatus_Request
 */
export type CStore_GetWishlistDemoEmailStatus_Request = Message<"CStore_GetWishlistDemoEmailStatus_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 demo_appid = 2;
   */
  demoAppid: number;

  /**
   * @generated from field: optional bool allow_late_firing = 3;
   */
  allowLateFiring: boolean;
};

/**
 * Describes the message CStore_GetWishlistDemoEmailStatus_Request.
 * Use `create(CStore_GetWishlistDemoEmailStatus_RequestSchema)` to create a new message.
 */
export const CStore_GetWishlistDemoEmailStatus_RequestSchema: GenMessage<CStore_GetWishlistDemoEmailStatus_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 33);

/**
 * @generated from message CStore_GetWishlistDemoEmailStatus_Response
 */
export type CStore_GetWishlistDemoEmailStatus_Response = Message<"CStore_GetWishlistDemoEmailStatus_Response"> & {
  /**
   * @generated from field: optional bool can_fire = 1 [default = false];
   */
  canFire: boolean;

  /**
   * @generated from field: optional uint32 time_staged = 2;
   */
  timeStaged: number;

  /**
   * @generated from field: optional uint32 demo_release_date = 3;
   */
  demoReleaseDate: number;
};

/**
 * Describes the message CStore_GetWishlistDemoEmailStatus_Response.
 * Use `create(CStore_GetWishlistDemoEmailStatus_ResponseSchema)` to create a new message.
 */
export const CStore_GetWishlistDemoEmailStatus_ResponseSchema: GenMessage<CStore_GetWishlistDemoEmailStatus_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 34);

/**
 * @generated from message CStore_QueueWishlistDemoEmailToFire_Request
 */
export type CStore_QueueWishlistDemoEmailToFire_Request = Message<"CStore_QueueWishlistDemoEmailToFire_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 demo_appid = 2;
   */
  demoAppid: number;

  /**
   * @generated from field: optional bool allow_late_firing = 3;
   */
  allowLateFiring: boolean;
};

/**
 * Describes the message CStore_QueueWishlistDemoEmailToFire_Request.
 * Use `create(CStore_QueueWishlistDemoEmailToFire_RequestSchema)` to create a new message.
 */
export const CStore_QueueWishlistDemoEmailToFire_RequestSchema: GenMessage<CStore_QueueWishlistDemoEmailToFire_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 35);

/**
 * @generated from message CStore_QueueWishlistDemoEmailToFire_Response
 */
export type CStore_QueueWishlistDemoEmailToFire_Response = Message<"CStore_QueueWishlistDemoEmailToFire_Response"> & {
};

/**
 * Describes the message CStore_QueueWishlistDemoEmailToFire_Response.
 * Use `create(CStore_QueueWishlistDemoEmailToFire_ResponseSchema)` to create a new message.
 */
export const CStore_QueueWishlistDemoEmailToFire_ResponseSchema: GenMessage<CStore_QueueWishlistDemoEmailToFire_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 36);

/**
 * @generated from message CReservationPositionMessage
 */
export type CReservationPositionMessage = Message<"CReservationPositionMessage"> & {
  /**
   * @generated from field: optional uint32 edistributor = 1;
   */
  edistributor: number;

  /**
   * @generated from field: optional string product_identifier = 2;
   */
  productIdentifier: string;

  /**
   * @generated from field: optional uint32 start_queue_position = 3;
   */
  startQueuePosition: number;

  /**
   * @generated from field: optional uint32 rtime_estimated_notification = 4;
   */
  rtimeEstimatedNotification: number;

  /**
   * @generated from field: optional string localization_token = 5;
   */
  localizationToken: string;

  /**
   * @generated from field: optional uint32 accountid = 6;
   */
  accountid: number;

  /**
   * @generated from field: optional uint32 rtime_created = 7;
   */
  rtimeCreated: number;
};

/**
 * Describes the message CReservationPositionMessage.
 * Use `create(CReservationPositionMessageSchema)` to create a new message.
 */
export const CReservationPositionMessageSchema: GenMessage<CReservationPositionMessage> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 37);

/**
 * @generated from message CStore_SetReservationPositionMessage_Request
 */
export type CStore_SetReservationPositionMessage_Request = Message<"CStore_SetReservationPositionMessage_Request"> & {
  /**
   * @generated from field: repeated CReservationPositionMessage settings = 1;
   */
  settings: CReservationPositionMessage[];
};

/**
 * Describes the message CStore_SetReservationPositionMessage_Request.
 * Use `create(CStore_SetReservationPositionMessage_RequestSchema)` to create a new message.
 */
export const CStore_SetReservationPositionMessage_RequestSchema: GenMessage<CStore_SetReservationPositionMessage_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 38);

/**
 * @generated from message CStore_SetReservationPositionMessage_Response
 */
export type CStore_SetReservationPositionMessage_Response = Message<"CStore_SetReservationPositionMessage_Response"> & {
};

/**
 * Describes the message CStore_SetReservationPositionMessage_Response.
 * Use `create(CStore_SetReservationPositionMessage_ResponseSchema)` to create a new message.
 */
export const CStore_SetReservationPositionMessage_ResponseSchema: GenMessage<CStore_SetReservationPositionMessage_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 39);

/**
 * @generated from message CStore_DeleteReservationPositionMessage_Request
 */
export type CStore_DeleteReservationPositionMessage_Request = Message<"CStore_DeleteReservationPositionMessage_Request"> & {
  /**
   * @generated from field: optional uint32 edistributor = 1;
   */
  edistributor: number;

  /**
   * @generated from field: optional string product_identifier = 2;
   */
  productIdentifier: string;

  /**
   * @generated from field: optional uint32 start_queue_position = 3;
   */
  startQueuePosition: number;
};

/**
 * Describes the message CStore_DeleteReservationPositionMessage_Request.
 * Use `create(CStore_DeleteReservationPositionMessage_RequestSchema)` to create a new message.
 */
export const CStore_DeleteReservationPositionMessage_RequestSchema: GenMessage<CStore_DeleteReservationPositionMessage_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 40);

/**
 * @generated from message CStore_DeleteReservationPositionMessage_Response
 */
export type CStore_DeleteReservationPositionMessage_Response = Message<"CStore_DeleteReservationPositionMessage_Response"> & {
};

/**
 * Describes the message CStore_DeleteReservationPositionMessage_Response.
 * Use `create(CStore_DeleteReservationPositionMessage_ResponseSchema)` to create a new message.
 */
export const CStore_DeleteReservationPositionMessage_ResponseSchema: GenMessage<CStore_DeleteReservationPositionMessage_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 41);

/**
 * @generated from message CStore_GetAllReservationPositionMessages_Request
 */
export type CStore_GetAllReservationPositionMessages_Request = Message<"CStore_GetAllReservationPositionMessages_Request"> & {
};

/**
 * Describes the message CStore_GetAllReservationPositionMessages_Request.
 * Use `create(CStore_GetAllReservationPositionMessages_RequestSchema)` to create a new message.
 */
export const CStore_GetAllReservationPositionMessages_RequestSchema: GenMessage<CStore_GetAllReservationPositionMessages_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 42);

/**
 * @generated from message CStore_GetAllReservationPositionMessages_Response
 */
export type CStore_GetAllReservationPositionMessages_Response = Message<"CStore_GetAllReservationPositionMessages_Response"> & {
  /**
   * @generated from field: repeated CReservationPositionMessage settings = 1;
   */
  settings: CReservationPositionMessage[];
};

/**
 * Describes the message CStore_GetAllReservationPositionMessages_Response.
 * Use `create(CStore_GetAllReservationPositionMessages_ResponseSchema)` to create a new message.
 */
export const CStore_GetAllReservationPositionMessages_ResponseSchema: GenMessage<CStore_GetAllReservationPositionMessages_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 43);

/**
 * @generated from message CStore_ReloadAllReservationPositionMessages_Notification
 */
export type CStore_ReloadAllReservationPositionMessages_Notification = Message<"CStore_ReloadAllReservationPositionMessages_Notification"> & {
};

/**
 * Describes the message CStore_ReloadAllReservationPositionMessages_Notification.
 * Use `create(CStore_ReloadAllReservationPositionMessages_NotificationSchema)` to create a new message.
 */
export const CStore_ReloadAllReservationPositionMessages_NotificationSchema: GenMessage<CStore_ReloadAllReservationPositionMessages_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 44);

/**
 * @generated from message CSteamDeckCompatibility_SetFeedback_Request
 */
export type CSteamDeckCompatibility_SetFeedback_Request = Message<"CSteamDeckCompatibility_SetFeedback_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional ESteamDeckCompatibilityFeedback feedback = 2 [default = k_ESteamDeckCompatibilityFeedback_Unset];
   */
  feedback: ESteamDeckCompatibilityFeedback;
};

/**
 * Describes the message CSteamDeckCompatibility_SetFeedback_Request.
 * Use `create(CSteamDeckCompatibility_SetFeedback_RequestSchema)` to create a new message.
 */
export const CSteamDeckCompatibility_SetFeedback_RequestSchema: GenMessage<CSteamDeckCompatibility_SetFeedback_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 45);

/**
 * @generated from message CSteamDeckCompatibility_SetFeedback_Response
 */
export type CSteamDeckCompatibility_SetFeedback_Response = Message<"CSteamDeckCompatibility_SetFeedback_Response"> & {
};

/**
 * Describes the message CSteamDeckCompatibility_SetFeedback_Response.
 * Use `create(CSteamDeckCompatibility_SetFeedback_ResponseSchema)` to create a new message.
 */
export const CSteamDeckCompatibility_SetFeedback_ResponseSchema: GenMessage<CSteamDeckCompatibility_SetFeedback_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 46);

/**
 * @generated from message CSteamDeckCompatibility_ShouldPrompt_Request
 */
export type CSteamDeckCompatibility_ShouldPrompt_Request = Message<"CSteamDeckCompatibility_ShouldPrompt_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;
};

/**
 * Describes the message CSteamDeckCompatibility_ShouldPrompt_Request.
 * Use `create(CSteamDeckCompatibility_ShouldPrompt_RequestSchema)` to create a new message.
 */
export const CSteamDeckCompatibility_ShouldPrompt_RequestSchema: GenMessage<CSteamDeckCompatibility_ShouldPrompt_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 47);

/**
 * @generated from message CSteamDeckCompatibility_ShouldPrompt_Response
 */
export type CSteamDeckCompatibility_ShouldPrompt_Response = Message<"CSteamDeckCompatibility_ShouldPrompt_Response"> & {
  /**
   * @generated from field: optional bool prompt = 1;
   */
  prompt: boolean;

  /**
   * @generated from field: optional bool feedback_eligible = 2;
   */
  feedbackEligible: boolean;

  /**
   * @generated from field: optional ESteamDeckCompatibilityFeedback existing_feedback = 3 [default = k_ESteamDeckCompatibilityFeedback_Unset];
   */
  existingFeedback: ESteamDeckCompatibilityFeedback;
};

/**
 * Describes the message CSteamDeckCompatibility_ShouldPrompt_Response.
 * Use `create(CSteamDeckCompatibility_ShouldPrompt_ResponseSchema)` to create a new message.
 */
export const CSteamDeckCompatibility_ShouldPrompt_ResponseSchema: GenMessage<CSteamDeckCompatibility_ShouldPrompt_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 48);

/**
 * @generated from message CStore_StorePreferencesChanged_Notification
 */
export type CStore_StorePreferencesChanged_Notification = Message<"CStore_StorePreferencesChanged_Notification"> & {
  /**
   * @generated from field: optional CStore_UserPreferences preferences = 1;
   */
  preferences?: CStore_UserPreferences;

  /**
   * @generated from field: optional CStore_UserTagPreferences tag_preferences = 2;
   */
  tagPreferences?: CStore_UserTagPreferences;

  /**
   * @generated from field: optional UserContentDescriptorPreferences content_descriptor_preferences = 3;
   */
  contentDescriptorPreferences?: UserContentDescriptorPreferences;
};

/**
 * Describes the message CStore_StorePreferencesChanged_Notification.
 * Use `create(CStore_StorePreferencesChanged_NotificationSchema)` to create a new message.
 */
export const CStore_StorePreferencesChanged_NotificationSchema: GenMessage<CStore_StorePreferencesChanged_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_store_steamclient, 49);

/**
 * @generated from enum EStoreDiscoveryQueueType
 */
export enum EStoreDiscoveryQueueType {
  /**
   * @generated from enum value: k_EStoreDiscoveryQueueTypeNew = 0;
   */
  k_EStoreDiscoveryQueueTypeNew = 0,

  /**
   * @generated from enum value: k_EStoreDiscoveryQueueTypeComingSoon = 1;
   */
  k_EStoreDiscoveryQueueTypeComingSoon = 1,

  /**
   * @generated from enum value: k_EStoreDiscoveryQueueTypeRecommended = 2;
   */
  k_EStoreDiscoveryQueueTypeRecommended = 2,

  /**
   * @generated from enum value: k_EStoreDiscoveryQueueTypeEveryNewRelease = 3;
   */
  k_EStoreDiscoveryQueueTypeEveryNewRelease = 3,

  /**
   * @generated from enum value: k_EStoreDiscoveryQueueTypeMLRecommender = 5;
   */
  k_EStoreDiscoveryQueueTypeMLRecommender = 5,

  /**
   * @generated from enum value: k_EStoreDiscoveryQueueTypeWishlistOnSale = 6;
   */
  k_EStoreDiscoveryQueueTypeWishlistOnSale = 6,

  /**
   * @generated from enum value: k_EStoreDiscoveryQueueTypeDLC = 7;
   */
  k_EStoreDiscoveryQueueTypeDLC = 7,

  /**
   * @generated from enum value: k_EStoreDiscoveryQueueTypeDLCOnSale = 8;
   */
  k_EStoreDiscoveryQueueTypeDLCOnSale = 8,

  /**
   * @generated from enum value: k_EStoreDiscoveryQueueTypeRecommendedComingSoon = 9;
   */
  k_EStoreDiscoveryQueueTypeRecommendedComingSoon = 9,

  /**
   * @generated from enum value: k_EStoreDiscoveryQueueTypeRecommendedFree = 10;
   */
  k_EStoreDiscoveryQueueTypeRecommendedFree = 10,

  /**
   * @generated from enum value: k_EStoreDiscoveryQueueTypeRecommendedOnSale = 11;
   */
  k_EStoreDiscoveryQueueTypeRecommendedOnSale = 11,

  /**
   * @generated from enum value: k_EStoreDiscoveryQueueTypeRecommendedDemos = 12;
   */
  k_EStoreDiscoveryQueueTypeRecommendedDemos = 12,

  /**
   * @generated from enum value: k_EStoreDiscoveryQueueTypeDLCNewReleases = 13;
   */
  k_EStoreDiscoveryQueueTypeDLCNewReleases = 13,

  /**
   * @generated from enum value: k_EStoreDiscoveryQueueTypeDLCTopSellers = 14;
   */
  k_EStoreDiscoveryQueueTypeDLCTopSellers = 14,

  /**
   * @generated from enum value: k_EStoreDiscoveryQueueTypeMAX = 15;
   */
  k_EStoreDiscoveryQueueTypeMAX = 15,
}

/**
 * Describes the enum EStoreDiscoveryQueueType.
 */
export const EStoreDiscoveryQueueTypeSchema: GenEnum<EStoreDiscoveryQueueType> = /*@__PURE__*/
  enumDesc(file_steammessages_store_steamclient, 0);

/**
 * @generated from enum EPlaytestStatus
 */
export enum EPlaytestStatus {
  /**
   * @generated from enum value: k_ETesterStatusNone = 0;
   */
  k_ETesterStatusNone = 0,

  /**
   * @generated from enum value: k_ETesterStatusPending = 1;
   */
  k_ETesterStatusPending = 1,

  /**
   * @generated from enum value: k_ETesterStatusInvited = 2;
   */
  k_ETesterStatusInvited = 2,

  /**
   * @generated from enum value: k_ETesterStatusGranted = 3;
   */
  k_ETesterStatusGranted = 3,

  /**
   * @generated from enum value: k_ETesterStatusExpired = 4;
   */
  k_ETesterStatusExpired = 4,
}

/**
 * Describes the enum EPlaytestStatus.
 */
export const EPlaytestStatusSchema: GenEnum<EPlaytestStatus> = /*@__PURE__*/
  enumDesc(file_steammessages_store_steamclient, 1);

/**
 * @generated from enum EAppReportType
 */
export enum EAppReportType {
  /**
   * @generated from enum value: k_EAppReportType_Invalid = 0;
   */
  k_EAppReportType_Invalid = 0,

  /**
   * @generated from enum value: k_EAppReportType_Scam = 1;
   */
  k_EAppReportType_Scam = 1,

  /**
   * @generated from enum value: k_EAppReportType_Malware = 2;
   */
  k_EAppReportType_Malware = 2,

  /**
   * @generated from enum value: k_EAppReportType_HateSpeech = 3;
   */
  k_EAppReportType_HateSpeech = 3,

  /**
   * @generated from enum value: k_EAppReportType_Pornography = 4;
   */
  k_EAppReportType_Pornography = 4,

  /**
   * @generated from enum value: k_EAppReportType_NonLabeledAdultContent = 5;
   */
  k_EAppReportType_NonLabeledAdultContent = 5,

  /**
   * @generated from enum value: k_EAppReportType_Libelous = 6;
   */
  k_EAppReportType_Libelous = 6,

  /**
   * @generated from enum value: k_EAppReportType_Offensive = 7;
   */
  k_EAppReportType_Offensive = 7,

  /**
   * @generated from enum value: k_EAppReportType_ExploitsChildren = 8;
   */
  k_EAppReportType_ExploitsChildren = 8,

  /**
   * @generated from enum value: k_EAppReportType_MtxWithNonSteamWalletPaymentMethods = 9;
   */
  k_EAppReportType_MtxWithNonSteamWalletPaymentMethods = 9,

  /**
   * @generated from enum value: k_EAppReportType_CopyrightViolation = 10;
   */
  k_EAppReportType_CopyrightViolation = 10,

  /**
   * @generated from enum value: k_EAppReportType_ViolatesLaws = 11;
   */
  k_EAppReportType_ViolatesLaws = 11,

  /**
   * @generated from enum value: k_EAppReportType_Other = 12;
   */
  k_EAppReportType_Other = 12,

  /**
   * @generated from enum value: k_EAppReportType_Broken = 13;
   */
  k_EAppReportType_Broken = 13,

  /**
   * @generated from enum value: k_EAppReportType_AIContentReport = 14;
   */
  k_EAppReportType_AIContentReport = 14,
}

/**
 * Describes the enum EAppReportType.
 */
export const EAppReportTypeSchema: GenEnum<EAppReportType> = /*@__PURE__*/
  enumDesc(file_steammessages_store_steamclient, 2);

/**
 * @generated from enum EUserReviewScorePreference
 */
export enum EUserReviewScorePreference {
  /**
   * @generated from enum value: k_EUserReviewScorePreference_Unset = 0;
   */
  k_EUserReviewScorePreference_Unset = 0,

  /**
   * @generated from enum value: k_EUserReviewScorePreference_IncludeAll = 1;
   */
  k_EUserReviewScorePreference_IncludeAll = 1,

  /**
   * @generated from enum value: k_EUserReviewScorePreference_ExcludeBombs = 2;
   */
  k_EUserReviewScorePreference_ExcludeBombs = 2,
}

/**
 * Describes the enum EUserReviewScorePreference.
 */
export const EUserReviewScorePreferenceSchema: GenEnum<EUserReviewScorePreference> = /*@__PURE__*/
  enumDesc(file_steammessages_store_steamclient, 3);

/**
 * @generated from enum EPartnerLinkTrackingBackfillSource
 */
export enum EPartnerLinkTrackingBackfillSource {
  /**
   * @generated from enum value: k_EPartnerLinkTrackingBackfillSource_None = 0;
   */
  k_EPartnerLinkTrackingBackfillSource_None = 0,

  /**
   * @generated from enum value: k_EPartnerLinkTrackingBackfillSource_Web = 1;
   */
  k_EPartnerLinkTrackingBackfillSource_Web = 1,

  /**
   * @generated from enum value: k_EPartnerLinkTrackingBackfillSource_Mobile = 2;
   */
  k_EPartnerLinkTrackingBackfillSource_Mobile = 2,

  /**
   * @generated from enum value: k_EPartnerLinkTrackingBackfillSource_Desktop = 3;
   */
  k_EPartnerLinkTrackingBackfillSource_Desktop = 3,
}

/**
 * Describes the enum EPartnerLinkTrackingBackfillSource.
 */
export const EPartnerLinkTrackingBackfillSourceSchema: GenEnum<EPartnerLinkTrackingBackfillSource> = /*@__PURE__*/
  enumDesc(file_steammessages_store_steamclient, 4);

/**
 * @generated from service Store
 */
export const Store: GenService<{
  /**
   * @generated from rpc Store.RegisterCDKey
   */
  registerCDKey: {
    methodKind: "unary";
    input: typeof CStore_RegisterCDKey_RequestSchema;
    output: typeof CStore_RegisterCDKey_ResponseSchema;
  },
  /**
   * @generated from rpc Store.GetRecommendedTagsForUser
   */
  getRecommendedTagsForUser: {
    methodKind: "unary";
    input: typeof CStore_GetRecommendedTagsForUser_RequestSchema;
    output: typeof CStore_GetRecommendedTagsForUser_ResponseSchema;
  },
  /**
   * @generated from rpc Store.GetMostPopularTags
   */
  getMostPopularTags: {
    methodKind: "unary";
    input: typeof CStore_GetMostPopularTags_RequestSchema;
    output: typeof CStore_GetMostPopularTags_ResponseSchema;
  },
  /**
   * @generated from rpc Store.GetLocalizedNameForTags
   */
  getLocalizedNameForTags: {
    methodKind: "unary";
    input: typeof CStore_GetLocalizedNameForTags_RequestSchema;
    output: typeof CStore_GetLocalizedNameForTags_ResponseSchema;
  },
  /**
   * @generated from rpc Store.GetTagList
   */
  getTagList: {
    methodKind: "unary";
    input: typeof CStore_GetTagList_RequestSchema;
    output: typeof CStore_GetTagList_ResponseSchema;
  },
  /**
   * @generated from rpc Store.GetDiscoveryQueue
   */
  getDiscoveryQueue: {
    methodKind: "unary";
    input: typeof CStore_GetDiscoveryQueue_RequestSchema;
    output: typeof CStore_GetDiscoveryQueue_ResponseSchema;
  },
  /**
   * @generated from rpc Store.GetDiscoveryQueueSettings
   */
  getDiscoveryQueueSettings: {
    methodKind: "unary";
    input: typeof CStore_GetDiscoveryQueueSettings_RequestSchema;
    output: typeof CStore_GetDiscoveryQueueSettings_ResponseSchema;
  },
  /**
   * @generated from rpc Store.SkipDiscoveryQueueItem
   */
  skipDiscoveryQueueItem: {
    methodKind: "unary";
    input: typeof CStore_SkipDiscoveryQueueItem_RequestSchema;
    output: typeof CStore_SkipDiscoveryQueueItem_ResponseSchema;
  },
  /**
   * @generated from rpc Store.GetUserGameInterestState
   */
  getUserGameInterestState: {
    methodKind: "unary";
    input: typeof CStore_GetUserGameInterestState_RequestSchema;
    output: typeof CStore_GetUserGameInterestState_ResponseSchema;
  },
  /**
   * @generated from rpc Store.GetDiscoveryQueueSkippedApps
   */
  getDiscoveryQueueSkippedApps: {
    methodKind: "unary";
    input: typeof CStore_GetDiscoveryQueueSkippedApps_RequestSchema;
    output: typeof CStore_GetDiscoveryQueueSkippedApps_ResponseSchema;
  },
  /**
   * @generated from rpc Store.ReportApp
   */
  reportApp: {
    methodKind: "unary";
    input: typeof CStore_ReportApp_RequestSchema;
    output: typeof CStore_ReportApp_ResponseSchema;
  },
  /**
   * @generated from rpc Store.GetStorePreferences
   */
  getStorePreferences: {
    methodKind: "unary";
    input: typeof CStore_GetStorePreferences_RequestSchema;
    output: typeof CStore_GetStorePreferences_ResponseSchema;
  },
  /**
   * @generated from rpc Store.GetTrendingAppsAmongFriends
   */
  getTrendingAppsAmongFriends: {
    methodKind: "unary";
    input: typeof CStore_GetTrendingAppsAmongFriends_RequestSchema;
    output: typeof CStore_GetTrendingAppsAmongFriends_ResponseSchema;
  },
  /**
   * @generated from rpc Store.MigratePartnerLinkTracking
   */
  migratePartnerLinkTracking: {
    methodKind: "unary";
    input: typeof CStore_MigratePartnerLinkTracking_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc Store.UpdatePackageReservations
   */
  updatePackageReservations: {
    methodKind: "unary";
    input: typeof CStore_UpdatePackageReservations_RequestSchema;
    output: typeof CStore_UpdatePackageReservations_ResponseSchema;
  },
  /**
   * @generated from rpc Store.GetWishlistDemoEmailStatus
   */
  getWishlistDemoEmailStatus: {
    methodKind: "unary";
    input: typeof CStore_GetWishlistDemoEmailStatus_RequestSchema;
    output: typeof CStore_GetWishlistDemoEmailStatus_ResponseSchema;
  },
  /**
   * @generated from rpc Store.QueueWishlistDemoEmailToFire
   */
  queueWishlistDemoEmailToFire: {
    methodKind: "unary";
    input: typeof CStore_QueueWishlistDemoEmailToFire_RequestSchema;
    output: typeof CStore_QueueWishlistDemoEmailToFire_ResponseSchema;
  },
  /**
   * @generated from rpc Store.SetReservationPositionMessage
   */
  setReservationPositionMessage: {
    methodKind: "unary";
    input: typeof CStore_SetReservationPositionMessage_RequestSchema;
    output: typeof CStore_SetReservationPositionMessage_ResponseSchema;
  },
  /**
   * @generated from rpc Store.DeleteReservationPositionMessage
   */
  deleteReservationPositionMessage: {
    methodKind: "unary";
    input: typeof CStore_DeleteReservationPositionMessage_RequestSchema;
    output: typeof CStore_DeleteReservationPositionMessage_ResponseSchema;
  },
  /**
   * @generated from rpc Store.GetAllReservationPositionMessages
   */
  getAllReservationPositionMessages: {
    methodKind: "unary";
    input: typeof CStore_GetAllReservationPositionMessages_RequestSchema;
    output: typeof CStore_GetAllReservationPositionMessages_ResponseSchema;
  },
  /**
   * @generated from rpc Store.ReloadAllReservationPositionMessages
   */
  reloadAllReservationPositionMessages: {
    methodKind: "unary";
    input: typeof CStore_ReloadAllReservationPositionMessages_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc Store.SetCompatibilityFeedback
   */
  setCompatibilityFeedback: {
    methodKind: "unary";
    input: typeof CSteamDeckCompatibility_SetFeedback_RequestSchema;
    output: typeof CSteamDeckCompatibility_SetFeedback_ResponseSchema;
  },
  /**
   * @generated from rpc Store.ShouldPromptForCompatibilityFeedback
   */
  shouldPromptForCompatibilityFeedback: {
    methodKind: "unary";
    input: typeof CSteamDeckCompatibility_ShouldPrompt_RequestSchema;
    output: typeof CSteamDeckCompatibility_ShouldPrompt_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_store_steamclient, 0);

/**
 * @generated from service StoreClient
 */
export const StoreClient: GenService<{
  /**
   * @generated from rpc StoreClient.NotifyStorePreferencesChanged
   */
  notifyStorePreferencesChanged: {
    methodKind: "unary";
    input: typeof CStore_StorePreferencesChanged_NotificationSchema;
    output: typeof NoResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_store_steamclient, 1);

