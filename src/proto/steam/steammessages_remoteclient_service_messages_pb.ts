// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_remoteclient_service_messages.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_remoteclient_service_messages.proto.
 */
export const file_steammessages_remoteclient_service_messages: GenFile = /*@__PURE__*/
  fileDesc("CjFzdGVhbW1lc3NhZ2VzX3JlbW90ZWNsaWVudF9zZXJ2aWNlX21lc3NhZ2VzLnByb3RvIiUKI0NSZW1vdGVDbGllbnRfQ3JlYXRlU2Vzc2lvbl9SZXF1ZXN0Ik0KJENSZW1vdGVDbGllbnRfQ3JlYXRlU2Vzc2lvbl9SZXNwb25zZRISCgpzZXNzaW9uX2lkGAEgASgGEhEKCWV1bml2ZXJzZRgCIAEoBSI+CihDUmVtb3RlQ2xpZW50X0RlbGV0ZVNlc3Npb25fTm90aWZpY2F0aW9uEhIKCnNlc3Npb25faWQYASABKAYiOAoiQ1JlbW90ZUNsaWVudF9TdGFydFBhaXJpbmdfUmVxdWVzdBISCgpzZXNzaW9uX2lkGAEgASgGIjIKI0NSZW1vdGVDbGllbnRfU3RhcnRQYWlyaW5nX1Jlc3BvbnNlEgsKA3BpbhgBIAEoDSJeCiRDUmVtb3RlQ2xpZW50X1NldFBhaXJpbmdJbmZvX1JlcXVlc3QSEgoKc2Vzc2lvbl9pZBgBIAEoBhIRCglkZXZpY2VfaWQYAiABKAYSDwoHcmVxdWVzdBgDIAEoDCInCiVDUmVtb3RlQ2xpZW50X1NldFBhaXJpbmdJbmZvX1Jlc3BvbnNlIjMKJENSZW1vdGVDbGllbnRfR2V0UGFpcmluZ0luZm9fUmVxdWVzdBILCgNwaW4YASABKA0iXwolQ1JlbW90ZUNsaWVudF9HZXRQYWlyaW5nSW5mb19SZXNwb25zZRISCgpzZXNzaW9uX2lkGAEgASgGEhEKCWRldmljZV9pZBgCIAEoBhIPCgdyZXF1ZXN0GAMgASgMIjkKI0NSZW1vdGVDbGllbnRfQ2FuY2VsUGFpcmluZ19SZXF1ZXN0EhIKCnNlc3Npb25faWQYASABKAYiJgokQ1JlbW90ZUNsaWVudF9DYW5jZWxQYWlyaW5nX1Jlc3BvbnNlImkKL0NSZW1vdGVDbGllbnRfUmVnaXN0ZXJTdGF0dXNVcGRhdGVfTm90aWZpY2F0aW9uEhIKCnNlc3Npb25faWQYASABKAYSDwoHc3RlYW1pZBgCIAEoBhIRCglkZXZpY2VfaWQYAyABKAYiWAoxQ1JlbW90ZUNsaWVudF9VbnJlZ2lzdGVyU3RhdHVzVXBkYXRlX05vdGlmaWNhdGlvbhISCgpzZXNzaW9uX2lkGAEgASgGEg8KB3N0ZWFtaWQYAiABKAYiaAobQ1JlbW90ZUNsaWVudF9EZXZpY2VEZXRhaWxzEhwKFGRldmljZV9mcmllbmRseV9uYW1lGAEgASgJEg8KB29zX3R5cGUYAiABKAUSGgoSZ2FtaW5nX2RldmljZV90eXBlGAMgASgNIoQBCiFDUmVtb3RlQ2xpZW50X09ubGluZV9Ob3RpZmljYXRpb24SDwoHc3RlYW1pZBgBIAEoBhIYChByZW1vdGVfY2xpZW50X2lkGAIgASgGEjQKDmRldmljZV9kZXRhaWxzGAMgASgLMhwuQ1JlbW90ZUNsaWVudF9EZXZpY2VEZXRhaWxzIigKJkNSZW1vdGVDbGllbnRfR2V0UmVjZW50Q2xpZW50c19SZXF1ZXN0In0KGUNSZW1vdGVDbGllbnRfQ2xpZW50TG9naW4SGAoQcmVtb3RlX2NsaWVudF9pZBgBIAEoBhIQCgh0b2tlbl9pZBgCIAEoBhI0Cg5kZXZpY2VfZGV0YWlscxgDIAEoCzIcLkNSZW1vdGVDbGllbnRfRGV2aWNlRGV0YWlscyLBAQobQ1JlbW90ZUNsaWVudF9DbGllbnREZXRhaWxzEhgKEHJlbW90ZV9jbGllbnRfaWQYASABKAYSNAoOZGV2aWNlX2RldGFpbHMYAiABKAsyHC5DUmVtb3RlQ2xpZW50X0RldmljZURldGFpbHMSEQoJbGFzdF9zZWVuGAQgASgEEgwKBGNpdHkYBSABKAkSDQoFc3RhdGUYBiABKAkSDwoHY291bnRyeRgHIAEoCRIRCglpc19vbmxpbmUYCCABKAgiWAonQ1JlbW90ZUNsaWVudF9HZXRSZWNlbnRDbGllbnRzX1Jlc3BvbnNlEi0KB2NsaWVudHMYASADKAsyHC5DUmVtb3RlQ2xpZW50X0NsaWVudERldGFpbHMigwEKEkNSZW1vdGVDbGllbnRfVGFzaxI+CgR0eXBlGAEgASgOMhQuRUNMaWVudFRhc2tMaXN0VHlwZToaa19FQ2xpZW50VGFza19Eb3dubG9hZENsaXASDwoHdGFza19pZBgCIAEoBhILCgN1cmwYAyABKAkSDwoHZmlsZV9pZBgEIAEoAyJiCiNDUmVtb3RlQ2xpZW50X0FkZENsaWVudFRhc2tfUmVxdWVzdBIYChByZW1vdGVfY2xpZW50X2lkGAEgASgGEiEKBHRhc2sYAiABKAsyEy5DUmVtb3RlQ2xpZW50X1Rhc2siJgokQ1JlbW90ZUNsaWVudF9BZGRDbGllbnRUYXNrX1Jlc3BvbnNlImYKI0NSZW1vdGVDbGllbnRfVGFza0xpc3RfTm90aWZpY2F0aW9uEhgKEHJlbW90ZV9jbGllbnRfaWQYASABKAYSJQoIdGFza2xpc3QYAiADKAsyEy5DUmVtb3RlQ2xpZW50X1Rhc2siZwomQ1JlbW90ZUNsaWVudF9NYXJrVGFza0NvbXBsZXRlX1JlcXVlc3QSGAoQcmVtb3RlX2NsaWVudF9pZBgBIAEoBhIPCgd0YXNrX2lkGAIgASgGEhIKCmNvbnRlbnRfaWQYAyABKAkiKQonQ1JlbW90ZUNsaWVudF9NYXJrVGFza0NvbXBsZXRlX1Jlc3BvbnNlIl8KJ0NSZW1vdGVDbGllbnRfUmVtb3RlUGFja2V0X05vdGlmaWNhdGlvbhISCgpzZXNzaW9uX2lkGAEgASgGEg8KB3N0ZWFtaWQYAiABKAYSDwoHcGF5bG9hZBgEIAEoDCJNCiZDUmVtb3RlQ2xpZW50X1JlcGx5UGFja2V0X05vdGlmaWNhdGlvbhISCgpzZXNzaW9uX2lkGAEgASgGEg8KB3BheWxvYWQYAiABKAwiNgogQ1JlbW90ZUNsaWVudF9HZXRSZXBsaWVzX1JlcXVlc3QSEgoKc2Vzc2lvbl9pZBgBIAEoBiI0CiFDUmVtb3RlQ2xpZW50X0dldFJlcGxpZXNfUmVzcG9uc2USDwoHcGF5bG9hZBgBIAMoDCJQCilDUmVtb3RlQ2xpZW50X0FsbG9jYXRlUmVsYXlTZXJ2ZXJfUmVxdWVzdBIOCgZjZWxsaWQYASABKA0SEwoLY3JlZGVudGlhbHMYAiABKAkiQgoqQ1JlbW90ZUNsaWVudF9BbGxvY2F0ZVJlbGF5U2VydmVyX1Jlc3BvbnNlEhQKDHJlbGF5X3NlcnZlchgBIAEoCSIyCiFDUmVtb3RlQ2xpZW50X0FsbG9jYXRlU0RSX1JlcXVlc3QSDQoFYXBwaWQYASABKA0iJAoiQ1JlbW90ZUNsaWVudF9BbGxvY2F0ZVNEUl9SZXNwb25zZSJfCilDUmVtb3RlQ2xpZW50X1N0ZWFtQnJvYWRjYXN0X05vdGlmaWNhdGlvbhIPCgdzdGVhbWlkGAEgASgGEhAKCGNsaWVudGlkGAIgASgGEg8KB3BheWxvYWQYAyABKAwikwEKJ0NSZW1vdGVDbGllbnRfU3RlYW1Ub1N0ZWFtX05vdGlmaWNhdGlvbhIPCgdzdGVhbWlkGAEgASgGEhQKDHNyY19jbGllbnRpZBgCIAEoBhIUCgxkc3RfY2xpZW50aWQYAyABKAYSEAoIc2VjcmV0aWQYBCABKA0SGQoRZW5jcnlwdGVkX3BheWxvYWQYBSABKAwiuAEKIkNSZW1vdGVQbGF5X1Nlc3Npb25TdGFydGVkX1JlcXVlc3QSFwoPaG9zdF9hY2NvdW50X2lkGAEgASgNEhkKEWNsaWVudF9hY2NvdW50X2lkGAIgASgNEg0KBWFwcGlkGAMgASgNEhoKEmRldmljZV9mb3JtX2ZhY3RvchgEIAEoBRIcChRyZW1vdGVfcGxheV90b2dldGhlchgFIAEoCBIVCg1ndWVzdF9zZXNzaW9uGAYgASgIIjgKI0NSZW1vdGVQbGF5X1Nlc3Npb25TdGFydGVkX1Jlc3BvbnNlEhEKCXJlY29yZF9pZBgBIAEoBiJ1CidDUmVtb3RlUGxheV9TZXNzaW9uU3RvcHBlZF9Ob3RpZmljYXRpb24SEQoJcmVjb3JkX2lkGAEgASgGEhEKCXVzZWRfeDI2NBgCIAEoCBIRCgl1c2VkX2gyNjQYAyABKAgSEQoJdXNlZF9oZXZjGAQgASgIIrcGCiBDUmVtb3RlUGxheVRvZ2V0aGVyX05vdGlmaWNhdGlvbhIPCgdzdGVhbWlkGAEgASgGEkcKDWdyb3VwX3VwZGF0ZWQYAiABKAsyLi5DUmVtb3RlUGxheVRvZ2V0aGVyX05vdGlmaWNhdGlvbi5Hcm91cFVwZGF0ZWRIABqMAQoGUGxheWVyEg8KB3N0ZWFtaWQYASABKAYSDwoHZ3Vlc3RpZBgCIAEoDRITCgthdmF0YXJfaGFzaBgDIAEoDBIYChBrZXlib2FyZF9lbmFibGVkGAQgASgIEhUKDW1vdXNlX2VuYWJsZWQYBSABKAgSGgoSY29udHJvbGxlcl9lbmFibGVkGAYgASgIGjoKF0NvbnRyb2xsZXJTbG90X29ic29sZXRlEg4KBnNsb3RpZBgBIAEoDRIPCgdzdGVhbWlkGAIgASgGGnMKDkNvbnRyb2xsZXJTbG90Eg4KBnNsb3RpZBgBIAEoDRI4CgZwbGF5ZXIYAiABKAsyKC5DUmVtb3RlUGxheVRvZ2V0aGVyX05vdGlmaWNhdGlvbi5QbGF5ZXISFwoPY29udHJvbGxlcl90eXBlGAMgASgFGu0CCgxHcm91cFVwZGF0ZWQSFAoMaG9zdF9zdGVhbWlkGAEgASgGEhUKDWhvc3RfY2xpZW50aWQYAiABKAYSGAoQcGxheWVyc19vYnNvbGV0ZRgDIAMoBhITCgtob3N0X2dhbWVpZBgEIAEoBhJcChljb250cm9sbGVyX3Nsb3RzX29ic29sZXRlGAUgAygLMjkuQ1JlbW90ZVBsYXlUb2dldGhlcl9Ob3RpZmljYXRpb24uQ29udHJvbGxlclNsb3Rfb2Jzb2xldGUSFwoPaGFzX25ld19wbGF5ZXJzGAYgASgIEj4KDHBsYXllcl9zbG90cxgHIAMoCzIoLkNSZW1vdGVQbGF5VG9nZXRoZXJfTm90aWZpY2F0aW9uLlBsYXllchJKChBjb250cm9sbGVyX3Nsb3RzGAggAygLMjAuQ1JlbW90ZVBsYXlUb2dldGhlcl9Ob3RpZmljYXRpb24uQ29udHJvbGxlclNsb3RCCQoHTWVzc2FnZSJkCjhDUmVtb3RlQ2xpZW50X0NyZWF0ZVJlbW90ZVBsYXlUb2dldGhlckludml0YXRpb25fUmVxdWVzdBINCgVhcHBpZBgBIAEoDRIZChFsYXVuY2hfcGFyYW1ldGVycxgCIAEoCSJUCjlDUmVtb3RlQ2xpZW50X0NyZWF0ZVJlbW90ZVBsYXlUb2dldGhlckludml0YXRpb25fUmVzcG9uc2USFwoPaW52aXRhdGlvbl9jb2RlGAEgASgJIlMKOENSZW1vdGVDbGllbnRfRGVsZXRlUmVtb3RlUGxheVRvZ2V0aGVySW52aXRhdGlvbl9SZXF1ZXN0EhcKD2ludml0YXRpb25fY29kZRgBIAEoCSI7CjlDUmVtb3RlQ2xpZW50X0RlbGV0ZVJlbW90ZVBsYXlUb2dldGhlckludml0YXRpb25fUmVzcG9uc2UiUwo4Q1JlbW90ZUNsaWVudF9Mb29rdXBSZW1vdGVQbGF5VG9nZXRoZXJJbnZpdGF0aW9uX1JlcXVlc3QSFwoPaW52aXRhdGlvbl9jb2RlGAEgASgJIlMKOUNSZW1vdGVDbGllbnRfTG9va3VwUmVtb3RlUGxheVRvZ2V0aGVySW52aXRhdGlvbl9SZXNwb25zZRIWCg5pbnZpdGF0aW9uX3VybBgBIAEoCSK6BAodQ0NNUmVtb3RlQ2xpZW50X0NsaWVudE1lc3NhZ2USRgoWY3JlYXRlX3Nlc3Npb25fcmVxdWVzdBgBIAEoCzIkLkNSZW1vdGVDbGllbnRfQ3JlYXRlU2Vzc2lvbl9SZXF1ZXN0SAASRAoVc3RhcnRfcGFpcmluZ19yZXF1ZXN0GAIgASgLMiMuQ1JlbW90ZUNsaWVudF9TdGFydFBhaXJpbmdfUmVxdWVzdEgAEkkKGHNldF9wYWlyaW5nX2luZm9fcmVxdWVzdBgDIAEoCzIlLkNSZW1vdGVDbGllbnRfU2V0UGFpcmluZ0luZm9fUmVxdWVzdEgAEkYKFmNhbmNlbF9wYWlyaW5nX3JlcXVlc3QYBCABKAsyJC5DUmVtb3RlQ2xpZW50X0NhbmNlbFBhaXJpbmdfUmVxdWVzdEgAElIKFnJlZ2lzdGVyX3N0YXR1c191cGRhdGUYBSABKAsyMC5DUmVtb3RlQ2xpZW50X1JlZ2lzdGVyU3RhdHVzVXBkYXRlX05vdGlmaWNhdGlvbkgAElYKGHVucmVnaXN0ZXJfc3RhdHVzX3VwZGF0ZRgGIAEoCzIyLkNSZW1vdGVDbGllbnRfVW5yZWdpc3RlclN0YXR1c1VwZGF0ZV9Ob3RpZmljYXRpb25IABJBCg1yZW1vdGVfcGFja2V0GAcgASgLMiguQ1JlbW90ZUNsaWVudF9SZW1vdGVQYWNrZXRfTm90aWZpY2F0aW9uSABCCQoHTWVzc2FnZSKfAwodQ0NNUmVtb3RlQ2xpZW50X1NlcnZlck1lc3NhZ2USDgoGcmVzdWx0GAEgASgFEkgKF2NyZWF0ZV9zZXNzaW9uX3Jlc3BvbnNlGAIgASgLMiUuQ1JlbW90ZUNsaWVudF9DcmVhdGVTZXNzaW9uX1Jlc3BvbnNlSAASRgoWc3RhcnRfcGFpcmluZ19yZXNwb25zZRgDIAEoCzIkLkNSZW1vdGVDbGllbnRfU3RhcnRQYWlyaW5nX1Jlc3BvbnNlSAASSwoZc2V0X3BhaXJpbmdfaW5mb19yZXNwb25zZRgEIAEoCzImLkNSZW1vdGVDbGllbnRfU2V0UGFpcmluZ0luZm9fUmVzcG9uc2VIABJIChdjYW5jZWxfcGFpcmluZ19yZXNwb25zZRgFIAEoCzIlLkNSZW1vdGVDbGllbnRfQ2FuY2VsUGFpcmluZ19SZXNwb25zZUgAEjoKDHJlcGx5X3BhY2tldBgGIAEoCzIiLkNSZW1vdGVDbGllbnRfR2V0UmVwbGllc19SZXNwb25zZUgAQgkKB01lc3NhZ2UqNQoTRUNMaWVudFRhc2tMaXN0VHlwZRIeChprX0VDbGllbnRUYXNrX0Rvd25sb2FkQ2xpcBAB");

/**
 * @generated from message CRemoteClient_CreateSession_Request
 */
export type CRemoteClient_CreateSession_Request = Message<"CRemoteClient_CreateSession_Request"> & {
};

/**
 * Describes the message CRemoteClient_CreateSession_Request.
 * Use `create(CRemoteClient_CreateSession_RequestSchema)` to create a new message.
 */
export const CRemoteClient_CreateSession_RequestSchema: GenMessage<CRemoteClient_CreateSession_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 0);

/**
 * @generated from message CRemoteClient_CreateSession_Response
 */
export type CRemoteClient_CreateSession_Response = Message<"CRemoteClient_CreateSession_Response"> & {
  /**
   * @generated from field: optional fixed64 session_id = 1;
   */
  sessionId: bigint;

  /**
   * @generated from field: optional int32 euniverse = 2;
   */
  euniverse: number;
};

/**
 * Describes the message CRemoteClient_CreateSession_Response.
 * Use `create(CRemoteClient_CreateSession_ResponseSchema)` to create a new message.
 */
export const CRemoteClient_CreateSession_ResponseSchema: GenMessage<CRemoteClient_CreateSession_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 1);

/**
 * @generated from message CRemoteClient_DeleteSession_Notification
 */
export type CRemoteClient_DeleteSession_Notification = Message<"CRemoteClient_DeleteSession_Notification"> & {
  /**
   * @generated from field: optional fixed64 session_id = 1;
   */
  sessionId: bigint;
};

/**
 * Describes the message CRemoteClient_DeleteSession_Notification.
 * Use `create(CRemoteClient_DeleteSession_NotificationSchema)` to create a new message.
 */
export const CRemoteClient_DeleteSession_NotificationSchema: GenMessage<CRemoteClient_DeleteSession_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 2);

/**
 * @generated from message CRemoteClient_StartPairing_Request
 */
export type CRemoteClient_StartPairing_Request = Message<"CRemoteClient_StartPairing_Request"> & {
  /**
   * @generated from field: optional fixed64 session_id = 1;
   */
  sessionId: bigint;
};

/**
 * Describes the message CRemoteClient_StartPairing_Request.
 * Use `create(CRemoteClient_StartPairing_RequestSchema)` to create a new message.
 */
export const CRemoteClient_StartPairing_RequestSchema: GenMessage<CRemoteClient_StartPairing_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 3);

/**
 * @generated from message CRemoteClient_StartPairing_Response
 */
export type CRemoteClient_StartPairing_Response = Message<"CRemoteClient_StartPairing_Response"> & {
  /**
   * @generated from field: optional uint32 pin = 1;
   */
  pin: number;
};

/**
 * Describes the message CRemoteClient_StartPairing_Response.
 * Use `create(CRemoteClient_StartPairing_ResponseSchema)` to create a new message.
 */
export const CRemoteClient_StartPairing_ResponseSchema: GenMessage<CRemoteClient_StartPairing_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 4);

/**
 * @generated from message CRemoteClient_SetPairingInfo_Request
 */
export type CRemoteClient_SetPairingInfo_Request = Message<"CRemoteClient_SetPairingInfo_Request"> & {
  /**
   * @generated from field: optional fixed64 session_id = 1;
   */
  sessionId: bigint;

  /**
   * @generated from field: optional fixed64 device_id = 2;
   */
  deviceId: bigint;

  /**
   * @generated from field: optional bytes request = 3;
   */
  request: Uint8Array;
};

/**
 * Describes the message CRemoteClient_SetPairingInfo_Request.
 * Use `create(CRemoteClient_SetPairingInfo_RequestSchema)` to create a new message.
 */
export const CRemoteClient_SetPairingInfo_RequestSchema: GenMessage<CRemoteClient_SetPairingInfo_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 5);

/**
 * @generated from message CRemoteClient_SetPairingInfo_Response
 */
export type CRemoteClient_SetPairingInfo_Response = Message<"CRemoteClient_SetPairingInfo_Response"> & {
};

/**
 * Describes the message CRemoteClient_SetPairingInfo_Response.
 * Use `create(CRemoteClient_SetPairingInfo_ResponseSchema)` to create a new message.
 */
export const CRemoteClient_SetPairingInfo_ResponseSchema: GenMessage<CRemoteClient_SetPairingInfo_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 6);

/**
 * @generated from message CRemoteClient_GetPairingInfo_Request
 */
export type CRemoteClient_GetPairingInfo_Request = Message<"CRemoteClient_GetPairingInfo_Request"> & {
  /**
   * @generated from field: optional uint32 pin = 1;
   */
  pin: number;
};

/**
 * Describes the message CRemoteClient_GetPairingInfo_Request.
 * Use `create(CRemoteClient_GetPairingInfo_RequestSchema)` to create a new message.
 */
export const CRemoteClient_GetPairingInfo_RequestSchema: GenMessage<CRemoteClient_GetPairingInfo_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 7);

/**
 * @generated from message CRemoteClient_GetPairingInfo_Response
 */
export type CRemoteClient_GetPairingInfo_Response = Message<"CRemoteClient_GetPairingInfo_Response"> & {
  /**
   * @generated from field: optional fixed64 session_id = 1;
   */
  sessionId: bigint;

  /**
   * @generated from field: optional fixed64 device_id = 2;
   */
  deviceId: bigint;

  /**
   * @generated from field: optional bytes request = 3;
   */
  request: Uint8Array;
};

/**
 * Describes the message CRemoteClient_GetPairingInfo_Response.
 * Use `create(CRemoteClient_GetPairingInfo_ResponseSchema)` to create a new message.
 */
export const CRemoteClient_GetPairingInfo_ResponseSchema: GenMessage<CRemoteClient_GetPairingInfo_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 8);

/**
 * @generated from message CRemoteClient_CancelPairing_Request
 */
export type CRemoteClient_CancelPairing_Request = Message<"CRemoteClient_CancelPairing_Request"> & {
  /**
   * @generated from field: optional fixed64 session_id = 1;
   */
  sessionId: bigint;
};

/**
 * Describes the message CRemoteClient_CancelPairing_Request.
 * Use `create(CRemoteClient_CancelPairing_RequestSchema)` to create a new message.
 */
export const CRemoteClient_CancelPairing_RequestSchema: GenMessage<CRemoteClient_CancelPairing_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 9);

/**
 * @generated from message CRemoteClient_CancelPairing_Response
 */
export type CRemoteClient_CancelPairing_Response = Message<"CRemoteClient_CancelPairing_Response"> & {
};

/**
 * Describes the message CRemoteClient_CancelPairing_Response.
 * Use `create(CRemoteClient_CancelPairing_ResponseSchema)` to create a new message.
 */
export const CRemoteClient_CancelPairing_ResponseSchema: GenMessage<CRemoteClient_CancelPairing_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 10);

/**
 * @generated from message CRemoteClient_RegisterStatusUpdate_Notification
 */
export type CRemoteClient_RegisterStatusUpdate_Notification = Message<"CRemoteClient_RegisterStatusUpdate_Notification"> & {
  /**
   * @generated from field: optional fixed64 session_id = 1;
   */
  sessionId: bigint;

  /**
   * @generated from field: optional fixed64 steamid = 2;
   */
  steamid: bigint;

  /**
   * @generated from field: optional fixed64 device_id = 3;
   */
  deviceId: bigint;
};

/**
 * Describes the message CRemoteClient_RegisterStatusUpdate_Notification.
 * Use `create(CRemoteClient_RegisterStatusUpdate_NotificationSchema)` to create a new message.
 */
export const CRemoteClient_RegisterStatusUpdate_NotificationSchema: GenMessage<CRemoteClient_RegisterStatusUpdate_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 11);

/**
 * @generated from message CRemoteClient_UnregisterStatusUpdate_Notification
 */
export type CRemoteClient_UnregisterStatusUpdate_Notification = Message<"CRemoteClient_UnregisterStatusUpdate_Notification"> & {
  /**
   * @generated from field: optional fixed64 session_id = 1;
   */
  sessionId: bigint;

  /**
   * @generated from field: optional fixed64 steamid = 2;
   */
  steamid: bigint;
};

/**
 * Describes the message CRemoteClient_UnregisterStatusUpdate_Notification.
 * Use `create(CRemoteClient_UnregisterStatusUpdate_NotificationSchema)` to create a new message.
 */
export const CRemoteClient_UnregisterStatusUpdate_NotificationSchema: GenMessage<CRemoteClient_UnregisterStatusUpdate_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 12);

/**
 * @generated from message CRemoteClient_DeviceDetails
 */
export type CRemoteClient_DeviceDetails = Message<"CRemoteClient_DeviceDetails"> & {
  /**
   * @generated from field: optional string device_friendly_name = 1;
   */
  deviceFriendlyName: string;

  /**
   * @generated from field: optional int32 os_type = 2;
   */
  osType: number;

  /**
   * @generated from field: optional uint32 gaming_device_type = 3;
   */
  gamingDeviceType: number;
};

/**
 * Describes the message CRemoteClient_DeviceDetails.
 * Use `create(CRemoteClient_DeviceDetailsSchema)` to create a new message.
 */
export const CRemoteClient_DeviceDetailsSchema: GenMessage<CRemoteClient_DeviceDetails> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 13);

/**
 * @generated from message CRemoteClient_Online_Notification
 */
export type CRemoteClient_Online_Notification = Message<"CRemoteClient_Online_Notification"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional fixed64 remote_client_id = 2;
   */
  remoteClientId: bigint;

  /**
   * @generated from field: optional CRemoteClient_DeviceDetails device_details = 3;
   */
  deviceDetails?: CRemoteClient_DeviceDetails;
};

/**
 * Describes the message CRemoteClient_Online_Notification.
 * Use `create(CRemoteClient_Online_NotificationSchema)` to create a new message.
 */
export const CRemoteClient_Online_NotificationSchema: GenMessage<CRemoteClient_Online_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 14);

/**
 * @generated from message CRemoteClient_GetRecentClients_Request
 */
export type CRemoteClient_GetRecentClients_Request = Message<"CRemoteClient_GetRecentClients_Request"> & {
};

/**
 * Describes the message CRemoteClient_GetRecentClients_Request.
 * Use `create(CRemoteClient_GetRecentClients_RequestSchema)` to create a new message.
 */
export const CRemoteClient_GetRecentClients_RequestSchema: GenMessage<CRemoteClient_GetRecentClients_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 15);

/**
 * @generated from message CRemoteClient_ClientLogin
 */
export type CRemoteClient_ClientLogin = Message<"CRemoteClient_ClientLogin"> & {
  /**
   * @generated from field: optional fixed64 remote_client_id = 1;
   */
  remoteClientId: bigint;

  /**
   * @generated from field: optional fixed64 token_id = 2;
   */
  tokenId: bigint;

  /**
   * @generated from field: optional CRemoteClient_DeviceDetails device_details = 3;
   */
  deviceDetails?: CRemoteClient_DeviceDetails;
};

/**
 * Describes the message CRemoteClient_ClientLogin.
 * Use `create(CRemoteClient_ClientLoginSchema)` to create a new message.
 */
export const CRemoteClient_ClientLoginSchema: GenMessage<CRemoteClient_ClientLogin> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 16);

/**
 * @generated from message CRemoteClient_ClientDetails
 */
export type CRemoteClient_ClientDetails = Message<"CRemoteClient_ClientDetails"> & {
  /**
   * @generated from field: optional fixed64 remote_client_id = 1;
   */
  remoteClientId: bigint;

  /**
   * @generated from field: optional CRemoteClient_DeviceDetails device_details = 2;
   */
  deviceDetails?: CRemoteClient_DeviceDetails;

  /**
   * @generated from field: optional uint64 last_seen = 4;
   */
  lastSeen: bigint;

  /**
   * @generated from field: optional string city = 5;
   */
  city: string;

  /**
   * @generated from field: optional string state = 6;
   */
  state: string;

  /**
   * @generated from field: optional string country = 7;
   */
  country: string;

  /**
   * @generated from field: optional bool is_online = 8;
   */
  isOnline: boolean;
};

/**
 * Describes the message CRemoteClient_ClientDetails.
 * Use `create(CRemoteClient_ClientDetailsSchema)` to create a new message.
 */
export const CRemoteClient_ClientDetailsSchema: GenMessage<CRemoteClient_ClientDetails> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 17);

/**
 * @generated from message CRemoteClient_GetRecentClients_Response
 */
export type CRemoteClient_GetRecentClients_Response = Message<"CRemoteClient_GetRecentClients_Response"> & {
  /**
   * @generated from field: repeated CRemoteClient_ClientDetails clients = 1;
   */
  clients: CRemoteClient_ClientDetails[];
};

/**
 * Describes the message CRemoteClient_GetRecentClients_Response.
 * Use `create(CRemoteClient_GetRecentClients_ResponseSchema)` to create a new message.
 */
export const CRemoteClient_GetRecentClients_ResponseSchema: GenMessage<CRemoteClient_GetRecentClients_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 18);

/**
 * @generated from message CRemoteClient_Task
 */
export type CRemoteClient_Task = Message<"CRemoteClient_Task"> & {
  /**
   * @generated from field: optional ECLientTaskListType type = 1 [default = k_EClientTask_DownloadClip];
   */
  type: ECLientTaskListType;

  /**
   * @generated from field: optional fixed64 task_id = 2;
   */
  taskId: bigint;

  /**
   * @generated from field: optional string url = 3;
   */
  url: string;

  /**
   * @generated from field: optional int64 file_id = 4;
   */
  fileId: bigint;
};

/**
 * Describes the message CRemoteClient_Task.
 * Use `create(CRemoteClient_TaskSchema)` to create a new message.
 */
export const CRemoteClient_TaskSchema: GenMessage<CRemoteClient_Task> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 19);

/**
 * @generated from message CRemoteClient_AddClientTask_Request
 */
export type CRemoteClient_AddClientTask_Request = Message<"CRemoteClient_AddClientTask_Request"> & {
  /**
   * @generated from field: optional fixed64 remote_client_id = 1;
   */
  remoteClientId: bigint;

  /**
   * @generated from field: optional CRemoteClient_Task task = 2;
   */
  task?: CRemoteClient_Task;
};

/**
 * Describes the message CRemoteClient_AddClientTask_Request.
 * Use `create(CRemoteClient_AddClientTask_RequestSchema)` to create a new message.
 */
export const CRemoteClient_AddClientTask_RequestSchema: GenMessage<CRemoteClient_AddClientTask_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 20);

/**
 * @generated from message CRemoteClient_AddClientTask_Response
 */
export type CRemoteClient_AddClientTask_Response = Message<"CRemoteClient_AddClientTask_Response"> & {
};

/**
 * Describes the message CRemoteClient_AddClientTask_Response.
 * Use `create(CRemoteClient_AddClientTask_ResponseSchema)` to create a new message.
 */
export const CRemoteClient_AddClientTask_ResponseSchema: GenMessage<CRemoteClient_AddClientTask_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 21);

/**
 * @generated from message CRemoteClient_TaskList_Notification
 */
export type CRemoteClient_TaskList_Notification = Message<"CRemoteClient_TaskList_Notification"> & {
  /**
   * @generated from field: optional fixed64 remote_client_id = 1;
   */
  remoteClientId: bigint;

  /**
   * @generated from field: repeated CRemoteClient_Task tasklist = 2;
   */
  tasklist: CRemoteClient_Task[];
};

/**
 * Describes the message CRemoteClient_TaskList_Notification.
 * Use `create(CRemoteClient_TaskList_NotificationSchema)` to create a new message.
 */
export const CRemoteClient_TaskList_NotificationSchema: GenMessage<CRemoteClient_TaskList_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 22);

/**
 * @generated from message CRemoteClient_MarkTaskComplete_Request
 */
export type CRemoteClient_MarkTaskComplete_Request = Message<"CRemoteClient_MarkTaskComplete_Request"> & {
  /**
   * @generated from field: optional fixed64 remote_client_id = 1;
   */
  remoteClientId: bigint;

  /**
   * @generated from field: optional fixed64 task_id = 2;
   */
  taskId: bigint;

  /**
   * @generated from field: optional string content_id = 3;
   */
  contentId: string;
};

/**
 * Describes the message CRemoteClient_MarkTaskComplete_Request.
 * Use `create(CRemoteClient_MarkTaskComplete_RequestSchema)` to create a new message.
 */
export const CRemoteClient_MarkTaskComplete_RequestSchema: GenMessage<CRemoteClient_MarkTaskComplete_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 23);

/**
 * @generated from message CRemoteClient_MarkTaskComplete_Response
 */
export type CRemoteClient_MarkTaskComplete_Response = Message<"CRemoteClient_MarkTaskComplete_Response"> & {
};

/**
 * Describes the message CRemoteClient_MarkTaskComplete_Response.
 * Use `create(CRemoteClient_MarkTaskComplete_ResponseSchema)` to create a new message.
 */
export const CRemoteClient_MarkTaskComplete_ResponseSchema: GenMessage<CRemoteClient_MarkTaskComplete_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 24);

/**
 * @generated from message CRemoteClient_RemotePacket_Notification
 */
export type CRemoteClient_RemotePacket_Notification = Message<"CRemoteClient_RemotePacket_Notification"> & {
  /**
   * @generated from field: optional fixed64 session_id = 1;
   */
  sessionId: bigint;

  /**
   * @generated from field: optional fixed64 steamid = 2;
   */
  steamid: bigint;

  /**
   * @generated from field: optional bytes payload = 4;
   */
  payload: Uint8Array;
};

/**
 * Describes the message CRemoteClient_RemotePacket_Notification.
 * Use `create(CRemoteClient_RemotePacket_NotificationSchema)` to create a new message.
 */
export const CRemoteClient_RemotePacket_NotificationSchema: GenMessage<CRemoteClient_RemotePacket_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 25);

/**
 * @generated from message CRemoteClient_ReplyPacket_Notification
 */
export type CRemoteClient_ReplyPacket_Notification = Message<"CRemoteClient_ReplyPacket_Notification"> & {
  /**
   * @generated from field: optional fixed64 session_id = 1;
   */
  sessionId: bigint;

  /**
   * @generated from field: optional bytes payload = 2;
   */
  payload: Uint8Array;
};

/**
 * Describes the message CRemoteClient_ReplyPacket_Notification.
 * Use `create(CRemoteClient_ReplyPacket_NotificationSchema)` to create a new message.
 */
export const CRemoteClient_ReplyPacket_NotificationSchema: GenMessage<CRemoteClient_ReplyPacket_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 26);

/**
 * @generated from message CRemoteClient_GetReplies_Request
 */
export type CRemoteClient_GetReplies_Request = Message<"CRemoteClient_GetReplies_Request"> & {
  /**
   * @generated from field: optional fixed64 session_id = 1;
   */
  sessionId: bigint;
};

/**
 * Describes the message CRemoteClient_GetReplies_Request.
 * Use `create(CRemoteClient_GetReplies_RequestSchema)` to create a new message.
 */
export const CRemoteClient_GetReplies_RequestSchema: GenMessage<CRemoteClient_GetReplies_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 27);

/**
 * @generated from message CRemoteClient_GetReplies_Response
 */
export type CRemoteClient_GetReplies_Response = Message<"CRemoteClient_GetReplies_Response"> & {
  /**
   * @generated from field: repeated bytes payload = 1;
   */
  payload: Uint8Array[];
};

/**
 * Describes the message CRemoteClient_GetReplies_Response.
 * Use `create(CRemoteClient_GetReplies_ResponseSchema)` to create a new message.
 */
export const CRemoteClient_GetReplies_ResponseSchema: GenMessage<CRemoteClient_GetReplies_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 28);

/**
 * @generated from message CRemoteClient_AllocateRelayServer_Request
 */
export type CRemoteClient_AllocateRelayServer_Request = Message<"CRemoteClient_AllocateRelayServer_Request"> & {
  /**
   * @generated from field: optional uint32 cellid = 1;
   */
  cellid: number;

  /**
   * @generated from field: optional string credentials = 2;
   */
  credentials: string;
};

/**
 * Describes the message CRemoteClient_AllocateRelayServer_Request.
 * Use `create(CRemoteClient_AllocateRelayServer_RequestSchema)` to create a new message.
 */
export const CRemoteClient_AllocateRelayServer_RequestSchema: GenMessage<CRemoteClient_AllocateRelayServer_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 29);

/**
 * @generated from message CRemoteClient_AllocateRelayServer_Response
 */
export type CRemoteClient_AllocateRelayServer_Response = Message<"CRemoteClient_AllocateRelayServer_Response"> & {
  /**
   * @generated from field: optional string relay_server = 1;
   */
  relayServer: string;
};

/**
 * Describes the message CRemoteClient_AllocateRelayServer_Response.
 * Use `create(CRemoteClient_AllocateRelayServer_ResponseSchema)` to create a new message.
 */
export const CRemoteClient_AllocateRelayServer_ResponseSchema: GenMessage<CRemoteClient_AllocateRelayServer_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 30);

/**
 * @generated from message CRemoteClient_AllocateSDR_Request
 */
export type CRemoteClient_AllocateSDR_Request = Message<"CRemoteClient_AllocateSDR_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;
};

/**
 * Describes the message CRemoteClient_AllocateSDR_Request.
 * Use `create(CRemoteClient_AllocateSDR_RequestSchema)` to create a new message.
 */
export const CRemoteClient_AllocateSDR_RequestSchema: GenMessage<CRemoteClient_AllocateSDR_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 31);

/**
 * @generated from message CRemoteClient_AllocateSDR_Response
 */
export type CRemoteClient_AllocateSDR_Response = Message<"CRemoteClient_AllocateSDR_Response"> & {
};

/**
 * Describes the message CRemoteClient_AllocateSDR_Response.
 * Use `create(CRemoteClient_AllocateSDR_ResponseSchema)` to create a new message.
 */
export const CRemoteClient_AllocateSDR_ResponseSchema: GenMessage<CRemoteClient_AllocateSDR_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 32);

/**
 * @generated from message CRemoteClient_SteamBroadcast_Notification
 */
export type CRemoteClient_SteamBroadcast_Notification = Message<"CRemoteClient_SteamBroadcast_Notification"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional fixed64 clientid = 2;
   */
  clientid: bigint;

  /**
   * @generated from field: optional bytes payload = 3;
   */
  payload: Uint8Array;
};

/**
 * Describes the message CRemoteClient_SteamBroadcast_Notification.
 * Use `create(CRemoteClient_SteamBroadcast_NotificationSchema)` to create a new message.
 */
export const CRemoteClient_SteamBroadcast_NotificationSchema: GenMessage<CRemoteClient_SteamBroadcast_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 33);

/**
 * @generated from message CRemoteClient_SteamToSteam_Notification
 */
export type CRemoteClient_SteamToSteam_Notification = Message<"CRemoteClient_SteamToSteam_Notification"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional fixed64 src_clientid = 2;
   */
  srcClientid: bigint;

  /**
   * @generated from field: optional fixed64 dst_clientid = 3;
   */
  dstClientid: bigint;

  /**
   * @generated from field: optional uint32 secretid = 4;
   */
  secretid: number;

  /**
   * @generated from field: optional bytes encrypted_payload = 5;
   */
  encryptedPayload: Uint8Array;
};

/**
 * Describes the message CRemoteClient_SteamToSteam_Notification.
 * Use `create(CRemoteClient_SteamToSteam_NotificationSchema)` to create a new message.
 */
export const CRemoteClient_SteamToSteam_NotificationSchema: GenMessage<CRemoteClient_SteamToSteam_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 34);

/**
 * @generated from message CRemotePlay_SessionStarted_Request
 */
export type CRemotePlay_SessionStarted_Request = Message<"CRemotePlay_SessionStarted_Request"> & {
  /**
   * @generated from field: optional uint32 host_account_id = 1;
   */
  hostAccountId: number;

  /**
   * @generated from field: optional uint32 client_account_id = 2;
   */
  clientAccountId: number;

  /**
   * @generated from field: optional uint32 appid = 3;
   */
  appid: number;

  /**
   * @generated from field: optional int32 device_form_factor = 4;
   */
  deviceFormFactor: number;

  /**
   * @generated from field: optional bool remote_play_together = 5;
   */
  remotePlayTogether: boolean;

  /**
   * @generated from field: optional bool guest_session = 6;
   */
  guestSession: boolean;
};

/**
 * Describes the message CRemotePlay_SessionStarted_Request.
 * Use `create(CRemotePlay_SessionStarted_RequestSchema)` to create a new message.
 */
export const CRemotePlay_SessionStarted_RequestSchema: GenMessage<CRemotePlay_SessionStarted_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 35);

/**
 * @generated from message CRemotePlay_SessionStarted_Response
 */
export type CRemotePlay_SessionStarted_Response = Message<"CRemotePlay_SessionStarted_Response"> & {
  /**
   * @generated from field: optional fixed64 record_id = 1;
   */
  recordId: bigint;
};

/**
 * Describes the message CRemotePlay_SessionStarted_Response.
 * Use `create(CRemotePlay_SessionStarted_ResponseSchema)` to create a new message.
 */
export const CRemotePlay_SessionStarted_ResponseSchema: GenMessage<CRemotePlay_SessionStarted_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 36);

/**
 * @generated from message CRemotePlay_SessionStopped_Notification
 */
export type CRemotePlay_SessionStopped_Notification = Message<"CRemotePlay_SessionStopped_Notification"> & {
  /**
   * @generated from field: optional fixed64 record_id = 1;
   */
  recordId: bigint;

  /**
   * @generated from field: optional bool used_x264 = 2;
   */
  usedX264: boolean;

  /**
   * @generated from field: optional bool used_h264 = 3;
   */
  usedH264: boolean;

  /**
   * @generated from field: optional bool used_hevc = 4;
   */
  usedHevc: boolean;
};

/**
 * Describes the message CRemotePlay_SessionStopped_Notification.
 * Use `create(CRemotePlay_SessionStopped_NotificationSchema)` to create a new message.
 */
export const CRemotePlay_SessionStopped_NotificationSchema: GenMessage<CRemotePlay_SessionStopped_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 37);

/**
 * @generated from message CRemotePlayTogether_Notification
 */
export type CRemotePlayTogether_Notification = Message<"CRemotePlayTogether_Notification"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from oneof CRemotePlayTogether_Notification.Message
   */
  Message: {
    /**
     * @generated from field: CRemotePlayTogether_Notification.GroupUpdated group_updated = 2;
     */
    value: CRemotePlayTogether_Notification_GroupUpdated;
    case: "groupUpdated";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message CRemotePlayTogether_Notification.
 * Use `create(CRemotePlayTogether_NotificationSchema)` to create a new message.
 */
export const CRemotePlayTogether_NotificationSchema: GenMessage<CRemotePlayTogether_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 38);

/**
 * @generated from message CRemotePlayTogether_Notification.Player
 */
export type CRemotePlayTogether_Notification_Player = Message<"CRemotePlayTogether_Notification.Player"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional uint32 guestid = 2;
   */
  guestid: number;

  /**
   * @generated from field: optional bytes avatar_hash = 3;
   */
  avatarHash: Uint8Array;

  /**
   * @generated from field: optional bool keyboard_enabled = 4;
   */
  keyboardEnabled: boolean;

  /**
   * @generated from field: optional bool mouse_enabled = 5;
   */
  mouseEnabled: boolean;

  /**
   * @generated from field: optional bool controller_enabled = 6;
   */
  controllerEnabled: boolean;
};

/**
 * Describes the message CRemotePlayTogether_Notification.Player.
 * Use `create(CRemotePlayTogether_Notification_PlayerSchema)` to create a new message.
 */
export const CRemotePlayTogether_Notification_PlayerSchema: GenMessage<CRemotePlayTogether_Notification_Player> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 38, 0);

/**
 * @generated from message CRemotePlayTogether_Notification.ControllerSlot_obsolete
 */
export type CRemotePlayTogether_Notification_ControllerSlot_obsolete = Message<"CRemotePlayTogether_Notification.ControllerSlot_obsolete"> & {
  /**
   * @generated from field: optional uint32 slotid = 1;
   */
  slotid: number;

  /**
   * @generated from field: optional fixed64 steamid = 2;
   */
  steamid: bigint;
};

/**
 * Describes the message CRemotePlayTogether_Notification.ControllerSlot_obsolete.
 * Use `create(CRemotePlayTogether_Notification_ControllerSlot_obsoleteSchema)` to create a new message.
 */
export const CRemotePlayTogether_Notification_ControllerSlot_obsoleteSchema: GenMessage<CRemotePlayTogether_Notification_ControllerSlot_obsolete> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 38, 1);

/**
 * @generated from message CRemotePlayTogether_Notification.ControllerSlot
 */
export type CRemotePlayTogether_Notification_ControllerSlot = Message<"CRemotePlayTogether_Notification.ControllerSlot"> & {
  /**
   * @generated from field: optional uint32 slotid = 1;
   */
  slotid: number;

  /**
   * @generated from field: optional CRemotePlayTogether_Notification.Player player = 2;
   */
  player?: CRemotePlayTogether_Notification_Player;

  /**
   * @generated from field: optional int32 controller_type = 3;
   */
  controllerType: number;
};

/**
 * Describes the message CRemotePlayTogether_Notification.ControllerSlot.
 * Use `create(CRemotePlayTogether_Notification_ControllerSlotSchema)` to create a new message.
 */
export const CRemotePlayTogether_Notification_ControllerSlotSchema: GenMessage<CRemotePlayTogether_Notification_ControllerSlot> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 38, 2);

/**
 * @generated from message CRemotePlayTogether_Notification.GroupUpdated
 */
export type CRemotePlayTogether_Notification_GroupUpdated = Message<"CRemotePlayTogether_Notification.GroupUpdated"> & {
  /**
   * @generated from field: optional fixed64 host_steamid = 1;
   */
  hostSteamid: bigint;

  /**
   * @generated from field: optional fixed64 host_clientid = 2;
   */
  hostClientid: bigint;

  /**
   * @generated from field: repeated fixed64 players_obsolete = 3;
   */
  playersObsolete: bigint[];

  /**
   * @generated from field: optional fixed64 host_gameid = 4;
   */
  hostGameid: bigint;

  /**
   * @generated from field: repeated CRemotePlayTogether_Notification.ControllerSlot_obsolete controller_slots_obsolete = 5;
   */
  controllerSlotsObsolete: CRemotePlayTogether_Notification_ControllerSlot_obsolete[];

  /**
   * @generated from field: optional bool has_new_players = 6;
   */
  hasNewPlayers: boolean;

  /**
   * @generated from field: repeated CRemotePlayTogether_Notification.Player player_slots = 7;
   */
  playerSlots: CRemotePlayTogether_Notification_Player[];

  /**
   * @generated from field: repeated CRemotePlayTogether_Notification.ControllerSlot controller_slots = 8;
   */
  controllerSlots: CRemotePlayTogether_Notification_ControllerSlot[];
};

/**
 * Describes the message CRemotePlayTogether_Notification.GroupUpdated.
 * Use `create(CRemotePlayTogether_Notification_GroupUpdatedSchema)` to create a new message.
 */
export const CRemotePlayTogether_Notification_GroupUpdatedSchema: GenMessage<CRemotePlayTogether_Notification_GroupUpdated> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 38, 3);

/**
 * @generated from message CRemoteClient_CreateRemotePlayTogetherInvitation_Request
 */
export type CRemoteClient_CreateRemotePlayTogetherInvitation_Request = Message<"CRemoteClient_CreateRemotePlayTogetherInvitation_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional string launch_parameters = 2;
   */
  launchParameters: string;
};

/**
 * Describes the message CRemoteClient_CreateRemotePlayTogetherInvitation_Request.
 * Use `create(CRemoteClient_CreateRemotePlayTogetherInvitation_RequestSchema)` to create a new message.
 */
export const CRemoteClient_CreateRemotePlayTogetherInvitation_RequestSchema: GenMessage<CRemoteClient_CreateRemotePlayTogetherInvitation_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 39);

/**
 * @generated from message CRemoteClient_CreateRemotePlayTogetherInvitation_Response
 */
export type CRemoteClient_CreateRemotePlayTogetherInvitation_Response = Message<"CRemoteClient_CreateRemotePlayTogetherInvitation_Response"> & {
  /**
   * @generated from field: optional string invitation_code = 1;
   */
  invitationCode: string;
};

/**
 * Describes the message CRemoteClient_CreateRemotePlayTogetherInvitation_Response.
 * Use `create(CRemoteClient_CreateRemotePlayTogetherInvitation_ResponseSchema)` to create a new message.
 */
export const CRemoteClient_CreateRemotePlayTogetherInvitation_ResponseSchema: GenMessage<CRemoteClient_CreateRemotePlayTogetherInvitation_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 40);

/**
 * @generated from message CRemoteClient_DeleteRemotePlayTogetherInvitation_Request
 */
export type CRemoteClient_DeleteRemotePlayTogetherInvitation_Request = Message<"CRemoteClient_DeleteRemotePlayTogetherInvitation_Request"> & {
  /**
   * @generated from field: optional string invitation_code = 1;
   */
  invitationCode: string;
};

/**
 * Describes the message CRemoteClient_DeleteRemotePlayTogetherInvitation_Request.
 * Use `create(CRemoteClient_DeleteRemotePlayTogetherInvitation_RequestSchema)` to create a new message.
 */
export const CRemoteClient_DeleteRemotePlayTogetherInvitation_RequestSchema: GenMessage<CRemoteClient_DeleteRemotePlayTogetherInvitation_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 41);

/**
 * @generated from message CRemoteClient_DeleteRemotePlayTogetherInvitation_Response
 */
export type CRemoteClient_DeleteRemotePlayTogetherInvitation_Response = Message<"CRemoteClient_DeleteRemotePlayTogetherInvitation_Response"> & {
};

/**
 * Describes the message CRemoteClient_DeleteRemotePlayTogetherInvitation_Response.
 * Use `create(CRemoteClient_DeleteRemotePlayTogetherInvitation_ResponseSchema)` to create a new message.
 */
export const CRemoteClient_DeleteRemotePlayTogetherInvitation_ResponseSchema: GenMessage<CRemoteClient_DeleteRemotePlayTogetherInvitation_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 42);

/**
 * @generated from message CRemoteClient_LookupRemotePlayTogetherInvitation_Request
 */
export type CRemoteClient_LookupRemotePlayTogetherInvitation_Request = Message<"CRemoteClient_LookupRemotePlayTogetherInvitation_Request"> & {
  /**
   * @generated from field: optional string invitation_code = 1;
   */
  invitationCode: string;
};

/**
 * Describes the message CRemoteClient_LookupRemotePlayTogetherInvitation_Request.
 * Use `create(CRemoteClient_LookupRemotePlayTogetherInvitation_RequestSchema)` to create a new message.
 */
export const CRemoteClient_LookupRemotePlayTogetherInvitation_RequestSchema: GenMessage<CRemoteClient_LookupRemotePlayTogetherInvitation_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 43);

/**
 * @generated from message CRemoteClient_LookupRemotePlayTogetherInvitation_Response
 */
export type CRemoteClient_LookupRemotePlayTogetherInvitation_Response = Message<"CRemoteClient_LookupRemotePlayTogetherInvitation_Response"> & {
  /**
   * @generated from field: optional string invitation_url = 1;
   */
  invitationUrl: string;
};

/**
 * Describes the message CRemoteClient_LookupRemotePlayTogetherInvitation_Response.
 * Use `create(CRemoteClient_LookupRemotePlayTogetherInvitation_ResponseSchema)` to create a new message.
 */
export const CRemoteClient_LookupRemotePlayTogetherInvitation_ResponseSchema: GenMessage<CRemoteClient_LookupRemotePlayTogetherInvitation_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 44);

/**
 * @generated from message CCMRemoteClient_ClientMessage
 */
export type CCMRemoteClient_ClientMessage = Message<"CCMRemoteClient_ClientMessage"> & {
  /**
   * @generated from oneof CCMRemoteClient_ClientMessage.Message
   */
  Message: {
    /**
     * @generated from field: CRemoteClient_CreateSession_Request create_session_request = 1;
     */
    value: CRemoteClient_CreateSession_Request;
    case: "createSessionRequest";
  } | {
    /**
     * @generated from field: CRemoteClient_StartPairing_Request start_pairing_request = 2;
     */
    value: CRemoteClient_StartPairing_Request;
    case: "startPairingRequest";
  } | {
    /**
     * @generated from field: CRemoteClient_SetPairingInfo_Request set_pairing_info_request = 3;
     */
    value: CRemoteClient_SetPairingInfo_Request;
    case: "setPairingInfoRequest";
  } | {
    /**
     * @generated from field: CRemoteClient_CancelPairing_Request cancel_pairing_request = 4;
     */
    value: CRemoteClient_CancelPairing_Request;
    case: "cancelPairingRequest";
  } | {
    /**
     * @generated from field: CRemoteClient_RegisterStatusUpdate_Notification register_status_update = 5;
     */
    value: CRemoteClient_RegisterStatusUpdate_Notification;
    case: "registerStatusUpdate";
  } | {
    /**
     * @generated from field: CRemoteClient_UnregisterStatusUpdate_Notification unregister_status_update = 6;
     */
    value: CRemoteClient_UnregisterStatusUpdate_Notification;
    case: "unregisterStatusUpdate";
  } | {
    /**
     * @generated from field: CRemoteClient_RemotePacket_Notification remote_packet = 7;
     */
    value: CRemoteClient_RemotePacket_Notification;
    case: "remotePacket";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message CCMRemoteClient_ClientMessage.
 * Use `create(CCMRemoteClient_ClientMessageSchema)` to create a new message.
 */
export const CCMRemoteClient_ClientMessageSchema: GenMessage<CCMRemoteClient_ClientMessage> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 45);

/**
 * @generated from message CCMRemoteClient_ServerMessage
 */
export type CCMRemoteClient_ServerMessage = Message<"CCMRemoteClient_ServerMessage"> & {
  /**
   * @generated from field: optional int32 result = 1;
   */
  result: number;

  /**
   * @generated from oneof CCMRemoteClient_ServerMessage.Message
   */
  Message: {
    /**
     * @generated from field: CRemoteClient_CreateSession_Response create_session_response = 2;
     */
    value: CRemoteClient_CreateSession_Response;
    case: "createSessionResponse";
  } | {
    /**
     * @generated from field: CRemoteClient_StartPairing_Response start_pairing_response = 3;
     */
    value: CRemoteClient_StartPairing_Response;
    case: "startPairingResponse";
  } | {
    /**
     * @generated from field: CRemoteClient_SetPairingInfo_Response set_pairing_info_response = 4;
     */
    value: CRemoteClient_SetPairingInfo_Response;
    case: "setPairingInfoResponse";
  } | {
    /**
     * @generated from field: CRemoteClient_CancelPairing_Response cancel_pairing_response = 5;
     */
    value: CRemoteClient_CancelPairing_Response;
    case: "cancelPairingResponse";
  } | {
    /**
     * @generated from field: CRemoteClient_GetReplies_Response reply_packet = 6;
     */
    value: CRemoteClient_GetReplies_Response;
    case: "replyPacket";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message CCMRemoteClient_ServerMessage.
 * Use `create(CCMRemoteClient_ServerMessageSchema)` to create a new message.
 */
export const CCMRemoteClient_ServerMessageSchema: GenMessage<CCMRemoteClient_ServerMessage> = /*@__PURE__*/
  messageDesc(file_steammessages_remoteclient_service_messages, 46);

/**
 * @generated from enum ECLientTaskListType
 */
export enum ECLientTaskListType {
  /**
   * @generated from enum value: k_EClientTask_DownloadClip = 1;
   */
  k_EClientTask_DownloadClip = 1,
}

/**
 * Describes the enum ECLientTaskListType.
 */
export const ECLientTaskListTypeSchema: GenEnum<ECLientTaskListType> = /*@__PURE__*/
  enumDesc(file_steammessages_remoteclient_service_messages, 0);

