// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file content_manifest.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file content_manifest.proto.
 */
export const file_content_manifest: GenFile = /*@__PURE__*/
  fileDesc("ChZjb250ZW50X21hbmlmZXN0LnByb3RvIu8CChZDb250ZW50TWFuaWZlc3RQYXlsb2FkEjUKCG1hcHBpbmdzGAEgAygLMiMuQ29udGVudE1hbmlmZXN0UGF5bG9hZC5GaWxlTWFwcGluZxqdAgoLRmlsZU1hcHBpbmcSEAoIZmlsZW5hbWUYASABKAkSDAoEc2l6ZRgCIAEoBBINCgVmbGFncxgDIAEoDRIUCgxzaGFfZmlsZW5hbWUYBCABKAwSEwoLc2hhX2NvbnRlbnQYBSABKAwSPQoGY2h1bmtzGAYgAygLMi0uQ29udGVudE1hbmlmZXN0UGF5bG9hZC5GaWxlTWFwcGluZy5DaHVua0RhdGESEgoKbGlua3RhcmdldBgHIAEoCRphCglDaHVua0RhdGESCwoDc2hhGAEgASgMEgsKA2NyYxgCIAEoBxIOCgZvZmZzZXQYAyABKAQSEwoLY2Jfb3JpZ2luYWwYBCABKA0SFQoNY2JfY29tcHJlc3NlZBgFIAEoDSLsAQoXQ29udGVudE1hbmlmZXN0TWV0YWRhdGESEAoIZGVwb3RfaWQYASABKA0SFAoMZ2lkX21hbmlmZXN0GAIgASgEEhUKDWNyZWF0aW9uX3RpbWUYAyABKA0SGwoTZmlsZW5hbWVzX2VuY3J5cHRlZBgEIAEoCBIYChBjYl9kaXNrX29yaWdpbmFsGAUgASgEEhoKEmNiX2Rpc2tfY29tcHJlc3NlZBgGIAEoBBIVCg11bmlxdWVfY2h1bmtzGAcgASgNEhUKDWNyY19lbmNyeXB0ZWQYCCABKA0SEQoJY3JjX2NsZWFyGAkgASgNIi0KGENvbnRlbnRNYW5pZmVzdFNpZ25hdHVyZRIRCglzaWduYXR1cmUYASABKAwihAMKEkNvbnRlbnREZWx0YUNodW5rcxIQCghkZXBvdF9pZBgBIAEoDRIaChJtYW5pZmVzdF9pZF9zb3VyY2UYAiABKAQSGgoSbWFuaWZlc3RfaWRfdGFyZ2V0GAMgASgEEjMKC2RlbHRhQ2h1bmtzGAQgAygLMh4uQ29udGVudERlbHRhQ2h1bmtzLkRlbHRhQ2h1bmsSaAoTY2h1bmtfZGF0YV9sb2NhdGlvbhgFIAEoDjIfLkVDb250ZW50RGVsdGFDaHVua0RhdGFMb2NhdGlvbjoqa19FQ29udGVudERlbHRhQ2h1bmtEYXRhTG9jYXRpb25JblByb3RvYnVmGoQBCgpEZWx0YUNodW5rEhIKCnNoYV9zb3VyY2UYASABKAwSEgoKc2hhX3RhcmdldBgCIAEoDBIVCg1zaXplX29yaWdpbmFsGAMgASgNEhQKDHBhdGNoX21ldGhvZBgEIAEoDRINCgVjaHVuaxgFIAEoDBISCgpzaXplX2RlbHRhGAYgASgNKoMBCh5FQ29udGVudERlbHRhQ2h1bmtEYXRhTG9jYXRpb24SLgoqa19FQ29udGVudERlbHRhQ2h1bmtEYXRhTG9jYXRpb25JblByb3RvYnVmEAASMQota19FQ29udGVudERlbHRhQ2h1bmtEYXRhTG9jYXRpb25BZnRlclByb3RvYnVmEAFCBUgBgAEA");

/**
 * @generated from message ContentManifestPayload
 */
export type ContentManifestPayload = Message<"ContentManifestPayload"> & {
  /**
   * @generated from field: repeated ContentManifestPayload.FileMapping mappings = 1;
   */
  mappings: ContentManifestPayload_FileMapping[];
};

/**
 * Describes the message ContentManifestPayload.
 * Use `create(ContentManifestPayloadSchema)` to create a new message.
 */
export const ContentManifestPayloadSchema: GenMessage<ContentManifestPayload> = /*@__PURE__*/
  messageDesc(file_content_manifest, 0);

/**
 * @generated from message ContentManifestPayload.FileMapping
 */
export type ContentManifestPayload_FileMapping = Message<"ContentManifestPayload.FileMapping"> & {
  /**
   * @generated from field: optional string filename = 1;
   */
  filename: string;

  /**
   * @generated from field: optional uint64 size = 2;
   */
  size: bigint;

  /**
   * @generated from field: optional uint32 flags = 3;
   */
  flags: number;

  /**
   * @generated from field: optional bytes sha_filename = 4;
   */
  shaFilename: Uint8Array;

  /**
   * @generated from field: optional bytes sha_content = 5;
   */
  shaContent: Uint8Array;

  /**
   * @generated from field: repeated ContentManifestPayload.FileMapping.ChunkData chunks = 6;
   */
  chunks: ContentManifestPayload_FileMapping_ChunkData[];

  /**
   * @generated from field: optional string linktarget = 7;
   */
  linktarget: string;
};

/**
 * Describes the message ContentManifestPayload.FileMapping.
 * Use `create(ContentManifestPayload_FileMappingSchema)` to create a new message.
 */
export const ContentManifestPayload_FileMappingSchema: GenMessage<ContentManifestPayload_FileMapping> = /*@__PURE__*/
  messageDesc(file_content_manifest, 0, 0);

/**
 * @generated from message ContentManifestPayload.FileMapping.ChunkData
 */
export type ContentManifestPayload_FileMapping_ChunkData = Message<"ContentManifestPayload.FileMapping.ChunkData"> & {
  /**
   * @generated from field: optional bytes sha = 1;
   */
  sha: Uint8Array;

  /**
   * @generated from field: optional fixed32 crc = 2;
   */
  crc: number;

  /**
   * @generated from field: optional uint64 offset = 3;
   */
  offset: bigint;

  /**
   * @generated from field: optional uint32 cb_original = 4;
   */
  cbOriginal: number;

  /**
   * @generated from field: optional uint32 cb_compressed = 5;
   */
  cbCompressed: number;
};

/**
 * Describes the message ContentManifestPayload.FileMapping.ChunkData.
 * Use `create(ContentManifestPayload_FileMapping_ChunkDataSchema)` to create a new message.
 */
export const ContentManifestPayload_FileMapping_ChunkDataSchema: GenMessage<ContentManifestPayload_FileMapping_ChunkData> = /*@__PURE__*/
  messageDesc(file_content_manifest, 0, 0, 0);

/**
 * @generated from message ContentManifestMetadata
 */
export type ContentManifestMetadata = Message<"ContentManifestMetadata"> & {
  /**
   * @generated from field: optional uint32 depot_id = 1;
   */
  depotId: number;

  /**
   * @generated from field: optional uint64 gid_manifest = 2;
   */
  gidManifest: bigint;

  /**
   * @generated from field: optional uint32 creation_time = 3;
   */
  creationTime: number;

  /**
   * @generated from field: optional bool filenames_encrypted = 4;
   */
  filenamesEncrypted: boolean;

  /**
   * @generated from field: optional uint64 cb_disk_original = 5;
   */
  cbDiskOriginal: bigint;

  /**
   * @generated from field: optional uint64 cb_disk_compressed = 6;
   */
  cbDiskCompressed: bigint;

  /**
   * @generated from field: optional uint32 unique_chunks = 7;
   */
  uniqueChunks: number;

  /**
   * @generated from field: optional uint32 crc_encrypted = 8;
   */
  crcEncrypted: number;

  /**
   * @generated from field: optional uint32 crc_clear = 9;
   */
  crcClear: number;
};

/**
 * Describes the message ContentManifestMetadata.
 * Use `create(ContentManifestMetadataSchema)` to create a new message.
 */
export const ContentManifestMetadataSchema: GenMessage<ContentManifestMetadata> = /*@__PURE__*/
  messageDesc(file_content_manifest, 1);

/**
 * @generated from message ContentManifestSignature
 */
export type ContentManifestSignature = Message<"ContentManifestSignature"> & {
  /**
   * @generated from field: optional bytes signature = 1;
   */
  signature: Uint8Array;
};

/**
 * Describes the message ContentManifestSignature.
 * Use `create(ContentManifestSignatureSchema)` to create a new message.
 */
export const ContentManifestSignatureSchema: GenMessage<ContentManifestSignature> = /*@__PURE__*/
  messageDesc(file_content_manifest, 2);

/**
 * @generated from message ContentDeltaChunks
 */
export type ContentDeltaChunks = Message<"ContentDeltaChunks"> & {
  /**
   * @generated from field: optional uint32 depot_id = 1;
   */
  depotId: number;

  /**
   * @generated from field: optional uint64 manifest_id_source = 2;
   */
  manifestIdSource: bigint;

  /**
   * @generated from field: optional uint64 manifest_id_target = 3;
   */
  manifestIdTarget: bigint;

  /**
   * @generated from field: repeated ContentDeltaChunks.DeltaChunk deltaChunks = 4;
   */
  deltaChunks: ContentDeltaChunks_DeltaChunk[];

  /**
   * @generated from field: optional EContentDeltaChunkDataLocation chunk_data_location = 5 [default = k_EContentDeltaChunkDataLocationInProtobuf];
   */
  chunkDataLocation: EContentDeltaChunkDataLocation;
};

/**
 * Describes the message ContentDeltaChunks.
 * Use `create(ContentDeltaChunksSchema)` to create a new message.
 */
export const ContentDeltaChunksSchema: GenMessage<ContentDeltaChunks> = /*@__PURE__*/
  messageDesc(file_content_manifest, 3);

/**
 * @generated from message ContentDeltaChunks.DeltaChunk
 */
export type ContentDeltaChunks_DeltaChunk = Message<"ContentDeltaChunks.DeltaChunk"> & {
  /**
   * @generated from field: optional bytes sha_source = 1;
   */
  shaSource: Uint8Array;

  /**
   * @generated from field: optional bytes sha_target = 2;
   */
  shaTarget: Uint8Array;

  /**
   * @generated from field: optional uint32 size_original = 3;
   */
  sizeOriginal: number;

  /**
   * @generated from field: optional uint32 patch_method = 4;
   */
  patchMethod: number;

  /**
   * @generated from field: optional bytes chunk = 5;
   */
  chunk: Uint8Array;

  /**
   * @generated from field: optional uint32 size_delta = 6;
   */
  sizeDelta: number;
};

/**
 * Describes the message ContentDeltaChunks.DeltaChunk.
 * Use `create(ContentDeltaChunks_DeltaChunkSchema)` to create a new message.
 */
export const ContentDeltaChunks_DeltaChunkSchema: GenMessage<ContentDeltaChunks_DeltaChunk> = /*@__PURE__*/
  messageDesc(file_content_manifest, 3, 0);

/**
 * @generated from enum EContentDeltaChunkDataLocation
 */
export enum EContentDeltaChunkDataLocation {
  /**
   * @generated from enum value: k_EContentDeltaChunkDataLocationInProtobuf = 0;
   */
  k_EContentDeltaChunkDataLocationInProtobuf = 0,

  /**
   * @generated from enum value: k_EContentDeltaChunkDataLocationAfterProtobuf = 1;
   */
  k_EContentDeltaChunkDataLocationAfterProtobuf = 1,
}

/**
 * Describes the enum EContentDeltaChunkDataLocation.
 */
export const EContentDeltaChunkDataLocationSchema: GenEnum<EContentDeltaChunkDataLocation> = /*@__PURE__*/
  enumDesc(file_content_manifest, 0);

