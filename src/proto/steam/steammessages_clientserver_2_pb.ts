// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_clientserver_2.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_steammessages_base } from "./steammessages_base_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_clientserver_2.proto.
 */
export const file_steammessages_clientserver_2: GenFile = /*@__PURE__*/
  fileDesc("", [file_steammessages_base]);

/**
 * @generated from message CMsgClientUpdateUserGameInfo
 */
export type CMsgClientUpdateUserGameInfo = Message<"CMsgClientUpdateUserGameInfo"> & {
  /**
   * @generated from field: optional fixed64 steamid_idgs = 1;
   */
  steamidIdgs: bigint;

  /**
   * @generated from field: optional fixed64 gameid = 2;
   */
  gameid: bigint;

  /**
   * @generated from field: optional uint32 game_ip = 3;
   */
  gameIp: number;

  /**
   * @generated from field: optional uint32 game_port = 4;
   */
  gamePort: number;

  /**
   * @generated from field: optional bytes token = 5;
   */
  token: Uint8Array;
};

/**
 * Describes the message CMsgClientUpdateUserGameInfo.
 * Use `create(CMsgClientUpdateUserGameInfoSchema)` to create a new message.
 */
export const CMsgClientUpdateUserGameInfoSchema: GenMessage<CMsgClientUpdateUserGameInfo> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 0);

/**
 * @generated from message CMsgClientRichPresenceUpload
 */
export type CMsgClientRichPresenceUpload = Message<"CMsgClientRichPresenceUpload"> & {
  /**
   * @generated from field: optional bytes rich_presence_kv = 1;
   */
  richPresenceKv: Uint8Array;

  /**
   * @generated from field: repeated fixed64 steamid_broadcast = 2;
   */
  steamidBroadcast: bigint[];
};

/**
 * Describes the message CMsgClientRichPresenceUpload.
 * Use `create(CMsgClientRichPresenceUploadSchema)` to create a new message.
 */
export const CMsgClientRichPresenceUploadSchema: GenMessage<CMsgClientRichPresenceUpload> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 1);

/**
 * @generated from message CMsgClientRichPresenceRequest
 */
export type CMsgClientRichPresenceRequest = Message<"CMsgClientRichPresenceRequest"> & {
  /**
   * @generated from field: repeated fixed64 steamid_request = 1;
   */
  steamidRequest: bigint[];
};

/**
 * Describes the message CMsgClientRichPresenceRequest.
 * Use `create(CMsgClientRichPresenceRequestSchema)` to create a new message.
 */
export const CMsgClientRichPresenceRequestSchema: GenMessage<CMsgClientRichPresenceRequest> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 2);

/**
 * @generated from message CMsgClientRichPresenceInfo
 */
export type CMsgClientRichPresenceInfo = Message<"CMsgClientRichPresenceInfo"> & {
  /**
   * @generated from field: repeated CMsgClientRichPresenceInfo.RichPresence rich_presence = 1;
   */
  richPresence: CMsgClientRichPresenceInfo_RichPresence[];
};

/**
 * Describes the message CMsgClientRichPresenceInfo.
 * Use `create(CMsgClientRichPresenceInfoSchema)` to create a new message.
 */
export const CMsgClientRichPresenceInfoSchema: GenMessage<CMsgClientRichPresenceInfo> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 3);

/**
 * @generated from message CMsgClientRichPresenceInfo.KV
 */
export type CMsgClientRichPresenceInfo_KV = Message<"CMsgClientRichPresenceInfo.KV"> & {
  /**
   * @generated from field: optional string key = 1;
   */
  key: string;

  /**
   * @generated from field: optional string value = 2;
   */
  value: string;
};

/**
 * Describes the message CMsgClientRichPresenceInfo.KV.
 * Use `create(CMsgClientRichPresenceInfo_KVSchema)` to create a new message.
 */
export const CMsgClientRichPresenceInfo_KVSchema: GenMessage<CMsgClientRichPresenceInfo_KV> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 3, 0);

/**
 * @generated from message CMsgClientRichPresenceInfo.RichPresence
 */
export type CMsgClientRichPresenceInfo_RichPresence = Message<"CMsgClientRichPresenceInfo.RichPresence"> & {
  /**
   * @generated from field: optional fixed64 steamid_user = 1;
   */
  steamidUser: bigint;

  /**
   * @generated from field: repeated CMsgClientRichPresenceInfo.KV rich_presense = 3;
   */
  richPresense: CMsgClientRichPresenceInfo_KV[];
};

/**
 * Describes the message CMsgClientRichPresenceInfo.RichPresence.
 * Use `create(CMsgClientRichPresenceInfo_RichPresenceSchema)` to create a new message.
 */
export const CMsgClientRichPresenceInfo_RichPresenceSchema: GenMessage<CMsgClientRichPresenceInfo_RichPresence> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 3, 1);

/**
 * @generated from message CMsgClientCheckFileSignature
 */
export type CMsgClientCheckFileSignature = Message<"CMsgClientCheckFileSignature"> & {
  /**
   * @generated from field: optional uint32 app_id = 1;
   */
  appId: number;
};

/**
 * Describes the message CMsgClientCheckFileSignature.
 * Use `create(CMsgClientCheckFileSignatureSchema)` to create a new message.
 */
export const CMsgClientCheckFileSignatureSchema: GenMessage<CMsgClientCheckFileSignature> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 4);

/**
 * @generated from message CMsgClientCheckFileSignatureResponse
 */
export type CMsgClientCheckFileSignatureResponse = Message<"CMsgClientCheckFileSignatureResponse"> & {
  /**
   * @generated from field: optional uint32 app_id = 1;
   */
  appId: number;

  /**
   * @generated from field: optional uint32 pid = 2;
   */
  pid: number;

  /**
   * @generated from field: optional uint32 eresult = 3;
   */
  eresult: number;

  /**
   * @generated from field: optional string filename = 4;
   */
  filename: string;

  /**
   * @generated from field: optional uint32 esignatureresult = 5;
   */
  esignatureresult: number;

  /**
   * @generated from field: optional bytes sha_file = 6;
   */
  shaFile: Uint8Array;

  /**
   * @generated from field: optional bytes signatureheader = 7;
   */
  signatureheader: Uint8Array;

  /**
   * @generated from field: optional uint32 filesize = 8;
   */
  filesize: number;

  /**
   * @generated from field: optional uint32 getlasterror = 9;
   */
  getlasterror: number;

  /**
   * @generated from field: optional uint32 evalvesignaturecheckdetail = 10;
   */
  evalvesignaturecheckdetail: number;
};

/**
 * Describes the message CMsgClientCheckFileSignatureResponse.
 * Use `create(CMsgClientCheckFileSignatureResponseSchema)` to create a new message.
 */
export const CMsgClientCheckFileSignatureResponseSchema: GenMessage<CMsgClientCheckFileSignatureResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 5);

/**
 * @generated from message CMsgClientRegisterKey
 */
export type CMsgClientRegisterKey = Message<"CMsgClientRegisterKey"> & {
  /**
   * @generated from field: optional string key = 1;
   */
  key: string;
};

/**
 * Describes the message CMsgClientRegisterKey.
 * Use `create(CMsgClientRegisterKeySchema)` to create a new message.
 */
export const CMsgClientRegisterKeySchema: GenMessage<CMsgClientRegisterKey> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 6);

/**
 * @generated from message CMsgClientPurchaseResponse
 */
export type CMsgClientPurchaseResponse = Message<"CMsgClientPurchaseResponse"> & {
  /**
   * @generated from field: optional int32 eresult = 1 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional int32 purchase_result_details = 2;
   */
  purchaseResultDetails: number;

  /**
   * @generated from field: optional bytes purchase_receipt_info = 3;
   */
  purchaseReceiptInfo: Uint8Array;
};

/**
 * Describes the message CMsgClientPurchaseResponse.
 * Use `create(CMsgClientPurchaseResponseSchema)` to create a new message.
 */
export const CMsgClientPurchaseResponseSchema: GenMessage<CMsgClientPurchaseResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 7);

/**
 * @generated from message CMsgClientActivateOEMLicense
 */
export type CMsgClientActivateOEMLicense = Message<"CMsgClientActivateOEMLicense"> & {
  /**
   * @generated from field: optional string bios_manufacturer = 1;
   */
  biosManufacturer: string;

  /**
   * @generated from field: optional string bios_serialnumber = 2;
   */
  biosSerialnumber: string;

  /**
   * @generated from field: optional bytes license_file = 3;
   */
  licenseFile: Uint8Array;

  /**
   * @generated from field: optional string mainboard_manufacturer = 4;
   */
  mainboardManufacturer: string;

  /**
   * @generated from field: optional string mainboard_product = 5;
   */
  mainboardProduct: string;

  /**
   * @generated from field: optional string mainboard_serialnumber = 6;
   */
  mainboardSerialnumber: string;
};

/**
 * Describes the message CMsgClientActivateOEMLicense.
 * Use `create(CMsgClientActivateOEMLicenseSchema)` to create a new message.
 */
export const CMsgClientActivateOEMLicenseSchema: GenMessage<CMsgClientActivateOEMLicense> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 8);

/**
 * @generated from message CMsgClientRegisterOEMMachine
 */
export type CMsgClientRegisterOEMMachine = Message<"CMsgClientRegisterOEMMachine"> & {
  /**
   * @generated from field: optional bytes oem_register_file = 1;
   */
  oemRegisterFile: Uint8Array;
};

/**
 * Describes the message CMsgClientRegisterOEMMachine.
 * Use `create(CMsgClientRegisterOEMMachineSchema)` to create a new message.
 */
export const CMsgClientRegisterOEMMachineSchema: GenMessage<CMsgClientRegisterOEMMachine> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 9);

/**
 * @generated from message CMsgClientRegisterOEMMachineResponse
 */
export type CMsgClientRegisterOEMMachineResponse = Message<"CMsgClientRegisterOEMMachineResponse"> & {
  /**
   * @generated from field: optional uint32 eresult = 1;
   */
  eresult: number;
};

/**
 * Describes the message CMsgClientRegisterOEMMachineResponse.
 * Use `create(CMsgClientRegisterOEMMachineResponseSchema)` to create a new message.
 */
export const CMsgClientRegisterOEMMachineResponseSchema: GenMessage<CMsgClientRegisterOEMMachineResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 10);

/**
 * @generated from message CMsgClientPurchaseWithMachineID
 */
export type CMsgClientPurchaseWithMachineID = Message<"CMsgClientPurchaseWithMachineID"> & {
  /**
   * @generated from field: optional uint32 package_id = 1;
   */
  packageId: number;

  /**
   * @generated from field: optional bytes machine_info = 2;
   */
  machineInfo: Uint8Array;
};

/**
 * Describes the message CMsgClientPurchaseWithMachineID.
 * Use `create(CMsgClientPurchaseWithMachineIDSchema)` to create a new message.
 */
export const CMsgClientPurchaseWithMachineIDSchema: GenMessage<CMsgClientPurchaseWithMachineID> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 11);

/**
 * @generated from message CMsgTrading_InitiateTradeRequest
 */
export type CMsgTrading_InitiateTradeRequest = Message<"CMsgTrading_InitiateTradeRequest"> & {
  /**
   * @generated from field: optional uint32 trade_request_id = 1;
   */
  tradeRequestId: number;

  /**
   * @generated from field: optional uint64 other_steamid = 2;
   */
  otherSteamid: bigint;

  /**
   * @generated from field: optional string other_name = 3;
   */
  otherName: string;
};

/**
 * Describes the message CMsgTrading_InitiateTradeRequest.
 * Use `create(CMsgTrading_InitiateTradeRequestSchema)` to create a new message.
 */
export const CMsgTrading_InitiateTradeRequestSchema: GenMessage<CMsgTrading_InitiateTradeRequest> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 12);

/**
 * @generated from message CMsgTrading_InitiateTradeResponse
 */
export type CMsgTrading_InitiateTradeResponse = Message<"CMsgTrading_InitiateTradeResponse"> & {
  /**
   * @generated from field: optional uint32 response = 1;
   */
  response: number;

  /**
   * @generated from field: optional uint32 trade_request_id = 2;
   */
  tradeRequestId: number;

  /**
   * @generated from field: optional uint64 other_steamid = 3;
   */
  otherSteamid: bigint;

  /**
   * @generated from field: optional uint32 steamguard_required_days = 4;
   */
  steamguardRequiredDays: number;

  /**
   * @generated from field: optional uint32 new_device_cooldown_days = 5;
   */
  newDeviceCooldownDays: number;

  /**
   * @generated from field: optional uint32 default_password_reset_probation_days = 6;
   */
  defaultPasswordResetProbationDays: number;

  /**
   * @generated from field: optional uint32 password_reset_probation_days = 7;
   */
  passwordResetProbationDays: number;

  /**
   * @generated from field: optional uint32 default_email_change_probation_days = 8;
   */
  defaultEmailChangeProbationDays: number;

  /**
   * @generated from field: optional uint32 email_change_probation_days = 9;
   */
  emailChangeProbationDays: number;
};

/**
 * Describes the message CMsgTrading_InitiateTradeResponse.
 * Use `create(CMsgTrading_InitiateTradeResponseSchema)` to create a new message.
 */
export const CMsgTrading_InitiateTradeResponseSchema: GenMessage<CMsgTrading_InitiateTradeResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 13);

/**
 * @generated from message CMsgTrading_CancelTradeRequest
 */
export type CMsgTrading_CancelTradeRequest = Message<"CMsgTrading_CancelTradeRequest"> & {
  /**
   * @generated from field: optional uint64 other_steamid = 1;
   */
  otherSteamid: bigint;
};

/**
 * Describes the message CMsgTrading_CancelTradeRequest.
 * Use `create(CMsgTrading_CancelTradeRequestSchema)` to create a new message.
 */
export const CMsgTrading_CancelTradeRequestSchema: GenMessage<CMsgTrading_CancelTradeRequest> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 14);

/**
 * @generated from message CMsgTrading_StartSession
 */
export type CMsgTrading_StartSession = Message<"CMsgTrading_StartSession"> & {
  /**
   * @generated from field: optional uint64 other_steamid = 1;
   */
  otherSteamid: bigint;
};

/**
 * Describes the message CMsgTrading_StartSession.
 * Use `create(CMsgTrading_StartSessionSchema)` to create a new message.
 */
export const CMsgTrading_StartSessionSchema: GenMessage<CMsgTrading_StartSession> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 15);

/**
 * @generated from message CMsgClientGetDepotDecryptionKey
 */
export type CMsgClientGetDepotDecryptionKey = Message<"CMsgClientGetDepotDecryptionKey"> & {
  /**
   * @generated from field: optional uint32 depot_id = 1;
   */
  depotId: number;

  /**
   * @generated from field: optional uint32 app_id = 2;
   */
  appId: number;
};

/**
 * Describes the message CMsgClientGetDepotDecryptionKey.
 * Use `create(CMsgClientGetDepotDecryptionKeySchema)` to create a new message.
 */
export const CMsgClientGetDepotDecryptionKeySchema: GenMessage<CMsgClientGetDepotDecryptionKey> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 16);

/**
 * @generated from message CMsgClientGetDepotDecryptionKeyResponse
 */
export type CMsgClientGetDepotDecryptionKeyResponse = Message<"CMsgClientGetDepotDecryptionKeyResponse"> & {
  /**
   * @generated from field: optional int32 eresult = 1 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional uint32 depot_id = 2;
   */
  depotId: number;

  /**
   * @generated from field: optional bytes depot_encryption_key = 3;
   */
  depotEncryptionKey: Uint8Array;
};

/**
 * Describes the message CMsgClientGetDepotDecryptionKeyResponse.
 * Use `create(CMsgClientGetDepotDecryptionKeyResponseSchema)` to create a new message.
 */
export const CMsgClientGetDepotDecryptionKeyResponseSchema: GenMessage<CMsgClientGetDepotDecryptionKeyResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 17);

/**
 * @generated from message CMsgClientCheckAppBetaPassword
 */
export type CMsgClientCheckAppBetaPassword = Message<"CMsgClientCheckAppBetaPassword"> & {
  /**
   * @generated from field: optional uint32 app_id = 1;
   */
  appId: number;

  /**
   * @generated from field: optional string betapassword = 2;
   */
  betapassword: string;

  /**
   * @generated from field: optional int32 language = 3;
   */
  language: number;
};

/**
 * Describes the message CMsgClientCheckAppBetaPassword.
 * Use `create(CMsgClientCheckAppBetaPasswordSchema)` to create a new message.
 */
export const CMsgClientCheckAppBetaPasswordSchema: GenMessage<CMsgClientCheckAppBetaPassword> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 18);

/**
 * @generated from message CMsgClientCheckAppBetaPasswordResponse
 */
export type CMsgClientCheckAppBetaPasswordResponse = Message<"CMsgClientCheckAppBetaPasswordResponse"> & {
  /**
   * @generated from field: optional int32 eresult = 1 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: repeated CMsgClientCheckAppBetaPasswordResponse.BetaPassword betapasswords = 4;
   */
  betapasswords: CMsgClientCheckAppBetaPasswordResponse_BetaPassword[];
};

/**
 * Describes the message CMsgClientCheckAppBetaPasswordResponse.
 * Use `create(CMsgClientCheckAppBetaPasswordResponseSchema)` to create a new message.
 */
export const CMsgClientCheckAppBetaPasswordResponseSchema: GenMessage<CMsgClientCheckAppBetaPasswordResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 19);

/**
 * @generated from message CMsgClientCheckAppBetaPasswordResponse.BetaPassword
 */
export type CMsgClientCheckAppBetaPasswordResponse_BetaPassword = Message<"CMsgClientCheckAppBetaPasswordResponse.BetaPassword"> & {
  /**
   * @generated from field: optional string betaname = 1;
   */
  betaname: string;

  /**
   * @generated from field: optional string betapassword = 2;
   */
  betapassword: string;

  /**
   * @generated from field: optional string betadescription = 3;
   */
  betadescription: string;
};

/**
 * Describes the message CMsgClientCheckAppBetaPasswordResponse.BetaPassword.
 * Use `create(CMsgClientCheckAppBetaPasswordResponse_BetaPasswordSchema)` to create a new message.
 */
export const CMsgClientCheckAppBetaPasswordResponse_BetaPasswordSchema: GenMessage<CMsgClientCheckAppBetaPasswordResponse_BetaPassword> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 19, 0);

/**
 * @generated from message CMsgClientUGSGetGlobalStats
 */
export type CMsgClientUGSGetGlobalStats = Message<"CMsgClientUGSGetGlobalStats"> & {
  /**
   * @generated from field: optional uint64 gameid = 1;
   */
  gameid: bigint;

  /**
   * @generated from field: optional uint32 history_days_requested = 2;
   */
  historyDaysRequested: number;

  /**
   * @generated from field: optional fixed32 time_last_requested = 3;
   */
  timeLastRequested: number;

  /**
   * @generated from field: optional uint32 first_day_cached = 4;
   */
  firstDayCached: number;

  /**
   * @generated from field: optional uint32 days_cached = 5;
   */
  daysCached: number;
};

/**
 * Describes the message CMsgClientUGSGetGlobalStats.
 * Use `create(CMsgClientUGSGetGlobalStatsSchema)` to create a new message.
 */
export const CMsgClientUGSGetGlobalStatsSchema: GenMessage<CMsgClientUGSGetGlobalStats> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 20);

/**
 * @generated from message CMsgClientUGSGetGlobalStatsResponse
 */
export type CMsgClientUGSGetGlobalStatsResponse = Message<"CMsgClientUGSGetGlobalStatsResponse"> & {
  /**
   * @generated from field: optional int32 eresult = 1 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional fixed32 timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: optional int32 day_current = 3;
   */
  dayCurrent: number;

  /**
   * @generated from field: repeated CMsgClientUGSGetGlobalStatsResponse.Day days = 4;
   */
  days: CMsgClientUGSGetGlobalStatsResponse_Day[];
};

/**
 * Describes the message CMsgClientUGSGetGlobalStatsResponse.
 * Use `create(CMsgClientUGSGetGlobalStatsResponseSchema)` to create a new message.
 */
export const CMsgClientUGSGetGlobalStatsResponseSchema: GenMessage<CMsgClientUGSGetGlobalStatsResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 21);

/**
 * @generated from message CMsgClientUGSGetGlobalStatsResponse.Day
 */
export type CMsgClientUGSGetGlobalStatsResponse_Day = Message<"CMsgClientUGSGetGlobalStatsResponse.Day"> & {
  /**
   * @generated from field: optional uint32 day_id = 1;
   */
  dayId: number;

  /**
   * @generated from field: repeated CMsgClientUGSGetGlobalStatsResponse.Day.Stat stats = 2;
   */
  stats: CMsgClientUGSGetGlobalStatsResponse_Day_Stat[];
};

/**
 * Describes the message CMsgClientUGSGetGlobalStatsResponse.Day.
 * Use `create(CMsgClientUGSGetGlobalStatsResponse_DaySchema)` to create a new message.
 */
export const CMsgClientUGSGetGlobalStatsResponse_DaySchema: GenMessage<CMsgClientUGSGetGlobalStatsResponse_Day> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 21, 0);

/**
 * @generated from message CMsgClientUGSGetGlobalStatsResponse.Day.Stat
 */
export type CMsgClientUGSGetGlobalStatsResponse_Day_Stat = Message<"CMsgClientUGSGetGlobalStatsResponse.Day.Stat"> & {
  /**
   * @generated from field: optional int32 stat_id = 1;
   */
  statId: number;

  /**
   * @generated from field: optional int64 data = 2;
   */
  data: bigint;
};

/**
 * Describes the message CMsgClientUGSGetGlobalStatsResponse.Day.Stat.
 * Use `create(CMsgClientUGSGetGlobalStatsResponse_Day_StatSchema)` to create a new message.
 */
export const CMsgClientUGSGetGlobalStatsResponse_Day_StatSchema: GenMessage<CMsgClientUGSGetGlobalStatsResponse_Day_Stat> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 21, 0, 0);

/**
 * @generated from message CMsgClientRedeemGuestPass
 */
export type CMsgClientRedeemGuestPass = Message<"CMsgClientRedeemGuestPass"> & {
  /**
   * @generated from field: optional fixed64 guest_pass_id = 1;
   */
  guestPassId: bigint;
};

/**
 * Describes the message CMsgClientRedeemGuestPass.
 * Use `create(CMsgClientRedeemGuestPassSchema)` to create a new message.
 */
export const CMsgClientRedeemGuestPassSchema: GenMessage<CMsgClientRedeemGuestPass> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 22);

/**
 * @generated from message CMsgClientRedeemGuestPassResponse
 */
export type CMsgClientRedeemGuestPassResponse = Message<"CMsgClientRedeemGuestPassResponse"> & {
  /**
   * @generated from field: optional uint32 eresult = 1 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional uint32 package_id = 2;
   */
  packageId: number;

  /**
   * @generated from field: optional uint32 must_own_appid = 3;
   */
  mustOwnAppid: number;
};

/**
 * Describes the message CMsgClientRedeemGuestPassResponse.
 * Use `create(CMsgClientRedeemGuestPassResponseSchema)` to create a new message.
 */
export const CMsgClientRedeemGuestPassResponseSchema: GenMessage<CMsgClientRedeemGuestPassResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 23);

/**
 * @generated from message CMsgClientGetClanActivityCounts
 */
export type CMsgClientGetClanActivityCounts = Message<"CMsgClientGetClanActivityCounts"> & {
  /**
   * @generated from field: repeated uint64 steamid_clans = 1;
   */
  steamidClans: bigint[];
};

/**
 * Describes the message CMsgClientGetClanActivityCounts.
 * Use `create(CMsgClientGetClanActivityCountsSchema)` to create a new message.
 */
export const CMsgClientGetClanActivityCountsSchema: GenMessage<CMsgClientGetClanActivityCounts> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 24);

/**
 * @generated from message CMsgClientGetClanActivityCountsResponse
 */
export type CMsgClientGetClanActivityCountsResponse = Message<"CMsgClientGetClanActivityCountsResponse"> & {
  /**
   * @generated from field: optional uint32 eresult = 1 [default = 2];
   */
  eresult: number;
};

/**
 * Describes the message CMsgClientGetClanActivityCountsResponse.
 * Use `create(CMsgClientGetClanActivityCountsResponseSchema)` to create a new message.
 */
export const CMsgClientGetClanActivityCountsResponseSchema: GenMessage<CMsgClientGetClanActivityCountsResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 25);

/**
 * @generated from message CMsgClientOGSReportString
 */
export type CMsgClientOGSReportString = Message<"CMsgClientOGSReportString"> & {
  /**
   * @generated from field: optional bool accumulated = 1;
   */
  accumulated: boolean;

  /**
   * @generated from field: optional uint64 sessionid = 2;
   */
  sessionid: bigint;

  /**
   * @generated from field: optional int32 severity = 3;
   */
  severity: number;

  /**
   * @generated from field: optional string formatter = 4;
   */
  formatter: string;

  /**
   * @generated from field: optional bytes varargs = 5;
   */
  varargs: Uint8Array;
};

/**
 * Describes the message CMsgClientOGSReportString.
 * Use `create(CMsgClientOGSReportStringSchema)` to create a new message.
 */
export const CMsgClientOGSReportStringSchema: GenMessage<CMsgClientOGSReportString> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 26);

/**
 * @generated from message CMsgClientOGSReportBug
 */
export type CMsgClientOGSReportBug = Message<"CMsgClientOGSReportBug"> & {
  /**
   * @generated from field: optional uint64 sessionid = 1;
   */
  sessionid: bigint;

  /**
   * @generated from field: optional string bugtext = 2;
   */
  bugtext: string;

  /**
   * @generated from field: optional bytes screenshot = 3;
   */
  screenshot: Uint8Array;
};

/**
 * Describes the message CMsgClientOGSReportBug.
 * Use `create(CMsgClientOGSReportBugSchema)` to create a new message.
 */
export const CMsgClientOGSReportBugSchema: GenMessage<CMsgClientOGSReportBug> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 27);

/**
 * @generated from message CMsgClientSentLogs
 */
export type CMsgClientSentLogs = Message<"CMsgClientSentLogs"> & {
};

/**
 * Describes the message CMsgClientSentLogs.
 * Use `create(CMsgClientSentLogsSchema)` to create a new message.
 */
export const CMsgClientSentLogsSchema: GenMessage<CMsgClientSentLogs> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 28);

/**
 * @generated from message CMsgGCClient
 */
export type CMsgGCClient = Message<"CMsgGCClient"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 msgtype = 2;
   */
  msgtype: number;

  /**
   * @generated from field: optional bytes payload = 3;
   */
  payload: Uint8Array;

  /**
   * @generated from field: optional fixed64 steamid = 4;
   */
  steamid: bigint;

  /**
   * @generated from field: optional string gcname = 5;
   */
  gcname: string;

  /**
   * @generated from field: optional uint32 ip = 6;
   */
  ip: number;

  /**
   * @generated from field: optional uint32 flags = 7;
   */
  flags: number;
};

/**
 * Describes the message CMsgGCClient.
 * Use `create(CMsgGCClientSchema)` to create a new message.
 */
export const CMsgGCClientSchema: GenMessage<CMsgGCClient> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 29);

/**
 * @generated from enum CMsgGCClient.EFlag
 */
export enum CMsgGCClient_EFlag {
  /**
   * @generated from enum value: VALVE_DS = 1;
   */
  VALVE_DS = 1,
}

/**
 * Describes the enum CMsgGCClient.EFlag.
 */
export const CMsgGCClient_EFlagSchema: GenEnum<CMsgGCClient_EFlag> = /*@__PURE__*/
  enumDesc(file_steammessages_clientserver_2, 29, 0);

/**
 * @generated from message CMsgClientRequestFreeLicense
 */
export type CMsgClientRequestFreeLicense = Message<"CMsgClientRequestFreeLicense"> & {
  /**
   * @generated from field: repeated uint32 appids = 2;
   */
  appids: number[];
};

/**
 * Describes the message CMsgClientRequestFreeLicense.
 * Use `create(CMsgClientRequestFreeLicenseSchema)` to create a new message.
 */
export const CMsgClientRequestFreeLicenseSchema: GenMessage<CMsgClientRequestFreeLicense> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 30);

/**
 * @generated from message CMsgClientRequestFreeLicenseResponse
 */
export type CMsgClientRequestFreeLicenseResponse = Message<"CMsgClientRequestFreeLicenseResponse"> & {
  /**
   * @generated from field: optional uint32 eresult = 1 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: repeated uint32 granted_packageids = 2;
   */
  grantedPackageids: number[];

  /**
   * @generated from field: repeated uint32 granted_appids = 3;
   */
  grantedAppids: number[];
};

/**
 * Describes the message CMsgClientRequestFreeLicenseResponse.
 * Use `create(CMsgClientRequestFreeLicenseResponseSchema)` to create a new message.
 */
export const CMsgClientRequestFreeLicenseResponseSchema: GenMessage<CMsgClientRequestFreeLicenseResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 31);

/**
 * @generated from message CMsgDRMDownloadRequestWithCrashData
 */
export type CMsgDRMDownloadRequestWithCrashData = Message<"CMsgDRMDownloadRequestWithCrashData"> & {
  /**
   * @generated from field: optional uint32 download_flags = 1;
   */
  downloadFlags: number;

  /**
   * @generated from field: optional uint32 download_types_known = 2;
   */
  downloadTypesKnown: number;

  /**
   * @generated from field: optional bytes guid_drm = 3;
   */
  guidDrm: Uint8Array;

  /**
   * @generated from field: optional bytes guid_split = 4;
   */
  guidSplit: Uint8Array;

  /**
   * @generated from field: optional bytes guid_merge = 5;
   */
  guidMerge: Uint8Array;

  /**
   * @generated from field: optional string module_name = 6;
   */
  moduleName: string;

  /**
   * @generated from field: optional string module_path = 7;
   */
  modulePath: string;

  /**
   * @generated from field: optional bytes crash_data = 8;
   */
  crashData: Uint8Array;
};

/**
 * Describes the message CMsgDRMDownloadRequestWithCrashData.
 * Use `create(CMsgDRMDownloadRequestWithCrashDataSchema)` to create a new message.
 */
export const CMsgDRMDownloadRequestWithCrashDataSchema: GenMessage<CMsgDRMDownloadRequestWithCrashData> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 32);

/**
 * @generated from message CMsgDRMDownloadResponse
 */
export type CMsgDRMDownloadResponse = Message<"CMsgDRMDownloadResponse"> & {
  /**
   * @generated from field: optional uint32 eresult = 1 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional uint32 app_id = 2;
   */
  appId: number;

  /**
   * @generated from field: optional uint32 blob_download_type = 3;
   */
  blobDownloadType: number;

  /**
   * @generated from field: optional bytes merge_guid = 4;
   */
  mergeGuid: Uint8Array;

  /**
   * @generated from field: optional uint32 download_file_dfs_ip = 5;
   */
  downloadFileDfsIp: number;

  /**
   * @generated from field: optional uint32 download_file_dfs_port = 6;
   */
  downloadFileDfsPort: number;

  /**
   * @generated from field: optional string download_file_url = 7;
   */
  downloadFileUrl: string;

  /**
   * @generated from field: optional string module_path = 8;
   */
  modulePath: string;
};

/**
 * Describes the message CMsgDRMDownloadResponse.
 * Use `create(CMsgDRMDownloadResponseSchema)` to create a new message.
 */
export const CMsgDRMDownloadResponseSchema: GenMessage<CMsgDRMDownloadResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 33);

/**
 * @generated from message CMsgDRMFinalResult
 */
export type CMsgDRMFinalResult = Message<"CMsgDRMFinalResult"> & {
  /**
   * @generated from field: optional uint32 eResult = 1 [default = 2];
   */
  eResult: number;

  /**
   * @generated from field: optional uint32 app_id = 2;
   */
  appId: number;

  /**
   * @generated from field: optional uint32 blob_download_type = 3;
   */
  blobDownloadType: number;

  /**
   * @generated from field: optional uint32 error_detail = 4;
   */
  errorDetail: number;

  /**
   * @generated from field: optional bytes merge_guid = 5;
   */
  mergeGuid: Uint8Array;

  /**
   * @generated from field: optional uint32 download_file_dfs_ip = 6;
   */
  downloadFileDfsIp: number;

  /**
   * @generated from field: optional uint32 download_file_dfs_port = 7;
   */
  downloadFileDfsPort: number;

  /**
   * @generated from field: optional string download_file_url = 8;
   */
  downloadFileUrl: string;
};

/**
 * Describes the message CMsgDRMFinalResult.
 * Use `create(CMsgDRMFinalResultSchema)` to create a new message.
 */
export const CMsgDRMFinalResultSchema: GenMessage<CMsgDRMFinalResult> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 34);

/**
 * @generated from message CMsgClientDPCheckSpecialSurvey
 */
export type CMsgClientDPCheckSpecialSurvey = Message<"CMsgClientDPCheckSpecialSurvey"> & {
  /**
   * @generated from field: optional uint32 survey_id = 1;
   */
  surveyId: number;
};

/**
 * Describes the message CMsgClientDPCheckSpecialSurvey.
 * Use `create(CMsgClientDPCheckSpecialSurveySchema)` to create a new message.
 */
export const CMsgClientDPCheckSpecialSurveySchema: GenMessage<CMsgClientDPCheckSpecialSurvey> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 35);

/**
 * @generated from message CMsgClientDPCheckSpecialSurveyResponse
 */
export type CMsgClientDPCheckSpecialSurveyResponse = Message<"CMsgClientDPCheckSpecialSurveyResponse"> & {
  /**
   * @generated from field: optional uint32 eResult = 1 [default = 2];
   */
  eResult: number;

  /**
   * @generated from field: optional uint32 state = 2;
   */
  state: number;

  /**
   * @generated from field: optional string name = 3;
   */
  name: string;

  /**
   * @generated from field: optional string custom_url = 4;
   */
  customUrl: string;

  /**
   * @generated from field: optional bool include_software = 5;
   */
  includeSoftware: boolean;

  /**
   * @generated from field: optional bytes token = 6;
   */
  token: Uint8Array;
};

/**
 * Describes the message CMsgClientDPCheckSpecialSurveyResponse.
 * Use `create(CMsgClientDPCheckSpecialSurveyResponseSchema)` to create a new message.
 */
export const CMsgClientDPCheckSpecialSurveyResponseSchema: GenMessage<CMsgClientDPCheckSpecialSurveyResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 36);

/**
 * @generated from message CMsgClientDPSendSpecialSurveyResponse
 */
export type CMsgClientDPSendSpecialSurveyResponse = Message<"CMsgClientDPSendSpecialSurveyResponse"> & {
  /**
   * @generated from field: optional uint32 survey_id = 1;
   */
  surveyId: number;

  /**
   * @generated from field: optional bytes data = 2;
   */
  data: Uint8Array;
};

/**
 * Describes the message CMsgClientDPSendSpecialSurveyResponse.
 * Use `create(CMsgClientDPSendSpecialSurveyResponseSchema)` to create a new message.
 */
export const CMsgClientDPSendSpecialSurveyResponseSchema: GenMessage<CMsgClientDPSendSpecialSurveyResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 37);

/**
 * @generated from message CMsgClientDPSendSpecialSurveyResponseReply
 */
export type CMsgClientDPSendSpecialSurveyResponseReply = Message<"CMsgClientDPSendSpecialSurveyResponseReply"> & {
  /**
   * @generated from field: optional uint32 eResult = 1 [default = 2];
   */
  eResult: number;

  /**
   * @generated from field: optional bytes token = 2;
   */
  token: Uint8Array;
};

/**
 * Describes the message CMsgClientDPSendSpecialSurveyResponseReply.
 * Use `create(CMsgClientDPSendSpecialSurveyResponseReplySchema)` to create a new message.
 */
export const CMsgClientDPSendSpecialSurveyResponseReplySchema: GenMessage<CMsgClientDPSendSpecialSurveyResponseReply> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 38);

/**
 * @generated from message CMsgClientRequestForgottenPasswordEmail
 */
export type CMsgClientRequestForgottenPasswordEmail = Message<"CMsgClientRequestForgottenPasswordEmail"> & {
  /**
   * @generated from field: optional string account_name = 1;
   */
  accountName: string;

  /**
   * @generated from field: optional string password_tried = 2;
   */
  passwordTried: string;
};

/**
 * Describes the message CMsgClientRequestForgottenPasswordEmail.
 * Use `create(CMsgClientRequestForgottenPasswordEmailSchema)` to create a new message.
 */
export const CMsgClientRequestForgottenPasswordEmailSchema: GenMessage<CMsgClientRequestForgottenPasswordEmail> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 39);

/**
 * @generated from message CMsgClientRequestForgottenPasswordEmailResponse
 */
export type CMsgClientRequestForgottenPasswordEmailResponse = Message<"CMsgClientRequestForgottenPasswordEmailResponse"> & {
  /**
   * @generated from field: optional uint32 eResult = 1;
   */
  eResult: number;

  /**
   * @generated from field: optional bool use_secret_question = 2;
   */
  useSecretQuestion: boolean;
};

/**
 * Describes the message CMsgClientRequestForgottenPasswordEmailResponse.
 * Use `create(CMsgClientRequestForgottenPasswordEmailResponseSchema)` to create a new message.
 */
export const CMsgClientRequestForgottenPasswordEmailResponseSchema: GenMessage<CMsgClientRequestForgottenPasswordEmailResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 40);

/**
 * @generated from message CMsgClientItemAnnouncements
 */
export type CMsgClientItemAnnouncements = Message<"CMsgClientItemAnnouncements"> & {
  /**
   * @generated from field: optional uint32 count_new_items = 1;
   */
  countNewItems: number;

  /**
   * @generated from field: repeated CMsgClientItemAnnouncements.UnseenItem unseen_items = 2;
   */
  unseenItems: CMsgClientItemAnnouncements_UnseenItem[];
};

/**
 * Describes the message CMsgClientItemAnnouncements.
 * Use `create(CMsgClientItemAnnouncementsSchema)` to create a new message.
 */
export const CMsgClientItemAnnouncementsSchema: GenMessage<CMsgClientItemAnnouncements> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 41);

/**
 * @generated from message CMsgClientItemAnnouncements.UnseenItem
 */
export type CMsgClientItemAnnouncements_UnseenItem = Message<"CMsgClientItemAnnouncements.UnseenItem"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint64 context_id = 2;
   */
  contextId: bigint;

  /**
   * @generated from field: optional uint64 asset_id = 3;
   */
  assetId: bigint;

  /**
   * @generated from field: optional uint64 amount = 4;
   */
  amount: bigint;

  /**
   * @generated from field: optional fixed32 rtime32_gained = 5;
   */
  rtime32Gained: number;

  /**
   * @generated from field: optional uint32 source_appid = 6;
   */
  sourceAppid: number;
};

/**
 * Describes the message CMsgClientItemAnnouncements.UnseenItem.
 * Use `create(CMsgClientItemAnnouncements_UnseenItemSchema)` to create a new message.
 */
export const CMsgClientItemAnnouncements_UnseenItemSchema: GenMessage<CMsgClientItemAnnouncements_UnseenItem> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 41, 0);

/**
 * @generated from message CMsgClientRequestItemAnnouncements
 */
export type CMsgClientRequestItemAnnouncements = Message<"CMsgClientRequestItemAnnouncements"> & {
};

/**
 * Describes the message CMsgClientRequestItemAnnouncements.
 * Use `create(CMsgClientRequestItemAnnouncementsSchema)` to create a new message.
 */
export const CMsgClientRequestItemAnnouncementsSchema: GenMessage<CMsgClientRequestItemAnnouncements> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 42);

/**
 * @generated from message CMsgClientUserNotifications
 */
export type CMsgClientUserNotifications = Message<"CMsgClientUserNotifications"> & {
  /**
   * @generated from field: repeated CMsgClientUserNotifications.Notification notifications = 1;
   */
  notifications: CMsgClientUserNotifications_Notification[];
};

/**
 * Describes the message CMsgClientUserNotifications.
 * Use `create(CMsgClientUserNotificationsSchema)` to create a new message.
 */
export const CMsgClientUserNotificationsSchema: GenMessage<CMsgClientUserNotifications> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 43);

/**
 * @generated from message CMsgClientUserNotifications.Notification
 */
export type CMsgClientUserNotifications_Notification = Message<"CMsgClientUserNotifications.Notification"> & {
  /**
   * @generated from field: optional uint32 user_notification_type = 1;
   */
  userNotificationType: number;

  /**
   * @generated from field: optional uint32 count = 2;
   */
  count: number;
};

/**
 * Describes the message CMsgClientUserNotifications.Notification.
 * Use `create(CMsgClientUserNotifications_NotificationSchema)` to create a new message.
 */
export const CMsgClientUserNotifications_NotificationSchema: GenMessage<CMsgClientUserNotifications_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 43, 0);

/**
 * @generated from message CMsgClientCommentNotifications
 */
export type CMsgClientCommentNotifications = Message<"CMsgClientCommentNotifications"> & {
  /**
   * @generated from field: optional uint32 count_new_comments = 1;
   */
  countNewComments: number;

  /**
   * @generated from field: optional uint32 count_new_comments_owner = 2;
   */
  countNewCommentsOwner: number;

  /**
   * @generated from field: optional uint32 count_new_comments_subscriptions = 3;
   */
  countNewCommentsSubscriptions: number;
};

/**
 * Describes the message CMsgClientCommentNotifications.
 * Use `create(CMsgClientCommentNotificationsSchema)` to create a new message.
 */
export const CMsgClientCommentNotificationsSchema: GenMessage<CMsgClientCommentNotifications> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 44);

/**
 * @generated from message CMsgClientRequestCommentNotifications
 */
export type CMsgClientRequestCommentNotifications = Message<"CMsgClientRequestCommentNotifications"> & {
};

/**
 * Describes the message CMsgClientRequestCommentNotifications.
 * Use `create(CMsgClientRequestCommentNotificationsSchema)` to create a new message.
 */
export const CMsgClientRequestCommentNotificationsSchema: GenMessage<CMsgClientRequestCommentNotifications> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 45);

/**
 * @generated from message CMsgClientOfflineMessageNotification
 */
export type CMsgClientOfflineMessageNotification = Message<"CMsgClientOfflineMessageNotification"> & {
  /**
   * @generated from field: optional uint32 offline_messages = 1;
   */
  offlineMessages: number;

  /**
   * @generated from field: repeated uint32 friends_with_offline_messages = 2;
   */
  friendsWithOfflineMessages: number[];
};

/**
 * Describes the message CMsgClientOfflineMessageNotification.
 * Use `create(CMsgClientOfflineMessageNotificationSchema)` to create a new message.
 */
export const CMsgClientOfflineMessageNotificationSchema: GenMessage<CMsgClientOfflineMessageNotification> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 46);

/**
 * @generated from message CMsgClientRequestOfflineMessageCount
 */
export type CMsgClientRequestOfflineMessageCount = Message<"CMsgClientRequestOfflineMessageCount"> & {
};

/**
 * Describes the message CMsgClientRequestOfflineMessageCount.
 * Use `create(CMsgClientRequestOfflineMessageCountSchema)` to create a new message.
 */
export const CMsgClientRequestOfflineMessageCountSchema: GenMessage<CMsgClientRequestOfflineMessageCount> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 47);

/**
 * @generated from message CMsgClientChatGetFriendMessageHistory
 */
export type CMsgClientChatGetFriendMessageHistory = Message<"CMsgClientChatGetFriendMessageHistory"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;
};

/**
 * Describes the message CMsgClientChatGetFriendMessageHistory.
 * Use `create(CMsgClientChatGetFriendMessageHistorySchema)` to create a new message.
 */
export const CMsgClientChatGetFriendMessageHistorySchema: GenMessage<CMsgClientChatGetFriendMessageHistory> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 48);

/**
 * @generated from message CMsgClientChatGetFriendMessageHistoryResponse
 */
export type CMsgClientChatGetFriendMessageHistoryResponse = Message<"CMsgClientChatGetFriendMessageHistoryResponse"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional uint32 success = 2;
   */
  success: number;

  /**
   * @generated from field: repeated CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage messages = 3;
   */
  messages: CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage[];
};

/**
 * Describes the message CMsgClientChatGetFriendMessageHistoryResponse.
 * Use `create(CMsgClientChatGetFriendMessageHistoryResponseSchema)` to create a new message.
 */
export const CMsgClientChatGetFriendMessageHistoryResponseSchema: GenMessage<CMsgClientChatGetFriendMessageHistoryResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 49);

/**
 * @generated from message CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage
 */
export type CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage = Message<"CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage"> & {
  /**
   * @generated from field: optional uint32 accountid = 1;
   */
  accountid: number;

  /**
   * @generated from field: optional uint32 timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: optional string message = 3;
   */
  message: string;

  /**
   * @generated from field: optional bool unread = 4;
   */
  unread: boolean;
};

/**
 * Describes the message CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.
 * Use `create(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessageSchema)` to create a new message.
 */
export const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessageSchema: GenMessage<CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 49, 0);

/**
 * @generated from message CMsgClientChatGetFriendMessageHistoryForOfflineMessages
 */
export type CMsgClientChatGetFriendMessageHistoryForOfflineMessages = Message<"CMsgClientChatGetFriendMessageHistoryForOfflineMessages"> & {
};

/**
 * Describes the message CMsgClientChatGetFriendMessageHistoryForOfflineMessages.
 * Use `create(CMsgClientChatGetFriendMessageHistoryForOfflineMessagesSchema)` to create a new message.
 */
export const CMsgClientChatGetFriendMessageHistoryForOfflineMessagesSchema: GenMessage<CMsgClientChatGetFriendMessageHistoryForOfflineMessages> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 50);

/**
 * @generated from message CMsgClientFSGetFriendsSteamLevels
 */
export type CMsgClientFSGetFriendsSteamLevels = Message<"CMsgClientFSGetFriendsSteamLevels"> & {
  /**
   * @generated from field: repeated uint32 accountids = 1;
   */
  accountids: number[];
};

/**
 * Describes the message CMsgClientFSGetFriendsSteamLevels.
 * Use `create(CMsgClientFSGetFriendsSteamLevelsSchema)` to create a new message.
 */
export const CMsgClientFSGetFriendsSteamLevelsSchema: GenMessage<CMsgClientFSGetFriendsSteamLevels> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 51);

/**
 * @generated from message CMsgClientFSGetFriendsSteamLevelsResponse
 */
export type CMsgClientFSGetFriendsSteamLevelsResponse = Message<"CMsgClientFSGetFriendsSteamLevelsResponse"> & {
  /**
   * @generated from field: repeated CMsgClientFSGetFriendsSteamLevelsResponse.Friend friends = 1;
   */
  friends: CMsgClientFSGetFriendsSteamLevelsResponse_Friend[];
};

/**
 * Describes the message CMsgClientFSGetFriendsSteamLevelsResponse.
 * Use `create(CMsgClientFSGetFriendsSteamLevelsResponseSchema)` to create a new message.
 */
export const CMsgClientFSGetFriendsSteamLevelsResponseSchema: GenMessage<CMsgClientFSGetFriendsSteamLevelsResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 52);

/**
 * @generated from message CMsgClientFSGetFriendsSteamLevelsResponse.Friend
 */
export type CMsgClientFSGetFriendsSteamLevelsResponse_Friend = Message<"CMsgClientFSGetFriendsSteamLevelsResponse.Friend"> & {
  /**
   * @generated from field: optional uint32 accountid = 1;
   */
  accountid: number;

  /**
   * @generated from field: optional uint32 level = 2;
   */
  level: number;
};

/**
 * Describes the message CMsgClientFSGetFriendsSteamLevelsResponse.Friend.
 * Use `create(CMsgClientFSGetFriendsSteamLevelsResponse_FriendSchema)` to create a new message.
 */
export const CMsgClientFSGetFriendsSteamLevelsResponse_FriendSchema: GenMessage<CMsgClientFSGetFriendsSteamLevelsResponse_Friend> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 52, 0);

/**
 * @generated from message CMsgClientEmailAddrInfo
 */
export type CMsgClientEmailAddrInfo = Message<"CMsgClientEmailAddrInfo"> & {
  /**
   * @generated from field: optional string email_address = 1;
   */
  emailAddress: string;

  /**
   * @generated from field: optional bool email_is_validated = 2;
   */
  emailIsValidated: boolean;

  /**
   * @generated from field: optional bool email_validation_changed = 3;
   */
  emailValidationChanged: boolean;

  /**
   * @generated from field: optional bool credential_change_requires_code = 4;
   */
  credentialChangeRequiresCode: boolean;

  /**
   * @generated from field: optional bool password_or_secretqa_change_requires_code = 5;
   */
  passwordOrSecretqaChangeRequiresCode: boolean;
};

/**
 * Describes the message CMsgClientEmailAddrInfo.
 * Use `create(CMsgClientEmailAddrInfoSchema)` to create a new message.
 */
export const CMsgClientEmailAddrInfoSchema: GenMessage<CMsgClientEmailAddrInfo> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 53);

/**
 * @generated from message CMsgCREItemVoteSummary
 */
export type CMsgCREItemVoteSummary = Message<"CMsgCREItemVoteSummary"> & {
  /**
   * @generated from field: repeated CMsgCREItemVoteSummary.PublishedFileId published_file_ids = 1;
   */
  publishedFileIds: CMsgCREItemVoteSummary_PublishedFileId[];
};

/**
 * Describes the message CMsgCREItemVoteSummary.
 * Use `create(CMsgCREItemVoteSummarySchema)` to create a new message.
 */
export const CMsgCREItemVoteSummarySchema: GenMessage<CMsgCREItemVoteSummary> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 54);

/**
 * @generated from message CMsgCREItemVoteSummary.PublishedFileId
 */
export type CMsgCREItemVoteSummary_PublishedFileId = Message<"CMsgCREItemVoteSummary.PublishedFileId"> & {
  /**
   * @generated from field: optional fixed64 published_file_id = 1;
   */
  publishedFileId: bigint;
};

/**
 * Describes the message CMsgCREItemVoteSummary.PublishedFileId.
 * Use `create(CMsgCREItemVoteSummary_PublishedFileIdSchema)` to create a new message.
 */
export const CMsgCREItemVoteSummary_PublishedFileIdSchema: GenMessage<CMsgCREItemVoteSummary_PublishedFileId> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 54, 0);

/**
 * @generated from message CMsgCREItemVoteSummaryResponse
 */
export type CMsgCREItemVoteSummaryResponse = Message<"CMsgCREItemVoteSummaryResponse"> & {
  /**
   * @generated from field: optional int32 eresult = 1 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: repeated CMsgCREItemVoteSummaryResponse.ItemVoteSummary item_vote_summaries = 2;
   */
  itemVoteSummaries: CMsgCREItemVoteSummaryResponse_ItemVoteSummary[];
};

/**
 * Describes the message CMsgCREItemVoteSummaryResponse.
 * Use `create(CMsgCREItemVoteSummaryResponseSchema)` to create a new message.
 */
export const CMsgCREItemVoteSummaryResponseSchema: GenMessage<CMsgCREItemVoteSummaryResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 55);

/**
 * @generated from message CMsgCREItemVoteSummaryResponse.ItemVoteSummary
 */
export type CMsgCREItemVoteSummaryResponse_ItemVoteSummary = Message<"CMsgCREItemVoteSummaryResponse.ItemVoteSummary"> & {
  /**
   * @generated from field: optional fixed64 published_file_id = 1;
   */
  publishedFileId: bigint;

  /**
   * @generated from field: optional int32 votes_for = 2;
   */
  votesFor: number;

  /**
   * @generated from field: optional int32 votes_against = 3;
   */
  votesAgainst: number;

  /**
   * @generated from field: optional int32 reports = 4;
   */
  reports: number;

  /**
   * @generated from field: optional float score = 5;
   */
  score: number;
};

/**
 * Describes the message CMsgCREItemVoteSummaryResponse.ItemVoteSummary.
 * Use `create(CMsgCREItemVoteSummaryResponse_ItemVoteSummarySchema)` to create a new message.
 */
export const CMsgCREItemVoteSummaryResponse_ItemVoteSummarySchema: GenMessage<CMsgCREItemVoteSummaryResponse_ItemVoteSummary> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 55, 0);

/**
 * @generated from message CMsgCREUpdateUserPublishedItemVote
 */
export type CMsgCREUpdateUserPublishedItemVote = Message<"CMsgCREUpdateUserPublishedItemVote"> & {
  /**
   * @generated from field: optional fixed64 published_file_id = 1;
   */
  publishedFileId: bigint;

  /**
   * @generated from field: optional bool vote_up = 2;
   */
  voteUp: boolean;
};

/**
 * Describes the message CMsgCREUpdateUserPublishedItemVote.
 * Use `create(CMsgCREUpdateUserPublishedItemVoteSchema)` to create a new message.
 */
export const CMsgCREUpdateUserPublishedItemVoteSchema: GenMessage<CMsgCREUpdateUserPublishedItemVote> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 56);

/**
 * @generated from message CMsgCREUpdateUserPublishedItemVoteResponse
 */
export type CMsgCREUpdateUserPublishedItemVoteResponse = Message<"CMsgCREUpdateUserPublishedItemVoteResponse"> & {
  /**
   * @generated from field: optional int32 eresult = 1 [default = 2];
   */
  eresult: number;
};

/**
 * Describes the message CMsgCREUpdateUserPublishedItemVoteResponse.
 * Use `create(CMsgCREUpdateUserPublishedItemVoteResponseSchema)` to create a new message.
 */
export const CMsgCREUpdateUserPublishedItemVoteResponseSchema: GenMessage<CMsgCREUpdateUserPublishedItemVoteResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 57);

/**
 * @generated from message CMsgCREGetUserPublishedItemVoteDetails
 */
export type CMsgCREGetUserPublishedItemVoteDetails = Message<"CMsgCREGetUserPublishedItemVoteDetails"> & {
  /**
   * @generated from field: repeated CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId published_file_ids = 1;
   */
  publishedFileIds: CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId[];
};

/**
 * Describes the message CMsgCREGetUserPublishedItemVoteDetails.
 * Use `create(CMsgCREGetUserPublishedItemVoteDetailsSchema)` to create a new message.
 */
export const CMsgCREGetUserPublishedItemVoteDetailsSchema: GenMessage<CMsgCREGetUserPublishedItemVoteDetails> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 58);

/**
 * @generated from message CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId
 */
export type CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId = Message<"CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId"> & {
  /**
   * @generated from field: optional fixed64 published_file_id = 1;
   */
  publishedFileId: bigint;
};

/**
 * Describes the message CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId.
 * Use `create(CMsgCREGetUserPublishedItemVoteDetails_PublishedFileIdSchema)` to create a new message.
 */
export const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileIdSchema: GenMessage<CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 58, 0);

/**
 * @generated from message CMsgCREGetUserPublishedItemVoteDetailsResponse
 */
export type CMsgCREGetUserPublishedItemVoteDetailsResponse = Message<"CMsgCREGetUserPublishedItemVoteDetailsResponse"> & {
  /**
   * @generated from field: optional int32 eresult = 1 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: repeated CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail user_item_vote_details = 2;
   */
  userItemVoteDetails: CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail[];
};

/**
 * Describes the message CMsgCREGetUserPublishedItemVoteDetailsResponse.
 * Use `create(CMsgCREGetUserPublishedItemVoteDetailsResponseSchema)` to create a new message.
 */
export const CMsgCREGetUserPublishedItemVoteDetailsResponseSchema: GenMessage<CMsgCREGetUserPublishedItemVoteDetailsResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 59);

/**
 * @generated from message CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail
 */
export type CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail = Message<"CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail"> & {
  /**
   * @generated from field: optional fixed64 published_file_id = 1;
   */
  publishedFileId: bigint;

  /**
   * @generated from field: optional int32 vote = 2 [default = 0];
   */
  vote: number;
};

/**
 * Describes the message CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail.
 * Use `create(CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetailSchema)` to create a new message.
 */
export const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetailSchema: GenMessage<CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 59, 0);

/**
 * @generated from message CMsgFSGetFollowerCount
 */
export type CMsgFSGetFollowerCount = Message<"CMsgFSGetFollowerCount"> & {
  /**
   * @generated from field: optional fixed64 steam_id = 1;
   */
  steamId: bigint;
};

/**
 * Describes the message CMsgFSGetFollowerCount.
 * Use `create(CMsgFSGetFollowerCountSchema)` to create a new message.
 */
export const CMsgFSGetFollowerCountSchema: GenMessage<CMsgFSGetFollowerCount> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 60);

/**
 * @generated from message CMsgFSGetFollowerCountResponse
 */
export type CMsgFSGetFollowerCountResponse = Message<"CMsgFSGetFollowerCountResponse"> & {
  /**
   * @generated from field: optional int32 eresult = 1 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional int32 count = 2 [default = 0];
   */
  count: number;
};

/**
 * Describes the message CMsgFSGetFollowerCountResponse.
 * Use `create(CMsgFSGetFollowerCountResponseSchema)` to create a new message.
 */
export const CMsgFSGetFollowerCountResponseSchema: GenMessage<CMsgFSGetFollowerCountResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 61);

/**
 * @generated from message CMsgFSGetIsFollowing
 */
export type CMsgFSGetIsFollowing = Message<"CMsgFSGetIsFollowing"> & {
  /**
   * @generated from field: optional fixed64 steam_id = 1;
   */
  steamId: bigint;
};

/**
 * Describes the message CMsgFSGetIsFollowing.
 * Use `create(CMsgFSGetIsFollowingSchema)` to create a new message.
 */
export const CMsgFSGetIsFollowingSchema: GenMessage<CMsgFSGetIsFollowing> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 62);

/**
 * @generated from message CMsgFSGetIsFollowingResponse
 */
export type CMsgFSGetIsFollowingResponse = Message<"CMsgFSGetIsFollowingResponse"> & {
  /**
   * @generated from field: optional int32 eresult = 1 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional bool is_following = 2 [default = false];
   */
  isFollowing: boolean;
};

/**
 * Describes the message CMsgFSGetIsFollowingResponse.
 * Use `create(CMsgFSGetIsFollowingResponseSchema)` to create a new message.
 */
export const CMsgFSGetIsFollowingResponseSchema: GenMessage<CMsgFSGetIsFollowingResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 63);

/**
 * @generated from message CMsgFSEnumerateFollowingList
 */
export type CMsgFSEnumerateFollowingList = Message<"CMsgFSEnumerateFollowingList"> & {
  /**
   * @generated from field: optional uint32 start_index = 1;
   */
  startIndex: number;
};

/**
 * Describes the message CMsgFSEnumerateFollowingList.
 * Use `create(CMsgFSEnumerateFollowingListSchema)` to create a new message.
 */
export const CMsgFSEnumerateFollowingListSchema: GenMessage<CMsgFSEnumerateFollowingList> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 64);

/**
 * @generated from message CMsgFSEnumerateFollowingListResponse
 */
export type CMsgFSEnumerateFollowingListResponse = Message<"CMsgFSEnumerateFollowingListResponse"> & {
  /**
   * @generated from field: optional int32 eresult = 1 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional int32 total_results = 2;
   */
  totalResults: number;

  /**
   * @generated from field: repeated fixed64 steam_ids = 3;
   */
  steamIds: bigint[];
};

/**
 * Describes the message CMsgFSEnumerateFollowingListResponse.
 * Use `create(CMsgFSEnumerateFollowingListResponseSchema)` to create a new message.
 */
export const CMsgFSEnumerateFollowingListResponseSchema: GenMessage<CMsgFSEnumerateFollowingListResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 65);

/**
 * @generated from message CMsgDPGetNumberOfCurrentPlayers
 */
export type CMsgDPGetNumberOfCurrentPlayers = Message<"CMsgDPGetNumberOfCurrentPlayers"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;
};

/**
 * Describes the message CMsgDPGetNumberOfCurrentPlayers.
 * Use `create(CMsgDPGetNumberOfCurrentPlayersSchema)` to create a new message.
 */
export const CMsgDPGetNumberOfCurrentPlayersSchema: GenMessage<CMsgDPGetNumberOfCurrentPlayers> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 66);

/**
 * @generated from message CMsgDPGetNumberOfCurrentPlayersResponse
 */
export type CMsgDPGetNumberOfCurrentPlayersResponse = Message<"CMsgDPGetNumberOfCurrentPlayersResponse"> & {
  /**
   * @generated from field: optional int32 eresult = 1 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional int32 player_count = 2;
   */
  playerCount: number;
};

/**
 * Describes the message CMsgDPGetNumberOfCurrentPlayersResponse.
 * Use `create(CMsgDPGetNumberOfCurrentPlayersResponseSchema)` to create a new message.
 */
export const CMsgDPGetNumberOfCurrentPlayersResponseSchema: GenMessage<CMsgDPGetNumberOfCurrentPlayersResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 67);

/**
 * @generated from message CMsgClientFriendUserStatusPublished
 */
export type CMsgClientFriendUserStatusPublished = Message<"CMsgClientFriendUserStatusPublished"> & {
  /**
   * @generated from field: optional fixed64 friend_steamid = 1;
   */
  friendSteamid: bigint;

  /**
   * @generated from field: optional uint32 appid = 2;
   */
  appid: number;

  /**
   * @generated from field: optional string status_text = 3;
   */
  statusText: string;
};

/**
 * Describes the message CMsgClientFriendUserStatusPublished.
 * Use `create(CMsgClientFriendUserStatusPublishedSchema)` to create a new message.
 */
export const CMsgClientFriendUserStatusPublishedSchema: GenMessage<CMsgClientFriendUserStatusPublished> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 68);

/**
 * @generated from message CMsgClientServiceMethodLegacy
 */
export type CMsgClientServiceMethodLegacy = Message<"CMsgClientServiceMethodLegacy"> & {
  /**
   * @generated from field: optional string method_name = 1;
   */
  methodName: string;

  /**
   * @generated from field: optional bytes serialized_method = 2;
   */
  serializedMethod: Uint8Array;

  /**
   * @generated from field: optional bool is_notification = 3;
   */
  isNotification: boolean;
};

/**
 * Describes the message CMsgClientServiceMethodLegacy.
 * Use `create(CMsgClientServiceMethodLegacySchema)` to create a new message.
 */
export const CMsgClientServiceMethodLegacySchema: GenMessage<CMsgClientServiceMethodLegacy> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 69);

/**
 * @generated from message CMsgClientServiceMethodLegacyResponse
 */
export type CMsgClientServiceMethodLegacyResponse = Message<"CMsgClientServiceMethodLegacyResponse"> & {
  /**
   * @generated from field: optional string method_name = 1;
   */
  methodName: string;

  /**
   * @generated from field: optional bytes serialized_method_response = 2;
   */
  serializedMethodResponse: Uint8Array;
};

/**
 * Describes the message CMsgClientServiceMethodLegacyResponse.
 * Use `create(CMsgClientServiceMethodLegacyResponseSchema)` to create a new message.
 */
export const CMsgClientServiceMethodLegacyResponseSchema: GenMessage<CMsgClientServiceMethodLegacyResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 70);

/**
 * @generated from message CMsgClientUIMode
 */
export type CMsgClientUIMode = Message<"CMsgClientUIMode"> & {
  /**
   * @generated from field: optional uint32 uimode = 1;
   */
  uimode: number;

  /**
   * @generated from field: optional uint32 chat_mode = 2;
   */
  chatMode: number;
};

/**
 * Describes the message CMsgClientUIMode.
 * Use `create(CMsgClientUIModeSchema)` to create a new message.
 */
export const CMsgClientUIModeSchema: GenMessage<CMsgClientUIMode> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 71);

/**
 * @generated from message CMsgClientVanityURLChangedNotification
 */
export type CMsgClientVanityURLChangedNotification = Message<"CMsgClientVanityURLChangedNotification"> & {
  /**
   * @generated from field: optional string vanity_url = 1;
   */
  vanityUrl: string;
};

/**
 * Describes the message CMsgClientVanityURLChangedNotification.
 * Use `create(CMsgClientVanityURLChangedNotificationSchema)` to create a new message.
 */
export const CMsgClientVanityURLChangedNotificationSchema: GenMessage<CMsgClientVanityURLChangedNotification> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 72);

/**
 * @generated from message CMsgClientAuthorizeLocalDeviceRequest
 */
export type CMsgClientAuthorizeLocalDeviceRequest = Message<"CMsgClientAuthorizeLocalDeviceRequest"> & {
  /**
   * @generated from field: optional string device_description = 1;
   */
  deviceDescription: string;

  /**
   * @generated from field: optional uint32 owner_account_id = 2;
   */
  ownerAccountId: number;

  /**
   * @generated from field: optional uint64 local_device_token = 3;
   */
  localDeviceToken: bigint;
};

/**
 * Describes the message CMsgClientAuthorizeLocalDeviceRequest.
 * Use `create(CMsgClientAuthorizeLocalDeviceRequestSchema)` to create a new message.
 */
export const CMsgClientAuthorizeLocalDeviceRequestSchema: GenMessage<CMsgClientAuthorizeLocalDeviceRequest> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 73);

/**
 * @generated from message CMsgClientAuthorizeLocalDevice
 */
export type CMsgClientAuthorizeLocalDevice = Message<"CMsgClientAuthorizeLocalDevice"> & {
  /**
   * @generated from field: optional int32 eresult = 1 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional uint32 owner_account_id = 2;
   */
  ownerAccountId: number;

  /**
   * @generated from field: optional uint64 authed_device_token = 3;
   */
  authedDeviceToken: bigint;
};

/**
 * Describes the message CMsgClientAuthorizeLocalDevice.
 * Use `create(CMsgClientAuthorizeLocalDeviceSchema)` to create a new message.
 */
export const CMsgClientAuthorizeLocalDeviceSchema: GenMessage<CMsgClientAuthorizeLocalDevice> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 74);

/**
 * @generated from message CMsgClientAuthorizeLocalDeviceNotification
 */
export type CMsgClientAuthorizeLocalDeviceNotification = Message<"CMsgClientAuthorizeLocalDeviceNotification"> & {
  /**
   * @generated from field: optional int32 eresult = 1 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional uint32 owner_account_id = 2;
   */
  ownerAccountId: number;

  /**
   * @generated from field: optional uint64 local_device_token = 3;
   */
  localDeviceToken: bigint;
};

/**
 * Describes the message CMsgClientAuthorizeLocalDeviceNotification.
 * Use `create(CMsgClientAuthorizeLocalDeviceNotificationSchema)` to create a new message.
 */
export const CMsgClientAuthorizeLocalDeviceNotificationSchema: GenMessage<CMsgClientAuthorizeLocalDeviceNotification> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 75);

/**
 * @generated from message CMsgClientDeauthorizeDeviceRequest
 */
export type CMsgClientDeauthorizeDeviceRequest = Message<"CMsgClientDeauthorizeDeviceRequest"> & {
  /**
   * @generated from field: optional uint32 deauthorization_account_id = 1;
   */
  deauthorizationAccountId: number;

  /**
   * @generated from field: optional uint64 deauthorization_device_token = 2;
   */
  deauthorizationDeviceToken: bigint;
};

/**
 * Describes the message CMsgClientDeauthorizeDeviceRequest.
 * Use `create(CMsgClientDeauthorizeDeviceRequestSchema)` to create a new message.
 */
export const CMsgClientDeauthorizeDeviceRequestSchema: GenMessage<CMsgClientDeauthorizeDeviceRequest> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 76);

/**
 * @generated from message CMsgClientDeauthorizeDevice
 */
export type CMsgClientDeauthorizeDevice = Message<"CMsgClientDeauthorizeDevice"> & {
  /**
   * @generated from field: optional int32 eresult = 1 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional uint32 deauthorization_account_id = 2;
   */
  deauthorizationAccountId: number;
};

/**
 * Describes the message CMsgClientDeauthorizeDevice.
 * Use `create(CMsgClientDeauthorizeDeviceSchema)` to create a new message.
 */
export const CMsgClientDeauthorizeDeviceSchema: GenMessage<CMsgClientDeauthorizeDevice> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 77);

/**
 * @generated from message CMsgClientUseLocalDeviceAuthorizations
 */
export type CMsgClientUseLocalDeviceAuthorizations = Message<"CMsgClientUseLocalDeviceAuthorizations"> & {
  /**
   * @generated from field: repeated uint32 authorization_account_id = 1;
   */
  authorizationAccountId: number[];

  /**
   * @generated from field: repeated CMsgClientUseLocalDeviceAuthorizations.DeviceToken device_tokens = 2;
   */
  deviceTokens: CMsgClientUseLocalDeviceAuthorizations_DeviceToken[];
};

/**
 * Describes the message CMsgClientUseLocalDeviceAuthorizations.
 * Use `create(CMsgClientUseLocalDeviceAuthorizationsSchema)` to create a new message.
 */
export const CMsgClientUseLocalDeviceAuthorizationsSchema: GenMessage<CMsgClientUseLocalDeviceAuthorizations> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 78);

/**
 * @generated from message CMsgClientUseLocalDeviceAuthorizations.DeviceToken
 */
export type CMsgClientUseLocalDeviceAuthorizations_DeviceToken = Message<"CMsgClientUseLocalDeviceAuthorizations.DeviceToken"> & {
  /**
   * @generated from field: optional uint32 owner_account_id = 1;
   */
  ownerAccountId: number;

  /**
   * @generated from field: optional uint64 token_id = 2;
   */
  tokenId: bigint;
};

/**
 * Describes the message CMsgClientUseLocalDeviceAuthorizations.DeviceToken.
 * Use `create(CMsgClientUseLocalDeviceAuthorizations_DeviceTokenSchema)` to create a new message.
 */
export const CMsgClientUseLocalDeviceAuthorizations_DeviceTokenSchema: GenMessage<CMsgClientUseLocalDeviceAuthorizations_DeviceToken> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 78, 0);

/**
 * @generated from message CMsgClientGetAuthorizedDevices
 */
export type CMsgClientGetAuthorizedDevices = Message<"CMsgClientGetAuthorizedDevices"> & {
};

/**
 * Describes the message CMsgClientGetAuthorizedDevices.
 * Use `create(CMsgClientGetAuthorizedDevicesSchema)` to create a new message.
 */
export const CMsgClientGetAuthorizedDevicesSchema: GenMessage<CMsgClientGetAuthorizedDevices> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 79);

/**
 * @generated from message CMsgClientGetAuthorizedDevicesResponse
 */
export type CMsgClientGetAuthorizedDevicesResponse = Message<"CMsgClientGetAuthorizedDevicesResponse"> & {
  /**
   * @generated from field: optional int32 eresult = 1 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: repeated CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice authorized_device = 2;
   */
  authorizedDevice: CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice[];
};

/**
 * Describes the message CMsgClientGetAuthorizedDevicesResponse.
 * Use `create(CMsgClientGetAuthorizedDevicesResponseSchema)` to create a new message.
 */
export const CMsgClientGetAuthorizedDevicesResponseSchema: GenMessage<CMsgClientGetAuthorizedDevicesResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 80);

/**
 * @generated from message CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice
 */
export type CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice = Message<"CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice"> & {
  /**
   * @generated from field: optional uint64 auth_device_token = 1;
   */
  authDeviceToken: bigint;

  /**
   * @generated from field: optional string device_name = 2;
   */
  deviceName: string;

  /**
   * @generated from field: optional uint32 last_access_time = 3;
   */
  lastAccessTime: number;

  /**
   * @generated from field: optional uint32 borrower_id = 4;
   */
  borrowerId: number;

  /**
   * @generated from field: optional bool is_pending = 5;
   */
  isPending: boolean;

  /**
   * @generated from field: optional uint32 app_played = 6;
   */
  appPlayed: number;
};

/**
 * Describes the message CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.
 * Use `create(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDeviceSchema)` to create a new message.
 */
export const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDeviceSchema: GenMessage<CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 80, 0);

/**
 * @generated from message CMsgClientSharedLibraryLockStatus
 */
export type CMsgClientSharedLibraryLockStatus = Message<"CMsgClientSharedLibraryLockStatus"> & {
  /**
   * @generated from field: repeated CMsgClientSharedLibraryLockStatus.LockedLibrary locked_library = 1;
   */
  lockedLibrary: CMsgClientSharedLibraryLockStatus_LockedLibrary[];

  /**
   * @generated from field: optional uint32 own_library_locked_by = 2;
   */
  ownLibraryLockedBy: number;
};

/**
 * Describes the message CMsgClientSharedLibraryLockStatus.
 * Use `create(CMsgClientSharedLibraryLockStatusSchema)` to create a new message.
 */
export const CMsgClientSharedLibraryLockStatusSchema: GenMessage<CMsgClientSharedLibraryLockStatus> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 81);

/**
 * @generated from message CMsgClientSharedLibraryLockStatus.LockedLibrary
 */
export type CMsgClientSharedLibraryLockStatus_LockedLibrary = Message<"CMsgClientSharedLibraryLockStatus.LockedLibrary"> & {
  /**
   * @generated from field: optional uint32 owner_id = 1;
   */
  ownerId: number;

  /**
   * @generated from field: optional uint32 locked_by = 2;
   */
  lockedBy: number;
};

/**
 * Describes the message CMsgClientSharedLibraryLockStatus.LockedLibrary.
 * Use `create(CMsgClientSharedLibraryLockStatus_LockedLibrarySchema)` to create a new message.
 */
export const CMsgClientSharedLibraryLockStatus_LockedLibrarySchema: GenMessage<CMsgClientSharedLibraryLockStatus_LockedLibrary> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 81, 0);

/**
 * @generated from message CMsgClientSharedLibraryStopPlaying
 */
export type CMsgClientSharedLibraryStopPlaying = Message<"CMsgClientSharedLibraryStopPlaying"> & {
  /**
   * @generated from field: optional int32 seconds_left = 1;
   */
  secondsLeft: number;

  /**
   * @generated from field: repeated CMsgClientSharedLibraryStopPlaying.StopApp stop_apps = 2;
   */
  stopApps: CMsgClientSharedLibraryStopPlaying_StopApp[];
};

/**
 * Describes the message CMsgClientSharedLibraryStopPlaying.
 * Use `create(CMsgClientSharedLibraryStopPlayingSchema)` to create a new message.
 */
export const CMsgClientSharedLibraryStopPlayingSchema: GenMessage<CMsgClientSharedLibraryStopPlaying> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 82);

/**
 * @generated from message CMsgClientSharedLibraryStopPlaying.StopApp
 */
export type CMsgClientSharedLibraryStopPlaying_StopApp = Message<"CMsgClientSharedLibraryStopPlaying.StopApp"> & {
  /**
   * @generated from field: optional uint32 app_id = 1;
   */
  appId: number;

  /**
   * @generated from field: optional uint32 owner_id = 2;
   */
  ownerId: number;
};

/**
 * Describes the message CMsgClientSharedLibraryStopPlaying.StopApp.
 * Use `create(CMsgClientSharedLibraryStopPlaying_StopAppSchema)` to create a new message.
 */
export const CMsgClientSharedLibraryStopPlaying_StopAppSchema: GenMessage<CMsgClientSharedLibraryStopPlaying_StopApp> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 82, 0);

/**
 * @generated from message CMsgClientServiceCall
 */
export type CMsgClientServiceCall = Message<"CMsgClientServiceCall"> & {
  /**
   * @generated from field: optional bytes sysid_routing = 1;
   */
  sysidRouting: Uint8Array;

  /**
   * @generated from field: optional uint32 call_handle = 2;
   */
  callHandle: number;

  /**
   * @generated from field: optional uint32 module_crc = 3;
   */
  moduleCrc: number;

  /**
   * @generated from field: optional bytes module_hash = 4;
   */
  moduleHash: Uint8Array;

  /**
   * @generated from field: optional uint32 function_id = 5;
   */
  functionId: number;

  /**
   * @generated from field: optional uint32 cub_output_max = 6;
   */
  cubOutputMax: number;

  /**
   * @generated from field: optional uint32 flags = 7;
   */
  flags: number;

  /**
   * @generated from field: optional bytes callparameter = 8;
   */
  callparameter: Uint8Array;

  /**
   * @generated from field: optional bool ping_only = 9;
   */
  pingOnly: boolean;

  /**
   * @generated from field: optional uint32 max_outstanding_calls = 10;
   */
  maxOutstandingCalls: number;

  /**
   * @generated from field: optional uint32 app_id = 11;
   */
  appId: number;
};

/**
 * Describes the message CMsgClientServiceCall.
 * Use `create(CMsgClientServiceCallSchema)` to create a new message.
 */
export const CMsgClientServiceCallSchema: GenMessage<CMsgClientServiceCall> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 83);

/**
 * @generated from message CMsgClientServiceModule
 */
export type CMsgClientServiceModule = Message<"CMsgClientServiceModule"> & {
  /**
   * @generated from field: optional uint32 module_crc = 1;
   */
  moduleCrc: number;

  /**
   * @generated from field: optional bytes module_hash = 2;
   */
  moduleHash: Uint8Array;

  /**
   * @generated from field: optional bytes module_content = 3;
   */
  moduleContent: Uint8Array;
};

/**
 * Describes the message CMsgClientServiceModule.
 * Use `create(CMsgClientServiceModuleSchema)` to create a new message.
 */
export const CMsgClientServiceModuleSchema: GenMessage<CMsgClientServiceModule> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 84);

/**
 * @generated from message CMsgClientServiceCallResponse
 */
export type CMsgClientServiceCallResponse = Message<"CMsgClientServiceCallResponse"> & {
  /**
   * @generated from field: optional bytes sysid_routing = 1;
   */
  sysidRouting: Uint8Array;

  /**
   * @generated from field: optional uint32 call_handle = 2;
   */
  callHandle: number;

  /**
   * @generated from field: optional uint32 module_crc = 3;
   */
  moduleCrc: number;

  /**
   * @generated from field: optional bytes module_hash = 4;
   */
  moduleHash: Uint8Array;

  /**
   * @generated from field: optional uint32 ecallresult = 5;
   */
  ecallresult: number;

  /**
   * @generated from field: optional bytes result_content = 6;
   */
  resultContent: Uint8Array;

  /**
   * @generated from field: optional bytes os_version_info = 7;
   */
  osVersionInfo: Uint8Array;

  /**
   * @generated from field: optional bytes system_info = 8;
   */
  systemInfo: Uint8Array;

  /**
   * @generated from field: optional fixed64 load_address = 9;
   */
  loadAddress: bigint;

  /**
   * @generated from field: optional bytes exception_record = 10;
   */
  exceptionRecord: Uint8Array;

  /**
   * @generated from field: optional bytes portable_os_version_info = 11;
   */
  portableOsVersionInfo: Uint8Array;

  /**
   * @generated from field: optional bytes portable_system_info = 12;
   */
  portableSystemInfo: Uint8Array;

  /**
   * @generated from field: optional bool was_converted = 13;
   */
  wasConverted: boolean;

  /**
   * @generated from field: optional uint32 internal_result = 14;
   */
  internalResult: number;

  /**
   * @generated from field: optional uint32 current_count = 15;
   */
  currentCount: number;

  /**
   * @generated from field: optional uint32 last_call_handle = 16;
   */
  lastCallHandle: number;

  /**
   * @generated from field: optional uint32 last_call_module_crc = 17;
   */
  lastCallModuleCrc: number;

  /**
   * @generated from field: optional bytes last_call_sysid_routing = 18;
   */
  lastCallSysidRouting: Uint8Array;

  /**
   * @generated from field: optional uint32 last_ecallresult = 19;
   */
  lastEcallresult: number;

  /**
   * @generated from field: optional uint32 last_callissue_delta = 20;
   */
  lastCallissueDelta: number;

  /**
   * @generated from field: optional uint32 last_callcomplete_delta = 21;
   */
  lastCallcompleteDelta: number;
};

/**
 * Describes the message CMsgClientServiceCallResponse.
 * Use `create(CMsgClientServiceCallResponseSchema)` to create a new message.
 */
export const CMsgClientServiceCallResponseSchema: GenMessage<CMsgClientServiceCallResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 85);

/**
 * @generated from message CMsgAMUnlockH264
 */
export type CMsgAMUnlockH264 = Message<"CMsgAMUnlockH264"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional int32 platform = 2;
   */
  platform: number;

  /**
   * @generated from field: optional int32 reason = 3;
   */
  reason: number;
};

/**
 * Describes the message CMsgAMUnlockH264.
 * Use `create(CMsgAMUnlockH264Schema)` to create a new message.
 */
export const CMsgAMUnlockH264Schema: GenMessage<CMsgAMUnlockH264> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 86);

/**
 * @generated from message CMsgAMUnlockH264Response
 */
export type CMsgAMUnlockH264Response = Message<"CMsgAMUnlockH264Response"> & {
  /**
   * @generated from field: optional int32 eresult = 1 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional bytes encryption_key = 2;
   */
  encryptionKey: Uint8Array;
};

/**
 * Describes the message CMsgAMUnlockH264Response.
 * Use `create(CMsgAMUnlockH264ResponseSchema)` to create a new message.
 */
export const CMsgAMUnlockH264ResponseSchema: GenMessage<CMsgAMUnlockH264Response> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 87);

/**
 * @generated from message CMsgClientPlayingSessionState
 */
export type CMsgClientPlayingSessionState = Message<"CMsgClientPlayingSessionState"> & {
  /**
   * @generated from field: optional bool playing_blocked = 2;
   */
  playingBlocked: boolean;

  /**
   * @generated from field: optional uint32 playing_app = 3;
   */
  playingApp: number;
};

/**
 * Describes the message CMsgClientPlayingSessionState.
 * Use `create(CMsgClientPlayingSessionStateSchema)` to create a new message.
 */
export const CMsgClientPlayingSessionStateSchema: GenMessage<CMsgClientPlayingSessionState> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 88);

/**
 * @generated from message CMsgClientKickPlayingSession
 */
export type CMsgClientKickPlayingSession = Message<"CMsgClientKickPlayingSession"> & {
  /**
   * @generated from field: optional bool only_stop_game = 1;
   */
  onlyStopGame: boolean;
};

/**
 * Describes the message CMsgClientKickPlayingSession.
 * Use `create(CMsgClientKickPlayingSessionSchema)` to create a new message.
 */
export const CMsgClientKickPlayingSessionSchema: GenMessage<CMsgClientKickPlayingSession> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 89);

/**
 * @generated from message CMsgClientVoiceCallPreAuthorize
 */
export type CMsgClientVoiceCallPreAuthorize = Message<"CMsgClientVoiceCallPreAuthorize"> & {
  /**
   * @generated from field: optional fixed64 caller_steamid = 1;
   */
  callerSteamid: bigint;

  /**
   * @generated from field: optional fixed64 receiver_steamid = 2;
   */
  receiverSteamid: bigint;

  /**
   * @generated from field: optional int32 caller_id = 3;
   */
  callerId: number;

  /**
   * @generated from field: optional bool hangup = 4;
   */
  hangup: boolean;
};

/**
 * Describes the message CMsgClientVoiceCallPreAuthorize.
 * Use `create(CMsgClientVoiceCallPreAuthorizeSchema)` to create a new message.
 */
export const CMsgClientVoiceCallPreAuthorizeSchema: GenMessage<CMsgClientVoiceCallPreAuthorize> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 90);

/**
 * @generated from message CMsgClientVoiceCallPreAuthorizeResponse
 */
export type CMsgClientVoiceCallPreAuthorizeResponse = Message<"CMsgClientVoiceCallPreAuthorizeResponse"> & {
  /**
   * @generated from field: optional fixed64 caller_steamid = 1;
   */
  callerSteamid: bigint;

  /**
   * @generated from field: optional fixed64 receiver_steamid = 2;
   */
  receiverSteamid: bigint;

  /**
   * @generated from field: optional int32 eresult = 3 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional int32 caller_id = 4;
   */
  callerId: number;
};

/**
 * Describes the message CMsgClientVoiceCallPreAuthorizeResponse.
 * Use `create(CMsgClientVoiceCallPreAuthorizeResponseSchema)` to create a new message.
 */
export const CMsgClientVoiceCallPreAuthorizeResponseSchema: GenMessage<CMsgClientVoiceCallPreAuthorizeResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 91);

/**
 * @generated from message CMsgBadgeCraftedNotification
 */
export type CMsgBadgeCraftedNotification = Message<"CMsgBadgeCraftedNotification"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 badge_level = 2;
   */
  badgeLevel: number;
};

/**
 * Describes the message CMsgBadgeCraftedNotification.
 * Use `create(CMsgBadgeCraftedNotificationSchema)` to create a new message.
 */
export const CMsgBadgeCraftedNotificationSchema: GenMessage<CMsgBadgeCraftedNotification> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 92);

/**
 * @generated from message CMsgClientStartPeerContentServer
 */
export type CMsgClientStartPeerContentServer = Message<"CMsgClientStartPeerContentServer"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional fixed64 client_remote_id = 2;
   */
  clientRemoteId: bigint;

  /**
   * @generated from field: optional uint32 app_id = 3;
   */
  appId: number;

  /**
   * @generated from field: optional uint32 current_build_id = 4;
   */
  currentBuildId: number;
};

/**
 * Describes the message CMsgClientStartPeerContentServer.
 * Use `create(CMsgClientStartPeerContentServerSchema)` to create a new message.
 */
export const CMsgClientStartPeerContentServerSchema: GenMessage<CMsgClientStartPeerContentServer> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 93);

/**
 * @generated from message CMsgClientStartPeerContentServerResponse
 */
export type CMsgClientStartPeerContentServerResponse = Message<"CMsgClientStartPeerContentServerResponse"> & {
  /**
   * @generated from field: optional uint32 result = 1;
   */
  result: number;

  /**
   * @generated from field: optional uint32 server_port = 2;
   */
  serverPort: number;

  /**
   * @generated from field: repeated uint32 installed_depots = 3;
   */
  installedDepots: number[];

  /**
   * @generated from field: optional uint64 access_token = 4;
   */
  accessToken: bigint;
};

/**
 * Describes the message CMsgClientStartPeerContentServerResponse.
 * Use `create(CMsgClientStartPeerContentServerResponseSchema)` to create a new message.
 */
export const CMsgClientStartPeerContentServerResponseSchema: GenMessage<CMsgClientStartPeerContentServerResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 94);

/**
 * @generated from message CMsgClientGetPeerContentInfo
 */
export type CMsgClientGetPeerContentInfo = Message<"CMsgClientGetPeerContentInfo"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional fixed64 client_remote_id = 2;
   */
  clientRemoteId: bigint;

  /**
   * @generated from field: optional bool owned_games_visible = 3;
   */
  ownedGamesVisible: boolean;
};

/**
 * Describes the message CMsgClientGetPeerContentInfo.
 * Use `create(CMsgClientGetPeerContentInfoSchema)` to create a new message.
 */
export const CMsgClientGetPeerContentInfoSchema: GenMessage<CMsgClientGetPeerContentInfo> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 95);

/**
 * @generated from message CMsgClientGetPeerContentInfoResponse
 */
export type CMsgClientGetPeerContentInfoResponse = Message<"CMsgClientGetPeerContentInfoResponse"> & {
  /**
   * @generated from field: optional uint32 result = 1;
   */
  result: number;

  /**
   * @generated from field: repeated uint32 apps = 2;
   */
  apps: number[];
};

/**
 * Describes the message CMsgClientGetPeerContentInfoResponse.
 * Use `create(CMsgClientGetPeerContentInfoResponseSchema)` to create a new message.
 */
export const CMsgClientGetPeerContentInfoResponseSchema: GenMessage<CMsgClientGetPeerContentInfoResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 96);

/**
 * @generated from message CMsgClientPendingGameLaunch
 */
export type CMsgClientPendingGameLaunch = Message<"CMsgClientPendingGameLaunch"> & {
  /**
   * @generated from field: optional uint32 app_id = 1;
   */
  appId: number;
};

/**
 * Describes the message CMsgClientPendingGameLaunch.
 * Use `create(CMsgClientPendingGameLaunchSchema)` to create a new message.
 */
export const CMsgClientPendingGameLaunchSchema: GenMessage<CMsgClientPendingGameLaunch> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 97);

/**
 * @generated from message CMsgClientPendingGameLaunchResponse
 */
export type CMsgClientPendingGameLaunchResponse = Message<"CMsgClientPendingGameLaunchResponse"> & {
  /**
   * @generated from field: optional int32 eresult = 1 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional uint32 app_id = 2;
   */
  appId: number;

  /**
   * @generated from field: optional string envkey = 3;
   */
  envkey: string;
};

/**
 * Describes the message CMsgClientPendingGameLaunchResponse.
 * Use `create(CMsgClientPendingGameLaunchResponseSchema)` to create a new message.
 */
export const CMsgClientPendingGameLaunchResponseSchema: GenMessage<CMsgClientPendingGameLaunchResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_clientserver_2, 98);

