// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file webuimessages_gamescope.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { EGamescopeBlurMode } from "./enums_pb";
import { file_enums } from "./enums_pb";
import { file_steammessages_base } from "./steammessages_base_pb";
import type { WebUINoResponseSchema } from "./webuimessages_base_pb";
import { file_webuimessages_base } from "./webuimessages_base_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file webuimessages_gamescope.proto.
 */
export const file_webuimessages_gamescope: GenFile = /*@__PURE__*/
  fileDesc("Ch13ZWJ1aW1lc3NhZ2VzX2dhbWVzY29wZS5wcm90byKVAgoPQ01zZ0Rpc3BsYXlJbmZvEgwKBG1ha2UYASABKAkSDQoFbW9kZWwYAiABKAkSFgoOY29ubmVjdG9yX25hbWUYAyABKAkSHwoXc3VwcG9ydGVkX3JlZnJlc2hfcmF0ZXMYBCADKAUSHQoVc3VwcG9ydGVkX2ZyYW1lX3JhdGVzGAUgAygFEhMKC2lzX2V4dGVybmFsGAYgASgIEhYKDmlzX2hkcl9jYXBhYmxlGAcgASgIEhYKDmlzX3Zycl9jYXBhYmxlGAggASgIEkgKDWRpc3BsYXlfc3RhdGUYCSABKA4yEy5FRGlzcGxheVBvd2VyU3RhdGU6HGtfRURpc3BsYXlQb3dlclN0YXRlX0ludmFsaWQimgQKEkNNc2dHYW1lc2NvcGVTdGF0ZRIcChRpc19zZXJ2aWNlX2F2YWlsYWJsZRgBIAEoCBIcChRpc19yZXNoYWRlX3N1cHBvcnRlZBgCIAEoCBIaChJpc19hcHBfaGRyX2VuYWJsZWQYAyABKAgSJQodaXNfYXBwX3JlZnJlc2hfcmF0ZV9zdXBwb3J0ZWQYBCABKAgSLQoTYWN0aXZlX2Rpc3BsYXlfaW5mbxgFIAEoCzIQLkNNc2dEaXNwbGF5SW5mbxIjChtpc19hcHBfcmVmcmVzaF9yYXRlX2NhcGFibGUYBiABKAgSKwojaXNfcmVmcmVzaF9yYXRlX3N3aXRjaGluZ19zdXBwb3J0ZWQYByABKAgSLAokaXNfcmVmcmVzaF9yYXRlX3N3aXRjaGluZ19yZXN0cmljdGVkGAggASgIEiYKHmlzX2hkcl92aXN1YWxpemF0aW9uX3N1cHBvcnRlZBgJIAEoCBIkChxpc19tdXJhX2NvcnJlY3Rpb25fc3VwcG9ydGVkGAogASgIEioKImlzX2dsb2JhbF9hY3Rpb25fYmluZGluZ19zdXBwb3J0ZWQYCyABKAgSGQoRaXNfbG9va19zdXBwb3J0ZWQYDCABKAgSEgoKbG9va19uYW1lcxgNIAMoCRItCiVpc19kaXNwbGF5X3N0YXRlX21hbmFnZW1lbnRfc3VwcG9ydGVkGA4gASgIIh0KG0NHYW1lc2NvcGVfR2V0U3RhdGVfUmVxdWVzdCJCChxDR2FtZXNjb3BlX0dldFN0YXRlX1Jlc3BvbnNlEiIKBXN0YXRlGAEgASgLMhMuQ01zZ0dhbWVzY29wZVN0YXRlIiYKJENHYW1lc2NvcGVfU3RhdGVDaGFuZ2VkX05vdGlmaWNhdGlvbiKOAQogQ0dhbWVzY29wZV9TZXRCbHVyUGFyYW1zX1JlcXVlc3QSQAoEbW9kZRgBIAEoDjITLkVHYW1lc2NvcGVCbHVyTW9kZToda19FR2FtZXNjb3BlQmx1ck1vZGVfRGlzYWJsZWQSDgoGcmFkaXVzGAIgASgFEhgKEGZhZGVfZHVyYXRpb25fbXMYAyABKAUiIwohQ0dhbWVzY29wZV9TZXRCbHVyUGFyYW1zX1Jlc3BvbnNlIikKJ0NHYW1lc2NvcGVfUmVBcm1NdXJhQ2FsaWJyYXRpb25fUmVxdWVzdCIqCihDR2FtZXNjb3BlX1JlQXJtTXVyYUNhbGlicmF0aW9uX1Jlc3BvbnNlImwKJ0NHYW1lc2NvcGVfU2V0RGlzcGxheVBvd2VyU3RhdGVfUmVxdWVzdBJBCgZlc3RhdGUYASABKA4yEy5FRGlzcGxheVBvd2VyU3RhdGU6HGtfRURpc3BsYXlQb3dlclN0YXRlX0ludmFsaWQiKgooQ0dhbWVzY29wZV9TZXREaXNwbGF5UG93ZXJTdGF0ZV9SZXNwb25zZSpxChJFRGlzcGxheVBvd2VyU3RhdGUSIAoca19FRGlzcGxheVBvd2VyU3RhdGVfSW52YWxpZBAAEhwKGGtfRURpc3BsYXlQb3dlclN0YXRlX09mZhABEhsKF2tfRURpc3BsYXlQb3dlclN0YXRlX09uEAIy2wMKCUdhbWVzY29wZRJHCghHZXRTdGF0ZRIcLkNHYW1lc2NvcGVfR2V0U3RhdGVfUmVxdWVzdBodLkNHYW1lc2NvcGVfR2V0U3RhdGVfUmVzcG9uc2USTQoSTm90aWZ5U3RhdGVDaGFuZ2VkEiUuQ0dhbWVzY29wZV9TdGF0ZUNoYW5nZWRfTm90aWZpY2F0aW9uGhAuV2ViVUlOb1Jlc3BvbnNlElYKDVNldEJsdXJQYXJhbXMSIS5DR2FtZXNjb3BlX1NldEJsdXJQYXJhbXNfUmVxdWVzdBoiLkNHYW1lc2NvcGVfU2V0Qmx1clBhcmFtc19SZXNwb25zZRJrChRSZUFybU11cmFDYWxpYnJhdGlvbhIoLkNHYW1lc2NvcGVfUmVBcm1NdXJhQ2FsaWJyYXRpb25fUmVxdWVzdBopLkNHYW1lc2NvcGVfUmVBcm1NdXJhQ2FsaWJyYXRpb25fUmVzcG9uc2USawoUU2V0RGlzcGxheVBvd2VyU3RhdGUSKC5DR2FtZXNjb3BlX1NldERpc3BsYXlQb3dlclN0YXRlX1JlcXVlc3QaKS5DR2FtZXNjb3BlX1NldERpc3BsYXlQb3dlclN0YXRlX1Jlc3BvbnNlGgSAlyIBQgVIAYABAQ", [file_enums, file_steammessages_base, file_webuimessages_base]);

/**
 * @generated from message CMsgDisplayInfo
 */
export type CMsgDisplayInfo = Message<"CMsgDisplayInfo"> & {
  /**
   * @generated from field: optional string make = 1;
   */
  make: string;

  /**
   * @generated from field: optional string model = 2;
   */
  model: string;

  /**
   * @generated from field: optional string connector_name = 3;
   */
  connectorName: string;

  /**
   * @generated from field: repeated int32 supported_refresh_rates = 4;
   */
  supportedRefreshRates: number[];

  /**
   * @generated from field: repeated int32 supported_frame_rates = 5;
   */
  supportedFrameRates: number[];

  /**
   * @generated from field: optional bool is_external = 6;
   */
  isExternal: boolean;

  /**
   * @generated from field: optional bool is_hdr_capable = 7;
   */
  isHdrCapable: boolean;

  /**
   * @generated from field: optional bool is_vrr_capable = 8;
   */
  isVrrCapable: boolean;

  /**
   * @generated from field: optional EDisplayPowerState display_state = 9 [default = k_EDisplayPowerState_Invalid];
   */
  displayState: EDisplayPowerState;
};

/**
 * Describes the message CMsgDisplayInfo.
 * Use `create(CMsgDisplayInfoSchema)` to create a new message.
 */
export const CMsgDisplayInfoSchema: GenMessage<CMsgDisplayInfo> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamescope, 0);

/**
 * @generated from message CMsgGamescopeState
 */
export type CMsgGamescopeState = Message<"CMsgGamescopeState"> & {
  /**
   * @generated from field: optional bool is_service_available = 1;
   */
  isServiceAvailable: boolean;

  /**
   * @generated from field: optional bool is_reshade_supported = 2;
   */
  isReshadeSupported: boolean;

  /**
   * @generated from field: optional bool is_app_hdr_enabled = 3;
   */
  isAppHdrEnabled: boolean;

  /**
   * @generated from field: optional bool is_app_refresh_rate_supported = 4;
   */
  isAppRefreshRateSupported: boolean;

  /**
   * @generated from field: optional CMsgDisplayInfo active_display_info = 5;
   */
  activeDisplayInfo?: CMsgDisplayInfo;

  /**
   * @generated from field: optional bool is_app_refresh_rate_capable = 6;
   */
  isAppRefreshRateCapable: boolean;

  /**
   * @generated from field: optional bool is_refresh_rate_switching_supported = 7;
   */
  isRefreshRateSwitchingSupported: boolean;

  /**
   * @generated from field: optional bool is_refresh_rate_switching_restricted = 8;
   */
  isRefreshRateSwitchingRestricted: boolean;

  /**
   * @generated from field: optional bool is_hdr_visualization_supported = 9;
   */
  isHdrVisualizationSupported: boolean;

  /**
   * @generated from field: optional bool is_mura_correction_supported = 10;
   */
  isMuraCorrectionSupported: boolean;

  /**
   * @generated from field: optional bool is_global_action_binding_supported = 11;
   */
  isGlobalActionBindingSupported: boolean;

  /**
   * @generated from field: optional bool is_look_supported = 12;
   */
  isLookSupported: boolean;

  /**
   * @generated from field: repeated string look_names = 13;
   */
  lookNames: string[];

  /**
   * @generated from field: optional bool is_display_state_management_supported = 14;
   */
  isDisplayStateManagementSupported: boolean;
};

/**
 * Describes the message CMsgGamescopeState.
 * Use `create(CMsgGamescopeStateSchema)` to create a new message.
 */
export const CMsgGamescopeStateSchema: GenMessage<CMsgGamescopeState> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamescope, 1);

/**
 * @generated from message CGamescope_GetState_Request
 */
export type CGamescope_GetState_Request = Message<"CGamescope_GetState_Request"> & {
};

/**
 * Describes the message CGamescope_GetState_Request.
 * Use `create(CGamescope_GetState_RequestSchema)` to create a new message.
 */
export const CGamescope_GetState_RequestSchema: GenMessage<CGamescope_GetState_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamescope, 2);

/**
 * @generated from message CGamescope_GetState_Response
 */
export type CGamescope_GetState_Response = Message<"CGamescope_GetState_Response"> & {
  /**
   * @generated from field: optional CMsgGamescopeState state = 1;
   */
  state?: CMsgGamescopeState;
};

/**
 * Describes the message CGamescope_GetState_Response.
 * Use `create(CGamescope_GetState_ResponseSchema)` to create a new message.
 */
export const CGamescope_GetState_ResponseSchema: GenMessage<CGamescope_GetState_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamescope, 3);

/**
 * @generated from message CGamescope_StateChanged_Notification
 */
export type CGamescope_StateChanged_Notification = Message<"CGamescope_StateChanged_Notification"> & {
};

/**
 * Describes the message CGamescope_StateChanged_Notification.
 * Use `create(CGamescope_StateChanged_NotificationSchema)` to create a new message.
 */
export const CGamescope_StateChanged_NotificationSchema: GenMessage<CGamescope_StateChanged_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamescope, 4);

/**
 * @generated from message CGamescope_SetBlurParams_Request
 */
export type CGamescope_SetBlurParams_Request = Message<"CGamescope_SetBlurParams_Request"> & {
  /**
   * @generated from field: optional EGamescopeBlurMode mode = 1 [default = k_EGamescopeBlurMode_Disabled];
   */
  mode: EGamescopeBlurMode;

  /**
   * @generated from field: optional int32 radius = 2;
   */
  radius: number;

  /**
   * @generated from field: optional int32 fade_duration_ms = 3;
   */
  fadeDurationMs: number;
};

/**
 * Describes the message CGamescope_SetBlurParams_Request.
 * Use `create(CGamescope_SetBlurParams_RequestSchema)` to create a new message.
 */
export const CGamescope_SetBlurParams_RequestSchema: GenMessage<CGamescope_SetBlurParams_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamescope, 5);

/**
 * @generated from message CGamescope_SetBlurParams_Response
 */
export type CGamescope_SetBlurParams_Response = Message<"CGamescope_SetBlurParams_Response"> & {
};

/**
 * Describes the message CGamescope_SetBlurParams_Response.
 * Use `create(CGamescope_SetBlurParams_ResponseSchema)` to create a new message.
 */
export const CGamescope_SetBlurParams_ResponseSchema: GenMessage<CGamescope_SetBlurParams_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamescope, 6);

/**
 * @generated from message CGamescope_ReArmMuraCalibration_Request
 */
export type CGamescope_ReArmMuraCalibration_Request = Message<"CGamescope_ReArmMuraCalibration_Request"> & {
};

/**
 * Describes the message CGamescope_ReArmMuraCalibration_Request.
 * Use `create(CGamescope_ReArmMuraCalibration_RequestSchema)` to create a new message.
 */
export const CGamescope_ReArmMuraCalibration_RequestSchema: GenMessage<CGamescope_ReArmMuraCalibration_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamescope, 7);

/**
 * @generated from message CGamescope_ReArmMuraCalibration_Response
 */
export type CGamescope_ReArmMuraCalibration_Response = Message<"CGamescope_ReArmMuraCalibration_Response"> & {
};

/**
 * Describes the message CGamescope_ReArmMuraCalibration_Response.
 * Use `create(CGamescope_ReArmMuraCalibration_ResponseSchema)` to create a new message.
 */
export const CGamescope_ReArmMuraCalibration_ResponseSchema: GenMessage<CGamescope_ReArmMuraCalibration_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamescope, 8);

/**
 * @generated from message CGamescope_SetDisplayPowerState_Request
 */
export type CGamescope_SetDisplayPowerState_Request = Message<"CGamescope_SetDisplayPowerState_Request"> & {
  /**
   * @generated from field: optional EDisplayPowerState estate = 1 [default = k_EDisplayPowerState_Invalid];
   */
  estate: EDisplayPowerState;
};

/**
 * Describes the message CGamescope_SetDisplayPowerState_Request.
 * Use `create(CGamescope_SetDisplayPowerState_RequestSchema)` to create a new message.
 */
export const CGamescope_SetDisplayPowerState_RequestSchema: GenMessage<CGamescope_SetDisplayPowerState_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamescope, 9);

/**
 * @generated from message CGamescope_SetDisplayPowerState_Response
 */
export type CGamescope_SetDisplayPowerState_Response = Message<"CGamescope_SetDisplayPowerState_Response"> & {
};

/**
 * Describes the message CGamescope_SetDisplayPowerState_Response.
 * Use `create(CGamescope_SetDisplayPowerState_ResponseSchema)` to create a new message.
 */
export const CGamescope_SetDisplayPowerState_ResponseSchema: GenMessage<CGamescope_SetDisplayPowerState_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_gamescope, 10);

/**
 * @generated from enum EDisplayPowerState
 */
export enum EDisplayPowerState {
  /**
   * @generated from enum value: k_EDisplayPowerState_Invalid = 0;
   */
  k_EDisplayPowerState_Invalid = 0,

  /**
   * @generated from enum value: k_EDisplayPowerState_Off = 1;
   */
  k_EDisplayPowerState_Off = 1,

  /**
   * @generated from enum value: k_EDisplayPowerState_On = 2;
   */
  k_EDisplayPowerState_On = 2,
}

/**
 * Describes the enum EDisplayPowerState.
 */
export const EDisplayPowerStateSchema: GenEnum<EDisplayPowerState> = /*@__PURE__*/
  enumDesc(file_webuimessages_gamescope, 0);

/**
 * @generated from service Gamescope
 */
export const Gamescope: GenService<{
  /**
   * @generated from rpc Gamescope.GetState
   */
  getState: {
    methodKind: "unary";
    input: typeof CGamescope_GetState_RequestSchema;
    output: typeof CGamescope_GetState_ResponseSchema;
  },
  /**
   * @generated from rpc Gamescope.NotifyStateChanged
   */
  notifyStateChanged: {
    methodKind: "unary";
    input: typeof CGamescope_StateChanged_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc Gamescope.SetBlurParams
   */
  setBlurParams: {
    methodKind: "unary";
    input: typeof CGamescope_SetBlurParams_RequestSchema;
    output: typeof CGamescope_SetBlurParams_ResponseSchema;
  },
  /**
   * @generated from rpc Gamescope.ReArmMuraCalibration
   */
  reArmMuraCalibration: {
    methodKind: "unary";
    input: typeof CGamescope_ReArmMuraCalibration_RequestSchema;
    output: typeof CGamescope_ReArmMuraCalibration_ResponseSchema;
  },
  /**
   * @generated from rpc Gamescope.SetDisplayPowerState
   */
  setDisplayPowerState: {
    methodKind: "unary";
    input: typeof CGamescope_SetDisplayPowerState_RequestSchema;
    output: typeof CGamescope_SetDisplayPowerState_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_webuimessages_gamescope, 0);

