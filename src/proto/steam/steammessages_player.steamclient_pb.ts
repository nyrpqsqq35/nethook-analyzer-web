// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_player.steamclient.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { EBanContentCheckResult, UserContentDescriptorPreferences } from "./steammessages_base_pb";
import { file_steammessages_base } from "./steammessages_base_pb";
import type { NoResponseSchema } from "./steammessages_unified_base.steamclient_pb";
import { file_steammessages_unified_base_steamclient } from "./steammessages_unified_base.steamclient_pb";
import type { ECommunityItemClass, ENewSteamAnnouncementState, EProfileCustomizationType } from "./enums_pb";
import { file_enums } from "./enums_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_player.steamclient.proto.
 */
export const file_steammessages_player_steamclient: GenFile = /*@__PURE__*/
  fileDesc("", [file_steammessages_base, file_steammessages_unified_base_steamclient, file_enums]);

/**
 * @generated from message CPlayer_GetRecentPlaytimeSessionsForChild_Request
 */
export type CPlayer_GetRecentPlaytimeSessionsForChild_Request = Message<"CPlayer_GetRecentPlaytimeSessionsForChild_Request"> & {
  /**
   * @generated from field: optional uint64 steamid = 1;
   */
  steamid: bigint;
};

/**
 * Describes the message CPlayer_GetRecentPlaytimeSessionsForChild_Request.
 * Use `create(CPlayer_GetRecentPlaytimeSessionsForChild_RequestSchema)` to create a new message.
 */
export const CPlayer_GetRecentPlaytimeSessionsForChild_RequestSchema: GenMessage<CPlayer_GetRecentPlaytimeSessionsForChild_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 0);

/**
 * @generated from message CPlayer_GetRecentPlaytimeSessionsForChild_Response
 */
export type CPlayer_GetRecentPlaytimeSessionsForChild_Response = Message<"CPlayer_GetRecentPlaytimeSessionsForChild_Response"> & {
  /**
   * @generated from field: repeated CPlayer_GetRecentPlaytimeSessionsForChild_Response.PlaytimeSession sessions = 1;
   */
  sessions: CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSession[];
};

/**
 * Describes the message CPlayer_GetRecentPlaytimeSessionsForChild_Response.
 * Use `create(CPlayer_GetRecentPlaytimeSessionsForChild_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetRecentPlaytimeSessionsForChild_ResponseSchema: GenMessage<CPlayer_GetRecentPlaytimeSessionsForChild_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 1);

/**
 * @generated from message CPlayer_GetRecentPlaytimeSessionsForChild_Response.PlaytimeSession
 */
export type CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSession = Message<"CPlayer_GetRecentPlaytimeSessionsForChild_Response.PlaytimeSession"> & {
  /**
   * @generated from field: optional uint32 time_start = 1;
   */
  timeStart: number;

  /**
   * @generated from field: optional uint32 time_end = 2;
   */
  timeEnd: number;

  /**
   * @generated from field: optional uint32 appid = 3;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 device_type = 4;
   */
  deviceType: number;

  /**
   * @generated from field: optional bool disconnected = 5;
   */
  disconnected: boolean;
};

/**
 * Describes the message CPlayer_GetRecentPlaytimeSessionsForChild_Response.PlaytimeSession.
 * Use `create(CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSessionSchema)` to create a new message.
 */
export const CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSessionSchema: GenMessage<CPlayer_GetRecentPlaytimeSessionsForChild_Response_PlaytimeSession> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 1, 0);

/**
 * @generated from message CPlayer_GetPlayerLinkDetails_Request
 */
export type CPlayer_GetPlayerLinkDetails_Request = Message<"CPlayer_GetPlayerLinkDetails_Request"> & {
  /**
   * @generated from field: repeated uint64 steamids = 1;
   */
  steamids: bigint[];
};

/**
 * Describes the message CPlayer_GetPlayerLinkDetails_Request.
 * Use `create(CPlayer_GetPlayerLinkDetails_RequestSchema)` to create a new message.
 */
export const CPlayer_GetPlayerLinkDetails_RequestSchema: GenMessage<CPlayer_GetPlayerLinkDetails_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 2);

/**
 * @generated from message CPlayer_GetPlayerLinkDetails_Response
 */
export type CPlayer_GetPlayerLinkDetails_Response = Message<"CPlayer_GetPlayerLinkDetails_Response"> & {
  /**
   * @generated from field: repeated CPlayer_GetPlayerLinkDetails_Response.PlayerLinkDetails accounts = 1;
   */
  accounts: CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails[];
};

/**
 * Describes the message CPlayer_GetPlayerLinkDetails_Response.
 * Use `create(CPlayer_GetPlayerLinkDetails_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetPlayerLinkDetails_ResponseSchema: GenMessage<CPlayer_GetPlayerLinkDetails_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 3);

/**
 * @generated from message CPlayer_GetPlayerLinkDetails_Response.PlayerLinkDetails
 */
export type CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails = Message<"CPlayer_GetPlayerLinkDetails_Response.PlayerLinkDetails"> & {
  /**
   * @generated from field: optional CPlayer_GetPlayerLinkDetails_Response.PlayerLinkDetails.AccountPublicData public_data = 1;
   */
  publicData?: CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicData;

  /**
   * @generated from field: optional CPlayer_GetPlayerLinkDetails_Response.PlayerLinkDetails.AccountPrivateData private_data = 2;
   */
  privateData?: CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateData;
};

/**
 * Describes the message CPlayer_GetPlayerLinkDetails_Response.PlayerLinkDetails.
 * Use `create(CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetailsSchema)` to create a new message.
 */
export const CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetailsSchema: GenMessage<CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 3, 0);

/**
 * @generated from message CPlayer_GetPlayerLinkDetails_Response.PlayerLinkDetails.AccountPublicData
 */
export type CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicData = Message<"CPlayer_GetPlayerLinkDetails_Response.PlayerLinkDetails.AccountPublicData"> & {
  /**
   * @generated from field: required fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional int32 visibility_state = 2;
   */
  visibilityState: number;

  /**
   * @generated from field: optional int32 privacy_state = 3;
   */
  privacyState: number;

  /**
   * @generated from field: optional int32 profile_state = 4;
   */
  profileState: number;

  /**
   * @generated from field: optional uint32 ban_expires_time = 7;
   */
  banExpiresTime: number;

  /**
   * @generated from field: optional uint32 account_flags = 8;
   */
  accountFlags: number;

  /**
   * @generated from field: optional bytes sha_digest_avatar = 9;
   */
  shaDigestAvatar: Uint8Array;

  /**
   * @generated from field: optional string persona_name = 10;
   */
  personaName: string;

  /**
   * @generated from field: optional string profile_url = 11;
   */
  profileUrl: string;

  /**
   * @generated from field: optional bool content_country_restricted = 12;
   */
  contentCountryRestricted: boolean;
};

/**
 * Describes the message CPlayer_GetPlayerLinkDetails_Response.PlayerLinkDetails.AccountPublicData.
 * Use `create(CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicDataSchema)` to create a new message.
 */
export const CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicDataSchema: GenMessage<CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPublicData> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 3, 0, 0);

/**
 * @generated from message CPlayer_GetPlayerLinkDetails_Response.PlayerLinkDetails.AccountPrivateData
 */
export type CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateData = Message<"CPlayer_GetPlayerLinkDetails_Response.PlayerLinkDetails.AccountPrivateData"> & {
  /**
   * @generated from field: optional int32 persona_state = 1;
   */
  personaState: number;

  /**
   * @generated from field: optional uint32 persona_state_flags = 2;
   */
  personaStateFlags: number;

  /**
   * @generated from field: optional uint32 time_created = 3;
   */
  timeCreated: number;

  /**
   * @generated from field: optional fixed64 game_id = 4;
   */
  gameId: bigint;

  /**
   * @generated from field: optional fixed64 game_server_steam_id = 5;
   */
  gameServerSteamId: bigint;

  /**
   * @generated from field: optional uint32 game_server_ip_address = 6;
   */
  gameServerIpAddress: number;

  /**
   * @generated from field: optional uint32 game_server_port = 7;
   */
  gameServerPort: number;

  /**
   * @generated from field: optional string game_extra_info = 8;
   */
  gameExtraInfo: string;

  /**
   * @generated from field: optional string account_name = 9;
   */
  accountName: string;

  /**
   * @generated from field: optional fixed64 lobby_steam_id = 10;
   */
  lobbySteamId: bigint;

  /**
   * @generated from field: optional string rich_presence_kv = 11;
   */
  richPresenceKv: string;

  /**
   * @generated from field: optional fixed64 broadcast_session_id = 12;
   */
  broadcastSessionId: bigint;

  /**
   * @generated from field: optional uint32 watching_broadcast_accountid = 13;
   */
  watchingBroadcastAccountid: number;

  /**
   * @generated from field: optional uint32 watching_broadcast_appid = 14;
   */
  watchingBroadcastAppid: number;

  /**
   * @generated from field: optional uint32 watching_broadcast_viewers = 15;
   */
  watchingBroadcastViewers: number;

  /**
   * @generated from field: optional string watching_broadcast_title = 16;
   */
  watchingBroadcastTitle: string;

  /**
   * @generated from field: optional uint32 last_logoff_time = 17;
   */
  lastLogoffTime: number;

  /**
   * @generated from field: optional uint32 last_seen_online = 18;
   */
  lastSeenOnline: number;

  /**
   * @generated from field: optional int32 game_os_type = 19;
   */
  gameOsType: number;

  /**
   * @generated from field: optional int32 game_device_type = 20;
   */
  gameDeviceType: number;

  /**
   * @generated from field: optional string game_device_name = 21;
   */
  gameDeviceName: string;

  /**
   * @generated from field: optional bool game_is_private = 22;
   */
  gameIsPrivate: boolean;
};

/**
 * Describes the message CPlayer_GetPlayerLinkDetails_Response.PlayerLinkDetails.AccountPrivateData.
 * Use `create(CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateDataSchema)` to create a new message.
 */
export const CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateDataSchema: GenMessage<CPlayer_GetPlayerLinkDetails_Response_PlayerLinkDetails_AccountPrivateData> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 3, 0, 1);

/**
 * @generated from message CPlayer_GetMutualFriendsForIncomingInvites_Request
 */
export type CPlayer_GetMutualFriendsForIncomingInvites_Request = Message<"CPlayer_GetMutualFriendsForIncomingInvites_Request"> & {
};

/**
 * Describes the message CPlayer_GetMutualFriendsForIncomingInvites_Request.
 * Use `create(CPlayer_GetMutualFriendsForIncomingInvites_RequestSchema)` to create a new message.
 */
export const CPlayer_GetMutualFriendsForIncomingInvites_RequestSchema: GenMessage<CPlayer_GetMutualFriendsForIncomingInvites_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 4);

/**
 * @generated from message CPlayer_IncomingInviteMutualFriendList
 */
export type CPlayer_IncomingInviteMutualFriendList = Message<"CPlayer_IncomingInviteMutualFriendList"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: repeated uint32 mutual_friend_account_ids = 2;
   */
  mutualFriendAccountIds: number[];
};

/**
 * Describes the message CPlayer_IncomingInviteMutualFriendList.
 * Use `create(CPlayer_IncomingInviteMutualFriendListSchema)` to create a new message.
 */
export const CPlayer_IncomingInviteMutualFriendListSchema: GenMessage<CPlayer_IncomingInviteMutualFriendList> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 5);

/**
 * @generated from message CPlayer_GetMutualFriendsForIncomingInvites_Response
 */
export type CPlayer_GetMutualFriendsForIncomingInvites_Response = Message<"CPlayer_GetMutualFriendsForIncomingInvites_Response"> & {
  /**
   * @generated from field: repeated CPlayer_IncomingInviteMutualFriendList incoming_invite_mutual_friends_lists = 1;
   */
  incomingInviteMutualFriendsLists: CPlayer_IncomingInviteMutualFriendList[];
};

/**
 * Describes the message CPlayer_GetMutualFriendsForIncomingInvites_Response.
 * Use `create(CPlayer_GetMutualFriendsForIncomingInvites_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetMutualFriendsForIncomingInvites_ResponseSchema: GenMessage<CPlayer_GetMutualFriendsForIncomingInvites_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 6);

/**
 * @generated from message CPlayer_GetOwnedGames_Request
 */
export type CPlayer_GetOwnedGames_Request = Message<"CPlayer_GetOwnedGames_Request"> & {
  /**
   * @generated from field: optional uint64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional bool include_appinfo = 2;
   */
  includeAppinfo: boolean;

  /**
   * @generated from field: optional bool include_played_free_games = 3;
   */
  includePlayedFreeGames: boolean;

  /**
   * @generated from field: repeated uint32 appids_filter = 4;
   */
  appidsFilter: number[];

  /**
   * @generated from field: optional bool include_free_sub = 5;
   */
  includeFreeSub: boolean;

  /**
   * @generated from field: optional bool skip_unvetted_apps = 6 [default = true];
   */
  skipUnvettedApps: boolean;

  /**
   * @generated from field: optional string language = 7;
   */
  language: string;

  /**
   * @generated from field: optional bool include_extended_appinfo = 8;
   */
  includeExtendedAppinfo: boolean;
};

/**
 * Describes the message CPlayer_GetOwnedGames_Request.
 * Use `create(CPlayer_GetOwnedGames_RequestSchema)` to create a new message.
 */
export const CPlayer_GetOwnedGames_RequestSchema: GenMessage<CPlayer_GetOwnedGames_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 7);

/**
 * @generated from message CPlayer_GetOwnedGames_Response
 */
export type CPlayer_GetOwnedGames_Response = Message<"CPlayer_GetOwnedGames_Response"> & {
  /**
   * @generated from field: optional uint32 game_count = 1;
   */
  gameCount: number;

  /**
   * @generated from field: repeated CPlayer_GetOwnedGames_Response.Game games = 2;
   */
  games: CPlayer_GetOwnedGames_Response_Game[];
};

/**
 * Describes the message CPlayer_GetOwnedGames_Response.
 * Use `create(CPlayer_GetOwnedGames_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetOwnedGames_ResponseSchema: GenMessage<CPlayer_GetOwnedGames_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 8);

/**
 * @generated from message CPlayer_GetOwnedGames_Response.Game
 */
export type CPlayer_GetOwnedGames_Response_Game = Message<"CPlayer_GetOwnedGames_Response.Game"> & {
  /**
   * @generated from field: optional int32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name: string;

  /**
   * @generated from field: optional int32 playtime_2weeks = 3;
   */
  playtime2weeks: number;

  /**
   * @generated from field: optional int32 playtime_forever = 4;
   */
  playtimeForever: number;

  /**
   * @generated from field: optional string img_icon_url = 5;
   */
  imgIconUrl: string;

  /**
   * @generated from field: optional bool has_community_visible_stats = 7;
   */
  hasCommunityVisibleStats: boolean;

  /**
   * @generated from field: optional int32 playtime_windows_forever = 8;
   */
  playtimeWindowsForever: number;

  /**
   * @generated from field: optional int32 playtime_mac_forever = 9;
   */
  playtimeMacForever: number;

  /**
   * @generated from field: optional int32 playtime_linux_forever = 10;
   */
  playtimeLinuxForever: number;

  /**
   * @generated from field: optional int32 playtime_deck_forever = 20;
   */
  playtimeDeckForever: number;

  /**
   * @generated from field: optional uint32 rtime_last_played = 11;
   */
  rtimeLastPlayed: number;

  /**
   * @generated from field: optional string capsule_filename = 12;
   */
  capsuleFilename: string;

  /**
   * @generated from field: optional string sort_as = 13;
   */
  sortAs: string;

  /**
   * @generated from field: optional bool has_workshop = 14;
   */
  hasWorkshop: boolean;

  /**
   * @generated from field: optional bool has_market = 15;
   */
  hasMarket: boolean;

  /**
   * @generated from field: optional bool has_dlc = 16;
   */
  hasDlc: boolean;

  /**
   * @generated from field: optional bool has_leaderboards = 17;
   */
  hasLeaderboards: boolean;

  /**
   * @generated from field: repeated uint32 content_descriptorids = 18;
   */
  contentDescriptorids: number[];

  /**
   * @generated from field: optional int32 playtime_disconnected = 19;
   */
  playtimeDisconnected: number;
};

/**
 * Describes the message CPlayer_GetOwnedGames_Response.Game.
 * Use `create(CPlayer_GetOwnedGames_Response_GameSchema)` to create a new message.
 */
export const CPlayer_GetOwnedGames_Response_GameSchema: GenMessage<CPlayer_GetOwnedGames_Response_Game> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 8, 0);

/**
 * @generated from message CPlayer_GetPlayNext_Request
 */
export type CPlayer_GetPlayNext_Request = Message<"CPlayer_GetPlayNext_Request"> & {
  /**
   * @generated from field: optional uint32 max_age_seconds = 1;
   */
  maxAgeSeconds: number;

  /**
   * @generated from field: repeated uint32 ignore_appids = 2;
   */
  ignoreAppids: number[];
};

/**
 * Describes the message CPlayer_GetPlayNext_Request.
 * Use `create(CPlayer_GetPlayNext_RequestSchema)` to create a new message.
 */
export const CPlayer_GetPlayNext_RequestSchema: GenMessage<CPlayer_GetPlayNext_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 9);

/**
 * @generated from message CPlayer_GetPlayNext_Response
 */
export type CPlayer_GetPlayNext_Response = Message<"CPlayer_GetPlayNext_Response"> & {
  /**
   * @generated from field: optional uint32 last_update_time = 1;
   */
  lastUpdateTime: number;

  /**
   * @generated from field: repeated uint32 appids = 2;
   */
  appids: number[];
};

/**
 * Describes the message CPlayer_GetPlayNext_Response.
 * Use `create(CPlayer_GetPlayNext_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetPlayNext_ResponseSchema: GenMessage<CPlayer_GetPlayNext_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 10);

/**
 * @generated from message CPlayer_GetFriendsGameplayInfo_Request
 */
export type CPlayer_GetFriendsGameplayInfo_Request = Message<"CPlayer_GetFriendsGameplayInfo_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;
};

/**
 * Describes the message CPlayer_GetFriendsGameplayInfo_Request.
 * Use `create(CPlayer_GetFriendsGameplayInfo_RequestSchema)` to create a new message.
 */
export const CPlayer_GetFriendsGameplayInfo_RequestSchema: GenMessage<CPlayer_GetFriendsGameplayInfo_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 11);

/**
 * @generated from message CPlayer_GetFriendsGameplayInfo_Response
 */
export type CPlayer_GetFriendsGameplayInfo_Response = Message<"CPlayer_GetFriendsGameplayInfo_Response"> & {
  /**
   * @generated from field: optional CPlayer_GetFriendsGameplayInfo_Response.OwnGameplayInfo your_info = 1;
   */
  yourInfo?: CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo;

  /**
   * @generated from field: repeated CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo in_game = 2;
   */
  inGame: CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo[];

  /**
   * @generated from field: repeated CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo played_recently = 3;
   */
  playedRecently: CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo[];

  /**
   * @generated from field: repeated CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo played_ever = 4;
   */
  playedEver: CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo[];

  /**
   * @generated from field: repeated CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo owns = 5;
   */
  owns: CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo[];

  /**
   * @generated from field: repeated CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo in_wishlist = 6;
   */
  inWishlist: CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo[];
};

/**
 * Describes the message CPlayer_GetFriendsGameplayInfo_Response.
 * Use `create(CPlayer_GetFriendsGameplayInfo_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetFriendsGameplayInfo_ResponseSchema: GenMessage<CPlayer_GetFriendsGameplayInfo_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 12);

/**
 * @generated from message CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo
 */
export type CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo = Message<"CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional uint32 minutes_played = 2;
   */
  minutesPlayed: number;

  /**
   * @generated from field: optional uint32 minutes_played_forever = 3;
   */
  minutesPlayedForever: number;
};

/**
 * Describes the message CPlayer_GetFriendsGameplayInfo_Response.FriendsGameplayInfo.
 * Use `create(CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfoSchema)` to create a new message.
 */
export const CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfoSchema: GenMessage<CPlayer_GetFriendsGameplayInfo_Response_FriendsGameplayInfo> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 12, 0);

/**
 * @generated from message CPlayer_GetFriendsGameplayInfo_Response.OwnGameplayInfo
 */
export type CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo = Message<"CPlayer_GetFriendsGameplayInfo_Response.OwnGameplayInfo"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional uint32 minutes_played = 2;
   */
  minutesPlayed: number;

  /**
   * @generated from field: optional uint32 minutes_played_forever = 3;
   */
  minutesPlayedForever: number;

  /**
   * @generated from field: optional bool in_wishlist = 4;
   */
  inWishlist: boolean;

  /**
   * @generated from field: optional bool owned = 5;
   */
  owned: boolean;
};

/**
 * Describes the message CPlayer_GetFriendsGameplayInfo_Response.OwnGameplayInfo.
 * Use `create(CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfoSchema)` to create a new message.
 */
export const CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfoSchema: GenMessage<CPlayer_GetFriendsGameplayInfo_Response_OwnGameplayInfo> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 12, 1);

/**
 * @generated from message CPlayer_GetGameBadgeLevels_Request
 */
export type CPlayer_GetGameBadgeLevels_Request = Message<"CPlayer_GetGameBadgeLevels_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;
};

/**
 * Describes the message CPlayer_GetGameBadgeLevels_Request.
 * Use `create(CPlayer_GetGameBadgeLevels_RequestSchema)` to create a new message.
 */
export const CPlayer_GetGameBadgeLevels_RequestSchema: GenMessage<CPlayer_GetGameBadgeLevels_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 13);

/**
 * @generated from message CPlayer_GetGameBadgeLevels_Response
 */
export type CPlayer_GetGameBadgeLevels_Response = Message<"CPlayer_GetGameBadgeLevels_Response"> & {
  /**
   * @generated from field: optional uint32 player_level = 1;
   */
  playerLevel: number;

  /**
   * @generated from field: repeated CPlayer_GetGameBadgeLevels_Response.Badge badges = 2;
   */
  badges: CPlayer_GetGameBadgeLevels_Response_Badge[];
};

/**
 * Describes the message CPlayer_GetGameBadgeLevels_Response.
 * Use `create(CPlayer_GetGameBadgeLevels_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetGameBadgeLevels_ResponseSchema: GenMessage<CPlayer_GetGameBadgeLevels_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 14);

/**
 * @generated from message CPlayer_GetGameBadgeLevels_Response.Badge
 */
export type CPlayer_GetGameBadgeLevels_Response_Badge = Message<"CPlayer_GetGameBadgeLevels_Response.Badge"> & {
  /**
   * @generated from field: optional int32 level = 1;
   */
  level: number;

  /**
   * @generated from field: optional int32 series = 2;
   */
  series: number;

  /**
   * @generated from field: optional uint32 border_color = 3;
   */
  borderColor: number;
};

/**
 * Describes the message CPlayer_GetGameBadgeLevels_Response.Badge.
 * Use `create(CPlayer_GetGameBadgeLevels_Response_BadgeSchema)` to create a new message.
 */
export const CPlayer_GetGameBadgeLevels_Response_BadgeSchema: GenMessage<CPlayer_GetGameBadgeLevels_Response_Badge> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 14, 0);

/**
 * @generated from message CPlayer_GetProfileBackground_Request
 */
export type CPlayer_GetProfileBackground_Request = Message<"CPlayer_GetProfileBackground_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional string language = 2;
   */
  language: string;
};

/**
 * Describes the message CPlayer_GetProfileBackground_Request.
 * Use `create(CPlayer_GetProfileBackground_RequestSchema)` to create a new message.
 */
export const CPlayer_GetProfileBackground_RequestSchema: GenMessage<CPlayer_GetProfileBackground_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 15);

/**
 * @generated from message ProfileItem
 */
export type ProfileItem = Message<"ProfileItem"> & {
  /**
   * @generated from field: optional uint64 communityitemid = 1;
   */
  communityitemid: bigint;

  /**
   * @generated from field: optional string image_small = 2;
   */
  imageSmall: string;

  /**
   * @generated from field: optional string image_large = 3;
   */
  imageLarge: string;

  /**
   * @generated from field: optional string name = 4;
   */
  name: string;

  /**
   * @generated from field: optional string item_title = 5;
   */
  itemTitle: string;

  /**
   * @generated from field: optional string item_description = 6;
   */
  itemDescription: string;

  /**
   * @generated from field: optional uint32 appid = 7;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 item_type = 8;
   */
  itemType: number;

  /**
   * @generated from field: optional uint32 item_class = 9;
   */
  itemClass: number;

  /**
   * @generated from field: optional string movie_webm = 10;
   */
  movieWebm: string;

  /**
   * @generated from field: optional string movie_mp4 = 11;
   */
  movieMp4: string;

  /**
   * @generated from field: optional string movie_webm_small = 13;
   */
  movieWebmSmall: string;

  /**
   * @generated from field: optional string movie_mp4_small = 14;
   */
  movieMp4Small: string;

  /**
   * @generated from field: optional uint32 equipped_flags = 12;
   */
  equippedFlags: number;

  /**
   * @generated from field: repeated ProfileItem.ProfileColor profile_colors = 15;
   */
  profileColors: ProfileItem_ProfileColor[];

  /**
   * @generated from field: optional bool tiled = 16;
   */
  tiled: boolean;
};

/**
 * Describes the message ProfileItem.
 * Use `create(ProfileItemSchema)` to create a new message.
 */
export const ProfileItemSchema: GenMessage<ProfileItem> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 16);

/**
 * @generated from message ProfileItem.ProfileColor
 */
export type ProfileItem_ProfileColor = Message<"ProfileItem.ProfileColor"> & {
  /**
   * @generated from field: optional string style_name = 1;
   */
  styleName: string;

  /**
   * @generated from field: optional string color = 2;
   */
  color: string;
};

/**
 * Describes the message ProfileItem.ProfileColor.
 * Use `create(ProfileItem_ProfileColorSchema)` to create a new message.
 */
export const ProfileItem_ProfileColorSchema: GenMessage<ProfileItem_ProfileColor> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 16, 0);

/**
 * @generated from message CPlayer_GetProfileBackground_Response
 */
export type CPlayer_GetProfileBackground_Response = Message<"CPlayer_GetProfileBackground_Response"> & {
  /**
   * @generated from field: optional ProfileItem profile_background = 1;
   */
  profileBackground?: ProfileItem;
};

/**
 * Describes the message CPlayer_GetProfileBackground_Response.
 * Use `create(CPlayer_GetProfileBackground_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetProfileBackground_ResponseSchema: GenMessage<CPlayer_GetProfileBackground_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 17);

/**
 * @generated from message CPlayer_SetProfileBackground_Request
 */
export type CPlayer_SetProfileBackground_Request = Message<"CPlayer_SetProfileBackground_Request"> & {
  /**
   * @generated from field: optional uint64 communityitemid = 1;
   */
  communityitemid: bigint;
};

/**
 * Describes the message CPlayer_SetProfileBackground_Request.
 * Use `create(CPlayer_SetProfileBackground_RequestSchema)` to create a new message.
 */
export const CPlayer_SetProfileBackground_RequestSchema: GenMessage<CPlayer_SetProfileBackground_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 18);

/**
 * @generated from message CPlayer_SetProfileBackground_Response
 */
export type CPlayer_SetProfileBackground_Response = Message<"CPlayer_SetProfileBackground_Response"> & {
};

/**
 * Describes the message CPlayer_SetProfileBackground_Response.
 * Use `create(CPlayer_SetProfileBackground_ResponseSchema)` to create a new message.
 */
export const CPlayer_SetProfileBackground_ResponseSchema: GenMessage<CPlayer_SetProfileBackground_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 19);

/**
 * @generated from message CPlayer_GetMiniProfileBackground_Request
 */
export type CPlayer_GetMiniProfileBackground_Request = Message<"CPlayer_GetMiniProfileBackground_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional string language = 2;
   */
  language: string;
};

/**
 * Describes the message CPlayer_GetMiniProfileBackground_Request.
 * Use `create(CPlayer_GetMiniProfileBackground_RequestSchema)` to create a new message.
 */
export const CPlayer_GetMiniProfileBackground_RequestSchema: GenMessage<CPlayer_GetMiniProfileBackground_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 20);

/**
 * @generated from message CPlayer_GetMiniProfileBackground_Response
 */
export type CPlayer_GetMiniProfileBackground_Response = Message<"CPlayer_GetMiniProfileBackground_Response"> & {
  /**
   * @generated from field: optional ProfileItem profile_background = 1;
   */
  profileBackground?: ProfileItem;
};

/**
 * Describes the message CPlayer_GetMiniProfileBackground_Response.
 * Use `create(CPlayer_GetMiniProfileBackground_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetMiniProfileBackground_ResponseSchema: GenMessage<CPlayer_GetMiniProfileBackground_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 21);

/**
 * @generated from message CPlayer_SetMiniProfileBackground_Request
 */
export type CPlayer_SetMiniProfileBackground_Request = Message<"CPlayer_SetMiniProfileBackground_Request"> & {
  /**
   * @generated from field: optional uint64 communityitemid = 1;
   */
  communityitemid: bigint;
};

/**
 * Describes the message CPlayer_SetMiniProfileBackground_Request.
 * Use `create(CPlayer_SetMiniProfileBackground_RequestSchema)` to create a new message.
 */
export const CPlayer_SetMiniProfileBackground_RequestSchema: GenMessage<CPlayer_SetMiniProfileBackground_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 22);

/**
 * @generated from message CPlayer_SetMiniProfileBackground_Response
 */
export type CPlayer_SetMiniProfileBackground_Response = Message<"CPlayer_SetMiniProfileBackground_Response"> & {
};

/**
 * Describes the message CPlayer_SetMiniProfileBackground_Response.
 * Use `create(CPlayer_SetMiniProfileBackground_ResponseSchema)` to create a new message.
 */
export const CPlayer_SetMiniProfileBackground_ResponseSchema: GenMessage<CPlayer_SetMiniProfileBackground_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 23);

/**
 * @generated from message CPlayer_GetAvatarFrame_Request
 */
export type CPlayer_GetAvatarFrame_Request = Message<"CPlayer_GetAvatarFrame_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional string language = 2;
   */
  language: string;
};

/**
 * Describes the message CPlayer_GetAvatarFrame_Request.
 * Use `create(CPlayer_GetAvatarFrame_RequestSchema)` to create a new message.
 */
export const CPlayer_GetAvatarFrame_RequestSchema: GenMessage<CPlayer_GetAvatarFrame_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 24);

/**
 * @generated from message CPlayer_GetAvatarFrame_Response
 */
export type CPlayer_GetAvatarFrame_Response = Message<"CPlayer_GetAvatarFrame_Response"> & {
  /**
   * @generated from field: optional ProfileItem avatar_frame = 1;
   */
  avatarFrame?: ProfileItem;
};

/**
 * Describes the message CPlayer_GetAvatarFrame_Response.
 * Use `create(CPlayer_GetAvatarFrame_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetAvatarFrame_ResponseSchema: GenMessage<CPlayer_GetAvatarFrame_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 25);

/**
 * @generated from message CPlayer_SetAvatarFrame_Request
 */
export type CPlayer_SetAvatarFrame_Request = Message<"CPlayer_SetAvatarFrame_Request"> & {
  /**
   * @generated from field: optional uint64 communityitemid = 1;
   */
  communityitemid: bigint;
};

/**
 * Describes the message CPlayer_SetAvatarFrame_Request.
 * Use `create(CPlayer_SetAvatarFrame_RequestSchema)` to create a new message.
 */
export const CPlayer_SetAvatarFrame_RequestSchema: GenMessage<CPlayer_SetAvatarFrame_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 26);

/**
 * @generated from message CPlayer_SetAvatarFrame_Response
 */
export type CPlayer_SetAvatarFrame_Response = Message<"CPlayer_SetAvatarFrame_Response"> & {
};

/**
 * Describes the message CPlayer_SetAvatarFrame_Response.
 * Use `create(CPlayer_SetAvatarFrame_ResponseSchema)` to create a new message.
 */
export const CPlayer_SetAvatarFrame_ResponseSchema: GenMessage<CPlayer_SetAvatarFrame_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 27);

/**
 * @generated from message CPlayer_GetAnimatedAvatar_Request
 */
export type CPlayer_GetAnimatedAvatar_Request = Message<"CPlayer_GetAnimatedAvatar_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional string language = 2;
   */
  language: string;
};

/**
 * Describes the message CPlayer_GetAnimatedAvatar_Request.
 * Use `create(CPlayer_GetAnimatedAvatar_RequestSchema)` to create a new message.
 */
export const CPlayer_GetAnimatedAvatar_RequestSchema: GenMessage<CPlayer_GetAnimatedAvatar_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 28);

/**
 * @generated from message CPlayer_GetAnimatedAvatar_Response
 */
export type CPlayer_GetAnimatedAvatar_Response = Message<"CPlayer_GetAnimatedAvatar_Response"> & {
  /**
   * @generated from field: optional ProfileItem avatar = 1;
   */
  avatar?: ProfileItem;
};

/**
 * Describes the message CPlayer_GetAnimatedAvatar_Response.
 * Use `create(CPlayer_GetAnimatedAvatar_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetAnimatedAvatar_ResponseSchema: GenMessage<CPlayer_GetAnimatedAvatar_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 29);

/**
 * @generated from message CPlayer_SetAnimatedAvatar_Request
 */
export type CPlayer_SetAnimatedAvatar_Request = Message<"CPlayer_SetAnimatedAvatar_Request"> & {
  /**
   * @generated from field: optional uint64 communityitemid = 1;
   */
  communityitemid: bigint;
};

/**
 * Describes the message CPlayer_SetAnimatedAvatar_Request.
 * Use `create(CPlayer_SetAnimatedAvatar_RequestSchema)` to create a new message.
 */
export const CPlayer_SetAnimatedAvatar_RequestSchema: GenMessage<CPlayer_SetAnimatedAvatar_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 30);

/**
 * @generated from message CPlayer_SetAnimatedAvatar_Response
 */
export type CPlayer_SetAnimatedAvatar_Response = Message<"CPlayer_SetAnimatedAvatar_Response"> & {
};

/**
 * Describes the message CPlayer_SetAnimatedAvatar_Response.
 * Use `create(CPlayer_SetAnimatedAvatar_ResponseSchema)` to create a new message.
 */
export const CPlayer_SetAnimatedAvatar_ResponseSchema: GenMessage<CPlayer_SetAnimatedAvatar_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 31);

/**
 * @generated from message CPlayer_GetSteamDeckKeyboardSkin_Request
 */
export type CPlayer_GetSteamDeckKeyboardSkin_Request = Message<"CPlayer_GetSteamDeckKeyboardSkin_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional string language = 2;
   */
  language: string;
};

/**
 * Describes the message CPlayer_GetSteamDeckKeyboardSkin_Request.
 * Use `create(CPlayer_GetSteamDeckKeyboardSkin_RequestSchema)` to create a new message.
 */
export const CPlayer_GetSteamDeckKeyboardSkin_RequestSchema: GenMessage<CPlayer_GetSteamDeckKeyboardSkin_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 32);

/**
 * @generated from message CPlayer_GetSteamDeckKeyboardSkin_Response
 */
export type CPlayer_GetSteamDeckKeyboardSkin_Response = Message<"CPlayer_GetSteamDeckKeyboardSkin_Response"> & {
  /**
   * @generated from field: optional ProfileItem steam_deck_keyboard_skin = 1;
   */
  steamDeckKeyboardSkin?: ProfileItem;
};

/**
 * Describes the message CPlayer_GetSteamDeckKeyboardSkin_Response.
 * Use `create(CPlayer_GetSteamDeckKeyboardSkin_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetSteamDeckKeyboardSkin_ResponseSchema: GenMessage<CPlayer_GetSteamDeckKeyboardSkin_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 33);

/**
 * @generated from message CPlayer_SetSteamDeckKeyboardSkin_Request
 */
export type CPlayer_SetSteamDeckKeyboardSkin_Request = Message<"CPlayer_SetSteamDeckKeyboardSkin_Request"> & {
  /**
   * @generated from field: optional uint64 communityitemid = 1;
   */
  communityitemid: bigint;
};

/**
 * Describes the message CPlayer_SetSteamDeckKeyboardSkin_Request.
 * Use `create(CPlayer_SetSteamDeckKeyboardSkin_RequestSchema)` to create a new message.
 */
export const CPlayer_SetSteamDeckKeyboardSkin_RequestSchema: GenMessage<CPlayer_SetSteamDeckKeyboardSkin_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 34);

/**
 * @generated from message CPlayer_SetSteamDeckKeyboardSkin_Response
 */
export type CPlayer_SetSteamDeckKeyboardSkin_Response = Message<"CPlayer_SetSteamDeckKeyboardSkin_Response"> & {
};

/**
 * Describes the message CPlayer_SetSteamDeckKeyboardSkin_Response.
 * Use `create(CPlayer_SetSteamDeckKeyboardSkin_ResponseSchema)` to create a new message.
 */
export const CPlayer_SetSteamDeckKeyboardSkin_ResponseSchema: GenMessage<CPlayer_SetSteamDeckKeyboardSkin_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 35);

/**
 * @generated from message CPlayer_GetProfileItemsOwned_Request
 */
export type CPlayer_GetProfileItemsOwned_Request = Message<"CPlayer_GetProfileItemsOwned_Request"> & {
  /**
   * @generated from field: optional string language = 1;
   */
  language: string;

  /**
   * @generated from field: repeated ECommunityItemClass filters = 2;
   */
  filters: ECommunityItemClass[];
};

/**
 * Describes the message CPlayer_GetProfileItemsOwned_Request.
 * Use `create(CPlayer_GetProfileItemsOwned_RequestSchema)` to create a new message.
 */
export const CPlayer_GetProfileItemsOwned_RequestSchema: GenMessage<CPlayer_GetProfileItemsOwned_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 36);

/**
 * @generated from message CPlayer_GetProfileItemsOwned_Response
 */
export type CPlayer_GetProfileItemsOwned_Response = Message<"CPlayer_GetProfileItemsOwned_Response"> & {
  /**
   * @generated from field: repeated ProfileItem profile_backgrounds = 1;
   */
  profileBackgrounds: ProfileItem[];

  /**
   * @generated from field: repeated ProfileItem mini_profile_backgrounds = 2;
   */
  miniProfileBackgrounds: ProfileItem[];

  /**
   * @generated from field: repeated ProfileItem avatar_frames = 3;
   */
  avatarFrames: ProfileItem[];

  /**
   * @generated from field: repeated ProfileItem animated_avatars = 4;
   */
  animatedAvatars: ProfileItem[];

  /**
   * @generated from field: repeated ProfileItem profile_modifiers = 5;
   */
  profileModifiers: ProfileItem[];

  /**
   * @generated from field: repeated ProfileItem steam_deck_keyboard_skins = 6;
   */
  steamDeckKeyboardSkins: ProfileItem[];

  /**
   * @generated from field: repeated ProfileItem steam_deck_startup_movies = 7;
   */
  steamDeckStartupMovies: ProfileItem[];
};

/**
 * Describes the message CPlayer_GetProfileItemsOwned_Response.
 * Use `create(CPlayer_GetProfileItemsOwned_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetProfileItemsOwned_ResponseSchema: GenMessage<CPlayer_GetProfileItemsOwned_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 37);

/**
 * @generated from message CPlayer_GetProfileItemsEquipped_Request
 */
export type CPlayer_GetProfileItemsEquipped_Request = Message<"CPlayer_GetProfileItemsEquipped_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional string language = 2;
   */
  language: string;
};

/**
 * Describes the message CPlayer_GetProfileItemsEquipped_Request.
 * Use `create(CPlayer_GetProfileItemsEquipped_RequestSchema)` to create a new message.
 */
export const CPlayer_GetProfileItemsEquipped_RequestSchema: GenMessage<CPlayer_GetProfileItemsEquipped_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 38);

/**
 * @generated from message CPlayer_GetProfileItemsEquipped_Response
 */
export type CPlayer_GetProfileItemsEquipped_Response = Message<"CPlayer_GetProfileItemsEquipped_Response"> & {
  /**
   * @generated from field: optional ProfileItem profile_background = 1;
   */
  profileBackground?: ProfileItem;

  /**
   * @generated from field: optional ProfileItem mini_profile_background = 2;
   */
  miniProfileBackground?: ProfileItem;

  /**
   * @generated from field: optional ProfileItem avatar_frame = 3;
   */
  avatarFrame?: ProfileItem;

  /**
   * @generated from field: optional ProfileItem animated_avatar = 4;
   */
  animatedAvatar?: ProfileItem;

  /**
   * @generated from field: optional ProfileItem profile_modifier = 5;
   */
  profileModifier?: ProfileItem;

  /**
   * @generated from field: optional ProfileItem steam_deck_keyboard_skin = 6;
   */
  steamDeckKeyboardSkin?: ProfileItem;
};

/**
 * Describes the message CPlayer_GetProfileItemsEquipped_Response.
 * Use `create(CPlayer_GetProfileItemsEquipped_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetProfileItemsEquipped_ResponseSchema: GenMessage<CPlayer_GetProfileItemsEquipped_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 39);

/**
 * @generated from message CPlayer_SetEquippedProfileItemFlags_Request
 */
export type CPlayer_SetEquippedProfileItemFlags_Request = Message<"CPlayer_SetEquippedProfileItemFlags_Request"> & {
  /**
   * @generated from field: optional uint64 communityitemid = 1;
   */
  communityitemid: bigint;

  /**
   * @generated from field: optional uint32 flags = 2;
   */
  flags: number;
};

/**
 * Describes the message CPlayer_SetEquippedProfileItemFlags_Request.
 * Use `create(CPlayer_SetEquippedProfileItemFlags_RequestSchema)` to create a new message.
 */
export const CPlayer_SetEquippedProfileItemFlags_RequestSchema: GenMessage<CPlayer_SetEquippedProfileItemFlags_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 40);

/**
 * @generated from message CPlayer_SetEquippedProfileItemFlags_Response
 */
export type CPlayer_SetEquippedProfileItemFlags_Response = Message<"CPlayer_SetEquippedProfileItemFlags_Response"> & {
};

/**
 * Describes the message CPlayer_SetEquippedProfileItemFlags_Response.
 * Use `create(CPlayer_SetEquippedProfileItemFlags_ResponseSchema)` to create a new message.
 */
export const CPlayer_SetEquippedProfileItemFlags_ResponseSchema: GenMessage<CPlayer_SetEquippedProfileItemFlags_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 41);

/**
 * @generated from message CPlayer_GetEmoticonList_Request
 */
export type CPlayer_GetEmoticonList_Request = Message<"CPlayer_GetEmoticonList_Request"> & {
};

/**
 * Describes the message CPlayer_GetEmoticonList_Request.
 * Use `create(CPlayer_GetEmoticonList_RequestSchema)` to create a new message.
 */
export const CPlayer_GetEmoticonList_RequestSchema: GenMessage<CPlayer_GetEmoticonList_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 42);

/**
 * @generated from message CPlayer_GetEmoticonList_Response
 */
export type CPlayer_GetEmoticonList_Response = Message<"CPlayer_GetEmoticonList_Response"> & {
  /**
   * @generated from field: repeated CPlayer_GetEmoticonList_Response.Emoticon emoticons = 1;
   */
  emoticons: CPlayer_GetEmoticonList_Response_Emoticon[];
};

/**
 * Describes the message CPlayer_GetEmoticonList_Response.
 * Use `create(CPlayer_GetEmoticonList_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetEmoticonList_ResponseSchema: GenMessage<CPlayer_GetEmoticonList_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 43);

/**
 * @generated from message CPlayer_GetEmoticonList_Response.Emoticon
 */
export type CPlayer_GetEmoticonList_Response_Emoticon = Message<"CPlayer_GetEmoticonList_Response.Emoticon"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional int32 count = 2;
   */
  count: number;

  /**
   * @generated from field: optional uint32 time_last_used = 3;
   */
  timeLastUsed: number;

  /**
   * @generated from field: optional uint32 use_count = 4;
   */
  useCount: number;

  /**
   * @generated from field: optional uint32 time_received = 5;
   */
  timeReceived: number;

  /**
   * @generated from field: optional uint32 appid = 6;
   */
  appid: number;
};

/**
 * Describes the message CPlayer_GetEmoticonList_Response.Emoticon.
 * Use `create(CPlayer_GetEmoticonList_Response_EmoticonSchema)` to create a new message.
 */
export const CPlayer_GetEmoticonList_Response_EmoticonSchema: GenMessage<CPlayer_GetEmoticonList_Response_Emoticon> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 43, 0);

/**
 * @generated from message CPlayer_GetCommunityBadgeProgress_Request
 */
export type CPlayer_GetCommunityBadgeProgress_Request = Message<"CPlayer_GetCommunityBadgeProgress_Request"> & {
  /**
   * @generated from field: optional uint64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional int32 badgeid = 2;
   */
  badgeid: number;
};

/**
 * Describes the message CPlayer_GetCommunityBadgeProgress_Request.
 * Use `create(CPlayer_GetCommunityBadgeProgress_RequestSchema)` to create a new message.
 */
export const CPlayer_GetCommunityBadgeProgress_RequestSchema: GenMessage<CPlayer_GetCommunityBadgeProgress_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 44);

/**
 * @generated from message CPlayer_GetCommunityBadgeProgress_Response
 */
export type CPlayer_GetCommunityBadgeProgress_Response = Message<"CPlayer_GetCommunityBadgeProgress_Response"> & {
  /**
   * @generated from field: repeated CPlayer_GetCommunityBadgeProgress_Response.Quest quests = 1;
   */
  quests: CPlayer_GetCommunityBadgeProgress_Response_Quest[];
};

/**
 * Describes the message CPlayer_GetCommunityBadgeProgress_Response.
 * Use `create(CPlayer_GetCommunityBadgeProgress_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetCommunityBadgeProgress_ResponseSchema: GenMessage<CPlayer_GetCommunityBadgeProgress_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 45);

/**
 * @generated from message CPlayer_GetCommunityBadgeProgress_Response.Quest
 */
export type CPlayer_GetCommunityBadgeProgress_Response_Quest = Message<"CPlayer_GetCommunityBadgeProgress_Response.Quest"> & {
  /**
   * @generated from field: optional uint32 questid = 1;
   */
  questid: number;

  /**
   * @generated from field: optional bool completed = 2;
   */
  completed: boolean;
};

/**
 * Describes the message CPlayer_GetCommunityBadgeProgress_Response.Quest.
 * Use `create(CPlayer_GetCommunityBadgeProgress_Response_QuestSchema)` to create a new message.
 */
export const CPlayer_GetCommunityBadgeProgress_Response_QuestSchema: GenMessage<CPlayer_GetCommunityBadgeProgress_Response_Quest> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 45, 0);

/**
 * @generated from message CPlayer_GetTopAchievementsForGames_Request
 */
export type CPlayer_GetTopAchievementsForGames_Request = Message<"CPlayer_GetTopAchievementsForGames_Request"> & {
  /**
   * @generated from field: optional uint64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional string language = 2;
   */
  language: string;

  /**
   * @generated from field: optional uint32 max_achievements = 3;
   */
  maxAchievements: number;

  /**
   * @generated from field: repeated uint32 appids = 4;
   */
  appids: number[];
};

/**
 * Describes the message CPlayer_GetTopAchievementsForGames_Request.
 * Use `create(CPlayer_GetTopAchievementsForGames_RequestSchema)` to create a new message.
 */
export const CPlayer_GetTopAchievementsForGames_RequestSchema: GenMessage<CPlayer_GetTopAchievementsForGames_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 46);

/**
 * @generated from message CPlayer_GetTopAchievementsForGames_Response
 */
export type CPlayer_GetTopAchievementsForGames_Response = Message<"CPlayer_GetTopAchievementsForGames_Response"> & {
  /**
   * @generated from field: repeated CPlayer_GetTopAchievementsForGames_Response.Game games = 1;
   */
  games: CPlayer_GetTopAchievementsForGames_Response_Game[];
};

/**
 * Describes the message CPlayer_GetTopAchievementsForGames_Response.
 * Use `create(CPlayer_GetTopAchievementsForGames_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetTopAchievementsForGames_ResponseSchema: GenMessage<CPlayer_GetTopAchievementsForGames_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 47);

/**
 * @generated from message CPlayer_GetTopAchievementsForGames_Response.Achievement
 */
export type CPlayer_GetTopAchievementsForGames_Response_Achievement = Message<"CPlayer_GetTopAchievementsForGames_Response.Achievement"> & {
  /**
   * @generated from field: optional uint32 statid = 1;
   */
  statid: number;

  /**
   * @generated from field: optional uint32 bit = 2;
   */
  bit: number;

  /**
   * @generated from field: optional string name = 3;
   */
  name: string;

  /**
   * @generated from field: optional string desc = 4;
   */
  desc: string;

  /**
   * @generated from field: optional string icon = 5;
   */
  icon: string;

  /**
   * @generated from field: optional string icon_gray = 6;
   */
  iconGray: string;

  /**
   * @generated from field: optional bool hidden = 7;
   */
  hidden: boolean;

  /**
   * @generated from field: optional string player_percent_unlocked = 8;
   */
  playerPercentUnlocked: string;
};

/**
 * Describes the message CPlayer_GetTopAchievementsForGames_Response.Achievement.
 * Use `create(CPlayer_GetTopAchievementsForGames_Response_AchievementSchema)` to create a new message.
 */
export const CPlayer_GetTopAchievementsForGames_Response_AchievementSchema: GenMessage<CPlayer_GetTopAchievementsForGames_Response_Achievement> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 47, 0);

/**
 * @generated from message CPlayer_GetTopAchievementsForGames_Response.Game
 */
export type CPlayer_GetTopAchievementsForGames_Response_Game = Message<"CPlayer_GetTopAchievementsForGames_Response.Game"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 total_achievements = 2;
   */
  totalAchievements: number;

  /**
   * @generated from field: repeated CPlayer_GetTopAchievementsForGames_Response.Achievement achievements = 3;
   */
  achievements: CPlayer_GetTopAchievementsForGames_Response_Achievement[];
};

/**
 * Describes the message CPlayer_GetTopAchievementsForGames_Response.Game.
 * Use `create(CPlayer_GetTopAchievementsForGames_Response_GameSchema)` to create a new message.
 */
export const CPlayer_GetTopAchievementsForGames_Response_GameSchema: GenMessage<CPlayer_GetTopAchievementsForGames_Response_Game> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 47, 1);

/**
 * @generated from message CPlayer_GetAchievementsProgress_Request
 */
export type CPlayer_GetAchievementsProgress_Request = Message<"CPlayer_GetAchievementsProgress_Request"> & {
  /**
   * @generated from field: optional uint64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional string language = 2;
   */
  language: string;

  /**
   * @generated from field: repeated uint32 appids = 3;
   */
  appids: number[];

  /**
   * @generated from field: optional bool include_unvetted_apps = 4;
   */
  includeUnvettedApps: boolean;
};

/**
 * Describes the message CPlayer_GetAchievementsProgress_Request.
 * Use `create(CPlayer_GetAchievementsProgress_RequestSchema)` to create a new message.
 */
export const CPlayer_GetAchievementsProgress_RequestSchema: GenMessage<CPlayer_GetAchievementsProgress_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 48);

/**
 * @generated from message CPlayer_GetAchievementsProgress_Response
 */
export type CPlayer_GetAchievementsProgress_Response = Message<"CPlayer_GetAchievementsProgress_Response"> & {
  /**
   * @generated from field: repeated CPlayer_GetAchievementsProgress_Response.AchievementProgress achievement_progress = 1;
   */
  achievementProgress: CPlayer_GetAchievementsProgress_Response_AchievementProgress[];
};

/**
 * Describes the message CPlayer_GetAchievementsProgress_Response.
 * Use `create(CPlayer_GetAchievementsProgress_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetAchievementsProgress_ResponseSchema: GenMessage<CPlayer_GetAchievementsProgress_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 49);

/**
 * @generated from message CPlayer_GetAchievementsProgress_Response.AchievementProgress
 */
export type CPlayer_GetAchievementsProgress_Response_AchievementProgress = Message<"CPlayer_GetAchievementsProgress_Response.AchievementProgress"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 unlocked = 2;
   */
  unlocked: number;

  /**
   * @generated from field: optional uint32 total = 3;
   */
  total: number;

  /**
   * @generated from field: optional float percentage = 4;
   */
  percentage: number;

  /**
   * @generated from field: optional bool all_unlocked = 5;
   */
  allUnlocked: boolean;

  /**
   * @generated from field: optional uint32 cache_time = 6;
   */
  cacheTime: number;

  /**
   * @generated from field: optional bool vetted = 7;
   */
  vetted: boolean;
};

/**
 * Describes the message CPlayer_GetAchievementsProgress_Response.AchievementProgress.
 * Use `create(CPlayer_GetAchievementsProgress_Response_AchievementProgressSchema)` to create a new message.
 */
export const CPlayer_GetAchievementsProgress_Response_AchievementProgressSchema: GenMessage<CPlayer_GetAchievementsProgress_Response_AchievementProgress> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 49, 0);

/**
 * @generated from message CPlayer_GetGameAchievements_Request
 */
export type CPlayer_GetGameAchievements_Request = Message<"CPlayer_GetGameAchievements_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional string language = 2;
   */
  language: string;
};

/**
 * Describes the message CPlayer_GetGameAchievements_Request.
 * Use `create(CPlayer_GetGameAchievements_RequestSchema)` to create a new message.
 */
export const CPlayer_GetGameAchievements_RequestSchema: GenMessage<CPlayer_GetGameAchievements_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 50);

/**
 * @generated from message CPlayer_GetGameAchievements_Response
 */
export type CPlayer_GetGameAchievements_Response = Message<"CPlayer_GetGameAchievements_Response"> & {
  /**
   * @generated from field: repeated CPlayer_GetGameAchievements_Response.Achievement achievements = 1;
   */
  achievements: CPlayer_GetGameAchievements_Response_Achievement[];
};

/**
 * Describes the message CPlayer_GetGameAchievements_Response.
 * Use `create(CPlayer_GetGameAchievements_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetGameAchievements_ResponseSchema: GenMessage<CPlayer_GetGameAchievements_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 51);

/**
 * @generated from message CPlayer_GetGameAchievements_Response.Achievement
 */
export type CPlayer_GetGameAchievements_Response_Achievement = Message<"CPlayer_GetGameAchievements_Response.Achievement"> & {
  /**
   * @generated from field: optional string internal_name = 1;
   */
  internalName: string;

  /**
   * @generated from field: optional string localized_name = 2;
   */
  localizedName: string;

  /**
   * @generated from field: optional string localized_desc = 3;
   */
  localizedDesc: string;

  /**
   * @generated from field: optional string icon = 4;
   */
  icon: string;

  /**
   * @generated from field: optional string icon_gray = 5;
   */
  iconGray: string;

  /**
   * @generated from field: optional bool hidden = 6;
   */
  hidden: boolean;

  /**
   * @generated from field: optional string player_percent_unlocked = 7;
   */
  playerPercentUnlocked: string;
};

/**
 * Describes the message CPlayer_GetGameAchievements_Response.Achievement.
 * Use `create(CPlayer_GetGameAchievements_Response_AchievementSchema)` to create a new message.
 */
export const CPlayer_GetGameAchievements_Response_AchievementSchema: GenMessage<CPlayer_GetGameAchievements_Response_Achievement> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 51, 0);

/**
 * @generated from message CPlayer_GetFavoriteBadge_Request
 */
export type CPlayer_GetFavoriteBadge_Request = Message<"CPlayer_GetFavoriteBadge_Request"> & {
  /**
   * @generated from field: optional uint64 steamid = 1;
   */
  steamid: bigint;
};

/**
 * Describes the message CPlayer_GetFavoriteBadge_Request.
 * Use `create(CPlayer_GetFavoriteBadge_RequestSchema)` to create a new message.
 */
export const CPlayer_GetFavoriteBadge_RequestSchema: GenMessage<CPlayer_GetFavoriteBadge_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 52);

/**
 * @generated from message CPlayer_GetFavoriteBadge_Response
 */
export type CPlayer_GetFavoriteBadge_Response = Message<"CPlayer_GetFavoriteBadge_Response"> & {
  /**
   * @generated from field: optional bool has_favorite_badge = 1;
   */
  hasFavoriteBadge: boolean;

  /**
   * @generated from field: optional uint32 badgeid = 2;
   */
  badgeid: number;

  /**
   * @generated from field: optional uint64 communityitemid = 3;
   */
  communityitemid: bigint;

  /**
   * @generated from field: optional uint32 item_type = 4;
   */
  itemType: number;

  /**
   * @generated from field: optional uint32 border_color = 5;
   */
  borderColor: number;

  /**
   * @generated from field: optional uint32 appid = 6;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 level = 7;
   */
  level: number;
};

/**
 * Describes the message CPlayer_GetFavoriteBadge_Response.
 * Use `create(CPlayer_GetFavoriteBadge_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetFavoriteBadge_ResponseSchema: GenMessage<CPlayer_GetFavoriteBadge_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 53);

/**
 * @generated from message CPlayer_SetFavoriteBadge_Request
 */
export type CPlayer_SetFavoriteBadge_Request = Message<"CPlayer_SetFavoriteBadge_Request"> & {
  /**
   * @generated from field: optional uint64 communityitemid = 1;
   */
  communityitemid: bigint;

  /**
   * @generated from field: optional uint32 badgeid = 2;
   */
  badgeid: number;
};

/**
 * Describes the message CPlayer_SetFavoriteBadge_Request.
 * Use `create(CPlayer_SetFavoriteBadge_RequestSchema)` to create a new message.
 */
export const CPlayer_SetFavoriteBadge_RequestSchema: GenMessage<CPlayer_SetFavoriteBadge_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 54);

/**
 * @generated from message CPlayer_SetFavoriteBadge_Response
 */
export type CPlayer_SetFavoriteBadge_Response = Message<"CPlayer_SetFavoriteBadge_Response"> & {
};

/**
 * Describes the message CPlayer_SetFavoriteBadge_Response.
 * Use `create(CPlayer_SetFavoriteBadge_ResponseSchema)` to create a new message.
 */
export const CPlayer_SetFavoriteBadge_ResponseSchema: GenMessage<CPlayer_SetFavoriteBadge_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 55);

/**
 * @generated from message CPlayer_GetProfileCustomization_Request
 */
export type CPlayer_GetProfileCustomization_Request = Message<"CPlayer_GetProfileCustomization_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional bool include_inactive_customizations = 2;
   */
  includeInactiveCustomizations: boolean;

  /**
   * @generated from field: optional bool include_purchased_customizations = 3;
   */
  includePurchasedCustomizations: boolean;
};

/**
 * Describes the message CPlayer_GetProfileCustomization_Request.
 * Use `create(CPlayer_GetProfileCustomization_RequestSchema)` to create a new message.
 */
export const CPlayer_GetProfileCustomization_RequestSchema: GenMessage<CPlayer_GetProfileCustomization_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 56);

/**
 * @generated from message ProfileCustomizationSlot
 */
export type ProfileCustomizationSlot = Message<"ProfileCustomizationSlot"> & {
  /**
   * @generated from field: optional uint32 slot = 1;
   */
  slot: number;

  /**
   * @generated from field: optional uint32 appid = 2;
   */
  appid: number;

  /**
   * @generated from field: optional uint64 publishedfileid = 3;
   */
  publishedfileid: bigint;

  /**
   * @generated from field: optional uint64 item_assetid = 4;
   */
  itemAssetid: bigint;

  /**
   * @generated from field: optional uint64 item_contextid = 5;
   */
  itemContextid: bigint;

  /**
   * @generated from field: optional string notes = 6;
   */
  notes: string;

  /**
   * @generated from field: optional string title = 7;
   */
  title: string;

  /**
   * @generated from field: optional uint32 accountid = 8;
   */
  accountid: number;

  /**
   * @generated from field: optional uint32 badgeid = 9;
   */
  badgeid: number;

  /**
   * @generated from field: optional uint32 border_color = 10;
   */
  borderColor: number;

  /**
   * @generated from field: optional uint64 item_classid = 11;
   */
  itemClassid: bigint;

  /**
   * @generated from field: optional uint64 item_instanceid = 12;
   */
  itemInstanceid: bigint;

  /**
   * @generated from field: optional EBanContentCheckResult ban_check_result = 13 [default = k_EBanContentCheckResult_NotScanned];
   */
  banCheckResult: EBanContentCheckResult;

  /**
   * @generated from field: optional uint32 replay_year = 14;
   */
  replayYear: number;
};

/**
 * Describes the message ProfileCustomizationSlot.
 * Use `create(ProfileCustomizationSlotSchema)` to create a new message.
 */
export const ProfileCustomizationSlotSchema: GenMessage<ProfileCustomizationSlot> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 57);

/**
 * @generated from message ProfileCustomization
 */
export type ProfileCustomization = Message<"ProfileCustomization"> & {
  /**
   * @generated from field: optional EProfileCustomizationType customization_type = 1 [default = k_EProfileCustomizationTypeInvalid];
   */
  customizationType: EProfileCustomizationType;

  /**
   * @generated from field: optional bool large = 2;
   */
  large: boolean;

  /**
   * @generated from field: repeated ProfileCustomizationSlot slots = 3;
   */
  slots: ProfileCustomizationSlot[];

  /**
   * @generated from field: optional bool active = 4;
   */
  active: boolean;

  /**
   * @generated from field: optional EProfileCustomizationStyle customization_style = 5 [default = k_EProfileCustomizationStyleDefault];
   */
  customizationStyle: EProfileCustomizationStyle;

  /**
   * @generated from field: optional uint64 purchaseid = 6;
   */
  purchaseid: bigint;

  /**
   * @generated from field: optional uint32 level = 7;
   */
  level: number;
};

/**
 * Describes the message ProfileCustomization.
 * Use `create(ProfileCustomizationSchema)` to create a new message.
 */
export const ProfileCustomizationSchema: GenMessage<ProfileCustomization> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 58);

/**
 * @generated from message ProfileTheme
 */
export type ProfileTheme = Message<"ProfileTheme"> & {
  /**
   * @generated from field: optional string theme_id = 1;
   */
  themeId: string;

  /**
   * @generated from field: optional string title = 2;
   */
  title: string;
};

/**
 * Describes the message ProfileTheme.
 * Use `create(ProfileThemeSchema)` to create a new message.
 */
export const ProfileThemeSchema: GenMessage<ProfileTheme> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 59);

/**
 * @generated from message ProfilePreferences
 */
export type ProfilePreferences = Message<"ProfilePreferences"> & {
  /**
   * @generated from field: optional bool hide_profile_awards = 1;
   */
  hideProfileAwards: boolean;
};

/**
 * Describes the message ProfilePreferences.
 * Use `create(ProfilePreferencesSchema)` to create a new message.
 */
export const ProfilePreferencesSchema: GenMessage<ProfilePreferences> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 60);

/**
 * @generated from message CPlayer_GetProfileCustomization_Response
 */
export type CPlayer_GetProfileCustomization_Response = Message<"CPlayer_GetProfileCustomization_Response"> & {
  /**
   * @generated from field: repeated ProfileCustomization customizations = 1;
   */
  customizations: ProfileCustomization[];

  /**
   * @generated from field: optional uint32 slots_available = 2;
   */
  slotsAvailable: number;

  /**
   * @generated from field: optional ProfileTheme profile_theme = 3;
   */
  profileTheme?: ProfileTheme;

  /**
   * @generated from field: repeated CPlayer_GetProfileCustomization_Response.PurchasedCustomization purchased_customizations = 4;
   */
  purchasedCustomizations: CPlayer_GetProfileCustomization_Response_PurchasedCustomization[];

  /**
   * @generated from field: optional ProfilePreferences profile_preferences = 5;
   */
  profilePreferences?: ProfilePreferences;
};

/**
 * Describes the message CPlayer_GetProfileCustomization_Response.
 * Use `create(CPlayer_GetProfileCustomization_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetProfileCustomization_ResponseSchema: GenMessage<CPlayer_GetProfileCustomization_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 61);

/**
 * @generated from message CPlayer_GetProfileCustomization_Response.PurchasedCustomization
 */
export type CPlayer_GetProfileCustomization_Response_PurchasedCustomization = Message<"CPlayer_GetProfileCustomization_Response.PurchasedCustomization"> & {
  /**
   * @generated from field: optional uint64 purchaseid = 1;
   */
  purchaseid: bigint;

  /**
   * @generated from field: optional EProfileCustomizationType customization_type = 2 [default = k_EProfileCustomizationTypeInvalid];
   */
  customizationType: EProfileCustomizationType;

  /**
   * @generated from field: optional uint32 level = 3;
   */
  level: number;
};

/**
 * Describes the message CPlayer_GetProfileCustomization_Response.PurchasedCustomization.
 * Use `create(CPlayer_GetProfileCustomization_Response_PurchasedCustomizationSchema)` to create a new message.
 */
export const CPlayer_GetProfileCustomization_Response_PurchasedCustomizationSchema: GenMessage<CPlayer_GetProfileCustomization_Response_PurchasedCustomization> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 61, 0);

/**
 * @generated from message CPlayer_GetPurchasedProfileCustomizations_Request
 */
export type CPlayer_GetPurchasedProfileCustomizations_Request = Message<"CPlayer_GetPurchasedProfileCustomizations_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;
};

/**
 * Describes the message CPlayer_GetPurchasedProfileCustomizations_Request.
 * Use `create(CPlayer_GetPurchasedProfileCustomizations_RequestSchema)` to create a new message.
 */
export const CPlayer_GetPurchasedProfileCustomizations_RequestSchema: GenMessage<CPlayer_GetPurchasedProfileCustomizations_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 62);

/**
 * @generated from message CPlayer_GetPurchasedProfileCustomizations_Response
 */
export type CPlayer_GetPurchasedProfileCustomizations_Response = Message<"CPlayer_GetPurchasedProfileCustomizations_Response"> & {
  /**
   * @generated from field: repeated CPlayer_GetPurchasedProfileCustomizations_Response.PurchasedCustomization purchased_customizations = 1;
   */
  purchasedCustomizations: CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomization[];
};

/**
 * Describes the message CPlayer_GetPurchasedProfileCustomizations_Response.
 * Use `create(CPlayer_GetPurchasedProfileCustomizations_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetPurchasedProfileCustomizations_ResponseSchema: GenMessage<CPlayer_GetPurchasedProfileCustomizations_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 63);

/**
 * @generated from message CPlayer_GetPurchasedProfileCustomizations_Response.PurchasedCustomization
 */
export type CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomization = Message<"CPlayer_GetPurchasedProfileCustomizations_Response.PurchasedCustomization"> & {
  /**
   * @generated from field: optional uint64 purchaseid = 1;
   */
  purchaseid: bigint;

  /**
   * @generated from field: optional EProfileCustomizationType customization_type = 2 [default = k_EProfileCustomizationTypeInvalid];
   */
  customizationType: EProfileCustomizationType;
};

/**
 * Describes the message CPlayer_GetPurchasedProfileCustomizations_Response.PurchasedCustomization.
 * Use `create(CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomizationSchema)` to create a new message.
 */
export const CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomizationSchema: GenMessage<CPlayer_GetPurchasedProfileCustomizations_Response_PurchasedCustomization> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 63, 0);

/**
 * @generated from message CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request
 */
export type CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request = Message<"CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;
};

/**
 * Describes the message CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request.
 * Use `create(CPlayer_GetPurchasedAndUpgradedProfileCustomizations_RequestSchema)` to create a new message.
 */
export const CPlayer_GetPurchasedAndUpgradedProfileCustomizations_RequestSchema: GenMessage<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 64);

/**
 * @generated from message CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response
 */
export type CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response = Message<"CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response"> & {
  /**
   * @generated from field: repeated CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.PurchasedCustomization purchased_customizations = 1;
   */
  purchasedCustomizations: CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomization[];

  /**
   * @generated from field: repeated CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.UpgradedCustomization upgraded_customizations = 2;
   */
  upgradedCustomizations: CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomization[];
};

/**
 * Describes the message CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.
 * Use `create(CPlayer_GetPurchasedAndUpgradedProfileCustomizations_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetPurchasedAndUpgradedProfileCustomizations_ResponseSchema: GenMessage<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 65);

/**
 * @generated from message CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.PurchasedCustomization
 */
export type CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomization = Message<"CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.PurchasedCustomization"> & {
  /**
   * @generated from field: optional EProfileCustomizationType customization_type = 1 [default = k_EProfileCustomizationTypeInvalid];
   */
  customizationType: EProfileCustomizationType;

  /**
   * @generated from field: optional uint32 count = 2;
   */
  count: number;
};

/**
 * Describes the message CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.PurchasedCustomization.
 * Use `create(CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomizationSchema)` to create a new message.
 */
export const CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomizationSchema: GenMessage<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_PurchasedCustomization> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 65, 0);

/**
 * @generated from message CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.UpgradedCustomization
 */
export type CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomization = Message<"CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.UpgradedCustomization"> & {
  /**
   * @generated from field: optional EProfileCustomizationType customization_type = 1 [default = k_EProfileCustomizationTypeInvalid];
   */
  customizationType: EProfileCustomizationType;

  /**
   * @generated from field: optional uint32 level = 2;
   */
  level: number;
};

/**
 * Describes the message CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response.UpgradedCustomization.
 * Use `create(CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomizationSchema)` to create a new message.
 */
export const CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomizationSchema: GenMessage<CPlayer_GetPurchasedAndUpgradedProfileCustomizations_Response_UpgradedCustomization> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 65, 1);

/**
 * @generated from message CPlayer_GetProfileThemesAvailable_Request
 */
export type CPlayer_GetProfileThemesAvailable_Request = Message<"CPlayer_GetProfileThemesAvailable_Request"> & {
};

/**
 * Describes the message CPlayer_GetProfileThemesAvailable_Request.
 * Use `create(CPlayer_GetProfileThemesAvailable_RequestSchema)` to create a new message.
 */
export const CPlayer_GetProfileThemesAvailable_RequestSchema: GenMessage<CPlayer_GetProfileThemesAvailable_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 66);

/**
 * @generated from message CPlayer_GetProfileThemesAvailable_Response
 */
export type CPlayer_GetProfileThemesAvailable_Response = Message<"CPlayer_GetProfileThemesAvailable_Response"> & {
  /**
   * @generated from field: repeated ProfileTheme profile_themes = 1;
   */
  profileThemes: ProfileTheme[];
};

/**
 * Describes the message CPlayer_GetProfileThemesAvailable_Response.
 * Use `create(CPlayer_GetProfileThemesAvailable_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetProfileThemesAvailable_ResponseSchema: GenMessage<CPlayer_GetProfileThemesAvailable_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 67);

/**
 * @generated from message CPlayer_SetProfileTheme_Request
 */
export type CPlayer_SetProfileTheme_Request = Message<"CPlayer_SetProfileTheme_Request"> & {
  /**
   * @generated from field: optional string theme_id = 1;
   */
  themeId: string;
};

/**
 * Describes the message CPlayer_SetProfileTheme_Request.
 * Use `create(CPlayer_SetProfileTheme_RequestSchema)` to create a new message.
 */
export const CPlayer_SetProfileTheme_RequestSchema: GenMessage<CPlayer_SetProfileTheme_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 68);

/**
 * @generated from message CPlayer_SetProfileTheme_Response
 */
export type CPlayer_SetProfileTheme_Response = Message<"CPlayer_SetProfileTheme_Response"> & {
};

/**
 * Describes the message CPlayer_SetProfileTheme_Response.
 * Use `create(CPlayer_SetProfileTheme_ResponseSchema)` to create a new message.
 */
export const CPlayer_SetProfileTheme_ResponseSchema: GenMessage<CPlayer_SetProfileTheme_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 69);

/**
 * @generated from message CPlayer_SetProfilePreferences_Request
 */
export type CPlayer_SetProfilePreferences_Request = Message<"CPlayer_SetProfilePreferences_Request"> & {
  /**
   * @generated from field: optional ProfilePreferences profile_preferences = 1;
   */
  profilePreferences?: ProfilePreferences;
};

/**
 * Describes the message CPlayer_SetProfilePreferences_Request.
 * Use `create(CPlayer_SetProfilePreferences_RequestSchema)` to create a new message.
 */
export const CPlayer_SetProfilePreferences_RequestSchema: GenMessage<CPlayer_SetProfilePreferences_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 70);

/**
 * @generated from message CPlayer_SetProfilePreferences_Response
 */
export type CPlayer_SetProfilePreferences_Response = Message<"CPlayer_SetProfilePreferences_Response"> & {
};

/**
 * Describes the message CPlayer_SetProfilePreferences_Response.
 * Use `create(CPlayer_SetProfilePreferences_ResponseSchema)` to create a new message.
 */
export const CPlayer_SetProfilePreferences_ResponseSchema: GenMessage<CPlayer_SetProfilePreferences_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 71);

/**
 * @generated from message CPlayer_PostStatusToFriends_Request
 */
export type CPlayer_PostStatusToFriends_Request = Message<"CPlayer_PostStatusToFriends_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional string status_text = 2;
   */
  statusText: string;
};

/**
 * Describes the message CPlayer_PostStatusToFriends_Request.
 * Use `create(CPlayer_PostStatusToFriends_RequestSchema)` to create a new message.
 */
export const CPlayer_PostStatusToFriends_RequestSchema: GenMessage<CPlayer_PostStatusToFriends_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 72);

/**
 * @generated from message CPlayer_PostStatusToFriends_Response
 */
export type CPlayer_PostStatusToFriends_Response = Message<"CPlayer_PostStatusToFriends_Response"> & {
};

/**
 * Describes the message CPlayer_PostStatusToFriends_Response.
 * Use `create(CPlayer_PostStatusToFriends_ResponseSchema)` to create a new message.
 */
export const CPlayer_PostStatusToFriends_ResponseSchema: GenMessage<CPlayer_PostStatusToFriends_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 73);

/**
 * @generated from message CPlayer_GetPostedStatus_Request
 */
export type CPlayer_GetPostedStatus_Request = Message<"CPlayer_GetPostedStatus_Request"> & {
  /**
   * @generated from field: optional uint64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional uint64 postid = 2;
   */
  postid: bigint;
};

/**
 * Describes the message CPlayer_GetPostedStatus_Request.
 * Use `create(CPlayer_GetPostedStatus_RequestSchema)` to create a new message.
 */
export const CPlayer_GetPostedStatus_RequestSchema: GenMessage<CPlayer_GetPostedStatus_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 74);

/**
 * @generated from message CPlayer_GetPostedStatus_Response
 */
export type CPlayer_GetPostedStatus_Response = Message<"CPlayer_GetPostedStatus_Response"> & {
  /**
   * @generated from field: optional uint32 accountid = 1;
   */
  accountid: number;

  /**
   * @generated from field: optional uint64 postid = 2;
   */
  postid: bigint;

  /**
   * @generated from field: optional string status_text = 3;
   */
  statusText: string;

  /**
   * @generated from field: optional bool deleted = 4;
   */
  deleted: boolean;

  /**
   * @generated from field: optional uint32 appid = 5;
   */
  appid: number;
};

/**
 * Describes the message CPlayer_GetPostedStatus_Response.
 * Use `create(CPlayer_GetPostedStatus_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetPostedStatus_ResponseSchema: GenMessage<CPlayer_GetPostedStatus_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 75);

/**
 * @generated from message CPlayer_DeletePostedStatus_Request
 */
export type CPlayer_DeletePostedStatus_Request = Message<"CPlayer_DeletePostedStatus_Request"> & {
  /**
   * @generated from field: optional uint64 postid = 1;
   */
  postid: bigint;
};

/**
 * Describes the message CPlayer_DeletePostedStatus_Request.
 * Use `create(CPlayer_DeletePostedStatus_RequestSchema)` to create a new message.
 */
export const CPlayer_DeletePostedStatus_RequestSchema: GenMessage<CPlayer_DeletePostedStatus_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 76);

/**
 * @generated from message CPlayer_DeletePostedStatus_Response
 */
export type CPlayer_DeletePostedStatus_Response = Message<"CPlayer_DeletePostedStatus_Response"> & {
};

/**
 * Describes the message CPlayer_DeletePostedStatus_Response.
 * Use `create(CPlayer_DeletePostedStatus_ResponseSchema)` to create a new message.
 */
export const CPlayer_DeletePostedStatus_ResponseSchema: GenMessage<CPlayer_DeletePostedStatus_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 77);

/**
 * @generated from message CPlayer_GetLastPlayedTimes_Request
 */
export type CPlayer_GetLastPlayedTimes_Request = Message<"CPlayer_GetLastPlayedTimes_Request"> & {
  /**
   * @generated from field: optional uint32 min_last_played = 1;
   */
  minLastPlayed: number;
};

/**
 * Describes the message CPlayer_GetLastPlayedTimes_Request.
 * Use `create(CPlayer_GetLastPlayedTimes_RequestSchema)` to create a new message.
 */
export const CPlayer_GetLastPlayedTimes_RequestSchema: GenMessage<CPlayer_GetLastPlayedTimes_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 78);

/**
 * @generated from message CPlayer_GetLastPlayedTimes_Response
 */
export type CPlayer_GetLastPlayedTimes_Response = Message<"CPlayer_GetLastPlayedTimes_Response"> & {
  /**
   * @generated from field: repeated CPlayer_GetLastPlayedTimes_Response.Game games = 1;
   */
  games: CPlayer_GetLastPlayedTimes_Response_Game[];
};

/**
 * Describes the message CPlayer_GetLastPlayedTimes_Response.
 * Use `create(CPlayer_GetLastPlayedTimes_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetLastPlayedTimes_ResponseSchema: GenMessage<CPlayer_GetLastPlayedTimes_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 79);

/**
 * @generated from message CPlayer_GetLastPlayedTimes_Response.Game
 */
export type CPlayer_GetLastPlayedTimes_Response_Game = Message<"CPlayer_GetLastPlayedTimes_Response.Game"> & {
  /**
   * @generated from field: optional int32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 last_playtime = 2;
   */
  lastPlaytime: number;

  /**
   * @generated from field: optional int32 playtime_2weeks = 3;
   */
  playtime2weeks: number;

  /**
   * @generated from field: optional int32 playtime_forever = 4;
   */
  playtimeForever: number;

  /**
   * @generated from field: optional uint32 first_playtime = 5;
   */
  firstPlaytime: number;

  /**
   * @generated from field: optional int32 playtime_windows_forever = 6;
   */
  playtimeWindowsForever: number;

  /**
   * @generated from field: optional int32 playtime_mac_forever = 7;
   */
  playtimeMacForever: number;

  /**
   * @generated from field: optional int32 playtime_linux_forever = 8;
   */
  playtimeLinuxForever: number;

  /**
   * @generated from field: optional int32 playtime_deck_forever = 16;
   */
  playtimeDeckForever: number;

  /**
   * @generated from field: optional uint32 first_windows_playtime = 9;
   */
  firstWindowsPlaytime: number;

  /**
   * @generated from field: optional uint32 first_mac_playtime = 10;
   */
  firstMacPlaytime: number;

  /**
   * @generated from field: optional uint32 first_linux_playtime = 11;
   */
  firstLinuxPlaytime: number;

  /**
   * @generated from field: optional uint32 first_deck_playtime = 17;
   */
  firstDeckPlaytime: number;

  /**
   * @generated from field: optional uint32 last_windows_playtime = 12;
   */
  lastWindowsPlaytime: number;

  /**
   * @generated from field: optional uint32 last_mac_playtime = 13;
   */
  lastMacPlaytime: number;

  /**
   * @generated from field: optional uint32 last_linux_playtime = 14;
   */
  lastLinuxPlaytime: number;

  /**
   * @generated from field: optional uint32 last_deck_playtime = 18;
   */
  lastDeckPlaytime: number;

  /**
   * @generated from field: optional uint32 playtime_disconnected = 15;
   */
  playtimeDisconnected: number;
};

/**
 * Describes the message CPlayer_GetLastPlayedTimes_Response.Game.
 * Use `create(CPlayer_GetLastPlayedTimes_Response_GameSchema)` to create a new message.
 */
export const CPlayer_GetLastPlayedTimes_Response_GameSchema: GenMessage<CPlayer_GetLastPlayedTimes_Response_Game> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 79, 0);

/**
 * @generated from message CPlayer_GetTimeSSAAccepted_Request
 */
export type CPlayer_GetTimeSSAAccepted_Request = Message<"CPlayer_GetTimeSSAAccepted_Request"> & {
};

/**
 * Describes the message CPlayer_GetTimeSSAAccepted_Request.
 * Use `create(CPlayer_GetTimeSSAAccepted_RequestSchema)` to create a new message.
 */
export const CPlayer_GetTimeSSAAccepted_RequestSchema: GenMessage<CPlayer_GetTimeSSAAccepted_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 80);

/**
 * @generated from message CPlayer_GetTimeSSAAccepted_Response
 */
export type CPlayer_GetTimeSSAAccepted_Response = Message<"CPlayer_GetTimeSSAAccepted_Response"> & {
  /**
   * @generated from field: optional uint32 time_ssa_accepted = 1;
   */
  timeSsaAccepted: number;

  /**
   * @generated from field: optional uint32 time_ssa_updated = 2;
   */
  timeSsaUpdated: number;

  /**
   * @generated from field: optional uint32 time_chinassa_accepted = 3;
   */
  timeChinassaAccepted: number;
};

/**
 * Describes the message CPlayer_GetTimeSSAAccepted_Response.
 * Use `create(CPlayer_GetTimeSSAAccepted_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetTimeSSAAccepted_ResponseSchema: GenMessage<CPlayer_GetTimeSSAAccepted_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 81);

/**
 * @generated from message CPlayer_AcceptSSA_Request
 */
export type CPlayer_AcceptSSA_Request = Message<"CPlayer_AcceptSSA_Request"> & {
  /**
   * @generated from field: optional EAgreementType agreement_type = 1 [default = k_EAgreementType_Invalid];
   */
  agreementType: EAgreementType;

  /**
   * @generated from field: optional uint32 time_signed_utc = 2;
   */
  timeSignedUtc: number;
};

/**
 * Describes the message CPlayer_AcceptSSA_Request.
 * Use `create(CPlayer_AcceptSSA_RequestSchema)` to create a new message.
 */
export const CPlayer_AcceptSSA_RequestSchema: GenMessage<CPlayer_AcceptSSA_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 82);

/**
 * @generated from message CPlayer_AcceptSSA_Response
 */
export type CPlayer_AcceptSSA_Response = Message<"CPlayer_AcceptSSA_Response"> & {
};

/**
 * Describes the message CPlayer_AcceptSSA_Response.
 * Use `create(CPlayer_AcceptSSA_ResponseSchema)` to create a new message.
 */
export const CPlayer_AcceptSSA_ResponseSchema: GenMessage<CPlayer_AcceptSSA_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 83);

/**
 * @generated from message CPlayer_GetNicknameList_Request
 */
export type CPlayer_GetNicknameList_Request = Message<"CPlayer_GetNicknameList_Request"> & {
};

/**
 * Describes the message CPlayer_GetNicknameList_Request.
 * Use `create(CPlayer_GetNicknameList_RequestSchema)` to create a new message.
 */
export const CPlayer_GetNicknameList_RequestSchema: GenMessage<CPlayer_GetNicknameList_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 84);

/**
 * @generated from message CPlayer_GetNicknameList_Response
 */
export type CPlayer_GetNicknameList_Response = Message<"CPlayer_GetNicknameList_Response"> & {
  /**
   * @generated from field: repeated CPlayer_GetNicknameList_Response.PlayerNickname nicknames = 1;
   */
  nicknames: CPlayer_GetNicknameList_Response_PlayerNickname[];
};

/**
 * Describes the message CPlayer_GetNicknameList_Response.
 * Use `create(CPlayer_GetNicknameList_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetNicknameList_ResponseSchema: GenMessage<CPlayer_GetNicknameList_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 85);

/**
 * @generated from message CPlayer_GetNicknameList_Response.PlayerNickname
 */
export type CPlayer_GetNicknameList_Response_PlayerNickname = Message<"CPlayer_GetNicknameList_Response.PlayerNickname"> & {
  /**
   * @generated from field: optional fixed32 accountid = 1;
   */
  accountid: number;

  /**
   * @generated from field: optional string nickname = 2;
   */
  nickname: string;
};

/**
 * Describes the message CPlayer_GetNicknameList_Response.PlayerNickname.
 * Use `create(CPlayer_GetNicknameList_Response_PlayerNicknameSchema)` to create a new message.
 */
export const CPlayer_GetNicknameList_Response_PlayerNicknameSchema: GenMessage<CPlayer_GetNicknameList_Response_PlayerNickname> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 85, 0);

/**
 * @generated from message CPlayer_GetPerFriendPreferences_Request
 */
export type CPlayer_GetPerFriendPreferences_Request = Message<"CPlayer_GetPerFriendPreferences_Request"> & {
};

/**
 * Describes the message CPlayer_GetPerFriendPreferences_Request.
 * Use `create(CPlayer_GetPerFriendPreferences_RequestSchema)` to create a new message.
 */
export const CPlayer_GetPerFriendPreferences_RequestSchema: GenMessage<CPlayer_GetPerFriendPreferences_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 86);

/**
 * @generated from message PerFriendPreferences
 */
export type PerFriendPreferences = Message<"PerFriendPreferences"> & {
  /**
   * @generated from field: optional fixed32 accountid = 1;
   */
  accountid: number;

  /**
   * @generated from field: optional string nickname = 2;
   */
  nickname: string;

  /**
   * @generated from field: optional ENotificationSetting notifications_showingame = 3 [default = k_ENotificationSettingNotifyUseDefault];
   */
  notificationsShowingame: ENotificationSetting;

  /**
   * @generated from field: optional ENotificationSetting notifications_showonline = 4 [default = k_ENotificationSettingNotifyUseDefault];
   */
  notificationsShowonline: ENotificationSetting;

  /**
   * @generated from field: optional ENotificationSetting notifications_showmessages = 5 [default = k_ENotificationSettingNotifyUseDefault];
   */
  notificationsShowmessages: ENotificationSetting;

  /**
   * @generated from field: optional ENotificationSetting sounds_showingame = 6 [default = k_ENotificationSettingNotifyUseDefault];
   */
  soundsShowingame: ENotificationSetting;

  /**
   * @generated from field: optional ENotificationSetting sounds_showonline = 7 [default = k_ENotificationSettingNotifyUseDefault];
   */
  soundsShowonline: ENotificationSetting;

  /**
   * @generated from field: optional ENotificationSetting sounds_showmessages = 8 [default = k_ENotificationSettingNotifyUseDefault];
   */
  soundsShowmessages: ENotificationSetting;

  /**
   * @generated from field: optional ENotificationSetting notifications_sendmobile = 9 [default = k_ENotificationSettingNotifyUseDefault];
   */
  notificationsSendmobile: ENotificationSetting;
};

/**
 * Describes the message PerFriendPreferences.
 * Use `create(PerFriendPreferencesSchema)` to create a new message.
 */
export const PerFriendPreferencesSchema: GenMessage<PerFriendPreferences> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 87);

/**
 * @generated from message CPlayer_GetPerFriendPreferences_Response
 */
export type CPlayer_GetPerFriendPreferences_Response = Message<"CPlayer_GetPerFriendPreferences_Response"> & {
  /**
   * @generated from field: repeated PerFriendPreferences preferences = 1;
   */
  preferences: PerFriendPreferences[];
};

/**
 * Describes the message CPlayer_GetPerFriendPreferences_Response.
 * Use `create(CPlayer_GetPerFriendPreferences_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetPerFriendPreferences_ResponseSchema: GenMessage<CPlayer_GetPerFriendPreferences_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 88);

/**
 * @generated from message CPlayer_SetPerFriendPreferences_Request
 */
export type CPlayer_SetPerFriendPreferences_Request = Message<"CPlayer_SetPerFriendPreferences_Request"> & {
  /**
   * @generated from field: optional PerFriendPreferences preferences = 1;
   */
  preferences?: PerFriendPreferences;
};

/**
 * Describes the message CPlayer_SetPerFriendPreferences_Request.
 * Use `create(CPlayer_SetPerFriendPreferences_RequestSchema)` to create a new message.
 */
export const CPlayer_SetPerFriendPreferences_RequestSchema: GenMessage<CPlayer_SetPerFriendPreferences_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 89);

/**
 * @generated from message CPlayer_SetPerFriendPreferences_Response
 */
export type CPlayer_SetPerFriendPreferences_Response = Message<"CPlayer_SetPerFriendPreferences_Response"> & {
};

/**
 * Describes the message CPlayer_SetPerFriendPreferences_Response.
 * Use `create(CPlayer_SetPerFriendPreferences_ResponseSchema)` to create a new message.
 */
export const CPlayer_SetPerFriendPreferences_ResponseSchema: GenMessage<CPlayer_SetPerFriendPreferences_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 90);

/**
 * @generated from message CPlayer_AddFriend_Request
 */
export type CPlayer_AddFriend_Request = Message<"CPlayer_AddFriend_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;
};

/**
 * Describes the message CPlayer_AddFriend_Request.
 * Use `create(CPlayer_AddFriend_RequestSchema)` to create a new message.
 */
export const CPlayer_AddFriend_RequestSchema: GenMessage<CPlayer_AddFriend_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 91);

/**
 * @generated from message CPlayer_AddFriend_Response
 */
export type CPlayer_AddFriend_Response = Message<"CPlayer_AddFriend_Response"> & {
  /**
   * @generated from field: optional bool invite_sent = 1;
   */
  inviteSent: boolean;

  /**
   * @generated from field: optional uint32 friend_relationship = 2;
   */
  friendRelationship: number;

  /**
   * @generated from field: optional int32 result = 3;
   */
  result: number;
};

/**
 * Describes the message CPlayer_AddFriend_Response.
 * Use `create(CPlayer_AddFriend_ResponseSchema)` to create a new message.
 */
export const CPlayer_AddFriend_ResponseSchema: GenMessage<CPlayer_AddFriend_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 92);

/**
 * @generated from message CPlayer_RemoveFriend_Request
 */
export type CPlayer_RemoveFriend_Request = Message<"CPlayer_RemoveFriend_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;
};

/**
 * Describes the message CPlayer_RemoveFriend_Request.
 * Use `create(CPlayer_RemoveFriend_RequestSchema)` to create a new message.
 */
export const CPlayer_RemoveFriend_RequestSchema: GenMessage<CPlayer_RemoveFriend_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 93);

/**
 * @generated from message CPlayer_RemoveFriend_Response
 */
export type CPlayer_RemoveFriend_Response = Message<"CPlayer_RemoveFriend_Response"> & {
  /**
   * @generated from field: optional uint32 friend_relationship = 1;
   */
  friendRelationship: number;
};

/**
 * Describes the message CPlayer_RemoveFriend_Response.
 * Use `create(CPlayer_RemoveFriend_ResponseSchema)` to create a new message.
 */
export const CPlayer_RemoveFriend_ResponseSchema: GenMessage<CPlayer_RemoveFriend_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 94);

/**
 * @generated from message CPlayer_IgnoreFriend_Request
 */
export type CPlayer_IgnoreFriend_Request = Message<"CPlayer_IgnoreFriend_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional bool unignore = 2;
   */
  unignore: boolean;
};

/**
 * Describes the message CPlayer_IgnoreFriend_Request.
 * Use `create(CPlayer_IgnoreFriend_RequestSchema)` to create a new message.
 */
export const CPlayer_IgnoreFriend_RequestSchema: GenMessage<CPlayer_IgnoreFriend_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 95);

/**
 * @generated from message CPlayer_IgnoreFriend_Response
 */
export type CPlayer_IgnoreFriend_Response = Message<"CPlayer_IgnoreFriend_Response"> & {
  /**
   * @generated from field: optional uint32 friend_relationship = 1;
   */
  friendRelationship: number;
};

/**
 * Describes the message CPlayer_IgnoreFriend_Response.
 * Use `create(CPlayer_IgnoreFriend_ResponseSchema)` to create a new message.
 */
export const CPlayer_IgnoreFriend_ResponseSchema: GenMessage<CPlayer_IgnoreFriend_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 96);

/**
 * @generated from message CPlayer_GetCommunityPreferences_Request
 */
export type CPlayer_GetCommunityPreferences_Request = Message<"CPlayer_GetCommunityPreferences_Request"> & {
};

/**
 * Describes the message CPlayer_GetCommunityPreferences_Request.
 * Use `create(CPlayer_GetCommunityPreferences_RequestSchema)` to create a new message.
 */
export const CPlayer_GetCommunityPreferences_RequestSchema: GenMessage<CPlayer_GetCommunityPreferences_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 97);

/**
 * @generated from message CPlayer_CommunityPreferences
 */
export type CPlayer_CommunityPreferences = Message<"CPlayer_CommunityPreferences"> & {
  /**
   * @generated from field: optional bool parenthesize_nicknames = 4 [default = false];
   */
  parenthesizeNicknames: boolean;

  /**
   * @generated from field: optional ETextFilterSetting text_filter_setting = 5 [default = k_ETextFilterSettingSteamLabOptedOut];
   */
  textFilterSetting: ETextFilterSetting;

  /**
   * @generated from field: optional bool text_filter_ignore_friends = 6 [default = true];
   */
  textFilterIgnoreFriends: boolean;

  /**
   * @generated from field: optional uint32 text_filter_words_revision = 7;
   */
  textFilterWordsRevision: number;

  /**
   * @generated from field: optional uint32 timestamp_updated = 3;
   */
  timestampUpdated: number;
};

/**
 * Describes the message CPlayer_CommunityPreferences.
 * Use `create(CPlayer_CommunityPreferencesSchema)` to create a new message.
 */
export const CPlayer_CommunityPreferencesSchema: GenMessage<CPlayer_CommunityPreferences> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 98);

/**
 * @generated from message CPlayer_GetCommunityPreferences_Response
 */
export type CPlayer_GetCommunityPreferences_Response = Message<"CPlayer_GetCommunityPreferences_Response"> & {
  /**
   * @generated from field: optional CPlayer_CommunityPreferences preferences = 1;
   */
  preferences?: CPlayer_CommunityPreferences;

  /**
   * @generated from field: optional UserContentDescriptorPreferences content_descriptor_preferences = 2;
   */
  contentDescriptorPreferences?: UserContentDescriptorPreferences;
};

/**
 * Describes the message CPlayer_GetCommunityPreferences_Response.
 * Use `create(CPlayer_GetCommunityPreferences_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetCommunityPreferences_ResponseSchema: GenMessage<CPlayer_GetCommunityPreferences_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 99);

/**
 * @generated from message CPlayer_SetCommunityPreferences_Request
 */
export type CPlayer_SetCommunityPreferences_Request = Message<"CPlayer_SetCommunityPreferences_Request"> & {
  /**
   * @generated from field: optional CPlayer_CommunityPreferences preferences = 1;
   */
  preferences?: CPlayer_CommunityPreferences;
};

/**
 * Describes the message CPlayer_SetCommunityPreferences_Request.
 * Use `create(CPlayer_SetCommunityPreferences_RequestSchema)` to create a new message.
 */
export const CPlayer_SetCommunityPreferences_RequestSchema: GenMessage<CPlayer_SetCommunityPreferences_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 100);

/**
 * @generated from message CPlayer_SetCommunityPreferences_Response
 */
export type CPlayer_SetCommunityPreferences_Response = Message<"CPlayer_SetCommunityPreferences_Response"> & {
};

/**
 * Describes the message CPlayer_SetCommunityPreferences_Response.
 * Use `create(CPlayer_SetCommunityPreferences_ResponseSchema)` to create a new message.
 */
export const CPlayer_SetCommunityPreferences_ResponseSchema: GenMessage<CPlayer_SetCommunityPreferences_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 101);

/**
 * @generated from message CPlayer_GetTextFilterWords_Request
 */
export type CPlayer_GetTextFilterWords_Request = Message<"CPlayer_GetTextFilterWords_Request"> & {
};

/**
 * Describes the message CPlayer_GetTextFilterWords_Request.
 * Use `create(CPlayer_GetTextFilterWords_RequestSchema)` to create a new message.
 */
export const CPlayer_GetTextFilterWords_RequestSchema: GenMessage<CPlayer_GetTextFilterWords_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 102);

/**
 * @generated from message CPlayer_TextFilterWords
 */
export type CPlayer_TextFilterWords = Message<"CPlayer_TextFilterWords"> & {
  /**
   * @generated from field: repeated string text_filter_custom_banned_words = 1;
   */
  textFilterCustomBannedWords: string[];

  /**
   * @generated from field: repeated string text_filter_custom_clean_words = 2;
   */
  textFilterCustomCleanWords: string[];

  /**
   * @generated from field: optional uint32 text_filter_words_revision = 3;
   */
  textFilterWordsRevision: number;
};

/**
 * Describes the message CPlayer_TextFilterWords.
 * Use `create(CPlayer_TextFilterWordsSchema)` to create a new message.
 */
export const CPlayer_TextFilterWordsSchema: GenMessage<CPlayer_TextFilterWords> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 103);

/**
 * @generated from message CPlayer_GetTextFilterWords_Response
 */
export type CPlayer_GetTextFilterWords_Response = Message<"CPlayer_GetTextFilterWords_Response"> & {
  /**
   * @generated from field: optional CPlayer_TextFilterWords words = 1;
   */
  words?: CPlayer_TextFilterWords;
};

/**
 * Describes the message CPlayer_GetTextFilterWords_Response.
 * Use `create(CPlayer_GetTextFilterWords_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetTextFilterWords_ResponseSchema: GenMessage<CPlayer_GetTextFilterWords_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 104);

/**
 * @generated from message CPlayer_GetNewSteamAnnouncementState_Request
 */
export type CPlayer_GetNewSteamAnnouncementState_Request = Message<"CPlayer_GetNewSteamAnnouncementState_Request"> & {
  /**
   * @generated from field: optional int32 language = 1;
   */
  language: number;
};

/**
 * Describes the message CPlayer_GetNewSteamAnnouncementState_Request.
 * Use `create(CPlayer_GetNewSteamAnnouncementState_RequestSchema)` to create a new message.
 */
export const CPlayer_GetNewSteamAnnouncementState_RequestSchema: GenMessage<CPlayer_GetNewSteamAnnouncementState_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 105);

/**
 * @generated from message CPlayer_GetNewSteamAnnouncementState_Response
 */
export type CPlayer_GetNewSteamAnnouncementState_Response = Message<"CPlayer_GetNewSteamAnnouncementState_Response"> & {
  /**
   * @generated from field: optional ENewSteamAnnouncementState state = 1 [default = k_ENewSteamAnnouncementState_Invalid];
   */
  state: ENewSteamAnnouncementState;

  /**
   * @generated from field: optional string announcement_headline = 2;
   */
  announcementHeadline: string;

  /**
   * @generated from field: optional string announcement_url = 3;
   */
  announcementUrl: string;

  /**
   * @generated from field: optional uint32 time_posted = 4;
   */
  timePosted: number;

  /**
   * @generated from field: optional uint64 announcement_gid = 5;
   */
  announcementGid: bigint;
};

/**
 * Describes the message CPlayer_GetNewSteamAnnouncementState_Response.
 * Use `create(CPlayer_GetNewSteamAnnouncementState_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetNewSteamAnnouncementState_ResponseSchema: GenMessage<CPlayer_GetNewSteamAnnouncementState_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 106);

/**
 * @generated from message CPlayer_UpdateSteamAnnouncementLastRead_Request
 */
export type CPlayer_UpdateSteamAnnouncementLastRead_Request = Message<"CPlayer_UpdateSteamAnnouncementLastRead_Request"> & {
  /**
   * @generated from field: optional uint64 announcement_gid = 1;
   */
  announcementGid: bigint;

  /**
   * @generated from field: optional uint32 time_posted = 2;
   */
  timePosted: number;
};

/**
 * Describes the message CPlayer_UpdateSteamAnnouncementLastRead_Request.
 * Use `create(CPlayer_UpdateSteamAnnouncementLastRead_RequestSchema)` to create a new message.
 */
export const CPlayer_UpdateSteamAnnouncementLastRead_RequestSchema: GenMessage<CPlayer_UpdateSteamAnnouncementLastRead_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 107);

/**
 * @generated from message CPlayer_UpdateSteamAnnouncementLastRead_Response
 */
export type CPlayer_UpdateSteamAnnouncementLastRead_Response = Message<"CPlayer_UpdateSteamAnnouncementLastRead_Response"> & {
};

/**
 * Describes the message CPlayer_UpdateSteamAnnouncementLastRead_Response.
 * Use `create(CPlayer_UpdateSteamAnnouncementLastRead_ResponseSchema)` to create a new message.
 */
export const CPlayer_UpdateSteamAnnouncementLastRead_ResponseSchema: GenMessage<CPlayer_UpdateSteamAnnouncementLastRead_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 108);

/**
 * @generated from message CPlayer_GetPrivacySettings_Request
 */
export type CPlayer_GetPrivacySettings_Request = Message<"CPlayer_GetPrivacySettings_Request"> & {
};

/**
 * Describes the message CPlayer_GetPrivacySettings_Request.
 * Use `create(CPlayer_GetPrivacySettings_RequestSchema)` to create a new message.
 */
export const CPlayer_GetPrivacySettings_RequestSchema: GenMessage<CPlayer_GetPrivacySettings_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 109);

/**
 * @generated from message CPrivacySettings
 */
export type CPrivacySettings = Message<"CPrivacySettings"> & {
  /**
   * @generated from field: optional int32 privacy_state = 1;
   */
  privacyState: number;

  /**
   * @generated from field: optional int32 privacy_state_inventory = 2;
   */
  privacyStateInventory: number;

  /**
   * @generated from field: optional int32 privacy_state_gifts = 3;
   */
  privacyStateGifts: number;

  /**
   * @generated from field: optional int32 privacy_state_ownedgames = 4;
   */
  privacyStateOwnedgames: number;

  /**
   * @generated from field: optional int32 privacy_state_playtime = 5;
   */
  privacyStatePlaytime: number;

  /**
   * @generated from field: optional int32 privacy_state_friendslist = 6;
   */
  privacyStateFriendslist: number;
};

/**
 * Describes the message CPrivacySettings.
 * Use `create(CPrivacySettingsSchema)` to create a new message.
 */
export const CPrivacySettingsSchema: GenMessage<CPrivacySettings> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 110);

/**
 * @generated from message CPlayer_GetPrivacySettings_Response
 */
export type CPlayer_GetPrivacySettings_Response = Message<"CPlayer_GetPrivacySettings_Response"> & {
  /**
   * @generated from field: optional CPrivacySettings privacy_settings = 1;
   */
  privacySettings?: CPrivacySettings;
};

/**
 * Describes the message CPlayer_GetPrivacySettings_Response.
 * Use `create(CPlayer_GetPrivacySettings_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetPrivacySettings_ResponseSchema: GenMessage<CPlayer_GetPrivacySettings_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 111);

/**
 * @generated from message CPlayer_GetDurationControl_Request
 */
export type CPlayer_GetDurationControl_Request = Message<"CPlayer_GetDurationControl_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;
};

/**
 * Describes the message CPlayer_GetDurationControl_Request.
 * Use `create(CPlayer_GetDurationControl_RequestSchema)` to create a new message.
 */
export const CPlayer_GetDurationControl_RequestSchema: GenMessage<CPlayer_GetDurationControl_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 112);

/**
 * @generated from message CPlayer_GetDurationControl_Response
 */
export type CPlayer_GetDurationControl_Response = Message<"CPlayer_GetDurationControl_Response"> & {
  /**
   * @generated from field: optional bool is_enabled = 1;
   */
  isEnabled: boolean;

  /**
   * @generated from field: optional int32 seconds = 2;
   */
  seconds: number;

  /**
   * @generated from field: optional int32 seconds_today = 3;
   */
  secondsToday: number;

  /**
   * @generated from field: optional bool is_steamchina_account = 4;
   */
  isSteamchinaAccount: boolean;

  /**
   * @generated from field: optional bool is_age_verified = 5;
   */
  isAgeVerified: boolean;

  /**
   * @generated from field: optional uint32 seconds_allowed_today = 6;
   */
  secondsAllowedToday: number;

  /**
   * @generated from field: optional bool age_verification_pending = 7;
   */
  ageVerificationPending: boolean;

  /**
   * @generated from field: optional bool block_minors = 8;
   */
  blockMinors: boolean;
};

/**
 * Describes the message CPlayer_GetDurationControl_Response.
 * Use `create(CPlayer_GetDurationControl_ResponseSchema)` to create a new message.
 */
export const CPlayer_GetDurationControl_ResponseSchema: GenMessage<CPlayer_GetDurationControl_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 113);

/**
 * @generated from message CPlayer_RecordDisconnectedPlaytime_Request
 */
export type CPlayer_RecordDisconnectedPlaytime_Request = Message<"CPlayer_RecordDisconnectedPlaytime_Request"> & {
  /**
   * @generated from field: repeated CPlayer_RecordDisconnectedPlaytime_Request.PlayHistory play_sessions = 3;
   */
  playSessions: CPlayer_RecordDisconnectedPlaytime_Request_PlayHistory[];
};

/**
 * Describes the message CPlayer_RecordDisconnectedPlaytime_Request.
 * Use `create(CPlayer_RecordDisconnectedPlaytime_RequestSchema)` to create a new message.
 */
export const CPlayer_RecordDisconnectedPlaytime_RequestSchema: GenMessage<CPlayer_RecordDisconnectedPlaytime_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 114);

/**
 * @generated from message CPlayer_RecordDisconnectedPlaytime_Request.PlayHistory
 */
export type CPlayer_RecordDisconnectedPlaytime_Request_PlayHistory = Message<"CPlayer_RecordDisconnectedPlaytime_Request.PlayHistory"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 session_time_start = 2;
   */
  sessionTimeStart: number;

  /**
   * @generated from field: optional uint32 seconds = 3;
   */
  seconds: number;

  /**
   * @generated from field: optional bool offline = 4;
   */
  offline: boolean;

  /**
   * @generated from field: optional uint32 owner = 5;
   */
  owner: number;
};

/**
 * Describes the message CPlayer_RecordDisconnectedPlaytime_Request.PlayHistory.
 * Use `create(CPlayer_RecordDisconnectedPlaytime_Request_PlayHistorySchema)` to create a new message.
 */
export const CPlayer_RecordDisconnectedPlaytime_Request_PlayHistorySchema: GenMessage<CPlayer_RecordDisconnectedPlaytime_Request_PlayHistory> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 114, 0);

/**
 * @generated from message CPlayer_RecordDisconnectedPlaytime_Response
 */
export type CPlayer_RecordDisconnectedPlaytime_Response = Message<"CPlayer_RecordDisconnectedPlaytime_Response"> & {
};

/**
 * Describes the message CPlayer_RecordDisconnectedPlaytime_Response.
 * Use `create(CPlayer_RecordDisconnectedPlaytime_ResponseSchema)` to create a new message.
 */
export const CPlayer_RecordDisconnectedPlaytime_ResponseSchema: GenMessage<CPlayer_RecordDisconnectedPlaytime_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 115);

/**
 * @generated from message CPlayer_LastPlayedTimes_Notification
 */
export type CPlayer_LastPlayedTimes_Notification = Message<"CPlayer_LastPlayedTimes_Notification"> & {
  /**
   * @generated from field: repeated CPlayer_GetLastPlayedTimes_Response.Game games = 1;
   */
  games: CPlayer_GetLastPlayedTimes_Response_Game[];
};

/**
 * Describes the message CPlayer_LastPlayedTimes_Notification.
 * Use `create(CPlayer_LastPlayedTimes_NotificationSchema)` to create a new message.
 */
export const CPlayer_LastPlayedTimes_NotificationSchema: GenMessage<CPlayer_LastPlayedTimes_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 116);

/**
 * @generated from message CPlayer_FriendNicknameChanged_Notification
 */
export type CPlayer_FriendNicknameChanged_Notification = Message<"CPlayer_FriendNicknameChanged_Notification"> & {
  /**
   * @generated from field: optional fixed32 accountid = 1;
   */
  accountid: number;

  /**
   * @generated from field: optional string nickname = 2;
   */
  nickname: string;

  /**
   * @generated from field: optional bool is_echo_to_self = 3;
   */
  isEchoToSelf: boolean;
};

/**
 * Describes the message CPlayer_FriendNicknameChanged_Notification.
 * Use `create(CPlayer_FriendNicknameChanged_NotificationSchema)` to create a new message.
 */
export const CPlayer_FriendNicknameChanged_NotificationSchema: GenMessage<CPlayer_FriendNicknameChanged_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 117);

/**
 * @generated from message CPlayer_FriendEquippedProfileItemsChanged_Notification
 */
export type CPlayer_FriendEquippedProfileItemsChanged_Notification = Message<"CPlayer_FriendEquippedProfileItemsChanged_Notification"> & {
  /**
   * @generated from field: optional fixed32 accountid = 1;
   */
  accountid: number;
};

/**
 * Describes the message CPlayer_FriendEquippedProfileItemsChanged_Notification.
 * Use `create(CPlayer_FriendEquippedProfileItemsChanged_NotificationSchema)` to create a new message.
 */
export const CPlayer_FriendEquippedProfileItemsChanged_NotificationSchema: GenMessage<CPlayer_FriendEquippedProfileItemsChanged_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 118);

/**
 * @generated from message CPlayer_NewSteamAnnouncementState_Notification
 */
export type CPlayer_NewSteamAnnouncementState_Notification = Message<"CPlayer_NewSteamAnnouncementState_Notification"> & {
  /**
   * @generated from field: optional ENewSteamAnnouncementState state = 1 [default = k_ENewSteamAnnouncementState_Invalid];
   */
  state: ENewSteamAnnouncementState;

  /**
   * @generated from field: optional string announcement_headline = 2;
   */
  announcementHeadline: string;

  /**
   * @generated from field: optional string announcement_url = 3;
   */
  announcementUrl: string;

  /**
   * @generated from field: optional uint32 time_posted = 4;
   */
  timePosted: number;

  /**
   * @generated from field: optional uint64 announcement_gid = 5;
   */
  announcementGid: bigint;
};

/**
 * Describes the message CPlayer_NewSteamAnnouncementState_Notification.
 * Use `create(CPlayer_NewSteamAnnouncementState_NotificationSchema)` to create a new message.
 */
export const CPlayer_NewSteamAnnouncementState_NotificationSchema: GenMessage<CPlayer_NewSteamAnnouncementState_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 119);

/**
 * @generated from message CPlayer_CommunityPreferencesChanged_Notification
 */
export type CPlayer_CommunityPreferencesChanged_Notification = Message<"CPlayer_CommunityPreferencesChanged_Notification"> & {
  /**
   * @generated from field: optional CPlayer_CommunityPreferences preferences = 1;
   */
  preferences?: CPlayer_CommunityPreferences;

  /**
   * @generated from field: optional UserContentDescriptorPreferences content_descriptor_preferences = 2;
   */
  contentDescriptorPreferences?: UserContentDescriptorPreferences;
};

/**
 * Describes the message CPlayer_CommunityPreferencesChanged_Notification.
 * Use `create(CPlayer_CommunityPreferencesChanged_NotificationSchema)` to create a new message.
 */
export const CPlayer_CommunityPreferencesChanged_NotificationSchema: GenMessage<CPlayer_CommunityPreferencesChanged_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 120);

/**
 * @generated from message CPlayer_TextFilterWordsChanged_Notification
 */
export type CPlayer_TextFilterWordsChanged_Notification = Message<"CPlayer_TextFilterWordsChanged_Notification"> & {
  /**
   * @generated from field: optional CPlayer_TextFilterWords words = 1;
   */
  words?: CPlayer_TextFilterWords;
};

/**
 * Describes the message CPlayer_TextFilterWordsChanged_Notification.
 * Use `create(CPlayer_TextFilterWordsChanged_NotificationSchema)` to create a new message.
 */
export const CPlayer_TextFilterWordsChanged_NotificationSchema: GenMessage<CPlayer_TextFilterWordsChanged_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 121);

/**
 * @generated from message CPlayer_PerFriendPreferencesChanged_Notification
 */
export type CPlayer_PerFriendPreferencesChanged_Notification = Message<"CPlayer_PerFriendPreferencesChanged_Notification"> & {
  /**
   * @generated from field: optional fixed32 accountid = 1;
   */
  accountid: number;

  /**
   * @generated from field: optional PerFriendPreferences preferences = 2;
   */
  preferences?: PerFriendPreferences;
};

/**
 * Describes the message CPlayer_PerFriendPreferencesChanged_Notification.
 * Use `create(CPlayer_PerFriendPreferencesChanged_NotificationSchema)` to create a new message.
 */
export const CPlayer_PerFriendPreferencesChanged_NotificationSchema: GenMessage<CPlayer_PerFriendPreferencesChanged_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 122);

/**
 * @generated from message CPlayer_PrivacySettingsChanged_Notification
 */
export type CPlayer_PrivacySettingsChanged_Notification = Message<"CPlayer_PrivacySettingsChanged_Notification"> & {
  /**
   * @generated from field: optional CPrivacySettings privacy_settings = 1;
   */
  privacySettings?: CPrivacySettings;
};

/**
 * Describes the message CPlayer_PrivacySettingsChanged_Notification.
 * Use `create(CPlayer_PrivacySettingsChanged_NotificationSchema)` to create a new message.
 */
export const CPlayer_PrivacySettingsChanged_NotificationSchema: GenMessage<CPlayer_PrivacySettingsChanged_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_player_steamclient, 123);

/**
 * @generated from enum EProfileCustomizationStyle
 */
export enum EProfileCustomizationStyle {
  /**
   * @generated from enum value: k_EProfileCustomizationStyleDefault = 0;
   */
  k_EProfileCustomizationStyleDefault = 0,

  /**
   * @generated from enum value: k_EProfileCustomizationStyleSelected = 1;
   */
  k_EProfileCustomizationStyleSelected = 1,

  /**
   * @generated from enum value: k_EProfileCustomizationStyleRarest = 2;
   */
  k_EProfileCustomizationStyleRarest = 2,

  /**
   * @generated from enum value: k_EProfileCustomizationStyleMostRecent = 3;
   */
  k_EProfileCustomizationStyleMostRecent = 3,

  /**
   * @generated from enum value: k_EProfileCustomizationStyleRandom = 4;
   */
  k_EProfileCustomizationStyleRandom = 4,

  /**
   * @generated from enum value: k_EProfileCustomizationStyleHighestRated = 5;
   */
  k_EProfileCustomizationStyleHighestRated = 5,
}

/**
 * Describes the enum EProfileCustomizationStyle.
 */
export const EProfileCustomizationStyleSchema: GenEnum<EProfileCustomizationStyle> = /*@__PURE__*/
  enumDesc(file_steammessages_player_steamclient, 0);

/**
 * @generated from enum EAgreementType
 */
export enum EAgreementType {
  /**
   * @generated from enum value: k_EAgreementType_Invalid = -1;
   */
  k_EAgreementType_Invalid = -1,

  /**
   * @generated from enum value: k_EAgreementType_GlobalSSA = 0;
   */
  k_EAgreementType_GlobalSSA = 0,

  /**
   * @generated from enum value: k_EAgreementType_ChinaSSA = 1;
   */
  k_EAgreementType_ChinaSSA = 1,
}

/**
 * Describes the enum EAgreementType.
 */
export const EAgreementTypeSchema: GenEnum<EAgreementType> = /*@__PURE__*/
  enumDesc(file_steammessages_player_steamclient, 1);

/**
 * @generated from enum ENotificationSetting
 */
export enum ENotificationSetting {
  /**
   * @generated from enum value: k_ENotificationSettingNotifyUseDefault = 0;
   */
  k_ENotificationSettingNotifyUseDefault = 0,

  /**
   * @generated from enum value: k_ENotificationSettingAlways = 1;
   */
  k_ENotificationSettingAlways = 1,

  /**
   * @generated from enum value: k_ENotificationSettingNever = 2;
   */
  k_ENotificationSettingNever = 2,
}

/**
 * Describes the enum ENotificationSetting.
 */
export const ENotificationSettingSchema: GenEnum<ENotificationSetting> = /*@__PURE__*/
  enumDesc(file_steammessages_player_steamclient, 2);

/**
 * @generated from enum ETextFilterSetting
 */
export enum ETextFilterSetting {
  /**
   * @generated from enum value: k_ETextFilterSettingSteamLabOptedOut = 0;
   */
  k_ETextFilterSettingSteamLabOptedOut = 0,

  /**
   * @generated from enum value: k_ETextFilterSettingEnabled = 1;
   */
  k_ETextFilterSettingEnabled = 1,

  /**
   * @generated from enum value: k_ETextFilterSettingEnabledAllowProfanity = 2;
   */
  k_ETextFilterSettingEnabledAllowProfanity = 2,

  /**
   * @generated from enum value: k_ETextFilterSettingDisabled = 3;
   */
  k_ETextFilterSettingDisabled = 3,
}

/**
 * Describes the enum ETextFilterSetting.
 */
export const ETextFilterSettingSchema: GenEnum<ETextFilterSetting> = /*@__PURE__*/
  enumDesc(file_steammessages_player_steamclient, 3);

/**
 * @generated from service Player
 */
export const Player: GenService<{
  /**
   * @generated from rpc Player.GetRecentPlaytimeSessionsForChild
   */
  getRecentPlaytimeSessionsForChild: {
    methodKind: "unary";
    input: typeof CPlayer_GetRecentPlaytimeSessionsForChild_RequestSchema;
    output: typeof CPlayer_GetRecentPlaytimeSessionsForChild_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetPlayerLinkDetails
   */
  getPlayerLinkDetails: {
    methodKind: "unary";
    input: typeof CPlayer_GetPlayerLinkDetails_RequestSchema;
    output: typeof CPlayer_GetPlayerLinkDetails_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetMutualFriendsForIncomingInvites
   */
  getMutualFriendsForIncomingInvites: {
    methodKind: "unary";
    input: typeof CPlayer_GetMutualFriendsForIncomingInvites_RequestSchema;
    output: typeof CPlayer_GetMutualFriendsForIncomingInvites_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetOwnedGames
   */
  getOwnedGames: {
    methodKind: "unary";
    input: typeof CPlayer_GetOwnedGames_RequestSchema;
    output: typeof CPlayer_GetOwnedGames_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetPlayNext
   */
  getPlayNext: {
    methodKind: "unary";
    input: typeof CPlayer_GetPlayNext_RequestSchema;
    output: typeof CPlayer_GetPlayNext_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetFriendsGameplayInfo
   */
  getFriendsGameplayInfo: {
    methodKind: "unary";
    input: typeof CPlayer_GetFriendsGameplayInfo_RequestSchema;
    output: typeof CPlayer_GetFriendsGameplayInfo_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetGameBadgeLevels
   */
  getGameBadgeLevels: {
    methodKind: "unary";
    input: typeof CPlayer_GetGameBadgeLevels_RequestSchema;
    output: typeof CPlayer_GetGameBadgeLevels_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetProfileBackground
   */
  getProfileBackground: {
    methodKind: "unary";
    input: typeof CPlayer_GetProfileBackground_RequestSchema;
    output: typeof CPlayer_GetProfileBackground_ResponseSchema;
  },
  /**
   * @generated from rpc Player.SetProfileBackground
   */
  setProfileBackground: {
    methodKind: "unary";
    input: typeof CPlayer_SetProfileBackground_RequestSchema;
    output: typeof CPlayer_SetProfileBackground_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetMiniProfileBackground
   */
  getMiniProfileBackground: {
    methodKind: "unary";
    input: typeof CPlayer_GetMiniProfileBackground_RequestSchema;
    output: typeof CPlayer_GetMiniProfileBackground_ResponseSchema;
  },
  /**
   * @generated from rpc Player.SetMiniProfileBackground
   */
  setMiniProfileBackground: {
    methodKind: "unary";
    input: typeof CPlayer_SetMiniProfileBackground_RequestSchema;
    output: typeof CPlayer_SetMiniProfileBackground_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetAvatarFrame
   */
  getAvatarFrame: {
    methodKind: "unary";
    input: typeof CPlayer_GetAvatarFrame_RequestSchema;
    output: typeof CPlayer_GetAvatarFrame_ResponseSchema;
  },
  /**
   * @generated from rpc Player.SetAvatarFrame
   */
  setAvatarFrame: {
    methodKind: "unary";
    input: typeof CPlayer_SetAvatarFrame_RequestSchema;
    output: typeof CPlayer_SetAvatarFrame_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetAnimatedAvatar
   */
  getAnimatedAvatar: {
    methodKind: "unary";
    input: typeof CPlayer_GetAnimatedAvatar_RequestSchema;
    output: typeof CPlayer_GetAnimatedAvatar_ResponseSchema;
  },
  /**
   * @generated from rpc Player.SetAnimatedAvatar
   */
  setAnimatedAvatar: {
    methodKind: "unary";
    input: typeof CPlayer_SetAnimatedAvatar_RequestSchema;
    output: typeof CPlayer_SetAnimatedAvatar_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetSteamDeckKeyboardSkin
   */
  getSteamDeckKeyboardSkin: {
    methodKind: "unary";
    input: typeof CPlayer_GetSteamDeckKeyboardSkin_RequestSchema;
    output: typeof CPlayer_GetSteamDeckKeyboardSkin_ResponseSchema;
  },
  /**
   * @generated from rpc Player.SetSteamDeckKeyboardSkin
   */
  setSteamDeckKeyboardSkin: {
    methodKind: "unary";
    input: typeof CPlayer_SetSteamDeckKeyboardSkin_RequestSchema;
    output: typeof CPlayer_SetSteamDeckKeyboardSkin_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetProfileItemsOwned
   */
  getProfileItemsOwned: {
    methodKind: "unary";
    input: typeof CPlayer_GetProfileItemsOwned_RequestSchema;
    output: typeof CPlayer_GetProfileItemsOwned_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetProfileItemsEquipped
   */
  getProfileItemsEquipped: {
    methodKind: "unary";
    input: typeof CPlayer_GetProfileItemsEquipped_RequestSchema;
    output: typeof CPlayer_GetProfileItemsEquipped_ResponseSchema;
  },
  /**
   * @generated from rpc Player.SetEquippedProfileItemFlags
   */
  setEquippedProfileItemFlags: {
    methodKind: "unary";
    input: typeof CPlayer_SetEquippedProfileItemFlags_RequestSchema;
    output: typeof CPlayer_SetEquippedProfileItemFlags_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetEmoticonList
   */
  getEmoticonList: {
    methodKind: "unary";
    input: typeof CPlayer_GetEmoticonList_RequestSchema;
    output: typeof CPlayer_GetEmoticonList_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetCommunityBadgeProgress
   */
  getCommunityBadgeProgress: {
    methodKind: "unary";
    input: typeof CPlayer_GetCommunityBadgeProgress_RequestSchema;
    output: typeof CPlayer_GetCommunityBadgeProgress_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetTopAchievementsForGames
   */
  getTopAchievementsForGames: {
    methodKind: "unary";
    input: typeof CPlayer_GetTopAchievementsForGames_RequestSchema;
    output: typeof CPlayer_GetTopAchievementsForGames_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetAchievementsProgress
   */
  getAchievementsProgress: {
    methodKind: "unary";
    input: typeof CPlayer_GetAchievementsProgress_RequestSchema;
    output: typeof CPlayer_GetAchievementsProgress_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetGameAchievements
   */
  getGameAchievements: {
    methodKind: "unary";
    input: typeof CPlayer_GetGameAchievements_RequestSchema;
    output: typeof CPlayer_GetGameAchievements_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetFavoriteBadge
   */
  getFavoriteBadge: {
    methodKind: "unary";
    input: typeof CPlayer_GetFavoriteBadge_RequestSchema;
    output: typeof CPlayer_GetFavoriteBadge_ResponseSchema;
  },
  /**
   * @generated from rpc Player.SetFavoriteBadge
   */
  setFavoriteBadge: {
    methodKind: "unary";
    input: typeof CPlayer_SetFavoriteBadge_RequestSchema;
    output: typeof CPlayer_SetFavoriteBadge_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetProfileCustomization
   */
  getProfileCustomization: {
    methodKind: "unary";
    input: typeof CPlayer_GetProfileCustomization_RequestSchema;
    output: typeof CPlayer_GetProfileCustomization_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetPurchasedProfileCustomizations
   */
  getPurchasedProfileCustomizations: {
    methodKind: "unary";
    input: typeof CPlayer_GetPurchasedProfileCustomizations_RequestSchema;
    output: typeof CPlayer_GetPurchasedProfileCustomizations_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetPurchasedAndUpgradedProfileCustomizations
   */
  getPurchasedAndUpgradedProfileCustomizations: {
    methodKind: "unary";
    input: typeof CPlayer_GetPurchasedAndUpgradedProfileCustomizations_RequestSchema;
    output: typeof CPlayer_GetPurchasedAndUpgradedProfileCustomizations_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetProfileThemesAvailable
   */
  getProfileThemesAvailable: {
    methodKind: "unary";
    input: typeof CPlayer_GetProfileThemesAvailable_RequestSchema;
    output: typeof CPlayer_GetProfileThemesAvailable_ResponseSchema;
  },
  /**
   * @generated from rpc Player.SetProfileTheme
   */
  setProfileTheme: {
    methodKind: "unary";
    input: typeof CPlayer_SetProfileTheme_RequestSchema;
    output: typeof CPlayer_SetProfileTheme_ResponseSchema;
  },
  /**
   * @generated from rpc Player.SetProfilePreferences
   */
  setProfilePreferences: {
    methodKind: "unary";
    input: typeof CPlayer_SetProfilePreferences_RequestSchema;
    output: typeof CPlayer_SetProfilePreferences_ResponseSchema;
  },
  /**
   * @generated from rpc Player.PostStatusToFriends
   */
  postStatusToFriends: {
    methodKind: "unary";
    input: typeof CPlayer_PostStatusToFriends_RequestSchema;
    output: typeof CPlayer_PostStatusToFriends_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetPostedStatus
   */
  getPostedStatus: {
    methodKind: "unary";
    input: typeof CPlayer_GetPostedStatus_RequestSchema;
    output: typeof CPlayer_GetPostedStatus_ResponseSchema;
  },
  /**
   * @generated from rpc Player.DeletePostedStatus
   */
  deletePostedStatus: {
    methodKind: "unary";
    input: typeof CPlayer_DeletePostedStatus_RequestSchema;
    output: typeof CPlayer_DeletePostedStatus_ResponseSchema;
  },
  /**
   * @generated from rpc Player.ClientGetLastPlayedTimes
   */
  clientGetLastPlayedTimes: {
    methodKind: "unary";
    input: typeof CPlayer_GetLastPlayedTimes_RequestSchema;
    output: typeof CPlayer_GetLastPlayedTimes_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetTimeSSAAccepted
   */
  getTimeSSAAccepted: {
    methodKind: "unary";
    input: typeof CPlayer_GetTimeSSAAccepted_RequestSchema;
    output: typeof CPlayer_GetTimeSSAAccepted_ResponseSchema;
  },
  /**
   * @generated from rpc Player.AcceptSSA
   */
  acceptSSA: {
    methodKind: "unary";
    input: typeof CPlayer_AcceptSSA_RequestSchema;
    output: typeof CPlayer_AcceptSSA_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetNicknameList
   */
  getNicknameList: {
    methodKind: "unary";
    input: typeof CPlayer_GetNicknameList_RequestSchema;
    output: typeof CPlayer_GetNicknameList_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetPerFriendPreferences
   */
  getPerFriendPreferences: {
    methodKind: "unary";
    input: typeof CPlayer_GetPerFriendPreferences_RequestSchema;
    output: typeof CPlayer_GetPerFriendPreferences_ResponseSchema;
  },
  /**
   * @generated from rpc Player.SetPerFriendPreferences
   */
  setPerFriendPreferences: {
    methodKind: "unary";
    input: typeof CPlayer_SetPerFriendPreferences_RequestSchema;
    output: typeof CPlayer_SetPerFriendPreferences_ResponseSchema;
  },
  /**
   * @generated from rpc Player.AddFriend
   */
  addFriend: {
    methodKind: "unary";
    input: typeof CPlayer_AddFriend_RequestSchema;
    output: typeof CPlayer_AddFriend_ResponseSchema;
  },
  /**
   * @generated from rpc Player.RemoveFriend
   */
  removeFriend: {
    methodKind: "unary";
    input: typeof CPlayer_RemoveFriend_RequestSchema;
    output: typeof CPlayer_RemoveFriend_ResponseSchema;
  },
  /**
   * @generated from rpc Player.IgnoreFriend
   */
  ignoreFriend: {
    methodKind: "unary";
    input: typeof CPlayer_IgnoreFriend_RequestSchema;
    output: typeof CPlayer_IgnoreFriend_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetCommunityPreferences
   */
  getCommunityPreferences: {
    methodKind: "unary";
    input: typeof CPlayer_GetCommunityPreferences_RequestSchema;
    output: typeof CPlayer_GetCommunityPreferences_ResponseSchema;
  },
  /**
   * @generated from rpc Player.SetCommunityPreferences
   */
  setCommunityPreferences: {
    methodKind: "unary";
    input: typeof CPlayer_SetCommunityPreferences_RequestSchema;
    output: typeof CPlayer_SetCommunityPreferences_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetTextFilterWords
   */
  getTextFilterWords: {
    methodKind: "unary";
    input: typeof CPlayer_GetTextFilterWords_RequestSchema;
    output: typeof CPlayer_GetTextFilterWords_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetNewSteamAnnouncementState
   */
  getNewSteamAnnouncementState: {
    methodKind: "unary";
    input: typeof CPlayer_GetNewSteamAnnouncementState_RequestSchema;
    output: typeof CPlayer_GetNewSteamAnnouncementState_ResponseSchema;
  },
  /**
   * @generated from rpc Player.UpdateSteamAnnouncementLastRead
   */
  updateSteamAnnouncementLastRead: {
    methodKind: "unary";
    input: typeof CPlayer_UpdateSteamAnnouncementLastRead_RequestSchema;
    output: typeof CPlayer_UpdateSteamAnnouncementLastRead_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetPrivacySettings
   */
  getPrivacySettings: {
    methodKind: "unary";
    input: typeof CPlayer_GetPrivacySettings_RequestSchema;
    output: typeof CPlayer_GetPrivacySettings_ResponseSchema;
  },
  /**
   * @generated from rpc Player.GetDurationControl
   */
  getDurationControl: {
    methodKind: "unary";
    input: typeof CPlayer_GetDurationControl_RequestSchema;
    output: typeof CPlayer_GetDurationControl_ResponseSchema;
  },
  /**
   * @generated from rpc Player.RecordDisconnectedPlaytime
   */
  recordDisconnectedPlaytime: {
    methodKind: "unary";
    input: typeof CPlayer_RecordDisconnectedPlaytime_RequestSchema;
    output: typeof CPlayer_RecordDisconnectedPlaytime_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_player_steamclient, 0);

/**
 * @generated from service PlayerClient
 */
export const PlayerClient: GenService<{
  /**
   * @generated from rpc PlayerClient.NotifyLastPlayedTimes
   */
  notifyLastPlayedTimes: {
    methodKind: "unary";
    input: typeof CPlayer_LastPlayedTimes_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc PlayerClient.NotifyFriendNicknameChanged
   */
  notifyFriendNicknameChanged: {
    methodKind: "unary";
    input: typeof CPlayer_FriendNicknameChanged_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc PlayerClient.NotifyFriendEquippedProfileItemsChanged
   */
  notifyFriendEquippedProfileItemsChanged: {
    methodKind: "unary";
    input: typeof CPlayer_FriendEquippedProfileItemsChanged_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc PlayerClient.NotifyNewSteamAnnouncementState
   */
  notifyNewSteamAnnouncementState: {
    methodKind: "unary";
    input: typeof CPlayer_NewSteamAnnouncementState_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc PlayerClient.NotifyCommunityPreferencesChanged
   */
  notifyCommunityPreferencesChanged: {
    methodKind: "unary";
    input: typeof CPlayer_CommunityPreferencesChanged_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc PlayerClient.NotifyTextFilterWordsChanged
   */
  notifyTextFilterWordsChanged: {
    methodKind: "unary";
    input: typeof CPlayer_TextFilterWordsChanged_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc PlayerClient.NotifyPerFriendPreferencesChanged
   */
  notifyPerFriendPreferencesChanged: {
    methodKind: "unary";
    input: typeof CPlayer_PerFriendPreferencesChanged_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc PlayerClient.NotifyPrivacyPrivacySettingsChanged
   */
  notifyPrivacyPrivacySettingsChanged: {
    methodKind: "unary";
    input: typeof CPlayer_PrivacySettingsChanged_NotificationSchema;
    output: typeof NoResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_player_steamclient, 1);

