// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file webuimessages_bluetooth.proto (syntax proto2)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { EBluetoothDeviceType } from "./enums_pb";
import { file_enums } from "./enums_pb";
import { file_steammessages_base } from "./steammessages_base_pb";
import type { WebUINoResponseSchema } from "./webuimessages_base_pb";
import { file_webuimessages_base } from "./webuimessages_base_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file webuimessages_bluetooth.proto.
 */
export const file_webuimessages_bluetooth: GenFile = /*@__PURE__*/
  fileDesc("Ch13ZWJ1aW1lc3NhZ2VzX2JsdWV0b290aC5wcm90byIkCiJDQmx1ZXRvb3RoTWFuYWdlcl9HZXRTdGF0ZV9SZXF1ZXN0Ii0KH0NNc2dCbHVldG9vdGhNYW5hZ2VyQWRhcHRlckluZm8SCgoCaWQYASABKA0iygEKHkNNc2dCbHVldG9vdGhNYW5hZ2VyRGV2aWNlSW5mbxIKCgJpZBgBIAEoDRIYChBzaG91bGRfaGlkZV9oaW50GAIgASgIEkMKBWV0eXBlGAMgASgOMhUuRUJsdWV0b290aERldmljZVR5cGU6HWtfQmx1ZXRvb3RoRGV2aWNlVHlwZV9JbnZhbGlkEhQKDGlzX2Nvbm5lY3RlZBgEIAEoCBIRCglpc19wYWlyZWQYBSABKAgSFAoMc3RyZW5ndGhfcmF3GAYgASgFItUBCiNDQmx1ZXRvb3RoTWFuYWdlcl9HZXRTdGF0ZV9SZXNwb25zZRIcChRpc19zZXJ2aWNlX2F2YWlsYWJsZRgBIAEoCBISCgppc19lbmFibGVkGAIgASgIEhYKDmlzX2Rpc2NvdmVyaW5nGAMgASgIEjIKCGFkYXB0ZXJzGAQgAygLMiAuQ01zZ0JsdWV0b290aE1hbmFnZXJBZGFwdGVySW5mbxIwCgdkZXZpY2VzGAUgAygLMh8uQ01zZ0JsdWV0b290aE1hbmFnZXJEZXZpY2VJbmZvIjkKK0NCbHVldG9vdGhNYW5hZ2VyX0dldEFkYXB0ZXJEZXRhaWxzX1JlcXVlc3QSCgoCaWQYASABKA0iegoiQ01zZ0JsdWV0b290aE1hbmFnZXJBZGFwdGVyRGV0YWlscxINCgJpZBgBIAEoDToBMBILCgNtYWMYAiABKAkSDAoEbmFtZRgDIAEoCRISCgppc19lbmFibGVkGAQgASgIEhYKDmlzX2Rpc2NvdmVyaW5nGAUgASgIImQKLENCbHVldG9vdGhNYW5hZ2VyX0dldEFkYXB0ZXJEZXRhaWxzX1Jlc3BvbnNlEjQKB2FkYXB0ZXIYASABKAsyIy5DTXNnQmx1ZXRvb3RoTWFuYWdlckFkYXB0ZXJEZXRhaWxzIjgKKkNCbHVldG9vdGhNYW5hZ2VyX0dldERldmljZURldGFpbHNfUmVxdWVzdBIKCgJpZBgBIAEoDSLoAgohQ01zZ0JsdWV0b290aE1hbmFnZXJEZXZpY2VEZXRhaWxzEg0KAmlkGAEgASgNOgEwEhUKCmFkYXB0ZXJfaWQYAiABKA06ATASQwoFZXR5cGUYAyABKA4yFS5FQmx1ZXRvb3RoRGV2aWNlVHlwZToda19CbHVldG9vdGhEZXZpY2VUeXBlX0ludmFsaWQSCwoDbWFjGAQgASgJEgwKBG5hbWUYBSABKAkSFAoMaXNfY29ubmVjdGVkGAYgASgIEhEKCWlzX3BhaXJlZBgHIAEoCBISCgppc19wYWlyaW5nGAggASgIEhQKDHdha2VfYWxsb3dlZBgJIAEoCBIeChZ3YWtlX2FsbG93ZWRfc3VwcG9ydGVkGAogASgIEhcKD2JhdHRlcnlfcGVyY2VudBgLIAEoBRIdChVvcGVyYXRpb25faW5fcHJvZ3Jlc3MYDCABKAgSEgoKaXNfdHJ1c3RlZBgNIAEoCCJhCitDQmx1ZXRvb3RoTWFuYWdlcl9HZXREZXZpY2VEZXRhaWxzX1Jlc3BvbnNlEjIKBmRldmljZRgBIAEoCzIiLkNNc2dCbHVldG9vdGhNYW5hZ2VyRGV2aWNlRGV0YWlscyItCitDQmx1ZXRvb3RoTWFuYWdlcl9TdGF0ZUNoYW5nZWRfTm90aWZpY2F0aW9uIjsKKENCbHVldG9vdGhNYW5hZ2VyX1NldERpc2NvdmVyaW5nX1JlcXVlc3QSDwoHZW5hYmxlZBgBIAEoCCIrCilDQmx1ZXRvb3RoTWFuYWdlcl9TZXREaXNjb3ZlcmluZ19SZXNwb25zZSIwCh5DQmx1ZXRvb3RoTWFuYWdlcl9QYWlyX1JlcXVlc3QSDgoGZGV2aWNlGAEgASgNIiEKH0NCbHVldG9vdGhNYW5hZ2VyX1BhaXJfUmVzcG9uc2UiNgokQ0JsdWV0b290aE1hbmFnZXJfQ2FuY2VsUGFpcl9SZXF1ZXN0Eg4KBmRldmljZRgBIAEoDSInCiVDQmx1ZXRvb3RoTWFuYWdlcl9DYW5jZWxQYWlyX1Jlc3BvbnNlIjIKIENCbHVldG9vdGhNYW5hZ2VyX0ZvcmdldF9SZXF1ZXN0Eg4KBmRldmljZRgBIAEoDSIjCiFDQmx1ZXRvb3RoTWFuYWdlcl9Gb3JnZXRfUmVzcG9uc2UiMwohQ0JsdWV0b290aE1hbmFnZXJfQ29ubmVjdF9SZXF1ZXN0Eg4KBmRldmljZRgBIAEoDSIkCiJDQmx1ZXRvb3RoTWFuYWdlcl9Db25uZWN0X1Jlc3BvbnNlIjYKJENCbHVldG9vdGhNYW5hZ2VyX0Rpc2Nvbm5lY3RfUmVxdWVzdBIOCgZkZXZpY2UYASABKA0iJwolQ0JsdWV0b290aE1hbmFnZXJfRGlzY29ubmVjdF9SZXNwb25zZSJLCihDQmx1ZXRvb3RoTWFuYWdlcl9TZXRXYWtlQWxsb3dlZF9SZXF1ZXN0Eg4KBmRldmljZRgBIAEoDRIPCgdhbGxvd2VkGAIgASgIIisKKUNCbHVldG9vdGhNYW5hZ2VyX1NldFdha2VBbGxvd2VkX1Jlc3BvbnNlIkcKJENCbHVldG9vdGhNYW5hZ2VyX1NldFRydXN0ZWRfUmVxdWVzdBIOCgZkZXZpY2UYASABKA0SDwoHdHJ1c3RlZBgCIAEoCCInCiVDQmx1ZXRvb3RoTWFuYWdlcl9TZXRUcnVzdGVkX1Jlc3BvbnNlMv8IChBCbHVldG9vdGhNYW5hZ2VyElUKCEdldFN0YXRlEiMuQ0JsdWV0b290aE1hbmFnZXJfR2V0U3RhdGVfUmVxdWVzdBokLkNCbHVldG9vdGhNYW5hZ2VyX0dldFN0YXRlX1Jlc3BvbnNlEnAKEUdldEFkYXB0ZXJEZXRhaWxzEiwuQ0JsdWV0b290aE1hbmFnZXJfR2V0QWRhcHRlckRldGFpbHNfUmVxdWVzdBotLkNCbHVldG9vdGhNYW5hZ2VyX0dldEFkYXB0ZXJEZXRhaWxzX1Jlc3BvbnNlEm0KEEdldERldmljZURldGFpbHMSKy5DQmx1ZXRvb3RoTWFuYWdlcl9HZXREZXZpY2VEZXRhaWxzX1JlcXVlc3QaLC5DQmx1ZXRvb3RoTWFuYWdlcl9HZXREZXZpY2VEZXRhaWxzX1Jlc3BvbnNlElQKEk5vdGlmeVN0YXRlQ2hhbmdlZBIsLkNCbHVldG9vdGhNYW5hZ2VyX1N0YXRlQ2hhbmdlZF9Ob3RpZmljYXRpb24aEC5XZWJVSU5vUmVzcG9uc2USZwoOU2V0RGlzY292ZXJpbmcSKS5DQmx1ZXRvb3RoTWFuYWdlcl9TZXREaXNjb3ZlcmluZ19SZXF1ZXN0GiouQ0JsdWV0b290aE1hbmFnZXJfU2V0RGlzY292ZXJpbmdfUmVzcG9uc2USSQoEUGFpchIfLkNCbHVldG9vdGhNYW5hZ2VyX1BhaXJfUmVxdWVzdBogLkNCbHVldG9vdGhNYW5hZ2VyX1BhaXJfUmVzcG9uc2USWwoKQ2FuY2VsUGFpchIlLkNCbHVldG9vdGhNYW5hZ2VyX0NhbmNlbFBhaXJfUmVxdWVzdBomLkNCbHVldG9vdGhNYW5hZ2VyX0NhbmNlbFBhaXJfUmVzcG9uc2USTwoGRm9yZ2V0EiEuQ0JsdWV0b290aE1hbmFnZXJfRm9yZ2V0X1JlcXVlc3QaIi5DQmx1ZXRvb3RoTWFuYWdlcl9Gb3JnZXRfUmVzcG9uc2USUgoHQ29ubmVjdBIiLkNCbHVldG9vdGhNYW5hZ2VyX0Nvbm5lY3RfUmVxdWVzdBojLkNCbHVldG9vdGhNYW5hZ2VyX0Nvbm5lY3RfUmVzcG9uc2USWwoKRGlzY29ubmVjdBIlLkNCbHVldG9vdGhNYW5hZ2VyX0Rpc2Nvbm5lY3RfUmVxdWVzdBomLkNCbHVldG9vdGhNYW5hZ2VyX0Rpc2Nvbm5lY3RfUmVzcG9uc2USZwoOU2V0V2FrZUFsbG93ZWQSKS5DQmx1ZXRvb3RoTWFuYWdlcl9TZXRXYWtlQWxsb3dlZF9SZXF1ZXN0GiouQ0JsdWV0b290aE1hbmFnZXJfU2V0V2FrZUFsbG93ZWRfUmVzcG9uc2USWwoKU2V0VHJ1c3RlZBIlLkNCbHVldG9vdGhNYW5hZ2VyX1NldFRydXN0ZWRfUmVxdWVzdBomLkNCbHVldG9vdGhNYW5hZ2VyX1NldFRydXN0ZWRfUmVzcG9uc2UaBICXIgFCBUgBgAEB", [file_enums, file_steammessages_base, file_webuimessages_base]);

/**
 * @generated from message CBluetoothManager_GetState_Request
 */
export type CBluetoothManager_GetState_Request = Message<"CBluetoothManager_GetState_Request"> & {
};

/**
 * Describes the message CBluetoothManager_GetState_Request.
 * Use `create(CBluetoothManager_GetState_RequestSchema)` to create a new message.
 */
export const CBluetoothManager_GetState_RequestSchema: GenMessage<CBluetoothManager_GetState_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 0);

/**
 * @generated from message CMsgBluetoothManagerAdapterInfo
 */
export type CMsgBluetoothManagerAdapterInfo = Message<"CMsgBluetoothManagerAdapterInfo"> & {
  /**
   * @generated from field: optional uint32 id = 1;
   */
  id: number;
};

/**
 * Describes the message CMsgBluetoothManagerAdapterInfo.
 * Use `create(CMsgBluetoothManagerAdapterInfoSchema)` to create a new message.
 */
export const CMsgBluetoothManagerAdapterInfoSchema: GenMessage<CMsgBluetoothManagerAdapterInfo> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 1);

/**
 * @generated from message CMsgBluetoothManagerDeviceInfo
 */
export type CMsgBluetoothManagerDeviceInfo = Message<"CMsgBluetoothManagerDeviceInfo"> & {
  /**
   * @generated from field: optional uint32 id = 1;
   */
  id: number;

  /**
   * @generated from field: optional bool should_hide_hint = 2;
   */
  shouldHideHint: boolean;

  /**
   * @generated from field: optional EBluetoothDeviceType etype = 3 [default = k_BluetoothDeviceType_Invalid];
   */
  etype: EBluetoothDeviceType;

  /**
   * @generated from field: optional bool is_connected = 4;
   */
  isConnected: boolean;

  /**
   * @generated from field: optional bool is_paired = 5;
   */
  isPaired: boolean;

  /**
   * @generated from field: optional int32 strength_raw = 6;
   */
  strengthRaw: number;
};

/**
 * Describes the message CMsgBluetoothManagerDeviceInfo.
 * Use `create(CMsgBluetoothManagerDeviceInfoSchema)` to create a new message.
 */
export const CMsgBluetoothManagerDeviceInfoSchema: GenMessage<CMsgBluetoothManagerDeviceInfo> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 2);

/**
 * @generated from message CBluetoothManager_GetState_Response
 */
export type CBluetoothManager_GetState_Response = Message<"CBluetoothManager_GetState_Response"> & {
  /**
   * @generated from field: optional bool is_service_available = 1;
   */
  isServiceAvailable: boolean;

  /**
   * @generated from field: optional bool is_enabled = 2;
   */
  isEnabled: boolean;

  /**
   * @generated from field: optional bool is_discovering = 3;
   */
  isDiscovering: boolean;

  /**
   * @generated from field: repeated CMsgBluetoothManagerAdapterInfo adapters = 4;
   */
  adapters: CMsgBluetoothManagerAdapterInfo[];

  /**
   * @generated from field: repeated CMsgBluetoothManagerDeviceInfo devices = 5;
   */
  devices: CMsgBluetoothManagerDeviceInfo[];
};

/**
 * Describes the message CBluetoothManager_GetState_Response.
 * Use `create(CBluetoothManager_GetState_ResponseSchema)` to create a new message.
 */
export const CBluetoothManager_GetState_ResponseSchema: GenMessage<CBluetoothManager_GetState_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 3);

/**
 * @generated from message CBluetoothManager_GetAdapterDetails_Request
 */
export type CBluetoothManager_GetAdapterDetails_Request = Message<"CBluetoothManager_GetAdapterDetails_Request"> & {
  /**
   * @generated from field: optional uint32 id = 1;
   */
  id: number;
};

/**
 * Describes the message CBluetoothManager_GetAdapterDetails_Request.
 * Use `create(CBluetoothManager_GetAdapterDetails_RequestSchema)` to create a new message.
 */
export const CBluetoothManager_GetAdapterDetails_RequestSchema: GenMessage<CBluetoothManager_GetAdapterDetails_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 4);

/**
 * @generated from message CMsgBluetoothManagerAdapterDetails
 */
export type CMsgBluetoothManagerAdapterDetails = Message<"CMsgBluetoothManagerAdapterDetails"> & {
  /**
   * @generated from field: optional uint32 id = 1 [default = 0];
   */
  id: number;

  /**
   * @generated from field: optional string mac = 2;
   */
  mac: string;

  /**
   * @generated from field: optional string name = 3;
   */
  name: string;

  /**
   * @generated from field: optional bool is_enabled = 4;
   */
  isEnabled: boolean;

  /**
   * @generated from field: optional bool is_discovering = 5;
   */
  isDiscovering: boolean;
};

/**
 * Describes the message CMsgBluetoothManagerAdapterDetails.
 * Use `create(CMsgBluetoothManagerAdapterDetailsSchema)` to create a new message.
 */
export const CMsgBluetoothManagerAdapterDetailsSchema: GenMessage<CMsgBluetoothManagerAdapterDetails> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 5);

/**
 * @generated from message CBluetoothManager_GetAdapterDetails_Response
 */
export type CBluetoothManager_GetAdapterDetails_Response = Message<"CBluetoothManager_GetAdapterDetails_Response"> & {
  /**
   * @generated from field: optional CMsgBluetoothManagerAdapterDetails adapter = 1;
   */
  adapter?: CMsgBluetoothManagerAdapterDetails;
};

/**
 * Describes the message CBluetoothManager_GetAdapterDetails_Response.
 * Use `create(CBluetoothManager_GetAdapterDetails_ResponseSchema)` to create a new message.
 */
export const CBluetoothManager_GetAdapterDetails_ResponseSchema: GenMessage<CBluetoothManager_GetAdapterDetails_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 6);

/**
 * @generated from message CBluetoothManager_GetDeviceDetails_Request
 */
export type CBluetoothManager_GetDeviceDetails_Request = Message<"CBluetoothManager_GetDeviceDetails_Request"> & {
  /**
   * @generated from field: optional uint32 id = 1;
   */
  id: number;
};

/**
 * Describes the message CBluetoothManager_GetDeviceDetails_Request.
 * Use `create(CBluetoothManager_GetDeviceDetails_RequestSchema)` to create a new message.
 */
export const CBluetoothManager_GetDeviceDetails_RequestSchema: GenMessage<CBluetoothManager_GetDeviceDetails_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 7);

/**
 * @generated from message CMsgBluetoothManagerDeviceDetails
 */
export type CMsgBluetoothManagerDeviceDetails = Message<"CMsgBluetoothManagerDeviceDetails"> & {
  /**
   * @generated from field: optional uint32 id = 1 [default = 0];
   */
  id: number;

  /**
   * @generated from field: optional uint32 adapter_id = 2 [default = 0];
   */
  adapterId: number;

  /**
   * @generated from field: optional EBluetoothDeviceType etype = 3 [default = k_BluetoothDeviceType_Invalid];
   */
  etype: EBluetoothDeviceType;

  /**
   * @generated from field: optional string mac = 4;
   */
  mac: string;

  /**
   * @generated from field: optional string name = 5;
   */
  name: string;

  /**
   * @generated from field: optional bool is_connected = 6;
   */
  isConnected: boolean;

  /**
   * @generated from field: optional bool is_paired = 7;
   */
  isPaired: boolean;

  /**
   * @generated from field: optional bool is_pairing = 8;
   */
  isPairing: boolean;

  /**
   * @generated from field: optional bool wake_allowed = 9;
   */
  wakeAllowed: boolean;

  /**
   * @generated from field: optional bool wake_allowed_supported = 10;
   */
  wakeAllowedSupported: boolean;

  /**
   * @generated from field: optional int32 battery_percent = 11;
   */
  batteryPercent: number;

  /**
   * @generated from field: optional bool operation_in_progress = 12;
   */
  operationInProgress: boolean;

  /**
   * @generated from field: optional bool is_trusted = 13;
   */
  isTrusted: boolean;
};

/**
 * Describes the message CMsgBluetoothManagerDeviceDetails.
 * Use `create(CMsgBluetoothManagerDeviceDetailsSchema)` to create a new message.
 */
export const CMsgBluetoothManagerDeviceDetailsSchema: GenMessage<CMsgBluetoothManagerDeviceDetails> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 8);

/**
 * @generated from message CBluetoothManager_GetDeviceDetails_Response
 */
export type CBluetoothManager_GetDeviceDetails_Response = Message<"CBluetoothManager_GetDeviceDetails_Response"> & {
  /**
   * @generated from field: optional CMsgBluetoothManagerDeviceDetails device = 1;
   */
  device?: CMsgBluetoothManagerDeviceDetails;
};

/**
 * Describes the message CBluetoothManager_GetDeviceDetails_Response.
 * Use `create(CBluetoothManager_GetDeviceDetails_ResponseSchema)` to create a new message.
 */
export const CBluetoothManager_GetDeviceDetails_ResponseSchema: GenMessage<CBluetoothManager_GetDeviceDetails_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 9);

/**
 * @generated from message CBluetoothManager_StateChanged_Notification
 */
export type CBluetoothManager_StateChanged_Notification = Message<"CBluetoothManager_StateChanged_Notification"> & {
};

/**
 * Describes the message CBluetoothManager_StateChanged_Notification.
 * Use `create(CBluetoothManager_StateChanged_NotificationSchema)` to create a new message.
 */
export const CBluetoothManager_StateChanged_NotificationSchema: GenMessage<CBluetoothManager_StateChanged_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 10);

/**
 * @generated from message CBluetoothManager_SetDiscovering_Request
 */
export type CBluetoothManager_SetDiscovering_Request = Message<"CBluetoothManager_SetDiscovering_Request"> & {
  /**
   * @generated from field: optional bool enabled = 1;
   */
  enabled: boolean;
};

/**
 * Describes the message CBluetoothManager_SetDiscovering_Request.
 * Use `create(CBluetoothManager_SetDiscovering_RequestSchema)` to create a new message.
 */
export const CBluetoothManager_SetDiscovering_RequestSchema: GenMessage<CBluetoothManager_SetDiscovering_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 11);

/**
 * @generated from message CBluetoothManager_SetDiscovering_Response
 */
export type CBluetoothManager_SetDiscovering_Response = Message<"CBluetoothManager_SetDiscovering_Response"> & {
};

/**
 * Describes the message CBluetoothManager_SetDiscovering_Response.
 * Use `create(CBluetoothManager_SetDiscovering_ResponseSchema)` to create a new message.
 */
export const CBluetoothManager_SetDiscovering_ResponseSchema: GenMessage<CBluetoothManager_SetDiscovering_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 12);

/**
 * @generated from message CBluetoothManager_Pair_Request
 */
export type CBluetoothManager_Pair_Request = Message<"CBluetoothManager_Pair_Request"> & {
  /**
   * @generated from field: optional uint32 device = 1;
   */
  device: number;
};

/**
 * Describes the message CBluetoothManager_Pair_Request.
 * Use `create(CBluetoothManager_Pair_RequestSchema)` to create a new message.
 */
export const CBluetoothManager_Pair_RequestSchema: GenMessage<CBluetoothManager_Pair_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 13);

/**
 * @generated from message CBluetoothManager_Pair_Response
 */
export type CBluetoothManager_Pair_Response = Message<"CBluetoothManager_Pair_Response"> & {
};

/**
 * Describes the message CBluetoothManager_Pair_Response.
 * Use `create(CBluetoothManager_Pair_ResponseSchema)` to create a new message.
 */
export const CBluetoothManager_Pair_ResponseSchema: GenMessage<CBluetoothManager_Pair_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 14);

/**
 * @generated from message CBluetoothManager_CancelPair_Request
 */
export type CBluetoothManager_CancelPair_Request = Message<"CBluetoothManager_CancelPair_Request"> & {
  /**
   * @generated from field: optional uint32 device = 1;
   */
  device: number;
};

/**
 * Describes the message CBluetoothManager_CancelPair_Request.
 * Use `create(CBluetoothManager_CancelPair_RequestSchema)` to create a new message.
 */
export const CBluetoothManager_CancelPair_RequestSchema: GenMessage<CBluetoothManager_CancelPair_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 15);

/**
 * @generated from message CBluetoothManager_CancelPair_Response
 */
export type CBluetoothManager_CancelPair_Response = Message<"CBluetoothManager_CancelPair_Response"> & {
};

/**
 * Describes the message CBluetoothManager_CancelPair_Response.
 * Use `create(CBluetoothManager_CancelPair_ResponseSchema)` to create a new message.
 */
export const CBluetoothManager_CancelPair_ResponseSchema: GenMessage<CBluetoothManager_CancelPair_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 16);

/**
 * @generated from message CBluetoothManager_Forget_Request
 */
export type CBluetoothManager_Forget_Request = Message<"CBluetoothManager_Forget_Request"> & {
  /**
   * @generated from field: optional uint32 device = 1;
   */
  device: number;
};

/**
 * Describes the message CBluetoothManager_Forget_Request.
 * Use `create(CBluetoothManager_Forget_RequestSchema)` to create a new message.
 */
export const CBluetoothManager_Forget_RequestSchema: GenMessage<CBluetoothManager_Forget_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 17);

/**
 * @generated from message CBluetoothManager_Forget_Response
 */
export type CBluetoothManager_Forget_Response = Message<"CBluetoothManager_Forget_Response"> & {
};

/**
 * Describes the message CBluetoothManager_Forget_Response.
 * Use `create(CBluetoothManager_Forget_ResponseSchema)` to create a new message.
 */
export const CBluetoothManager_Forget_ResponseSchema: GenMessage<CBluetoothManager_Forget_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 18);

/**
 * @generated from message CBluetoothManager_Connect_Request
 */
export type CBluetoothManager_Connect_Request = Message<"CBluetoothManager_Connect_Request"> & {
  /**
   * @generated from field: optional uint32 device = 1;
   */
  device: number;
};

/**
 * Describes the message CBluetoothManager_Connect_Request.
 * Use `create(CBluetoothManager_Connect_RequestSchema)` to create a new message.
 */
export const CBluetoothManager_Connect_RequestSchema: GenMessage<CBluetoothManager_Connect_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 19);

/**
 * @generated from message CBluetoothManager_Connect_Response
 */
export type CBluetoothManager_Connect_Response = Message<"CBluetoothManager_Connect_Response"> & {
};

/**
 * Describes the message CBluetoothManager_Connect_Response.
 * Use `create(CBluetoothManager_Connect_ResponseSchema)` to create a new message.
 */
export const CBluetoothManager_Connect_ResponseSchema: GenMessage<CBluetoothManager_Connect_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 20);

/**
 * @generated from message CBluetoothManager_Disconnect_Request
 */
export type CBluetoothManager_Disconnect_Request = Message<"CBluetoothManager_Disconnect_Request"> & {
  /**
   * @generated from field: optional uint32 device = 1;
   */
  device: number;
};

/**
 * Describes the message CBluetoothManager_Disconnect_Request.
 * Use `create(CBluetoothManager_Disconnect_RequestSchema)` to create a new message.
 */
export const CBluetoothManager_Disconnect_RequestSchema: GenMessage<CBluetoothManager_Disconnect_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 21);

/**
 * @generated from message CBluetoothManager_Disconnect_Response
 */
export type CBluetoothManager_Disconnect_Response = Message<"CBluetoothManager_Disconnect_Response"> & {
};

/**
 * Describes the message CBluetoothManager_Disconnect_Response.
 * Use `create(CBluetoothManager_Disconnect_ResponseSchema)` to create a new message.
 */
export const CBluetoothManager_Disconnect_ResponseSchema: GenMessage<CBluetoothManager_Disconnect_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 22);

/**
 * @generated from message CBluetoothManager_SetWakeAllowed_Request
 */
export type CBluetoothManager_SetWakeAllowed_Request = Message<"CBluetoothManager_SetWakeAllowed_Request"> & {
  /**
   * @generated from field: optional uint32 device = 1;
   */
  device: number;

  /**
   * @generated from field: optional bool allowed = 2;
   */
  allowed: boolean;
};

/**
 * Describes the message CBluetoothManager_SetWakeAllowed_Request.
 * Use `create(CBluetoothManager_SetWakeAllowed_RequestSchema)` to create a new message.
 */
export const CBluetoothManager_SetWakeAllowed_RequestSchema: GenMessage<CBluetoothManager_SetWakeAllowed_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 23);

/**
 * @generated from message CBluetoothManager_SetWakeAllowed_Response
 */
export type CBluetoothManager_SetWakeAllowed_Response = Message<"CBluetoothManager_SetWakeAllowed_Response"> & {
};

/**
 * Describes the message CBluetoothManager_SetWakeAllowed_Response.
 * Use `create(CBluetoothManager_SetWakeAllowed_ResponseSchema)` to create a new message.
 */
export const CBluetoothManager_SetWakeAllowed_ResponseSchema: GenMessage<CBluetoothManager_SetWakeAllowed_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 24);

/**
 * @generated from message CBluetoothManager_SetTrusted_Request
 */
export type CBluetoothManager_SetTrusted_Request = Message<"CBluetoothManager_SetTrusted_Request"> & {
  /**
   * @generated from field: optional uint32 device = 1;
   */
  device: number;

  /**
   * @generated from field: optional bool trusted = 2;
   */
  trusted: boolean;
};

/**
 * Describes the message CBluetoothManager_SetTrusted_Request.
 * Use `create(CBluetoothManager_SetTrusted_RequestSchema)` to create a new message.
 */
export const CBluetoothManager_SetTrusted_RequestSchema: GenMessage<CBluetoothManager_SetTrusted_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 25);

/**
 * @generated from message CBluetoothManager_SetTrusted_Response
 */
export type CBluetoothManager_SetTrusted_Response = Message<"CBluetoothManager_SetTrusted_Response"> & {
};

/**
 * Describes the message CBluetoothManager_SetTrusted_Response.
 * Use `create(CBluetoothManager_SetTrusted_ResponseSchema)` to create a new message.
 */
export const CBluetoothManager_SetTrusted_ResponseSchema: GenMessage<CBluetoothManager_SetTrusted_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_bluetooth, 26);

/**
 * @generated from service BluetoothManager
 */
export const BluetoothManager: GenService<{
  /**
   * @generated from rpc BluetoothManager.GetState
   */
  getState: {
    methodKind: "unary";
    input: typeof CBluetoothManager_GetState_RequestSchema;
    output: typeof CBluetoothManager_GetState_ResponseSchema;
  },
  /**
   * @generated from rpc BluetoothManager.GetAdapterDetails
   */
  getAdapterDetails: {
    methodKind: "unary";
    input: typeof CBluetoothManager_GetAdapterDetails_RequestSchema;
    output: typeof CBluetoothManager_GetAdapterDetails_ResponseSchema;
  },
  /**
   * @generated from rpc BluetoothManager.GetDeviceDetails
   */
  getDeviceDetails: {
    methodKind: "unary";
    input: typeof CBluetoothManager_GetDeviceDetails_RequestSchema;
    output: typeof CBluetoothManager_GetDeviceDetails_ResponseSchema;
  },
  /**
   * @generated from rpc BluetoothManager.NotifyStateChanged
   */
  notifyStateChanged: {
    methodKind: "unary";
    input: typeof CBluetoothManager_StateChanged_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc BluetoothManager.SetDiscovering
   */
  setDiscovering: {
    methodKind: "unary";
    input: typeof CBluetoothManager_SetDiscovering_RequestSchema;
    output: typeof CBluetoothManager_SetDiscovering_ResponseSchema;
  },
  /**
   * @generated from rpc BluetoothManager.Pair
   */
  pair: {
    methodKind: "unary";
    input: typeof CBluetoothManager_Pair_RequestSchema;
    output: typeof CBluetoothManager_Pair_ResponseSchema;
  },
  /**
   * @generated from rpc BluetoothManager.CancelPair
   */
  cancelPair: {
    methodKind: "unary";
    input: typeof CBluetoothManager_CancelPair_RequestSchema;
    output: typeof CBluetoothManager_CancelPair_ResponseSchema;
  },
  /**
   * @generated from rpc BluetoothManager.Forget
   */
  forget: {
    methodKind: "unary";
    input: typeof CBluetoothManager_Forget_RequestSchema;
    output: typeof CBluetoothManager_Forget_ResponseSchema;
  },
  /**
   * @generated from rpc BluetoothManager.Connect
   */
  connect: {
    methodKind: "unary";
    input: typeof CBluetoothManager_Connect_RequestSchema;
    output: typeof CBluetoothManager_Connect_ResponseSchema;
  },
  /**
   * @generated from rpc BluetoothManager.Disconnect
   */
  disconnect: {
    methodKind: "unary";
    input: typeof CBluetoothManager_Disconnect_RequestSchema;
    output: typeof CBluetoothManager_Disconnect_ResponseSchema;
  },
  /**
   * @generated from rpc BluetoothManager.SetWakeAllowed
   */
  setWakeAllowed: {
    methodKind: "unary";
    input: typeof CBluetoothManager_SetWakeAllowed_RequestSchema;
    output: typeof CBluetoothManager_SetWakeAllowed_ResponseSchema;
  },
  /**
   * @generated from rpc BluetoothManager.SetTrusted
   */
  setTrusted: {
    methodKind: "unary";
    input: typeof CBluetoothManager_SetTrusted_RequestSchema;
    output: typeof CBluetoothManager_SetTrusted_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_webuimessages_bluetooth, 0);

