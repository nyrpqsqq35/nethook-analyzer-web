// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file webuimessages_steaminput.proto (syntax proto2)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_steammessages_base } from "./steammessages_base_pb";
import type { WebUINoResponseSchema } from "./webuimessages_base_pb";
import { file_webuimessages_base } from "./webuimessages_base_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file webuimessages_steaminput.proto.
 */
export const file_webuimessages_steaminput: GenFile = /*@__PURE__*/
  fileDesc("Ch53ZWJ1aW1lc3NhZ2VzX3N0ZWFtaW5wdXQucHJvdG8ihQcKPENTdGVhbUlucHV0U2VydmljZV9Db250cm9sbGVyQnV0dG9uU3RhdGVDaGFuZ2VkX05vdGlmaWNhdGlvbhIYChBjb250cm9sbGVyX2luZGV4GAEgASgNEg8KB2RwYWRfdXAYAiABKAgSEQoJZHBhZF9kb3duGAMgASgIEhEKCWRwYWRfbGVmdBgEIAEoCBISCgpkcGFkX3JpZ2h0GAUgASgIEhQKDGJ1dHRvbl9zb3V0aBgGIAEoCBITCgtidXR0b25fZWFzdBgHIAEoCBITCgtidXR0b25fd2VzdBgIIAEoCBIUCgxidXR0b25fbm9ydGgYCSABKAgSGAoQYnV0dG9uX2JhY2tfdmlldxgKIAEoCBIcChRidXR0b25fc3RhcnRfb3B0aW9ucxgLIAEoCBIUCgxidXR0b25fc3RlYW0YDCABKAgSGwoTYnV0dG9uX3F1aWNrX2FjY2VzcxgNIAEoCBIbChNidXR0b25fbXV0ZV9jYXB0dXJlGA4gASgIEhgKEGxlZnRfc3RpY2tfY2xpY2sYDyABKAgSGAoQbGVmdF9zdGlja190b3VjaBgQIAEoCBIaChJsZWZ0X3N0aWNrX2RlZmxlY3QYESABKAgSGQoRcmlnaHRfc3RpY2tfY2xpY2sYEiABKAgSGQoRcmlnaHRfc3RpY2tfdG91Y2gYEyABKAgSGwoTcmlnaHRfc3RpY2tfZGVmbGVjdBgUIAEoCBIdChVjZW50ZXJfdHJhY2twYWRfdG91Y2gYFSABKAgSHQoVY2VudGVyX3RyYWNrcGFkX2NsaWNrGBYgASgIEhsKE2xlZnRfdHJhY2twYWRfdG91Y2gYFyABKAgSGwoTbGVmdF90cmFja3BhZF9jbGljaxgYIAEoCBIcChRyaWdodF90cmFja3BhZF90b3VjaBgZIAEoCBIcChRyaWdodF90cmFja3BhZF9jbGljaxgaIAEoCBITCgtsZWZ0X2J1bXBlchgbIAEoCBIUCgxsZWZ0X3RyaWdnZXIYHCABKAgSCgoCbDQYHSABKAgSCgoCbDUYHiABKAgSEAoIbGVmdF9hdXgYHyABKAgSFAoMcmlnaHRfYnVtcGVyGCAgASgIEhUKDXJpZ2h0X3RyaWdnZXIYISABKAgSCgoCcjQYIiABKAgSCgoCcjUYIyABKAgSEQoJcmlnaHRfYXV4GCQgASgIIikKEUNvbnRyb2xsZXJWZWN0b3IyEgkKAXgYASABKAISCQoBeRgCIAEoAiI0ChFDb250cm9sbGVyVmVjdG9yMxIJCgF4GAEgASgCEgkKAXkYAiABKAISCQoBehgDIAEoAiJCChRDb250cm9sbGVyUXVhdGVybmlvbhIJCgF3GAEgASgCEgkKAXgYAiABKAISCQoBeRgDIAEoAhIJCgF6GAQgASgCIkUKGUNvbnRyb2xsZXJHeXJvRXVsZXJBbmdsZXMSDQoFcGl0Y2gYASABKAISCwoDeWF3GAIgASgCEgwKBHJvbGwYAyABKAIingMKOUNTdGVhbUlucHV0U2VydmljZV9Db250cm9sbGVyQXhlc1N0YXRlQ2hhbmdlX05vdGlmaWNhdGlvbhIYChBjb250cm9sbGVyX2luZGV4GAEgASgNEikKDWpveXN0aWNrX2xlZnQYAiABKAsyEi5Db250cm9sbGVyVmVjdG9yMhIqCg5qb3lzdGlja19yaWdodBgDIAEoCzISLkNvbnRyb2xsZXJWZWN0b3IyEikKDXRyYWNrcGFkX2xlZnQYBCABKAsyEi5Db250cm9sbGVyVmVjdG9yMhIqCg50cmFja3BhZF9yaWdodBgFIAEoCzISLkNvbnRyb2xsZXJWZWN0b3IyEisKD3RyYWNrcGFkX2NlbnRlchgGIAEoCzISLkNvbnRyb2xsZXJWZWN0b3IyEh4KFnRyYWNrcGFkX3ByZXNzdXJlX2xlZnQYByABKAISHwoXdHJhY2twYWRfcHJlc3N1cmVfcmlnaHQYCCABKAISFAoMdHJpZ2dlcl9sZWZ0GAkgASgCEhUKDXRyaWdnZXJfcmlnaHQYCiABKAIijwIKNUNTdGVhbUlucHV0U2VydmljZV9HeXJvUXVhdGVybmlvbkNoYW5nZWRfTm90aWZpY2F0aW9uEhgKEGNvbnRyb2xsZXJfaW5kZXgYASABKA0SEQoJaW11X2luZGV4GAIgASgNEjIKE2d5cm9fcmF3X3F1YXRlcm5pb24YAyABKAsyFS5Db250cm9sbGVyUXVhdGVybmlvbhI3ChhneXJvX2ZpbHRlcmVkX3F1YXRlcm5pb24YBCABKAsyFS5Db250cm9sbGVyUXVhdGVybmlvbhIdChVpbXVfc2Vuc29yX2RlbHRhX3RpbWUYBSABKA0SHQoVZXN0aW1hdGVkX3BhY2tldF9yYXRlGAYgASgNIswBCjBDU3RlYW1JbnB1dFNlcnZpY2VfR3lyb1NwZWVkQ2hhbmdlZF9Ob3RpZmljYXRpb24SGAoQY29udHJvbGxlcl9pbmRleBgBIAEoDRIRCglpbXVfaW5kZXgYAiABKA0SMgoOZ3lyb19yYXdfc3BlZWQYAyABKAsyGi5Db250cm9sbGVyR3lyb0V1bGVyQW5nbGVzEjcKE2d5cm9fZmlsdGVyZWRfc3BlZWQYBCABKAsyGi5Db250cm9sbGVyR3lyb0V1bGVyQW5nbGVzIsQBCjhDU3RlYW1JbnB1dFNlcnZpY2VfR3lyb0FjY2VsZXJvbWV0ZXJDaGFuZ2VkX05vdGlmaWNhdGlvbhIYChBjb250cm9sbGVyX2luZGV4GAEgASgNEhEKCWltdV9pbmRleBgCIAEoDRIrCg9hY2NlbGVyb210ZXJfMWcYBCABKAsyEi5Db250cm9sbGVyVmVjdG9yMxIuChJ0cnVzdGVkX2dyYXZpdHlfMWcYBSABKAsyEi5Db250cm9sbGVyVmVjdG9yMyKWAgovQ1N0ZWFtSW5wdXRTZXJ2aWNlX0d5cm9DYWxpYnJhdGlvbl9Ob3RpZmljYXRpb24SGAoQY29udHJvbGxlcl9pbmRleBgBIAEoDRIRCglpbXVfaW5kZXgYAiABKA0SGgoSYWNjZWxlcm9tdGVyX25vaXNlGAMgASgCEhcKD2d5cm9zY29wZV9ub2lzZRgEIAEoAhIcChRjYWxpYnJhdGlvbl9wcm9ncmVzcxgFIAEoAhIZChFjYWxpYnJhdGlvbl9zdGF0ZRgGIAEoDRIhChlneXJvc2NvcGVfbm9pc2VfdG9sZXJhbmNlGAcgASgCEiUKHWFjY2VsZXJvbWV0ZXJfbm9pc2VfdG9sZXJhbmNlGAggASgCIl0KLkNTdGVhbUlucHV0U2VydmljZV9Db250cm9sbGVyU3RhdGVGbG93X1JlcXVlc3QSGAoQY29udHJvbGxlcl9pbmRleBgBIAEoDRIRCglmbG93X21vZGUYAiABKA0iMQovQ1N0ZWFtSW5wdXRTZXJ2aWNlX0NvbnRyb2xsZXJTdGF0ZUZsb3dfUmVzcG9uc2UiXAoyQ1N0ZWFtSW5wdXRTZXJ2aWNlX0d5cm9Tb2Z0d2FyZUNhbGlicmF0aW9uX1JlcXVlc3QSGAoQY29udHJvbGxlcl9pbmRleBgBIAEoDRIMCgRzaWRlGAIgASgFIjUKM0NTdGVhbUlucHV0U2VydmljZV9HeXJvU29mdHdhcmVDYWxpYnJhdGlvbl9SZXNwb25zZSJoChRDQ29udHJvbGxlck9yaWdpbktleRIXCg9jb250cm9sbGVyX3R5cGUYASABKAUSGAoQY29udHJvbGxlcl9zdHlsZRgCIAEoBRIOCgZzb3VyY2UYAyABKAUSDQoFaW5wdXQYBCABKAUiXgoeQ0NvbnRyb2xsZXJBY2Nlc3NpYmlsaXR5U3RyaW5nEiIKA2tleRgBIAEoCzIVLkNDb250cm9sbGVyT3JpZ2luS2V5EhgKEGxvY2FsaXplZF9zdHJpbmcYAiABKAkiOwo5Q1N0ZWFtSW5wdXRTZXJ2aWNlX0NvbnRyb2xsZXJBY2Nlc3NpYmlsaXR5U3RyaW5nc19SZXF1ZXN0Im4KOkNTdGVhbUlucHV0U2VydmljZV9Db250cm9sbGVyQWNjZXNzaWJpbGl0eVN0cmluZ3NfUmVzcG9uc2USMAoHc3RyaW5ncxgBIAMoCzIfLkNDb250cm9sbGVyQWNjZXNzaWJpbGl0eVN0cmluZzLRCgoRU3RlYW1JbnB1dE1hbmFnZXISawoYTm90aWZ5QnV0dG9uU3RhdGVDaGFuZ2VkEj0uQ1N0ZWFtSW5wdXRTZXJ2aWNlX0NvbnRyb2xsZXJCdXR0b25TdGF0ZUNoYW5nZWRfTm90aWZpY2F0aW9uGhAuV2ViVUlOb1Jlc3BvbnNlEmYKFk5vdGlmeUF4ZXNTdGF0ZUNoYW5nZWQSOi5DU3RlYW1JbnB1dFNlcnZpY2VfQ29udHJvbGxlckF4ZXNTdGF0ZUNoYW5nZV9Ob3RpZmljYXRpb24aEC5XZWJVSU5vUmVzcG9uc2USbAogTm90aWZ5R3lyb1F1YXRlcm5pb25TdGF0ZUNoYW5nZWQSNi5DU3RlYW1JbnB1dFNlcnZpY2VfR3lyb1F1YXRlcm5pb25DaGFuZ2VkX05vdGlmaWNhdGlvbhoQLldlYlVJTm9SZXNwb25zZRJiChtOb3RpZnlHeXJvU3BlZWRTdGF0ZUNoYW5nZWQSMS5DU3RlYW1JbnB1dFNlcnZpY2VfR3lyb1NwZWVkQ2hhbmdlZF9Ob3RpZmljYXRpb24aEC5XZWJVSU5vUmVzcG9uc2UScgojTm90aWZ5R3lyb0FjY2VsZXJvbWV0ZXJTdGF0ZUNoYW5nZWQSOS5DU3RlYW1JbnB1dFNlcnZpY2VfR3lyb0FjY2VsZXJvbWV0ZXJDaGFuZ2VkX05vdGlmaWNhdGlvbhoQLldlYlVJTm9SZXNwb25zZRJnCiFOb3RpZnlHeXJvQ2FsaWJyYXRpb25TdGF0ZUNoYW5nZWQSMC5DU3RlYW1JbnB1dFNlcnZpY2VfR3lyb0NhbGlicmF0aW9uX05vdGlmaWNhdGlvbhoQLldlYlVJTm9SZXNwb25zZRJ9ChhTdGFydENvbnRyb2xsZXJTdGF0ZUZsb3cSLy5DU3RlYW1JbnB1dFNlcnZpY2VfQ29udHJvbGxlclN0YXRlRmxvd19SZXF1ZXN0GjAuQ1N0ZWFtSW5wdXRTZXJ2aWNlX0NvbnRyb2xsZXJTdGF0ZUZsb3dfUmVzcG9uc2USewoWRW5kQ29udHJvbGxlclN0YXRlRmxvdxIvLkNTdGVhbUlucHV0U2VydmljZV9Db250cm9sbGVyU3RhdGVGbG93X1JlcXVlc3QaMC5DU3RlYW1JbnB1dFNlcnZpY2VfQ29udHJvbGxlclN0YXRlRmxvd19SZXNwb25zZRKcAQohR2V0Q29udHJvbGxlckFjY2Vzc2liaWxpdHlTdHJpbmdzEjouQ1N0ZWFtSW5wdXRTZXJ2aWNlX0NvbnRyb2xsZXJBY2Nlc3NpYmlsaXR5U3RyaW5nc19SZXF1ZXN0GjsuQ1N0ZWFtSW5wdXRTZXJ2aWNlX0NvbnRyb2xsZXJBY2Nlc3NpYmlsaXR5U3RyaW5nc19SZXNwb25zZRKJAQocU3RhcnRHeXJvU29mdHdhcmVDYWxpYnJhdGlvbhIzLkNTdGVhbUlucHV0U2VydmljZV9HeXJvU29mdHdhcmVDYWxpYnJhdGlvbl9SZXF1ZXN0GjQuQ1N0ZWFtSW5wdXRTZXJ2aWNlX0d5cm9Tb2Z0d2FyZUNhbGlicmF0aW9uX1Jlc3BvbnNlEooBCh1DYW5jZWxHeXJvU29mdHdhcmVDYWxpYnJhdGlvbhIzLkNTdGVhbUlucHV0U2VydmljZV9HeXJvU29mdHdhcmVDYWxpYnJhdGlvbl9SZXF1ZXN0GjQuQ1N0ZWFtSW5wdXRTZXJ2aWNlX0d5cm9Tb2Z0d2FyZUNhbGlicmF0aW9uX1Jlc3BvbnNlGgSAlyICQgVIAYABAQ", [file_steammessages_base, file_webuimessages_base]);

/**
 * @generated from message CSteamInputService_ControllerButtonStateChanged_Notification
 */
export type CSteamInputService_ControllerButtonStateChanged_Notification = Message<"CSteamInputService_ControllerButtonStateChanged_Notification"> & {
  /**
   * @generated from field: optional uint32 controller_index = 1;
   */
  controllerIndex: number;

  /**
   * @generated from field: optional bool dpad_up = 2;
   */
  dpadUp: boolean;

  /**
   * @generated from field: optional bool dpad_down = 3;
   */
  dpadDown: boolean;

  /**
   * @generated from field: optional bool dpad_left = 4;
   */
  dpadLeft: boolean;

  /**
   * @generated from field: optional bool dpad_right = 5;
   */
  dpadRight: boolean;

  /**
   * @generated from field: optional bool button_south = 6;
   */
  buttonSouth: boolean;

  /**
   * @generated from field: optional bool button_east = 7;
   */
  buttonEast: boolean;

  /**
   * @generated from field: optional bool button_west = 8;
   */
  buttonWest: boolean;

  /**
   * @generated from field: optional bool button_north = 9;
   */
  buttonNorth: boolean;

  /**
   * @generated from field: optional bool button_back_view = 10;
   */
  buttonBackView: boolean;

  /**
   * @generated from field: optional bool button_start_options = 11;
   */
  buttonStartOptions: boolean;

  /**
   * @generated from field: optional bool button_steam = 12;
   */
  buttonSteam: boolean;

  /**
   * @generated from field: optional bool button_quick_access = 13;
   */
  buttonQuickAccess: boolean;

  /**
   * @generated from field: optional bool button_mute_capture = 14;
   */
  buttonMuteCapture: boolean;

  /**
   * @generated from field: optional bool left_stick_click = 15;
   */
  leftStickClick: boolean;

  /**
   * @generated from field: optional bool left_stick_touch = 16;
   */
  leftStickTouch: boolean;

  /**
   * @generated from field: optional bool left_stick_deflect = 17;
   */
  leftStickDeflect: boolean;

  /**
   * @generated from field: optional bool right_stick_click = 18;
   */
  rightStickClick: boolean;

  /**
   * @generated from field: optional bool right_stick_touch = 19;
   */
  rightStickTouch: boolean;

  /**
   * @generated from field: optional bool right_stick_deflect = 20;
   */
  rightStickDeflect: boolean;

  /**
   * @generated from field: optional bool center_trackpad_touch = 21;
   */
  centerTrackpadTouch: boolean;

  /**
   * @generated from field: optional bool center_trackpad_click = 22;
   */
  centerTrackpadClick: boolean;

  /**
   * @generated from field: optional bool left_trackpad_touch = 23;
   */
  leftTrackpadTouch: boolean;

  /**
   * @generated from field: optional bool left_trackpad_click = 24;
   */
  leftTrackpadClick: boolean;

  /**
   * @generated from field: optional bool right_trackpad_touch = 25;
   */
  rightTrackpadTouch: boolean;

  /**
   * @generated from field: optional bool right_trackpad_click = 26;
   */
  rightTrackpadClick: boolean;

  /**
   * @generated from field: optional bool left_bumper = 27;
   */
  leftBumper: boolean;

  /**
   * @generated from field: optional bool left_trigger = 28;
   */
  leftTrigger: boolean;

  /**
   * @generated from field: optional bool l4 = 29;
   */
  l4: boolean;

  /**
   * @generated from field: optional bool l5 = 30;
   */
  l5: boolean;

  /**
   * @generated from field: optional bool left_aux = 31;
   */
  leftAux: boolean;

  /**
   * @generated from field: optional bool right_bumper = 32;
   */
  rightBumper: boolean;

  /**
   * @generated from field: optional bool right_trigger = 33;
   */
  rightTrigger: boolean;

  /**
   * @generated from field: optional bool r4 = 34;
   */
  r4: boolean;

  /**
   * @generated from field: optional bool r5 = 35;
   */
  r5: boolean;

  /**
   * @generated from field: optional bool right_aux = 36;
   */
  rightAux: boolean;
};

/**
 * Describes the message CSteamInputService_ControllerButtonStateChanged_Notification.
 * Use `create(CSteamInputService_ControllerButtonStateChanged_NotificationSchema)` to create a new message.
 */
export const CSteamInputService_ControllerButtonStateChanged_NotificationSchema: GenMessage<CSteamInputService_ControllerButtonStateChanged_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_steaminput, 0);

/**
 * @generated from message ControllerVector2
 */
export type ControllerVector2 = Message<"ControllerVector2"> & {
  /**
   * @generated from field: optional float x = 1;
   */
  x: number;

  /**
   * @generated from field: optional float y = 2;
   */
  y: number;
};

/**
 * Describes the message ControllerVector2.
 * Use `create(ControllerVector2Schema)` to create a new message.
 */
export const ControllerVector2Schema: GenMessage<ControllerVector2> = /*@__PURE__*/
  messageDesc(file_webuimessages_steaminput, 1);

/**
 * @generated from message ControllerVector3
 */
export type ControllerVector3 = Message<"ControllerVector3"> & {
  /**
   * @generated from field: optional float x = 1;
   */
  x: number;

  /**
   * @generated from field: optional float y = 2;
   */
  y: number;

  /**
   * @generated from field: optional float z = 3;
   */
  z: number;
};

/**
 * Describes the message ControllerVector3.
 * Use `create(ControllerVector3Schema)` to create a new message.
 */
export const ControllerVector3Schema: GenMessage<ControllerVector3> = /*@__PURE__*/
  messageDesc(file_webuimessages_steaminput, 2);

/**
 * @generated from message ControllerQuaternion
 */
export type ControllerQuaternion = Message<"ControllerQuaternion"> & {
  /**
   * @generated from field: optional float w = 1;
   */
  w: number;

  /**
   * @generated from field: optional float x = 2;
   */
  x: number;

  /**
   * @generated from field: optional float y = 3;
   */
  y: number;

  /**
   * @generated from field: optional float z = 4;
   */
  z: number;
};

/**
 * Describes the message ControllerQuaternion.
 * Use `create(ControllerQuaternionSchema)` to create a new message.
 */
export const ControllerQuaternionSchema: GenMessage<ControllerQuaternion> = /*@__PURE__*/
  messageDesc(file_webuimessages_steaminput, 3);

/**
 * @generated from message ControllerGyroEulerAngles
 */
export type ControllerGyroEulerAngles = Message<"ControllerGyroEulerAngles"> & {
  /**
   * @generated from field: optional float pitch = 1;
   */
  pitch: number;

  /**
   * @generated from field: optional float yaw = 2;
   */
  yaw: number;

  /**
   * @generated from field: optional float roll = 3;
   */
  roll: number;
};

/**
 * Describes the message ControllerGyroEulerAngles.
 * Use `create(ControllerGyroEulerAnglesSchema)` to create a new message.
 */
export const ControllerGyroEulerAnglesSchema: GenMessage<ControllerGyroEulerAngles> = /*@__PURE__*/
  messageDesc(file_webuimessages_steaminput, 4);

/**
 * @generated from message CSteamInputService_ControllerAxesStateChange_Notification
 */
export type CSteamInputService_ControllerAxesStateChange_Notification = Message<"CSteamInputService_ControllerAxesStateChange_Notification"> & {
  /**
   * @generated from field: optional uint32 controller_index = 1;
   */
  controllerIndex: number;

  /**
   * @generated from field: optional ControllerVector2 joystick_left = 2;
   */
  joystickLeft?: ControllerVector2;

  /**
   * @generated from field: optional ControllerVector2 joystick_right = 3;
   */
  joystickRight?: ControllerVector2;

  /**
   * @generated from field: optional ControllerVector2 trackpad_left = 4;
   */
  trackpadLeft?: ControllerVector2;

  /**
   * @generated from field: optional ControllerVector2 trackpad_right = 5;
   */
  trackpadRight?: ControllerVector2;

  /**
   * @generated from field: optional ControllerVector2 trackpad_center = 6;
   */
  trackpadCenter?: ControllerVector2;

  /**
   * @generated from field: optional float trackpad_pressure_left = 7;
   */
  trackpadPressureLeft: number;

  /**
   * @generated from field: optional float trackpad_pressure_right = 8;
   */
  trackpadPressureRight: number;

  /**
   * @generated from field: optional float trigger_left = 9;
   */
  triggerLeft: number;

  /**
   * @generated from field: optional float trigger_right = 10;
   */
  triggerRight: number;
};

/**
 * Describes the message CSteamInputService_ControllerAxesStateChange_Notification.
 * Use `create(CSteamInputService_ControllerAxesStateChange_NotificationSchema)` to create a new message.
 */
export const CSteamInputService_ControllerAxesStateChange_NotificationSchema: GenMessage<CSteamInputService_ControllerAxesStateChange_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_steaminput, 5);

/**
 * @generated from message CSteamInputService_GyroQuaternionChanged_Notification
 */
export type CSteamInputService_GyroQuaternionChanged_Notification = Message<"CSteamInputService_GyroQuaternionChanged_Notification"> & {
  /**
   * @generated from field: optional uint32 controller_index = 1;
   */
  controllerIndex: number;

  /**
   * @generated from field: optional uint32 imu_index = 2;
   */
  imuIndex: number;

  /**
   * @generated from field: optional ControllerQuaternion gyro_raw_quaternion = 3;
   */
  gyroRawQuaternion?: ControllerQuaternion;

  /**
   * @generated from field: optional ControllerQuaternion gyro_filtered_quaternion = 4;
   */
  gyroFilteredQuaternion?: ControllerQuaternion;

  /**
   * @generated from field: optional uint32 imu_sensor_delta_time = 5;
   */
  imuSensorDeltaTime: number;

  /**
   * @generated from field: optional uint32 estimated_packet_rate = 6;
   */
  estimatedPacketRate: number;
};

/**
 * Describes the message CSteamInputService_GyroQuaternionChanged_Notification.
 * Use `create(CSteamInputService_GyroQuaternionChanged_NotificationSchema)` to create a new message.
 */
export const CSteamInputService_GyroQuaternionChanged_NotificationSchema: GenMessage<CSteamInputService_GyroQuaternionChanged_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_steaminput, 6);

/**
 * @generated from message CSteamInputService_GyroSpeedChanged_Notification
 */
export type CSteamInputService_GyroSpeedChanged_Notification = Message<"CSteamInputService_GyroSpeedChanged_Notification"> & {
  /**
   * @generated from field: optional uint32 controller_index = 1;
   */
  controllerIndex: number;

  /**
   * @generated from field: optional uint32 imu_index = 2;
   */
  imuIndex: number;

  /**
   * @generated from field: optional ControllerGyroEulerAngles gyro_raw_speed = 3;
   */
  gyroRawSpeed?: ControllerGyroEulerAngles;

  /**
   * @generated from field: optional ControllerGyroEulerAngles gyro_filtered_speed = 4;
   */
  gyroFilteredSpeed?: ControllerGyroEulerAngles;
};

/**
 * Describes the message CSteamInputService_GyroSpeedChanged_Notification.
 * Use `create(CSteamInputService_GyroSpeedChanged_NotificationSchema)` to create a new message.
 */
export const CSteamInputService_GyroSpeedChanged_NotificationSchema: GenMessage<CSteamInputService_GyroSpeedChanged_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_steaminput, 7);

/**
 * @generated from message CSteamInputService_GyroAccelerometerChanged_Notification
 */
export type CSteamInputService_GyroAccelerometerChanged_Notification = Message<"CSteamInputService_GyroAccelerometerChanged_Notification"> & {
  /**
   * @generated from field: optional uint32 controller_index = 1;
   */
  controllerIndex: number;

  /**
   * @generated from field: optional uint32 imu_index = 2;
   */
  imuIndex: number;

  /**
   * @generated from field: optional ControllerVector3 acceleromter_1g = 4;
   */
  acceleromter1g?: ControllerVector3;

  /**
   * @generated from field: optional ControllerVector3 trusted_gravity_1g = 5;
   */
  trustedGravity1g?: ControllerVector3;
};

/**
 * Describes the message CSteamInputService_GyroAccelerometerChanged_Notification.
 * Use `create(CSteamInputService_GyroAccelerometerChanged_NotificationSchema)` to create a new message.
 */
export const CSteamInputService_GyroAccelerometerChanged_NotificationSchema: GenMessage<CSteamInputService_GyroAccelerometerChanged_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_steaminput, 8);

/**
 * @generated from message CSteamInputService_GyroCalibration_Notification
 */
export type CSteamInputService_GyroCalibration_Notification = Message<"CSteamInputService_GyroCalibration_Notification"> & {
  /**
   * @generated from field: optional uint32 controller_index = 1;
   */
  controllerIndex: number;

  /**
   * @generated from field: optional uint32 imu_index = 2;
   */
  imuIndex: number;

  /**
   * @generated from field: optional float acceleromter_noise = 3;
   */
  acceleromterNoise: number;

  /**
   * @generated from field: optional float gyroscope_noise = 4;
   */
  gyroscopeNoise: number;

  /**
   * @generated from field: optional float calibration_progress = 5;
   */
  calibrationProgress: number;

  /**
   * @generated from field: optional uint32 calibration_state = 6;
   */
  calibrationState: number;

  /**
   * @generated from field: optional float gyroscope_noise_tolerance = 7;
   */
  gyroscopeNoiseTolerance: number;

  /**
   * @generated from field: optional float accelerometer_noise_tolerance = 8;
   */
  accelerometerNoiseTolerance: number;
};

/**
 * Describes the message CSteamInputService_GyroCalibration_Notification.
 * Use `create(CSteamInputService_GyroCalibration_NotificationSchema)` to create a new message.
 */
export const CSteamInputService_GyroCalibration_NotificationSchema: GenMessage<CSteamInputService_GyroCalibration_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_steaminput, 9);

/**
 * @generated from message CSteamInputService_ControllerStateFlow_Request
 */
export type CSteamInputService_ControllerStateFlow_Request = Message<"CSteamInputService_ControllerStateFlow_Request"> & {
  /**
   * @generated from field: optional uint32 controller_index = 1;
   */
  controllerIndex: number;

  /**
   * @generated from field: optional uint32 flow_mode = 2;
   */
  flowMode: number;
};

/**
 * Describes the message CSteamInputService_ControllerStateFlow_Request.
 * Use `create(CSteamInputService_ControllerStateFlow_RequestSchema)` to create a new message.
 */
export const CSteamInputService_ControllerStateFlow_RequestSchema: GenMessage<CSteamInputService_ControllerStateFlow_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_steaminput, 10);

/**
 * @generated from message CSteamInputService_ControllerStateFlow_Response
 */
export type CSteamInputService_ControllerStateFlow_Response = Message<"CSteamInputService_ControllerStateFlow_Response"> & {
};

/**
 * Describes the message CSteamInputService_ControllerStateFlow_Response.
 * Use `create(CSteamInputService_ControllerStateFlow_ResponseSchema)` to create a new message.
 */
export const CSteamInputService_ControllerStateFlow_ResponseSchema: GenMessage<CSteamInputService_ControllerStateFlow_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_steaminput, 11);

/**
 * @generated from message CSteamInputService_GyroSoftwareCalibration_Request
 */
export type CSteamInputService_GyroSoftwareCalibration_Request = Message<"CSteamInputService_GyroSoftwareCalibration_Request"> & {
  /**
   * @generated from field: optional uint32 controller_index = 1;
   */
  controllerIndex: number;

  /**
   * @generated from field: optional int32 side = 2;
   */
  side: number;
};

/**
 * Describes the message CSteamInputService_GyroSoftwareCalibration_Request.
 * Use `create(CSteamInputService_GyroSoftwareCalibration_RequestSchema)` to create a new message.
 */
export const CSteamInputService_GyroSoftwareCalibration_RequestSchema: GenMessage<CSteamInputService_GyroSoftwareCalibration_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_steaminput, 12);

/**
 * @generated from message CSteamInputService_GyroSoftwareCalibration_Response
 */
export type CSteamInputService_GyroSoftwareCalibration_Response = Message<"CSteamInputService_GyroSoftwareCalibration_Response"> & {
};

/**
 * Describes the message CSteamInputService_GyroSoftwareCalibration_Response.
 * Use `create(CSteamInputService_GyroSoftwareCalibration_ResponseSchema)` to create a new message.
 */
export const CSteamInputService_GyroSoftwareCalibration_ResponseSchema: GenMessage<CSteamInputService_GyroSoftwareCalibration_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_steaminput, 13);

/**
 * @generated from message CControllerOriginKey
 */
export type CControllerOriginKey = Message<"CControllerOriginKey"> & {
  /**
   * @generated from field: optional int32 controller_type = 1;
   */
  controllerType: number;

  /**
   * @generated from field: optional int32 controller_style = 2;
   */
  controllerStyle: number;

  /**
   * @generated from field: optional int32 source = 3;
   */
  source: number;

  /**
   * @generated from field: optional int32 input = 4;
   */
  input: number;
};

/**
 * Describes the message CControllerOriginKey.
 * Use `create(CControllerOriginKeySchema)` to create a new message.
 */
export const CControllerOriginKeySchema: GenMessage<CControllerOriginKey> = /*@__PURE__*/
  messageDesc(file_webuimessages_steaminput, 14);

/**
 * @generated from message CControllerAccessibilityString
 */
export type CControllerAccessibilityString = Message<"CControllerAccessibilityString"> & {
  /**
   * @generated from field: optional CControllerOriginKey key = 1;
   */
  key?: CControllerOriginKey;

  /**
   * @generated from field: optional string localized_string = 2;
   */
  localizedString: string;
};

/**
 * Describes the message CControllerAccessibilityString.
 * Use `create(CControllerAccessibilityStringSchema)` to create a new message.
 */
export const CControllerAccessibilityStringSchema: GenMessage<CControllerAccessibilityString> = /*@__PURE__*/
  messageDesc(file_webuimessages_steaminput, 15);

/**
 * @generated from message CSteamInputService_ControllerAccessibilityStrings_Request
 */
export type CSteamInputService_ControllerAccessibilityStrings_Request = Message<"CSteamInputService_ControllerAccessibilityStrings_Request"> & {
};

/**
 * Describes the message CSteamInputService_ControllerAccessibilityStrings_Request.
 * Use `create(CSteamInputService_ControllerAccessibilityStrings_RequestSchema)` to create a new message.
 */
export const CSteamInputService_ControllerAccessibilityStrings_RequestSchema: GenMessage<CSteamInputService_ControllerAccessibilityStrings_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_steaminput, 16);

/**
 * @generated from message CSteamInputService_ControllerAccessibilityStrings_Response
 */
export type CSteamInputService_ControllerAccessibilityStrings_Response = Message<"CSteamInputService_ControllerAccessibilityStrings_Response"> & {
  /**
   * @generated from field: repeated CControllerAccessibilityString strings = 1;
   */
  strings: CControllerAccessibilityString[];
};

/**
 * Describes the message CSteamInputService_ControllerAccessibilityStrings_Response.
 * Use `create(CSteamInputService_ControllerAccessibilityStrings_ResponseSchema)` to create a new message.
 */
export const CSteamInputService_ControllerAccessibilityStrings_ResponseSchema: GenMessage<CSteamInputService_ControllerAccessibilityStrings_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_steaminput, 17);

/**
 * @generated from service SteamInputManager
 */
export const SteamInputManager: GenService<{
  /**
   * @generated from rpc SteamInputManager.NotifyButtonStateChanged
   */
  notifyButtonStateChanged: {
    methodKind: "unary";
    input: typeof CSteamInputService_ControllerButtonStateChanged_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc SteamInputManager.NotifyAxesStateChanged
   */
  notifyAxesStateChanged: {
    methodKind: "unary";
    input: typeof CSteamInputService_ControllerAxesStateChange_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc SteamInputManager.NotifyGyroQuaternionStateChanged
   */
  notifyGyroQuaternionStateChanged: {
    methodKind: "unary";
    input: typeof CSteamInputService_GyroQuaternionChanged_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc SteamInputManager.NotifyGyroSpeedStateChanged
   */
  notifyGyroSpeedStateChanged: {
    methodKind: "unary";
    input: typeof CSteamInputService_GyroSpeedChanged_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc SteamInputManager.NotifyGyroAccelerometerStateChanged
   */
  notifyGyroAccelerometerStateChanged: {
    methodKind: "unary";
    input: typeof CSteamInputService_GyroAccelerometerChanged_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc SteamInputManager.NotifyGyroCalibrationStateChanged
   */
  notifyGyroCalibrationStateChanged: {
    methodKind: "unary";
    input: typeof CSteamInputService_GyroCalibration_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc SteamInputManager.StartControllerStateFlow
   */
  startControllerStateFlow: {
    methodKind: "unary";
    input: typeof CSteamInputService_ControllerStateFlow_RequestSchema;
    output: typeof CSteamInputService_ControllerStateFlow_ResponseSchema;
  },
  /**
   * @generated from rpc SteamInputManager.EndControllerStateFlow
   */
  endControllerStateFlow: {
    methodKind: "unary";
    input: typeof CSteamInputService_ControllerStateFlow_RequestSchema;
    output: typeof CSteamInputService_ControllerStateFlow_ResponseSchema;
  },
  /**
   * @generated from rpc SteamInputManager.GetControllerAccessibilityStrings
   */
  getControllerAccessibilityStrings: {
    methodKind: "unary";
    input: typeof CSteamInputService_ControllerAccessibilityStrings_RequestSchema;
    output: typeof CSteamInputService_ControllerAccessibilityStrings_ResponseSchema;
  },
  /**
   * @generated from rpc SteamInputManager.StartGyroSoftwareCalibration
   */
  startGyroSoftwareCalibration: {
    methodKind: "unary";
    input: typeof CSteamInputService_GyroSoftwareCalibration_RequestSchema;
    output: typeof CSteamInputService_GyroSoftwareCalibration_ResponseSchema;
  },
  /**
   * @generated from rpc SteamInputManager.CancelGyroSoftwareCalibration
   */
  cancelGyroSoftwareCalibration: {
    methodKind: "unary";
    input: typeof CSteamInputService_GyroSoftwareCalibration_RequestSchema;
    output: typeof CSteamInputService_GyroSoftwareCalibration_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_webuimessages_steaminput, 0);

