// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_timedtrial.steamclient.proto (syntax proto2)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_steammessages_base } from "./steammessages_base_pb";
import { file_steammessages_unified_base_steamclient } from "./steammessages_unified_base.steamclient_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_timedtrial.steamclient.proto.
 */
export const file_steammessages_timedtrial_steamclient: GenFile = /*@__PURE__*/
  fileDesc("CipzdGVhbW1lc3NhZ2VzX3RpbWVkdHJpYWwuc3RlYW1jbGllbnQucHJvdG8iNQokQ1RpbWVkVHJpYWxfR2V0VGltZVJlbWFpbmluZ19SZXF1ZXN0Eg0KBWFwcGlkGAEgASgNIoQBCiVDVGltZWRUcmlhbF9HZXRUaW1lUmVtYWluaW5nX1Jlc3BvbnNlEhYKDnNlY29uZHNfcGxheWVkGAEgASgNEhcKD3NlY29uZHNfYWxsb3dlZBgCIAEoDRIRCglwYWNrYWdlaWQYAyABKA0SFwoPbWFzdGVyc3ViX2FwcGlkGAQgASgNIksKIkNUaW1lZFRyaWFsX1JlY29yZFBsYXl0aW1lX1JlcXVlc3QSDQoFYXBwaWQYASABKA0SFgoOc2Vjb25kc19wbGF5ZWQYAiABKA0iVgojQ1RpbWVkVHJpYWxfUmVjb3JkUGxheXRpbWVfUmVzcG9uc2USFgoOc2Vjb25kc19wbGF5ZWQYASABKA0SFwoPc2Vjb25kc19hbGxvd2VkGAIgASgNIjIKIUNUaW1lZFRyaWFsX1Jlc2V0UGxheXRpbWVfUmVxdWVzdBINCgVhcHBpZBgBIAEoDSJVCiJDVGltZWRUcmlhbF9SZXNldFBsYXl0aW1lX1Jlc3BvbnNlEhYKDnNlY29uZHNfcGxheWVkGAEgASgNEhcKD3NlY29uZHNfYWxsb3dlZBgCIAEoDTKmAgoKVGltZWRUcmlhbBJhChBHZXRUaW1lUmVtYWluaW5nEiUuQ1RpbWVkVHJpYWxfR2V0VGltZVJlbWFpbmluZ19SZXF1ZXN0GiYuQ1RpbWVkVHJpYWxfR2V0VGltZVJlbWFpbmluZ19SZXNwb25zZRJbCg5SZWNvcmRQbGF5dGltZRIjLkNUaW1lZFRyaWFsX1JlY29yZFBsYXl0aW1lX1JlcXVlc3QaJC5DVGltZWRUcmlhbF9SZWNvcmRQbGF5dGltZV9SZXNwb25zZRJYCg1SZXNldFBsYXl0aW1lEiIuQ1RpbWVkVHJpYWxfUmVzZXRQbGF5dGltZV9SZXF1ZXN0GiMuQ1RpbWVkVHJpYWxfUmVzZXRQbGF5dGltZV9SZXNwb25zZUIDgAEB", [file_steammessages_base, file_steammessages_unified_base_steamclient]);

/**
 * @generated from message CTimedTrial_GetTimeRemaining_Request
 */
export type CTimedTrial_GetTimeRemaining_Request = Message<"CTimedTrial_GetTimeRemaining_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;
};

/**
 * Describes the message CTimedTrial_GetTimeRemaining_Request.
 * Use `create(CTimedTrial_GetTimeRemaining_RequestSchema)` to create a new message.
 */
export const CTimedTrial_GetTimeRemaining_RequestSchema: GenMessage<CTimedTrial_GetTimeRemaining_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_timedtrial_steamclient, 0);

/**
 * @generated from message CTimedTrial_GetTimeRemaining_Response
 */
export type CTimedTrial_GetTimeRemaining_Response = Message<"CTimedTrial_GetTimeRemaining_Response"> & {
  /**
   * @generated from field: optional uint32 seconds_played = 1;
   */
  secondsPlayed: number;

  /**
   * @generated from field: optional uint32 seconds_allowed = 2;
   */
  secondsAllowed: number;

  /**
   * @generated from field: optional uint32 packageid = 3;
   */
  packageid: number;

  /**
   * @generated from field: optional uint32 mastersub_appid = 4;
   */
  mastersubAppid: number;
};

/**
 * Describes the message CTimedTrial_GetTimeRemaining_Response.
 * Use `create(CTimedTrial_GetTimeRemaining_ResponseSchema)` to create a new message.
 */
export const CTimedTrial_GetTimeRemaining_ResponseSchema: GenMessage<CTimedTrial_GetTimeRemaining_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_timedtrial_steamclient, 1);

/**
 * @generated from message CTimedTrial_RecordPlaytime_Request
 */
export type CTimedTrial_RecordPlaytime_Request = Message<"CTimedTrial_RecordPlaytime_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 seconds_played = 2;
   */
  secondsPlayed: number;
};

/**
 * Describes the message CTimedTrial_RecordPlaytime_Request.
 * Use `create(CTimedTrial_RecordPlaytime_RequestSchema)` to create a new message.
 */
export const CTimedTrial_RecordPlaytime_RequestSchema: GenMessage<CTimedTrial_RecordPlaytime_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_timedtrial_steamclient, 2);

/**
 * @generated from message CTimedTrial_RecordPlaytime_Response
 */
export type CTimedTrial_RecordPlaytime_Response = Message<"CTimedTrial_RecordPlaytime_Response"> & {
  /**
   * @generated from field: optional uint32 seconds_played = 1;
   */
  secondsPlayed: number;

  /**
   * @generated from field: optional uint32 seconds_allowed = 2;
   */
  secondsAllowed: number;
};

/**
 * Describes the message CTimedTrial_RecordPlaytime_Response.
 * Use `create(CTimedTrial_RecordPlaytime_ResponseSchema)` to create a new message.
 */
export const CTimedTrial_RecordPlaytime_ResponseSchema: GenMessage<CTimedTrial_RecordPlaytime_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_timedtrial_steamclient, 3);

/**
 * @generated from message CTimedTrial_ResetPlaytime_Request
 */
export type CTimedTrial_ResetPlaytime_Request = Message<"CTimedTrial_ResetPlaytime_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;
};

/**
 * Describes the message CTimedTrial_ResetPlaytime_Request.
 * Use `create(CTimedTrial_ResetPlaytime_RequestSchema)` to create a new message.
 */
export const CTimedTrial_ResetPlaytime_RequestSchema: GenMessage<CTimedTrial_ResetPlaytime_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_timedtrial_steamclient, 4);

/**
 * @generated from message CTimedTrial_ResetPlaytime_Response
 */
export type CTimedTrial_ResetPlaytime_Response = Message<"CTimedTrial_ResetPlaytime_Response"> & {
  /**
   * @generated from field: optional uint32 seconds_played = 1;
   */
  secondsPlayed: number;

  /**
   * @generated from field: optional uint32 seconds_allowed = 2;
   */
  secondsAllowed: number;
};

/**
 * Describes the message CTimedTrial_ResetPlaytime_Response.
 * Use `create(CTimedTrial_ResetPlaytime_ResponseSchema)` to create a new message.
 */
export const CTimedTrial_ResetPlaytime_ResponseSchema: GenMessage<CTimedTrial_ResetPlaytime_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_timedtrial_steamclient, 5);

/**
 * @generated from service TimedTrial
 */
export const TimedTrial: GenService<{
  /**
   * @generated from rpc TimedTrial.GetTimeRemaining
   */
  getTimeRemaining: {
    methodKind: "unary";
    input: typeof CTimedTrial_GetTimeRemaining_RequestSchema;
    output: typeof CTimedTrial_GetTimeRemaining_ResponseSchema;
  },
  /**
   * @generated from rpc TimedTrial.RecordPlaytime
   */
  recordPlaytime: {
    methodKind: "unary";
    input: typeof CTimedTrial_RecordPlaytime_RequestSchema;
    output: typeof CTimedTrial_RecordPlaytime_ResponseSchema;
  },
  /**
   * @generated from rpc TimedTrial.ResetPlaytime
   */
  resetPlaytime: {
    methodKind: "unary";
    input: typeof CTimedTrial_ResetPlaytime_RequestSchema;
    output: typeof CTimedTrial_ResetPlaytime_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_timedtrial_steamclient, 0);

