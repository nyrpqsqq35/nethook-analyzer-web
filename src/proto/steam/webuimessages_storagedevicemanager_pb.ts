// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file webuimessages_storagedevicemanager.proto (syntax proto2)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { EStorageBlockContentType, EStorageBlockFileSystemType, EStorageDriveMediaType, EStorageFormatStage } from "./enums_pb";
import { file_enums } from "./enums_pb";
import { file_steammessages_base } from "./steammessages_base_pb";
import type { WebUINoResponseSchema } from "./webuimessages_base_pb";
import { file_webuimessages_base } from "./webuimessages_base_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file webuimessages_storagedevicemanager.proto.
 */
export const file_webuimessages_storagedevicemanager: GenFile = /*@__PURE__*/
  fileDesc("Cih3ZWJ1aW1lc3NhZ2VzX3N0b3JhZ2VkZXZpY2VtYW5hZ2VyLnByb3RvIjIKMENTdG9yYWdlRGV2aWNlTWFuYWdlcl9Jc1NlcnZpY2VBdmFpbGFibGVfUmVxdWVzdCJJCjFDU3RvcmFnZURldmljZU1hbmFnZXJfSXNTZXJ2aWNlQXZhaWxhYmxlX1Jlc3BvbnNlEhQKDGlzX2F2YWlsYWJsZRgBIAEoCCLpAgoaQ1N0b3JhZ2VEZXZpY2VNYW5hZ2VyRHJpdmUSDQoCaWQYASABKA06ATASDQoFbW9kZWwYAiABKAkSDgoGdmVuZG9yGAMgASgJEg4KBnNlcmlhbBgEIAEoCRIUCgxpc19lamVjdGFibGUYBSABKAgSEgoKc2l6ZV9ieXRlcxgGIAEoBBJNCgptZWRpYV90eXBlGAcgASgOMhcuRVN0b3JhZ2VEcml2ZU1lZGlhVHlwZToga19FU3RvcmFnZURyaXZlTWVkaWFUeXBlX0ludmFsaWQSFgoOaXNfdW5mb3JtYXR0ZWQYCCABKAgSSAoLYWRvcHRfc3RhZ2UYCSABKA4yFC5FU3RvcmFnZUZvcm1hdFN0YWdlOh1rX0VTdG9yYWdlRm9ybWF0U3RhZ2VfSW52YWxpZBIWCg5pc19mb3JtYXR0YWJsZRgKIAEoCBIaChJpc19tZWRpYV9hdmFpbGFibGUYCyABKAgizgMKIENTdG9yYWdlRGV2aWNlTWFuYWdlckJsb2NrRGV2aWNlEg0KAmlkGAEgASgNOgEwEhMKCGRyaXZlX2lkGAIgASgNOgEwEgwKBHBhdGgYAyABKAkSFQoNZnJpZW5kbHlfcGF0aBgEIAEoCRINCgVsYWJlbBgFIAEoCRISCgpzaXplX2J5dGVzGAYgASgEEhYKDmlzX2Zvcm1hdHRhYmxlGAcgASgIEhQKDGlzX3JlYWRfb25seRgIIAEoCBIWCg5pc19yb290X2RldmljZRgJIAEoCBJTCgxjb250ZW50X3R5cGUYCiABKA4yGS5FU3RvcmFnZUJsb2NrQ29udGVudFR5cGU6ImtfRVN0b3JhZ2VCbG9ja0NvbnRlbnRUeXBlX0ludmFsaWQSXAoPZmlsZXN5c3RlbV90eXBlGAsgASgOMhwuRVN0b3JhZ2VCbG9ja0ZpbGVTeXN0ZW1UeXBlOiVrX0VTdG9yYWdlQmxvY2tGaWxlU3lzdGVtVHlwZV9JbnZhbGlkEhMKC21vdW50X3BhdGhzGAwgAygJEhUKDWlzX3VubW91bnRpbmcYDSABKAgSGQoRaGFzX3N0ZWFtX2xpYnJhcnkYDiABKAgi8QEKGkNTdG9yYWdlRGV2aWNlTWFuYWdlclN0YXRlEisKBmRyaXZlcxgBIAMoCzIbLkNTdG9yYWdlRGV2aWNlTWFuYWdlckRyaXZlEjgKDWJsb2NrX2RldmljZXMYAiADKAsyIS5DU3RvcmFnZURldmljZU1hbmFnZXJCbG9ja0RldmljZRIcChRpc191bm1vdW50X3N1cHBvcnRlZBgDIAEoCBIZChFpc190cmltX3N1cHBvcnRlZBgEIAEoCBIXCg9pc190cmltX3J1bm5pbmcYBSABKAgSGgoSaXNfYWRvcHRfc3VwcG9ydGVkGAYgASgIIigKJkNTdG9yYWdlRGV2aWNlTWFuYWdlcl9HZXRTdGF0ZV9SZXF1ZXN0IlUKJ0NTdG9yYWdlRGV2aWNlTWFuYWdlcl9HZXRTdGF0ZV9SZXNwb25zZRIqCgVzdGF0ZRgBIAEoCzIbLkNTdG9yYWdlRGV2aWNlTWFuYWdlclN0YXRlIjEKL0NTdG9yYWdlRGV2aWNlTWFuYWdlcl9TdGF0ZUNoYW5nZWRfTm90aWZpY2F0aW9uIjcKI0NTdG9yYWdlRGV2aWNlTWFuYWdlcl9FamVjdF9SZXF1ZXN0EhAKCGRyaXZlX2lkGAEgASgNIiYKJENTdG9yYWdlRGV2aWNlTWFuYWdlcl9FamVjdF9SZXNwb25zZSJYCiNDU3RvcmFnZURldmljZU1hbmFnZXJfQWRvcHRfUmVxdWVzdBIQCghkcml2ZV9pZBgBIAEoDRINCgVsYWJlbBgCIAEoCRIQCgh2YWxpZGF0ZRgDIAEoCCImCiRDU3RvcmFnZURldmljZU1hbmFnZXJfQWRvcHRfUmVzcG9uc2UiPwokQ1N0b3JhZ2VEZXZpY2VNYW5hZ2VyX0Zvcm1hdF9SZXF1ZXN0EhcKD2Jsb2NrX2RldmljZV9pZBgBIAEoDSInCiVDU3RvcmFnZURldmljZU1hbmFnZXJfRm9ybWF0X1Jlc3BvbnNlIkAKJUNTdG9yYWdlRGV2aWNlTWFuYWdlcl9Vbm1vdW50X1JlcXVlc3QSFwoPYmxvY2tfZGV2aWNlX2lkGAEgASgNIigKJkNTdG9yYWdlRGV2aWNlTWFuYWdlcl9Vbm1vdW50X1Jlc3BvbnNlIicKJUNTdG9yYWdlRGV2aWNlTWFuYWdlcl9UcmltQWxsX1JlcXVlc3QiKAomQ1N0b3JhZ2VEZXZpY2VNYW5hZ2VyX1RyaW1BbGxfUmVzcG9uc2UyjwYKFFN0b3JhZ2VEZXZpY2VNYW5hZ2VyEnsKEklzU2VydmljZUF2YWlsYWJsZRIxLkNTdG9yYWdlRGV2aWNlTWFuYWdlcl9Jc1NlcnZpY2VBdmFpbGFibGVfUmVxdWVzdBoyLkNTdG9yYWdlRGV2aWNlTWFuYWdlcl9Jc1NlcnZpY2VBdmFpbGFibGVfUmVzcG9uc2USXQoIR2V0U3RhdGUSJy5DU3RvcmFnZURldmljZU1hbmFnZXJfR2V0U3RhdGVfUmVxdWVzdBooLkNTdG9yYWdlRGV2aWNlTWFuYWdlcl9HZXRTdGF0ZV9SZXNwb25zZRJYChJOb3RpZnlTdGF0ZUNoYW5nZWQSMC5DU3RvcmFnZURldmljZU1hbmFnZXJfU3RhdGVDaGFuZ2VkX05vdGlmaWNhdGlvbhoQLldlYlVJTm9SZXNwb25zZRJUCgVBZG9wdBIkLkNTdG9yYWdlRGV2aWNlTWFuYWdlcl9BZG9wdF9SZXF1ZXN0GiUuQ1N0b3JhZ2VEZXZpY2VNYW5hZ2VyX0Fkb3B0X1Jlc3BvbnNlElQKBUVqZWN0EiQuQ1N0b3JhZ2VEZXZpY2VNYW5hZ2VyX0VqZWN0X1JlcXVlc3QaJS5DU3RvcmFnZURldmljZU1hbmFnZXJfRWplY3RfUmVzcG9uc2USVwoGRm9ybWF0EiUuQ1N0b3JhZ2VEZXZpY2VNYW5hZ2VyX0Zvcm1hdF9SZXF1ZXN0GiYuQ1N0b3JhZ2VEZXZpY2VNYW5hZ2VyX0Zvcm1hdF9SZXNwb25zZRJaCgdVbm1vdW50EiYuQ1N0b3JhZ2VEZXZpY2VNYW5hZ2VyX1VubW91bnRfUmVxdWVzdBonLkNTdG9yYWdlRGV2aWNlTWFuYWdlcl9Vbm1vdW50X1Jlc3BvbnNlEloKB1RyaW1BbGwSJi5DU3RvcmFnZURldmljZU1hbmFnZXJfVHJpbUFsbF9SZXF1ZXN0GicuQ1N0b3JhZ2VEZXZpY2VNYW5hZ2VyX1RyaW1BbGxfUmVzcG9uc2UaBICXIgFCBUgBgAEB", [file_enums, file_steammessages_base, file_webuimessages_base]);

/**
 * @generated from message CStorageDeviceManager_IsServiceAvailable_Request
 */
export type CStorageDeviceManager_IsServiceAvailable_Request = Message<"CStorageDeviceManager_IsServiceAvailable_Request"> & {
};

/**
 * Describes the message CStorageDeviceManager_IsServiceAvailable_Request.
 * Use `create(CStorageDeviceManager_IsServiceAvailable_RequestSchema)` to create a new message.
 */
export const CStorageDeviceManager_IsServiceAvailable_RequestSchema: GenMessage<CStorageDeviceManager_IsServiceAvailable_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_storagedevicemanager, 0);

/**
 * @generated from message CStorageDeviceManager_IsServiceAvailable_Response
 */
export type CStorageDeviceManager_IsServiceAvailable_Response = Message<"CStorageDeviceManager_IsServiceAvailable_Response"> & {
  /**
   * @generated from field: optional bool is_available = 1;
   */
  isAvailable: boolean;
};

/**
 * Describes the message CStorageDeviceManager_IsServiceAvailable_Response.
 * Use `create(CStorageDeviceManager_IsServiceAvailable_ResponseSchema)` to create a new message.
 */
export const CStorageDeviceManager_IsServiceAvailable_ResponseSchema: GenMessage<CStorageDeviceManager_IsServiceAvailable_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_storagedevicemanager, 1);

/**
 * @generated from message CStorageDeviceManagerDrive
 */
export type CStorageDeviceManagerDrive = Message<"CStorageDeviceManagerDrive"> & {
  /**
   * @generated from field: optional uint32 id = 1 [default = 0];
   */
  id: number;

  /**
   * @generated from field: optional string model = 2;
   */
  model: string;

  /**
   * @generated from field: optional string vendor = 3;
   */
  vendor: string;

  /**
   * @generated from field: optional string serial = 4;
   */
  serial: string;

  /**
   * @generated from field: optional bool is_ejectable = 5;
   */
  isEjectable: boolean;

  /**
   * @generated from field: optional uint64 size_bytes = 6;
   */
  sizeBytes: bigint;

  /**
   * @generated from field: optional EStorageDriveMediaType media_type = 7 [default = k_EStorageDriveMediaType_Invalid];
   */
  mediaType: EStorageDriveMediaType;

  /**
   * @generated from field: optional bool is_unformatted = 8;
   */
  isUnformatted: boolean;

  /**
   * @generated from field: optional EStorageFormatStage adopt_stage = 9 [default = k_EStorageFormatStage_Invalid];
   */
  adoptStage: EStorageFormatStage;

  /**
   * @generated from field: optional bool is_formattable = 10;
   */
  isFormattable: boolean;

  /**
   * @generated from field: optional bool is_media_available = 11;
   */
  isMediaAvailable: boolean;
};

/**
 * Describes the message CStorageDeviceManagerDrive.
 * Use `create(CStorageDeviceManagerDriveSchema)` to create a new message.
 */
export const CStorageDeviceManagerDriveSchema: GenMessage<CStorageDeviceManagerDrive> = /*@__PURE__*/
  messageDesc(file_webuimessages_storagedevicemanager, 2);

/**
 * @generated from message CStorageDeviceManagerBlockDevice
 */
export type CStorageDeviceManagerBlockDevice = Message<"CStorageDeviceManagerBlockDevice"> & {
  /**
   * @generated from field: optional uint32 id = 1 [default = 0];
   */
  id: number;

  /**
   * @generated from field: optional uint32 drive_id = 2 [default = 0];
   */
  driveId: number;

  /**
   * @generated from field: optional string path = 3;
   */
  path: string;

  /**
   * @generated from field: optional string friendly_path = 4;
   */
  friendlyPath: string;

  /**
   * @generated from field: optional string label = 5;
   */
  label: string;

  /**
   * @generated from field: optional uint64 size_bytes = 6;
   */
  sizeBytes: bigint;

  /**
   * @generated from field: optional bool is_formattable = 7;
   */
  isFormattable: boolean;

  /**
   * @generated from field: optional bool is_read_only = 8;
   */
  isReadOnly: boolean;

  /**
   * @generated from field: optional bool is_root_device = 9;
   */
  isRootDevice: boolean;

  /**
   * @generated from field: optional EStorageBlockContentType content_type = 10 [default = k_EStorageBlockContentType_Invalid];
   */
  contentType: EStorageBlockContentType;

  /**
   * @generated from field: optional EStorageBlockFileSystemType filesystem_type = 11 [default = k_EStorageBlockFileSystemType_Invalid];
   */
  filesystemType: EStorageBlockFileSystemType;

  /**
   * @generated from field: repeated string mount_paths = 12;
   */
  mountPaths: string[];

  /**
   * @generated from field: optional bool is_unmounting = 13;
   */
  isUnmounting: boolean;

  /**
   * @generated from field: optional bool has_steam_library = 14;
   */
  hasSteamLibrary: boolean;
};

/**
 * Describes the message CStorageDeviceManagerBlockDevice.
 * Use `create(CStorageDeviceManagerBlockDeviceSchema)` to create a new message.
 */
export const CStorageDeviceManagerBlockDeviceSchema: GenMessage<CStorageDeviceManagerBlockDevice> = /*@__PURE__*/
  messageDesc(file_webuimessages_storagedevicemanager, 3);

/**
 * @generated from message CStorageDeviceManagerState
 */
export type CStorageDeviceManagerState = Message<"CStorageDeviceManagerState"> & {
  /**
   * @generated from field: repeated CStorageDeviceManagerDrive drives = 1;
   */
  drives: CStorageDeviceManagerDrive[];

  /**
   * @generated from field: repeated CStorageDeviceManagerBlockDevice block_devices = 2;
   */
  blockDevices: CStorageDeviceManagerBlockDevice[];

  /**
   * @generated from field: optional bool is_unmount_supported = 3;
   */
  isUnmountSupported: boolean;

  /**
   * @generated from field: optional bool is_trim_supported = 4;
   */
  isTrimSupported: boolean;

  /**
   * @generated from field: optional bool is_trim_running = 5;
   */
  isTrimRunning: boolean;

  /**
   * @generated from field: optional bool is_adopt_supported = 6;
   */
  isAdoptSupported: boolean;
};

/**
 * Describes the message CStorageDeviceManagerState.
 * Use `create(CStorageDeviceManagerStateSchema)` to create a new message.
 */
export const CStorageDeviceManagerStateSchema: GenMessage<CStorageDeviceManagerState> = /*@__PURE__*/
  messageDesc(file_webuimessages_storagedevicemanager, 4);

/**
 * @generated from message CStorageDeviceManager_GetState_Request
 */
export type CStorageDeviceManager_GetState_Request = Message<"CStorageDeviceManager_GetState_Request"> & {
};

/**
 * Describes the message CStorageDeviceManager_GetState_Request.
 * Use `create(CStorageDeviceManager_GetState_RequestSchema)` to create a new message.
 */
export const CStorageDeviceManager_GetState_RequestSchema: GenMessage<CStorageDeviceManager_GetState_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_storagedevicemanager, 5);

/**
 * @generated from message CStorageDeviceManager_GetState_Response
 */
export type CStorageDeviceManager_GetState_Response = Message<"CStorageDeviceManager_GetState_Response"> & {
  /**
   * @generated from field: optional CStorageDeviceManagerState state = 1;
   */
  state?: CStorageDeviceManagerState;
};

/**
 * Describes the message CStorageDeviceManager_GetState_Response.
 * Use `create(CStorageDeviceManager_GetState_ResponseSchema)` to create a new message.
 */
export const CStorageDeviceManager_GetState_ResponseSchema: GenMessage<CStorageDeviceManager_GetState_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_storagedevicemanager, 6);

/**
 * @generated from message CStorageDeviceManager_StateChanged_Notification
 */
export type CStorageDeviceManager_StateChanged_Notification = Message<"CStorageDeviceManager_StateChanged_Notification"> & {
};

/**
 * Describes the message CStorageDeviceManager_StateChanged_Notification.
 * Use `create(CStorageDeviceManager_StateChanged_NotificationSchema)` to create a new message.
 */
export const CStorageDeviceManager_StateChanged_NotificationSchema: GenMessage<CStorageDeviceManager_StateChanged_Notification> = /*@__PURE__*/
  messageDesc(file_webuimessages_storagedevicemanager, 7);

/**
 * @generated from message CStorageDeviceManager_Eject_Request
 */
export type CStorageDeviceManager_Eject_Request = Message<"CStorageDeviceManager_Eject_Request"> & {
  /**
   * @generated from field: optional uint32 drive_id = 1;
   */
  driveId: number;
};

/**
 * Describes the message CStorageDeviceManager_Eject_Request.
 * Use `create(CStorageDeviceManager_Eject_RequestSchema)` to create a new message.
 */
export const CStorageDeviceManager_Eject_RequestSchema: GenMessage<CStorageDeviceManager_Eject_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_storagedevicemanager, 8);

/**
 * @generated from message CStorageDeviceManager_Eject_Response
 */
export type CStorageDeviceManager_Eject_Response = Message<"CStorageDeviceManager_Eject_Response"> & {
};

/**
 * Describes the message CStorageDeviceManager_Eject_Response.
 * Use `create(CStorageDeviceManager_Eject_ResponseSchema)` to create a new message.
 */
export const CStorageDeviceManager_Eject_ResponseSchema: GenMessage<CStorageDeviceManager_Eject_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_storagedevicemanager, 9);

/**
 * @generated from message CStorageDeviceManager_Adopt_Request
 */
export type CStorageDeviceManager_Adopt_Request = Message<"CStorageDeviceManager_Adopt_Request"> & {
  /**
   * @generated from field: optional uint32 drive_id = 1;
   */
  driveId: number;

  /**
   * @generated from field: optional string label = 2;
   */
  label: string;

  /**
   * @generated from field: optional bool validate = 3;
   */
  validate: boolean;
};

/**
 * Describes the message CStorageDeviceManager_Adopt_Request.
 * Use `create(CStorageDeviceManager_Adopt_RequestSchema)` to create a new message.
 */
export const CStorageDeviceManager_Adopt_RequestSchema: GenMessage<CStorageDeviceManager_Adopt_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_storagedevicemanager, 10);

/**
 * @generated from message CStorageDeviceManager_Adopt_Response
 */
export type CStorageDeviceManager_Adopt_Response = Message<"CStorageDeviceManager_Adopt_Response"> & {
};

/**
 * Describes the message CStorageDeviceManager_Adopt_Response.
 * Use `create(CStorageDeviceManager_Adopt_ResponseSchema)` to create a new message.
 */
export const CStorageDeviceManager_Adopt_ResponseSchema: GenMessage<CStorageDeviceManager_Adopt_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_storagedevicemanager, 11);

/**
 * @generated from message CStorageDeviceManager_Format_Request
 */
export type CStorageDeviceManager_Format_Request = Message<"CStorageDeviceManager_Format_Request"> & {
  /**
   * @generated from field: optional uint32 block_device_id = 1;
   */
  blockDeviceId: number;
};

/**
 * Describes the message CStorageDeviceManager_Format_Request.
 * Use `create(CStorageDeviceManager_Format_RequestSchema)` to create a new message.
 */
export const CStorageDeviceManager_Format_RequestSchema: GenMessage<CStorageDeviceManager_Format_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_storagedevicemanager, 12);

/**
 * @generated from message CStorageDeviceManager_Format_Response
 */
export type CStorageDeviceManager_Format_Response = Message<"CStorageDeviceManager_Format_Response"> & {
};

/**
 * Describes the message CStorageDeviceManager_Format_Response.
 * Use `create(CStorageDeviceManager_Format_ResponseSchema)` to create a new message.
 */
export const CStorageDeviceManager_Format_ResponseSchema: GenMessage<CStorageDeviceManager_Format_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_storagedevicemanager, 13);

/**
 * @generated from message CStorageDeviceManager_Unmount_Request
 */
export type CStorageDeviceManager_Unmount_Request = Message<"CStorageDeviceManager_Unmount_Request"> & {
  /**
   * @generated from field: optional uint32 block_device_id = 1;
   */
  blockDeviceId: number;
};

/**
 * Describes the message CStorageDeviceManager_Unmount_Request.
 * Use `create(CStorageDeviceManager_Unmount_RequestSchema)` to create a new message.
 */
export const CStorageDeviceManager_Unmount_RequestSchema: GenMessage<CStorageDeviceManager_Unmount_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_storagedevicemanager, 14);

/**
 * @generated from message CStorageDeviceManager_Unmount_Response
 */
export type CStorageDeviceManager_Unmount_Response = Message<"CStorageDeviceManager_Unmount_Response"> & {
};

/**
 * Describes the message CStorageDeviceManager_Unmount_Response.
 * Use `create(CStorageDeviceManager_Unmount_ResponseSchema)` to create a new message.
 */
export const CStorageDeviceManager_Unmount_ResponseSchema: GenMessage<CStorageDeviceManager_Unmount_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_storagedevicemanager, 15);

/**
 * @generated from message CStorageDeviceManager_TrimAll_Request
 */
export type CStorageDeviceManager_TrimAll_Request = Message<"CStorageDeviceManager_TrimAll_Request"> & {
};

/**
 * Describes the message CStorageDeviceManager_TrimAll_Request.
 * Use `create(CStorageDeviceManager_TrimAll_RequestSchema)` to create a new message.
 */
export const CStorageDeviceManager_TrimAll_RequestSchema: GenMessage<CStorageDeviceManager_TrimAll_Request> = /*@__PURE__*/
  messageDesc(file_webuimessages_storagedevicemanager, 16);

/**
 * @generated from message CStorageDeviceManager_TrimAll_Response
 */
export type CStorageDeviceManager_TrimAll_Response = Message<"CStorageDeviceManager_TrimAll_Response"> & {
};

/**
 * Describes the message CStorageDeviceManager_TrimAll_Response.
 * Use `create(CStorageDeviceManager_TrimAll_ResponseSchema)` to create a new message.
 */
export const CStorageDeviceManager_TrimAll_ResponseSchema: GenMessage<CStorageDeviceManager_TrimAll_Response> = /*@__PURE__*/
  messageDesc(file_webuimessages_storagedevicemanager, 17);

/**
 * @generated from service StorageDeviceManager
 */
export const StorageDeviceManager: GenService<{
  /**
   * @generated from rpc StorageDeviceManager.IsServiceAvailable
   */
  isServiceAvailable: {
    methodKind: "unary";
    input: typeof CStorageDeviceManager_IsServiceAvailable_RequestSchema;
    output: typeof CStorageDeviceManager_IsServiceAvailable_ResponseSchema;
  },
  /**
   * @generated from rpc StorageDeviceManager.GetState
   */
  getState: {
    methodKind: "unary";
    input: typeof CStorageDeviceManager_GetState_RequestSchema;
    output: typeof CStorageDeviceManager_GetState_ResponseSchema;
  },
  /**
   * @generated from rpc StorageDeviceManager.NotifyStateChanged
   */
  notifyStateChanged: {
    methodKind: "unary";
    input: typeof CStorageDeviceManager_StateChanged_NotificationSchema;
    output: typeof WebUINoResponseSchema;
  },
  /**
   * @generated from rpc StorageDeviceManager.Adopt
   */
  adopt: {
    methodKind: "unary";
    input: typeof CStorageDeviceManager_Adopt_RequestSchema;
    output: typeof CStorageDeviceManager_Adopt_ResponseSchema;
  },
  /**
   * @generated from rpc StorageDeviceManager.Eject
   */
  eject: {
    methodKind: "unary";
    input: typeof CStorageDeviceManager_Eject_RequestSchema;
    output: typeof CStorageDeviceManager_Eject_ResponseSchema;
  },
  /**
   * @generated from rpc StorageDeviceManager.Format
   */
  format: {
    methodKind: "unary";
    input: typeof CStorageDeviceManager_Format_RequestSchema;
    output: typeof CStorageDeviceManager_Format_ResponseSchema;
  },
  /**
   * @generated from rpc StorageDeviceManager.Unmount
   */
  unmount: {
    methodKind: "unary";
    input: typeof CStorageDeviceManager_Unmount_RequestSchema;
    output: typeof CStorageDeviceManager_Unmount_ResponseSchema;
  },
  /**
   * @generated from rpc StorageDeviceManager.TrimAll
   */
  trimAll: {
    methodKind: "unary";
    input: typeof CStorageDeviceManager_TrimAll_RequestSchema;
    output: typeof CStorageDeviceManager_TrimAll_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_webuimessages_storagedevicemanager, 0);

