// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_sitelicenseclient.proto (syntax proto2)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import { file_steammessages_base } from "./steammessages_base_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_sitelicenseclient.proto.
 */
export const file_steammessages_sitelicenseclient: GenFile = /*@__PURE__*/
  fileDesc("CiVzdGVhbW1lc3NhZ2VzX3NpdGVsaWNlbnNlY2xpZW50LnByb3RvIloKEkNNc2dDbGllbnRTaXRlSW5mbxIPCgdzaXRlX2lkGAEgASgEEhEKCXNpdGVfbmFtZRgCIAEoCRIgChhhbGxvd19jYWNoZWRfY3JlZGVudGlhbHMYAyABKAgiLgodQ01zZ0NsaWVudFNpdGVMaWNlbnNlQ2hlY2tvdXQSDQoFYXBwaWQYASABKA0iOwolQ01zZ0NsaWVudFNpdGVMaWNlbnNlQ2hlY2tvdXRSZXNwb25zZRISCgdlcmVzdWx0GAEgASgFOgEyIjcKJkNNc2dDbGllbnRTaXRlTGljZW5zZUdldEF2YWlsYWJsZVNlYXRzEg0KBWFwcGlkGAEgASgNIlMKLkNNc2dDbGllbnRTaXRlTGljZW5zZUdldEF2YWlsYWJsZVNlYXRzUmVzcG9uc2USEgoHZXJlc3VsdBgBIAEoBToBMhINCgVzZWF0cxgCIAEoDSIqCihDTXNnQ2xpZW50U2l0ZUxpY2Vuc2VHZXRDb250ZW50Q2FjaGVJbmZvIpcBCjBDTXNnQ2xpZW50U2l0ZUxpY2Vuc2VHZXRDb250ZW50Q2FjaGVJbmZvUmVzcG9uc2USEQoJdXNlX2NhY2hlGAEgASgIEhQKDGlwdjRfYWRkcmVzcxgCIAEoDRITCgtwb3J0X251bWJlchgDIAEoDRIRCglwMnBfZ3JvdXAYBCABKA0SEgoKaXBfYWRkcmVzcxgFIAEoCUIFSAGAAQA", [file_steammessages_base]);

/**
 * @generated from message CMsgClientSiteInfo
 */
export type CMsgClientSiteInfo = Message<"CMsgClientSiteInfo"> & {
  /**
   * @generated from field: optional uint64 site_id = 1;
   */
  siteId: bigint;

  /**
   * @generated from field: optional string site_name = 2;
   */
  siteName: string;

  /**
   * @generated from field: optional bool allow_cached_credentials = 3;
   */
  allowCachedCredentials: boolean;
};

/**
 * Describes the message CMsgClientSiteInfo.
 * Use `create(CMsgClientSiteInfoSchema)` to create a new message.
 */
export const CMsgClientSiteInfoSchema: GenMessage<CMsgClientSiteInfo> = /*@__PURE__*/
  messageDesc(file_steammessages_sitelicenseclient, 0);

/**
 * @generated from message CMsgClientSiteLicenseCheckout
 */
export type CMsgClientSiteLicenseCheckout = Message<"CMsgClientSiteLicenseCheckout"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;
};

/**
 * Describes the message CMsgClientSiteLicenseCheckout.
 * Use `create(CMsgClientSiteLicenseCheckoutSchema)` to create a new message.
 */
export const CMsgClientSiteLicenseCheckoutSchema: GenMessage<CMsgClientSiteLicenseCheckout> = /*@__PURE__*/
  messageDesc(file_steammessages_sitelicenseclient, 1);

/**
 * @generated from message CMsgClientSiteLicenseCheckoutResponse
 */
export type CMsgClientSiteLicenseCheckoutResponse = Message<"CMsgClientSiteLicenseCheckoutResponse"> & {
  /**
   * @generated from field: optional int32 eresult = 1 [default = 2];
   */
  eresult: number;
};

/**
 * Describes the message CMsgClientSiteLicenseCheckoutResponse.
 * Use `create(CMsgClientSiteLicenseCheckoutResponseSchema)` to create a new message.
 */
export const CMsgClientSiteLicenseCheckoutResponseSchema: GenMessage<CMsgClientSiteLicenseCheckoutResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_sitelicenseclient, 2);

/**
 * @generated from message CMsgClientSiteLicenseGetAvailableSeats
 */
export type CMsgClientSiteLicenseGetAvailableSeats = Message<"CMsgClientSiteLicenseGetAvailableSeats"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;
};

/**
 * Describes the message CMsgClientSiteLicenseGetAvailableSeats.
 * Use `create(CMsgClientSiteLicenseGetAvailableSeatsSchema)` to create a new message.
 */
export const CMsgClientSiteLicenseGetAvailableSeatsSchema: GenMessage<CMsgClientSiteLicenseGetAvailableSeats> = /*@__PURE__*/
  messageDesc(file_steammessages_sitelicenseclient, 3);

/**
 * @generated from message CMsgClientSiteLicenseGetAvailableSeatsResponse
 */
export type CMsgClientSiteLicenseGetAvailableSeatsResponse = Message<"CMsgClientSiteLicenseGetAvailableSeatsResponse"> & {
  /**
   * @generated from field: optional int32 eresult = 1 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional uint32 seats = 2;
   */
  seats: number;
};

/**
 * Describes the message CMsgClientSiteLicenseGetAvailableSeatsResponse.
 * Use `create(CMsgClientSiteLicenseGetAvailableSeatsResponseSchema)` to create a new message.
 */
export const CMsgClientSiteLicenseGetAvailableSeatsResponseSchema: GenMessage<CMsgClientSiteLicenseGetAvailableSeatsResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_sitelicenseclient, 4);

/**
 * @generated from message CMsgClientSiteLicenseGetContentCacheInfo
 */
export type CMsgClientSiteLicenseGetContentCacheInfo = Message<"CMsgClientSiteLicenseGetContentCacheInfo"> & {
};

/**
 * Describes the message CMsgClientSiteLicenseGetContentCacheInfo.
 * Use `create(CMsgClientSiteLicenseGetContentCacheInfoSchema)` to create a new message.
 */
export const CMsgClientSiteLicenseGetContentCacheInfoSchema: GenMessage<CMsgClientSiteLicenseGetContentCacheInfo> = /*@__PURE__*/
  messageDesc(file_steammessages_sitelicenseclient, 5);

/**
 * @generated from message CMsgClientSiteLicenseGetContentCacheInfoResponse
 */
export type CMsgClientSiteLicenseGetContentCacheInfoResponse = Message<"CMsgClientSiteLicenseGetContentCacheInfoResponse"> & {
  /**
   * @generated from field: optional bool use_cache = 1;
   */
  useCache: boolean;

  /**
   * @generated from field: optional uint32 ipv4_address = 2;
   */
  ipv4Address: number;

  /**
   * @generated from field: optional uint32 port_number = 3;
   */
  portNumber: number;

  /**
   * @generated from field: optional uint32 p2p_group = 4;
   */
  p2pGroup: number;

  /**
   * @generated from field: optional string ip_address = 5;
   */
  ipAddress: string;
};

/**
 * Describes the message CMsgClientSiteLicenseGetContentCacheInfoResponse.
 * Use `create(CMsgClientSiteLicenseGetContentCacheInfoResponseSchema)` to create a new message.
 */
export const CMsgClientSiteLicenseGetContentCacheInfoResponseSchema: GenMessage<CMsgClientSiteLicenseGetContentCacheInfoResponse> = /*@__PURE__*/
  messageDesc(file_steammessages_sitelicenseclient, 6);

