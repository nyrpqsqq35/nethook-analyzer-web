// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_gamenetworking.steamclient.proto (syntax proto2)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_steammessages_base } from "./steammessages_base_pb";
import type { NoResponseSchema } from "./steammessages_unified_base.steamclient_pb";
import { file_steammessages_unified_base_steamclient } from "./steammessages_unified_base.steamclient_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_gamenetworking.steamclient.proto.
 */
export const file_steammessages_gamenetworking_steamclient: GenFile = /*@__PURE__*/
  fileDesc("Ci5zdGVhbW1lc3NhZ2VzX2dhbWVuZXR3b3JraW5nLnN0ZWFtY2xpZW50LnByb3RvIlAKJkNHYW1lTmV0d29ya2luZ19BbGxvY2F0ZUZha2VJUF9SZXF1ZXN0Eg4KBmFwcF9pZBgBIAEoDRIWCg5udW1fZmFrZV9wb3J0cxgCIAEoDSJOCidDR2FtZU5ldHdvcmtpbmdfQWxsb2NhdGVGYWtlSVBfUmVzcG9uc2USDwoHZmFrZV9pcBgBIAEoBxISCgpmYWtlX3BvcnRzGAIgAygNImEKKkNHYW1lTmV0d29ya2luZ19SZWxlYXNlRmFrZUlQX05vdGlmaWNhdGlvbhIOCgZhcHBfaWQYASABKA0SDwoHZmFrZV9pcBgCIAEoBxISCgpmYWtlX3BvcnRzGAMgAygNMsYBCg5HYW1lTmV0d29ya2luZxJjCg5BbGxvY2F0ZUZha2VJUBInLkNHYW1lTmV0d29ya2luZ19BbGxvY2F0ZUZha2VJUF9SZXF1ZXN0GiguQ0dhbWVOZXR3b3JraW5nX0FsbG9jYXRlRmFrZUlQX1Jlc3BvbnNlEk8KE05vdGlmeVJlbGVhc2VGYWtlSVASKy5DR2FtZU5ldHdvcmtpbmdfUmVsZWFzZUZha2VJUF9Ob3RpZmljYXRpb24aCy5Ob1Jlc3BvbnNlQgOAAQE", [file_steammessages_base, file_steammessages_unified_base_steamclient]);

/**
 * @generated from message CGameNetworking_AllocateFakeIP_Request
 */
export type CGameNetworking_AllocateFakeIP_Request = Message<"CGameNetworking_AllocateFakeIP_Request"> & {
  /**
   * @generated from field: optional uint32 app_id = 1;
   */
  appId: number;

  /**
   * @generated from field: optional uint32 num_fake_ports = 2;
   */
  numFakePorts: number;
};

/**
 * Describes the message CGameNetworking_AllocateFakeIP_Request.
 * Use `create(CGameNetworking_AllocateFakeIP_RequestSchema)` to create a new message.
 */
export const CGameNetworking_AllocateFakeIP_RequestSchema: GenMessage<CGameNetworking_AllocateFakeIP_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_gamenetworking_steamclient, 0);

/**
 * @generated from message CGameNetworking_AllocateFakeIP_Response
 */
export type CGameNetworking_AllocateFakeIP_Response = Message<"CGameNetworking_AllocateFakeIP_Response"> & {
  /**
   * @generated from field: optional fixed32 fake_ip = 1;
   */
  fakeIp: number;

  /**
   * @generated from field: repeated uint32 fake_ports = 2;
   */
  fakePorts: number[];
};

/**
 * Describes the message CGameNetworking_AllocateFakeIP_Response.
 * Use `create(CGameNetworking_AllocateFakeIP_ResponseSchema)` to create a new message.
 */
export const CGameNetworking_AllocateFakeIP_ResponseSchema: GenMessage<CGameNetworking_AllocateFakeIP_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_gamenetworking_steamclient, 1);

/**
 * @generated from message CGameNetworking_ReleaseFakeIP_Notification
 */
export type CGameNetworking_ReleaseFakeIP_Notification = Message<"CGameNetworking_ReleaseFakeIP_Notification"> & {
  /**
   * @generated from field: optional uint32 app_id = 1;
   */
  appId: number;

  /**
   * @generated from field: optional fixed32 fake_ip = 2;
   */
  fakeIp: number;

  /**
   * @generated from field: repeated uint32 fake_ports = 3;
   */
  fakePorts: number[];
};

/**
 * Describes the message CGameNetworking_ReleaseFakeIP_Notification.
 * Use `create(CGameNetworking_ReleaseFakeIP_NotificationSchema)` to create a new message.
 */
export const CGameNetworking_ReleaseFakeIP_NotificationSchema: GenMessage<CGameNetworking_ReleaseFakeIP_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_gamenetworking_steamclient, 2);

/**
 * @generated from service GameNetworking
 */
export const GameNetworking: GenService<{
  /**
   * @generated from rpc GameNetworking.AllocateFakeIP
   */
  allocateFakeIP: {
    methodKind: "unary";
    input: typeof CGameNetworking_AllocateFakeIP_RequestSchema;
    output: typeof CGameNetworking_AllocateFakeIP_ResponseSchema;
  },
  /**
   * @generated from rpc GameNetworking.NotifyReleaseFakeIP
   */
  notifyReleaseFakeIP: {
    methodKind: "unary";
    input: typeof CGameNetworking_ReleaseFakeIP_NotificationSchema;
    output: typeof NoResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_gamenetworking_steamclient, 0);

