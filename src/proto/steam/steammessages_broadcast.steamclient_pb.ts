// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_broadcast.steamclient.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_steammessages_base } from "./steammessages_base_pb";
import type { NoResponseSchema } from "./steammessages_unified_base.steamclient_pb";
import { file_steammessages_unified_base_steamclient } from "./steammessages_unified_base.steamclient_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_broadcast.steamclient.proto.
 */
export const file_steammessages_broadcast_steamclient: GenFile = /*@__PURE__*/
  fileDesc("", [file_steammessages_base, file_steammessages_unified_base_steamclient]);

/**
 * @generated from message CBroadcast_BeginBroadcastSession_Request
 */
export type CBroadcast_BeginBroadcastSession_Request = Message<"CBroadcast_BeginBroadcastSession_Request"> & {
  /**
   * @generated from field: optional int32 permission = 1;
   */
  permission: number;

  /**
   * @generated from field: optional uint64 gameid = 2;
   */
  gameid: bigint;

  /**
   * @generated from field: optional uint64 client_instance_id = 3;
   */
  clientInstanceId: bigint;

  /**
   * @generated from field: optional string title = 4;
   */
  title: string;

  /**
   * @generated from field: optional uint32 cellid = 5;
   */
  cellid: number;

  /**
   * @generated from field: optional uint64 rtmp_token = 6;
   */
  rtmpToken: bigint;

  /**
   * @generated from field: optional bool thumbnail_upload = 7;
   */
  thumbnailUpload: boolean;

  /**
   * @generated from field: optional uint32 sysid = 9;
   */
  sysid: number;

  /**
   * @generated from field: optional bool allow_webrtc = 10;
   */
  allowWebrtc: boolean;
};

/**
 * Describes the message CBroadcast_BeginBroadcastSession_Request.
 * Use `create(CBroadcast_BeginBroadcastSession_RequestSchema)` to create a new message.
 */
export const CBroadcast_BeginBroadcastSession_RequestSchema: GenMessage<CBroadcast_BeginBroadcastSession_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 0);

/**
 * @generated from message CBroadcast_BeginBroadcastSession_Response
 */
export type CBroadcast_BeginBroadcastSession_Response = Message<"CBroadcast_BeginBroadcastSession_Response"> & {
  /**
   * @generated from field: optional fixed64 broadcast_id = 1;
   */
  broadcastId: bigint;

  /**
   * @generated from field: optional string thumbnail_upload_address = 2;
   */
  thumbnailUploadAddress: string;

  /**
   * @generated from field: optional string thumbnail_upload_token = 3;
   */
  thumbnailUploadToken: string;

  /**
   * @generated from field: optional uint32 thumbnail_interval_seconds = 4;
   */
  thumbnailIntervalSeconds: number;

  /**
   * @generated from field: optional uint32 heartbeat_interval_seconds = 5;
   */
  heartbeatIntervalSeconds: number;
};

/**
 * Describes the message CBroadcast_BeginBroadcastSession_Response.
 * Use `create(CBroadcast_BeginBroadcastSession_ResponseSchema)` to create a new message.
 */
export const CBroadcast_BeginBroadcastSession_ResponseSchema: GenMessage<CBroadcast_BeginBroadcastSession_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 1);

/**
 * @generated from message CBroadcast_EndBroadcastSession_Request
 */
export type CBroadcast_EndBroadcastSession_Request = Message<"CBroadcast_EndBroadcastSession_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcast_id = 1;
   */
  broadcastId: bigint;
};

/**
 * Describes the message CBroadcast_EndBroadcastSession_Request.
 * Use `create(CBroadcast_EndBroadcastSession_RequestSchema)` to create a new message.
 */
export const CBroadcast_EndBroadcastSession_RequestSchema: GenMessage<CBroadcast_EndBroadcastSession_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 2);

/**
 * @generated from message CBroadcast_EndBroadcastSession_Response
 */
export type CBroadcast_EndBroadcastSession_Response = Message<"CBroadcast_EndBroadcastSession_Response"> & {
};

/**
 * Describes the message CBroadcast_EndBroadcastSession_Response.
 * Use `create(CBroadcast_EndBroadcastSession_ResponseSchema)` to create a new message.
 */
export const CBroadcast_EndBroadcastSession_ResponseSchema: GenMessage<CBroadcast_EndBroadcastSession_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 3);

/**
 * @generated from message CBroadcast_StartBroadcastUpload_Request
 */
export type CBroadcast_StartBroadcastUpload_Request = Message<"CBroadcast_StartBroadcastUpload_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcast_id = 1;
   */
  broadcastId: bigint;

  /**
   * @generated from field: optional uint32 cellid = 2;
   */
  cellid: number;

  /**
   * @generated from field: optional bool as_rtmp = 3;
   */
  asRtmp: boolean;

  /**
   * @generated from field: optional uint32 delay_seconds = 4;
   */
  delaySeconds: number;

  /**
   * @generated from field: optional uint64 rtmp_token = 5 [default = 0];
   */
  rtmpToken: bigint;

  /**
   * @generated from field: optional uint32 upload_ip_address = 6;
   */
  uploadIpAddress: number;

  /**
   * @generated from field: optional bool is_replay = 7;
   */
  isReplay: boolean;

  /**
   * @generated from field: optional uint32 sysid = 8;
   */
  sysid: number;
};

/**
 * Describes the message CBroadcast_StartBroadcastUpload_Request.
 * Use `create(CBroadcast_StartBroadcastUpload_RequestSchema)` to create a new message.
 */
export const CBroadcast_StartBroadcastUpload_RequestSchema: GenMessage<CBroadcast_StartBroadcastUpload_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 4);

/**
 * @generated from message CBroadcast_StartBroadcastUpload_Response
 */
export type CBroadcast_StartBroadcastUpload_Response = Message<"CBroadcast_StartBroadcastUpload_Response"> & {
  /**
   * @generated from field: optional string upload_token = 1;
   */
  uploadToken: string;

  /**
   * @generated from field: optional string upload_address = 2;
   */
  uploadAddress: string;

  /**
   * @generated from field: optional fixed64 broadcast_upload_id = 3;
   */
  broadcastUploadId: bigint;

  /**
   * @generated from field: optional bool enable_replay = 6;
   */
  enableReplay: boolean;

  /**
   * @generated from field: optional string http_address = 7;
   */
  httpAddress: string;
};

/**
 * Describes the message CBroadcast_StartBroadcastUpload_Response.
 * Use `create(CBroadcast_StartBroadcastUpload_ResponseSchema)` to create a new message.
 */
export const CBroadcast_StartBroadcastUpload_ResponseSchema: GenMessage<CBroadcast_StartBroadcastUpload_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 5);

/**
 * @generated from message CBroadcast_NotifyBroadcastUploadStop_Notification
 */
export type CBroadcast_NotifyBroadcastUploadStop_Notification = Message<"CBroadcast_NotifyBroadcastUploadStop_Notification"> & {
  /**
   * @generated from field: optional fixed64 broadcast_upload_id = 1;
   */
  broadcastUploadId: bigint;

  /**
   * @generated from field: optional uint32 upload_result = 2;
   */
  uploadResult: number;
};

/**
 * Describes the message CBroadcast_NotifyBroadcastUploadStop_Notification.
 * Use `create(CBroadcast_NotifyBroadcastUploadStop_NotificationSchema)` to create a new message.
 */
export const CBroadcast_NotifyBroadcastUploadStop_NotificationSchema: GenMessage<CBroadcast_NotifyBroadcastUploadStop_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 6);

/**
 * @generated from message CBroadcast_WatchBroadcast_Request
 */
export type CBroadcast_WatchBroadcast_Request = Message<"CBroadcast_WatchBroadcast_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional fixed64 existing_broadcast_id = 2;
   */
  existingBroadcastId: bigint;

  /**
   * @generated from field: optional fixed64 viewer_token = 3;
   */
  viewerToken: bigint;

  /**
   * @generated from field: optional uint32 client_cell = 5;
   */
  clientCell: number;

  /**
   * @generated from field: optional EBroadcastWatchLocation watch_location = 6 [default = k_EBroadcastWatchLocation_Invalid];
   */
  watchLocation: EBroadcastWatchLocation;

  /**
   * @generated from field: optional bool is_webrtc = 7;
   */
  isWebrtc: boolean;
};

/**
 * Describes the message CBroadcast_WatchBroadcast_Request.
 * Use `create(CBroadcast_WatchBroadcast_RequestSchema)` to create a new message.
 */
export const CBroadcast_WatchBroadcast_RequestSchema: GenMessage<CBroadcast_WatchBroadcast_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 7);

/**
 * @generated from message CBroadcast_WatchBroadcast_Response
 */
export type CBroadcast_WatchBroadcast_Response = Message<"CBroadcast_WatchBroadcast_Response"> & {
  /**
   * @generated from field: optional CBroadcast_WatchBroadcast_Response.EWatchResponse response = 1 [default = k_EWatchResponseReady];
   */
  response: CBroadcast_WatchBroadcast_Response_EWatchResponse;

  /**
   * @generated from field: optional string mpd_url = 2;
   */
  mpdUrl: string;

  /**
   * @generated from field: optional fixed64 broadcast_id = 3;
   */
  broadcastId: bigint;

  /**
   * @generated from field: optional uint64 gameid = 4;
   */
  gameid: bigint;

  /**
   * @generated from field: optional string title = 5;
   */
  title: string;

  /**
   * @generated from field: optional uint32 num_viewers = 6;
   */
  numViewers: number;

  /**
   * @generated from field: optional int32 permission = 7;
   */
  permission: number;

  /**
   * @generated from field: optional bool is_rtmp = 8;
   */
  isRtmp: boolean;

  /**
   * @generated from field: optional int32 seconds_delay = 9;
   */
  secondsDelay: number;

  /**
   * @generated from field: optional fixed64 viewer_token = 10;
   */
  viewerToken: bigint;

  /**
   * @generated from field: optional string hls_m3u8_master_url = 11;
   */
  hlsM3u8MasterUrl: string;

  /**
   * @generated from field: optional int32 heartbeat_interval = 12;
   */
  heartbeatInterval: number;

  /**
   * @generated from field: optional string thumbnail_url = 13;
   */
  thumbnailUrl: string;

  /**
   * @generated from field: optional bool is_webrtc = 14;
   */
  isWebrtc: boolean;

  /**
   * @generated from field: optional fixed64 webrtc_session_id = 15;
   */
  webrtcSessionId: bigint;

  /**
   * @generated from field: optional string webrtc_offer_sdp = 16;
   */
  webrtcOfferSdp: string;

  /**
   * @generated from field: optional string webrtc_turn_server = 17;
   */
  webrtcTurnServer: string;

  /**
   * @generated from field: optional bool is_replay = 18;
   */
  isReplay: boolean;

  /**
   * @generated from field: optional int32 duration = 19;
   */
  duration: number;

  /**
   * @generated from field: optional string cdn_auth_url_parameters = 20;
   */
  cdnAuthUrlParameters: string;
};

/**
 * Describes the message CBroadcast_WatchBroadcast_Response.
 * Use `create(CBroadcast_WatchBroadcast_ResponseSchema)` to create a new message.
 */
export const CBroadcast_WatchBroadcast_ResponseSchema: GenMessage<CBroadcast_WatchBroadcast_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 8);

/**
 * @generated from enum CBroadcast_WatchBroadcast_Response.EWatchResponse
 */
export enum CBroadcast_WatchBroadcast_Response_EWatchResponse {
  /**
   * @generated from enum value: k_EWatchResponseReady = 1;
   */
  k_EWatchResponseReady = 1,

  /**
   * @generated from enum value: k_EWatchResponseNotAvailable = 2;
   */
  k_EWatchResponseNotAvailable = 2,

  /**
   * @generated from enum value: k_EWatchResponseWaitingForApproval = 3;
   */
  k_EWatchResponseWaitingForApproval = 3,

  /**
   * @generated from enum value: k_EWatchResponseWaitingForStart = 4;
   */
  k_EWatchResponseWaitingForStart = 4,

  /**
   * @generated from enum value: k_EWatchResponseInvalidSession = 5;
   */
  k_EWatchResponseInvalidSession = 5,

  /**
   * @generated from enum value: k_EWatchResponseTooManyBroadcasts = 6;
   */
  k_EWatchResponseTooManyBroadcasts = 6,

  /**
   * @generated from enum value: k_EWatchResponseWaitingForReconnect = 7;
   */
  k_EWatchResponseWaitingForReconnect = 7,

  /**
   * @generated from enum value: k_EWatchResponseSystemNotSupported = 8;
   */
  k_EWatchResponseSystemNotSupported = 8,

  /**
   * @generated from enum value: k_EWatchResponseUserRestricted = 9;
   */
  k_EWatchResponseUserRestricted = 9,

  /**
   * @generated from enum value: k_EWatchResponseClientOutOfDate = 10;
   */
  k_EWatchResponseClientOutOfDate = 10,

  /**
   * @generated from enum value: k_EWatchResponsePoorUploadQuality = 11;
   */
  k_EWatchResponsePoorUploadQuality = 11,

  /**
   * @generated from enum value: k_EWatchResponseMissingSubscription = 12;
   */
  k_EWatchResponseMissingSubscription = 12,

  /**
   * @generated from enum value: k_EWatchResponseTooManyViewers = 13;
   */
  k_EWatchResponseTooManyViewers = 13,
}

/**
 * Describes the enum CBroadcast_WatchBroadcast_Response.EWatchResponse.
 */
export const CBroadcast_WatchBroadcast_Response_EWatchResponseSchema: GenEnum<CBroadcast_WatchBroadcast_Response_EWatchResponse> = /*@__PURE__*/
  enumDesc(file_steammessages_broadcast_steamclient, 8, 0);

/**
 * @generated from message CBroadcast_HeartbeatBroadcast_Notification
 */
export type CBroadcast_HeartbeatBroadcast_Notification = Message<"CBroadcast_HeartbeatBroadcast_Notification"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional fixed64 broadcast_id = 2;
   */
  broadcastId: bigint;

  /**
   * @generated from field: optional fixed64 viewer_token = 3;
   */
  viewerToken: bigint;

  /**
   * @generated from field: optional uint32 representation = 4;
   */
  representation: number;
};

/**
 * Describes the message CBroadcast_HeartbeatBroadcast_Notification.
 * Use `create(CBroadcast_HeartbeatBroadcast_NotificationSchema)` to create a new message.
 */
export const CBroadcast_HeartbeatBroadcast_NotificationSchema: GenMessage<CBroadcast_HeartbeatBroadcast_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 9);

/**
 * @generated from message CBroadcast_StopWatchingBroadcast_Notification
 */
export type CBroadcast_StopWatchingBroadcast_Notification = Message<"CBroadcast_StopWatchingBroadcast_Notification"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional fixed64 broadcast_id = 2;
   */
  broadcastId: bigint;

  /**
   * @generated from field: optional fixed64 viewer_token = 3;
   */
  viewerToken: bigint;
};

/**
 * Describes the message CBroadcast_StopWatchingBroadcast_Notification.
 * Use `create(CBroadcast_StopWatchingBroadcast_NotificationSchema)` to create a new message.
 */
export const CBroadcast_StopWatchingBroadcast_NotificationSchema: GenMessage<CBroadcast_StopWatchingBroadcast_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 10);

/**
 * @generated from message CBroadcast_GetBroadcastStatus_Request
 */
export type CBroadcast_GetBroadcastStatus_Request = Message<"CBroadcast_GetBroadcastStatus_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional fixed64 broadcast_id = 2;
   */
  broadcastId: bigint;
};

/**
 * Describes the message CBroadcast_GetBroadcastStatus_Request.
 * Use `create(CBroadcast_GetBroadcastStatus_RequestSchema)` to create a new message.
 */
export const CBroadcast_GetBroadcastStatus_RequestSchema: GenMessage<CBroadcast_GetBroadcastStatus_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 11);

/**
 * @generated from message CBroadcast_GetBroadcastStatus_Response
 */
export type CBroadcast_GetBroadcastStatus_Response = Message<"CBroadcast_GetBroadcastStatus_Response"> & {
  /**
   * @generated from field: optional uint64 gameid = 1;
   */
  gameid: bigint;

  /**
   * @generated from field: optional string title = 2;
   */
  title: string;

  /**
   * @generated from field: optional uint32 num_viewers = 3;
   */
  numViewers: number;

  /**
   * @generated from field: optional int32 permission = 4;
   */
  permission: number;

  /**
   * @generated from field: optional bool is_rtmp = 5;
   */
  isRtmp: boolean;

  /**
   * @generated from field: optional int32 seconds_delay = 6;
   */
  secondsDelay: number;

  /**
   * @generated from field: optional bool is_publisher = 7;
   */
  isPublisher: boolean;

  /**
   * @generated from field: optional string thumbnail_url = 8;
   */
  thumbnailUrl: string;

  /**
   * @generated from field: optional int32 update_interval = 9;
   */
  updateInterval: number;

  /**
   * @generated from field: optional bool is_uploading = 10;
   */
  isUploading: boolean;

  /**
   * @generated from field: optional uint32 duration = 11;
   */
  duration: number;

  /**
   * @generated from field: optional bool is_replay = 12;
   */
  isReplay: boolean;

  /**
   * @generated from field: optional bool is_capturing_vod = 13;
   */
  isCapturingVod: boolean;

  /**
   * @generated from field: optional bool is_store_whitelisted = 14;
   */
  isStoreWhitelisted: boolean;
};

/**
 * Describes the message CBroadcast_GetBroadcastStatus_Response.
 * Use `create(CBroadcast_GetBroadcastStatus_ResponseSchema)` to create a new message.
 */
export const CBroadcast_GetBroadcastStatus_ResponseSchema: GenMessage<CBroadcast_GetBroadcastStatus_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 12);

/**
 * @generated from message CBroadcast_GetBroadcastThumbnail_Request
 */
export type CBroadcast_GetBroadcastThumbnail_Request = Message<"CBroadcast_GetBroadcastThumbnail_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional fixed64 broadcast_id = 2;
   */
  broadcastId: bigint;
};

/**
 * Describes the message CBroadcast_GetBroadcastThumbnail_Request.
 * Use `create(CBroadcast_GetBroadcastThumbnail_RequestSchema)` to create a new message.
 */
export const CBroadcast_GetBroadcastThumbnail_RequestSchema: GenMessage<CBroadcast_GetBroadcastThumbnail_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 13);

/**
 * @generated from message CBroadcast_GetBroadcastThumbnail_Response
 */
export type CBroadcast_GetBroadcastThumbnail_Response = Message<"CBroadcast_GetBroadcastThumbnail_Response"> & {
  /**
   * @generated from field: optional string thumbnail_url = 1;
   */
  thumbnailUrl: string;

  /**
   * @generated from field: optional int32 update_interval = 2;
   */
  updateInterval: number;

  /**
   * @generated from field: optional int32 num_viewers = 3;
   */
  numViewers: number;

  /**
   * @generated from field: optional int32 duration = 4;
   */
  duration: number;
};

/**
 * Describes the message CBroadcast_GetBroadcastThumbnail_Response.
 * Use `create(CBroadcast_GetBroadcastThumbnail_ResponseSchema)` to create a new message.
 */
export const CBroadcast_GetBroadcastThumbnail_ResponseSchema: GenMessage<CBroadcast_GetBroadcastThumbnail_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 14);

/**
 * @generated from message CBroadcast_InviteToBroadcast_Request
 */
export type CBroadcast_InviteToBroadcast_Request = Message<"CBroadcast_InviteToBroadcast_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional bool approval_response = 2;
   */
  approvalResponse: boolean;
};

/**
 * Describes the message CBroadcast_InviteToBroadcast_Request.
 * Use `create(CBroadcast_InviteToBroadcast_RequestSchema)` to create a new message.
 */
export const CBroadcast_InviteToBroadcast_RequestSchema: GenMessage<CBroadcast_InviteToBroadcast_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 15);

/**
 * @generated from message CBroadcast_InviteToBroadcast_Response
 */
export type CBroadcast_InviteToBroadcast_Response = Message<"CBroadcast_InviteToBroadcast_Response"> & {
  /**
   * @generated from field: optional bool success = 1;
   */
  success: boolean;
};

/**
 * Describes the message CBroadcast_InviteToBroadcast_Response.
 * Use `create(CBroadcast_InviteToBroadcast_ResponseSchema)` to create a new message.
 */
export const CBroadcast_InviteToBroadcast_ResponseSchema: GenMessage<CBroadcast_InviteToBroadcast_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 16);

/**
 * @generated from message CBroadcast_SendBroadcastStateToServer_Request
 */
export type CBroadcast_SendBroadcastStateToServer_Request = Message<"CBroadcast_SendBroadcastStateToServer_Request"> & {
  /**
   * @generated from field: optional int32 permission = 1;
   */
  permission: number;

  /**
   * @generated from field: optional uint64 gameid = 2;
   */
  gameid: bigint;

  /**
   * @generated from field: optional string title = 3;
   */
  title: string;

  /**
   * @generated from field: optional string game_data_config = 4;
   */
  gameDataConfig: string;
};

/**
 * Describes the message CBroadcast_SendBroadcastStateToServer_Request.
 * Use `create(CBroadcast_SendBroadcastStateToServer_RequestSchema)` to create a new message.
 */
export const CBroadcast_SendBroadcastStateToServer_RequestSchema: GenMessage<CBroadcast_SendBroadcastStateToServer_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 17);

/**
 * @generated from message CBroadcast_SendBroadcastStateToServer_Response
 */
export type CBroadcast_SendBroadcastStateToServer_Response = Message<"CBroadcast_SendBroadcastStateToServer_Response"> & {
};

/**
 * Describes the message CBroadcast_SendBroadcastStateToServer_Response.
 * Use `create(CBroadcast_SendBroadcastStateToServer_ResponseSchema)` to create a new message.
 */
export const CBroadcast_SendBroadcastStateToServer_ResponseSchema: GenMessage<CBroadcast_SendBroadcastStateToServer_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 18);

/**
 * @generated from message CBroadcast_NotifyBroadcastSessionHeartbeat_Notification
 */
export type CBroadcast_NotifyBroadcastSessionHeartbeat_Notification = Message<"CBroadcast_NotifyBroadcastSessionHeartbeat_Notification"> & {
  /**
   * @generated from field: optional fixed64 broadcast_id = 1;
   */
  broadcastId: bigint;
};

/**
 * Describes the message CBroadcast_NotifyBroadcastSessionHeartbeat_Notification.
 * Use `create(CBroadcast_NotifyBroadcastSessionHeartbeat_NotificationSchema)` to create a new message.
 */
export const CBroadcast_NotifyBroadcastSessionHeartbeat_NotificationSchema: GenMessage<CBroadcast_NotifyBroadcastSessionHeartbeat_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 19);

/**
 * @generated from message CBroadcast_GetBroadcastChatInfo_Request
 */
export type CBroadcast_GetBroadcastChatInfo_Request = Message<"CBroadcast_GetBroadcastChatInfo_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional fixed64 broadcast_id = 2;
   */
  broadcastId: bigint;

  /**
   * @generated from field: optional uint32 client_ip = 3;
   */
  clientIp: number;

  /**
   * @generated from field: optional uint32 client_cell = 4;
   */
  clientCell: number;
};

/**
 * Describes the message CBroadcast_GetBroadcastChatInfo_Request.
 * Use `create(CBroadcast_GetBroadcastChatInfo_RequestSchema)` to create a new message.
 */
export const CBroadcast_GetBroadcastChatInfo_RequestSchema: GenMessage<CBroadcast_GetBroadcastChatInfo_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 20);

/**
 * @generated from message CBroadcast_GetBroadcastChatInfo_Response
 */
export type CBroadcast_GetBroadcastChatInfo_Response = Message<"CBroadcast_GetBroadcastChatInfo_Response"> & {
  /**
   * @generated from field: optional fixed64 chat_id = 1;
   */
  chatId: bigint;

  /**
   * @generated from field: optional string view_url_template = 3;
   */
  viewUrlTemplate: string;

  /**
   * @generated from field: repeated uint32 flair_group_ids = 4;
   */
  flairGroupIds: number[];
};

/**
 * Describes the message CBroadcast_GetBroadcastChatInfo_Response.
 * Use `create(CBroadcast_GetBroadcastChatInfo_ResponseSchema)` to create a new message.
 */
export const CBroadcast_GetBroadcastChatInfo_ResponseSchema: GenMessage<CBroadcast_GetBroadcastChatInfo_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 21);

/**
 * @generated from message CBroadcast_PostChatMessage_Request
 */
export type CBroadcast_PostChatMessage_Request = Message<"CBroadcast_PostChatMessage_Request"> & {
  /**
   * @generated from field: optional fixed64 chat_id = 1;
   */
  chatId: bigint;

  /**
   * @generated from field: optional string message = 2;
   */
  message: string;

  /**
   * @generated from field: optional uint32 instance_id = 3;
   */
  instanceId: number;

  /**
   * @generated from field: optional uint32 language = 4 [default = 0];
   */
  language: number;

  /**
   * @generated from field: optional string country_code = 5;
   */
  countryCode: string;
};

/**
 * Describes the message CBroadcast_PostChatMessage_Request.
 * Use `create(CBroadcast_PostChatMessage_RequestSchema)` to create a new message.
 */
export const CBroadcast_PostChatMessage_RequestSchema: GenMessage<CBroadcast_PostChatMessage_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 22);

/**
 * @generated from message CBroadcast_PostChatMessage_Response
 */
export type CBroadcast_PostChatMessage_Response = Message<"CBroadcast_PostChatMessage_Response"> & {
  /**
   * @generated from field: optional string persona_name = 1;
   */
  personaName: string;

  /**
   * @generated from field: optional bool in_game = 2;
   */
  inGame: boolean;

  /**
   * @generated from field: optional int32 result = 3;
   */
  result: number;

  /**
   * @generated from field: optional int32 cooldown_time_seconds = 4;
   */
  cooldownTimeSeconds: number;
};

/**
 * Describes the message CBroadcast_PostChatMessage_Response.
 * Use `create(CBroadcast_PostChatMessage_ResponseSchema)` to create a new message.
 */
export const CBroadcast_PostChatMessage_ResponseSchema: GenMessage<CBroadcast_PostChatMessage_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 23);

/**
 * @generated from message CBroadcast_UpdateChatMessageFlair_Request
 */
export type CBroadcast_UpdateChatMessageFlair_Request = Message<"CBroadcast_UpdateChatMessageFlair_Request"> & {
  /**
   * @generated from field: optional fixed64 chat_id = 1;
   */
  chatId: bigint;

  /**
   * @generated from field: optional string flair = 2;
   */
  flair: string;
};

/**
 * Describes the message CBroadcast_UpdateChatMessageFlair_Request.
 * Use `create(CBroadcast_UpdateChatMessageFlair_RequestSchema)` to create a new message.
 */
export const CBroadcast_UpdateChatMessageFlair_RequestSchema: GenMessage<CBroadcast_UpdateChatMessageFlair_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 24);

/**
 * @generated from message CBroadcast_UpdateChatMessageFlair_Response
 */
export type CBroadcast_UpdateChatMessageFlair_Response = Message<"CBroadcast_UpdateChatMessageFlair_Response"> & {
  /**
   * @generated from field: optional int32 result = 1;
   */
  result: number;

  /**
   * @generated from field: optional fixed64 chat_id = 2;
   */
  chatId: bigint;

  /**
   * @generated from field: optional string flair = 3;
   */
  flair: string;
};

/**
 * Describes the message CBroadcast_UpdateChatMessageFlair_Response.
 * Use `create(CBroadcast_UpdateChatMessageFlair_ResponseSchema)` to create a new message.
 */
export const CBroadcast_UpdateChatMessageFlair_ResponseSchema: GenMessage<CBroadcast_UpdateChatMessageFlair_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 25);

/**
 * @generated from message CBroadcast_MuteBroadcastChatUser_Request
 */
export type CBroadcast_MuteBroadcastChatUser_Request = Message<"CBroadcast_MuteBroadcastChatUser_Request"> & {
  /**
   * @generated from field: optional fixed64 chat_id = 1;
   */
  chatId: bigint;

  /**
   * @generated from field: optional fixed64 user_steamid = 2;
   */
  userSteamid: bigint;

  /**
   * @generated from field: optional bool muted = 3;
   */
  muted: boolean;
};

/**
 * Describes the message CBroadcast_MuteBroadcastChatUser_Request.
 * Use `create(CBroadcast_MuteBroadcastChatUser_RequestSchema)` to create a new message.
 */
export const CBroadcast_MuteBroadcastChatUser_RequestSchema: GenMessage<CBroadcast_MuteBroadcastChatUser_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 26);

/**
 * @generated from message CBroadcast_MuteBroadcastChatUser_Response
 */
export type CBroadcast_MuteBroadcastChatUser_Response = Message<"CBroadcast_MuteBroadcastChatUser_Response"> & {
};

/**
 * Describes the message CBroadcast_MuteBroadcastChatUser_Response.
 * Use `create(CBroadcast_MuteBroadcastChatUser_ResponseSchema)` to create a new message.
 */
export const CBroadcast_MuteBroadcastChatUser_ResponseSchema: GenMessage<CBroadcast_MuteBroadcastChatUser_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 27);

/**
 * @generated from message CBroadcast_RemoveUserChatText_Request
 */
export type CBroadcast_RemoveUserChatText_Request = Message<"CBroadcast_RemoveUserChatText_Request"> & {
  /**
   * @generated from field: optional fixed64 chat_id = 1;
   */
  chatId: bigint;

  /**
   * @generated from field: optional fixed64 user_steamid = 2;
   */
  userSteamid: bigint;
};

/**
 * Describes the message CBroadcast_RemoveUserChatText_Request.
 * Use `create(CBroadcast_RemoveUserChatText_RequestSchema)` to create a new message.
 */
export const CBroadcast_RemoveUserChatText_RequestSchema: GenMessage<CBroadcast_RemoveUserChatText_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 28);

/**
 * @generated from message CBroadcast_RemoveUserChatText_Response
 */
export type CBroadcast_RemoveUserChatText_Response = Message<"CBroadcast_RemoveUserChatText_Response"> & {
};

/**
 * Describes the message CBroadcast_RemoveUserChatText_Response.
 * Use `create(CBroadcast_RemoveUserChatText_ResponseSchema)` to create a new message.
 */
export const CBroadcast_RemoveUserChatText_ResponseSchema: GenMessage<CBroadcast_RemoveUserChatText_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 29);

/**
 * @generated from message CBroadcast_GetBroadcastChatUserNames_Request
 */
export type CBroadcast_GetBroadcastChatUserNames_Request = Message<"CBroadcast_GetBroadcastChatUserNames_Request"> & {
  /**
   * @generated from field: optional fixed64 chat_id = 1;
   */
  chatId: bigint;

  /**
   * @generated from field: repeated fixed64 user_steamid = 2;
   */
  userSteamid: bigint[];
};

/**
 * Describes the message CBroadcast_GetBroadcastChatUserNames_Request.
 * Use `create(CBroadcast_GetBroadcastChatUserNames_RequestSchema)` to create a new message.
 */
export const CBroadcast_GetBroadcastChatUserNames_RequestSchema: GenMessage<CBroadcast_GetBroadcastChatUserNames_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 30);

/**
 * @generated from message CBroadcast_GetBroadcastChatUserNames_Response
 */
export type CBroadcast_GetBroadcastChatUserNames_Response = Message<"CBroadcast_GetBroadcastChatUserNames_Response"> & {
  /**
   * @generated from field: repeated CBroadcast_GetBroadcastChatUserNames_Response.PersonaName persona_names = 1;
   */
  personaNames: CBroadcast_GetBroadcastChatUserNames_Response_PersonaName[];
};

/**
 * Describes the message CBroadcast_GetBroadcastChatUserNames_Response.
 * Use `create(CBroadcast_GetBroadcastChatUserNames_ResponseSchema)` to create a new message.
 */
export const CBroadcast_GetBroadcastChatUserNames_ResponseSchema: GenMessage<CBroadcast_GetBroadcastChatUserNames_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 31);

/**
 * @generated from message CBroadcast_GetBroadcastChatUserNames_Response.PersonaName
 */
export type CBroadcast_GetBroadcastChatUserNames_Response_PersonaName = Message<"CBroadcast_GetBroadcastChatUserNames_Response.PersonaName"> & {
  /**
   * @generated from field: optional fixed64 steam_id = 1;
   */
  steamId: bigint;

  /**
   * @generated from field: optional string persona = 2;
   */
  persona: string;
};

/**
 * Describes the message CBroadcast_GetBroadcastChatUserNames_Response.PersonaName.
 * Use `create(CBroadcast_GetBroadcastChatUserNames_Response_PersonaNameSchema)` to create a new message.
 */
export const CBroadcast_GetBroadcastChatUserNames_Response_PersonaNameSchema: GenMessage<CBroadcast_GetBroadcastChatUserNames_Response_PersonaName> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 31, 0);

/**
 * @generated from message CBroadcast_StartBuildClip_Request
 */
export type CBroadcast_StartBuildClip_Request = Message<"CBroadcast_StartBuildClip_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional fixed64 broadcast_session_id = 2;
   */
  broadcastSessionId: bigint;

  /**
   * @generated from field: optional int32 first_segment = 3;
   */
  firstSegment: number;

  /**
   * @generated from field: optional int32 num_segments = 4;
   */
  numSegments: number;

  /**
   * @generated from field: optional string clip_description = 5;
   */
  clipDescription: string;
};

/**
 * Describes the message CBroadcast_StartBuildClip_Request.
 * Use `create(CBroadcast_StartBuildClip_RequestSchema)` to create a new message.
 */
export const CBroadcast_StartBuildClip_RequestSchema: GenMessage<CBroadcast_StartBuildClip_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 32);

/**
 * @generated from message CBroadcast_StartBuildClip_Response
 */
export type CBroadcast_StartBuildClip_Response = Message<"CBroadcast_StartBuildClip_Response"> & {
  /**
   * @generated from field: optional fixed64 broadcast_clip_id = 1;
   */
  broadcastClipId: bigint;
};

/**
 * Describes the message CBroadcast_StartBuildClip_Response.
 * Use `create(CBroadcast_StartBuildClip_ResponseSchema)` to create a new message.
 */
export const CBroadcast_StartBuildClip_ResponseSchema: GenMessage<CBroadcast_StartBuildClip_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 33);

/**
 * @generated from message CBroadcast_GetBuildClipStatus_Request
 */
export type CBroadcast_GetBuildClipStatus_Request = Message<"CBroadcast_GetBuildClipStatus_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcast_clip_id = 1;
   */
  broadcastClipId: bigint;
};

/**
 * Describes the message CBroadcast_GetBuildClipStatus_Request.
 * Use `create(CBroadcast_GetBuildClipStatus_RequestSchema)` to create a new message.
 */
export const CBroadcast_GetBuildClipStatus_RequestSchema: GenMessage<CBroadcast_GetBuildClipStatus_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 34);

/**
 * @generated from message CBroadcast_GetBuildClipStatus_Response
 */
export type CBroadcast_GetBuildClipStatus_Response = Message<"CBroadcast_GetBuildClipStatus_Response"> & {
};

/**
 * Describes the message CBroadcast_GetBuildClipStatus_Response.
 * Use `create(CBroadcast_GetBuildClipStatus_ResponseSchema)` to create a new message.
 */
export const CBroadcast_GetBuildClipStatus_ResponseSchema: GenMessage<CBroadcast_GetBuildClipStatus_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 35);

/**
 * @generated from message CBroadcast_SetClipDetails_Request
 */
export type CBroadcast_SetClipDetails_Request = Message<"CBroadcast_SetClipDetails_Request"> & {
  /**
   * @generated from field: optional uint64 broadcast_clip_id = 1;
   */
  broadcastClipId: bigint;

  /**
   * @generated from field: optional uint32 start_time = 2;
   */
  startTime: number;

  /**
   * @generated from field: optional uint32 end_time = 3;
   */
  endTime: number;

  /**
   * @generated from field: optional string video_description = 4;
   */
  videoDescription: string;
};

/**
 * Describes the message CBroadcast_SetClipDetails_Request.
 * Use `create(CBroadcast_SetClipDetails_RequestSchema)` to create a new message.
 */
export const CBroadcast_SetClipDetails_RequestSchema: GenMessage<CBroadcast_SetClipDetails_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 36);

/**
 * @generated from message CBroadcast_SetClipDetails_Response
 */
export type CBroadcast_SetClipDetails_Response = Message<"CBroadcast_SetClipDetails_Response"> & {
};

/**
 * Describes the message CBroadcast_SetClipDetails_Response.
 * Use `create(CBroadcast_SetClipDetails_ResponseSchema)` to create a new message.
 */
export const CBroadcast_SetClipDetails_ResponseSchema: GenMessage<CBroadcast_SetClipDetails_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 37);

/**
 * @generated from message CBroadcast_GetClipDetails_Request
 */
export type CBroadcast_GetClipDetails_Request = Message<"CBroadcast_GetClipDetails_Request"> & {
  /**
   * @generated from field: optional uint64 broadcast_clip_id = 1;
   */
  broadcastClipId: bigint;
};

/**
 * Describes the message CBroadcast_GetClipDetails_Request.
 * Use `create(CBroadcast_GetClipDetails_RequestSchema)` to create a new message.
 */
export const CBroadcast_GetClipDetails_RequestSchema: GenMessage<CBroadcast_GetClipDetails_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 38);

/**
 * @generated from message CBroadcast_GetClipDetails_Response
 */
export type CBroadcast_GetClipDetails_Response = Message<"CBroadcast_GetClipDetails_Response"> & {
  /**
   * @generated from field: optional uint64 broadcast_clip_id = 1;
   */
  broadcastClipId: bigint;

  /**
   * @generated from field: optional uint64 video_id = 2;
   */
  videoId: bigint;

  /**
   * @generated from field: optional uint64 channel_id = 3;
   */
  channelId: bigint;

  /**
   * @generated from field: optional uint32 app_id = 4;
   */
  appId: number;

  /**
   * @generated from field: optional uint32 accountid_broadcaster = 5;
   */
  accountidBroadcaster: number;

  /**
   * @generated from field: optional uint32 accountid_clipmaker = 6;
   */
  accountidClipmaker: number;

  /**
   * @generated from field: optional string video_description = 7;
   */
  videoDescription: string;

  /**
   * @generated from field: optional uint32 start_time = 8;
   */
  startTime: number;

  /**
   * @generated from field: optional uint32 length_milliseconds = 9;
   */
  lengthMilliseconds: number;

  /**
   * @generated from field: optional string thumbnail_path = 10;
   */
  thumbnailPath: string;
};

/**
 * Describes the message CBroadcast_GetClipDetails_Response.
 * Use `create(CBroadcast_GetClipDetails_ResponseSchema)` to create a new message.
 */
export const CBroadcast_GetClipDetails_ResponseSchema: GenMessage<CBroadcast_GetClipDetails_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 39);

/**
 * @generated from message CBroadcast_SetRTMPInfo_Request
 */
export type CBroadcast_SetRTMPInfo_Request = Message<"CBroadcast_SetRTMPInfo_Request"> & {
  /**
   * @generated from field: optional int32 broadcast_permission = 1;
   */
  broadcastPermission: number;

  /**
   * @generated from field: optional bool update_token = 2;
   */
  updateToken: boolean;

  /**
   * @generated from field: optional int32 broadcast_delay = 3;
   */
  broadcastDelay: number;

  /**
   * @generated from field: optional uint32 app_id = 4;
   */
  appId: number;

  /**
   * @generated from field: optional uint32 required_app_id = 5;
   */
  requiredAppId: number;

  /**
   * @generated from field: optional EBroadcastChatPermission broadcast_chat_permission = 6 [default = k_EBroadcastChatPermissionPublic];
   */
  broadcastChatPermission: EBroadcastChatPermission;

  /**
   * @generated from field: optional int32 broadcast_buffer = 7;
   */
  broadcastBuffer: number;

  /**
   * @generated from field: optional fixed64 steamid = 8;
   */
  steamid: bigint;

  /**
   * @generated from field: optional uint32 chat_rate_limit = 9;
   */
  chatRateLimit: number;

  /**
   * @generated from field: optional bool enable_replay = 10;
   */
  enableReplay: boolean;

  /**
   * @generated from field: optional bool is_partner_chat_only = 11;
   */
  isPartnerChatOnly: boolean;

  /**
   * @generated from field: optional string wordban_list = 12;
   */
  wordbanList: string;
};

/**
 * Describes the message CBroadcast_SetRTMPInfo_Request.
 * Use `create(CBroadcast_SetRTMPInfo_RequestSchema)` to create a new message.
 */
export const CBroadcast_SetRTMPInfo_RequestSchema: GenMessage<CBroadcast_SetRTMPInfo_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 40);

/**
 * @generated from message CBroadcast_SetRTMPInfo_Response
 */
export type CBroadcast_SetRTMPInfo_Response = Message<"CBroadcast_SetRTMPInfo_Response"> & {
};

/**
 * Describes the message CBroadcast_SetRTMPInfo_Response.
 * Use `create(CBroadcast_SetRTMPInfo_ResponseSchema)` to create a new message.
 */
export const CBroadcast_SetRTMPInfo_ResponseSchema: GenMessage<CBroadcast_SetRTMPInfo_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 41);

/**
 * @generated from message CBroadcast_GetRTMPInfo_Request
 */
export type CBroadcast_GetRTMPInfo_Request = Message<"CBroadcast_GetRTMPInfo_Request"> & {
  /**
   * @generated from field: optional uint32 ip = 1;
   */
  ip: number;

  /**
   * @generated from field: optional fixed64 steamid = 2;
   */
  steamid: bigint;
};

/**
 * Describes the message CBroadcast_GetRTMPInfo_Request.
 * Use `create(CBroadcast_GetRTMPInfo_RequestSchema)` to create a new message.
 */
export const CBroadcast_GetRTMPInfo_RequestSchema: GenMessage<CBroadcast_GetRTMPInfo_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 42);

/**
 * @generated from message CBroadcast_GetRTMPInfo_Response
 */
export type CBroadcast_GetRTMPInfo_Response = Message<"CBroadcast_GetRTMPInfo_Response"> & {
  /**
   * @generated from field: optional int32 broadcast_permission = 1;
   */
  broadcastPermission: number;

  /**
   * @generated from field: optional string rtmp_host = 2;
   */
  rtmpHost: string;

  /**
   * @generated from field: optional string rtmp_token = 3;
   */
  rtmpToken: string;

  /**
   * @generated from field: optional int32 broadcast_delay = 4;
   */
  broadcastDelay: number;

  /**
   * @generated from field: optional uint32 app_id = 5;
   */
  appId: number;

  /**
   * @generated from field: optional uint32 required_app_id = 6;
   */
  requiredAppId: number;

  /**
   * @generated from field: optional EBroadcastChatPermission broadcast_chat_permission = 7 [default = k_EBroadcastChatPermissionPublic];
   */
  broadcastChatPermission: EBroadcastChatPermission;

  /**
   * @generated from field: optional int32 broadcast_buffer = 8;
   */
  broadcastBuffer: number;

  /**
   * @generated from field: optional fixed64 steamid = 9;
   */
  steamid: bigint;

  /**
   * @generated from field: optional uint32 chat_rate_limit = 10;
   */
  chatRateLimit: number;

  /**
   * @generated from field: optional bool enable_replay = 11;
   */
  enableReplay: boolean;

  /**
   * @generated from field: optional bool is_partner_chat_only = 12;
   */
  isPartnerChatOnly: boolean;

  /**
   * @generated from field: optional string wordban_list = 13;
   */
  wordbanList: string;
};

/**
 * Describes the message CBroadcast_GetRTMPInfo_Response.
 * Use `create(CBroadcast_GetRTMPInfo_ResponseSchema)` to create a new message.
 */
export const CBroadcast_GetRTMPInfo_ResponseSchema: GenMessage<CBroadcast_GetRTMPInfo_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 43);

/**
 * @generated from message CBroadcast_WebRTCHaveTURNServer_Notification
 */
export type CBroadcast_WebRTCHaveTURNServer_Notification = Message<"CBroadcast_WebRTCHaveTURNServer_Notification"> & {
  /**
   * @generated from field: optional fixed64 broadcast_session_id = 1;
   */
  broadcastSessionId: bigint;

  /**
   * @generated from field: optional string turn_server = 2;
   */
  turnServer: string;
};

/**
 * Describes the message CBroadcast_WebRTCHaveTURNServer_Notification.
 * Use `create(CBroadcast_WebRTCHaveTURNServer_NotificationSchema)` to create a new message.
 */
export const CBroadcast_WebRTCHaveTURNServer_NotificationSchema: GenMessage<CBroadcast_WebRTCHaveTURNServer_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 44);

/**
 * @generated from message CBroadcast_WebRTCStartResult_Request
 */
export type CBroadcast_WebRTCStartResult_Request = Message<"CBroadcast_WebRTCStartResult_Request"> & {
  /**
   * @generated from field: optional fixed64 webrtc_session_id = 1;
   */
  webrtcSessionId: bigint;

  /**
   * @generated from field: optional bool started = 2;
   */
  started: boolean;

  /**
   * @generated from field: optional string offer = 3;
   */
  offer: string;

  /**
   * @generated from field: optional uint32 resolution_x = 4;
   */
  resolutionX: number;

  /**
   * @generated from field: optional uint32 resolution_y = 5;
   */
  resolutionY: number;

  /**
   * @generated from field: optional uint32 fps = 6;
   */
  fps: number;
};

/**
 * Describes the message CBroadcast_WebRTCStartResult_Request.
 * Use `create(CBroadcast_WebRTCStartResult_RequestSchema)` to create a new message.
 */
export const CBroadcast_WebRTCStartResult_RequestSchema: GenMessage<CBroadcast_WebRTCStartResult_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 45);

/**
 * @generated from message CBroadcast_WebRTCStartResult_Response
 */
export type CBroadcast_WebRTCStartResult_Response = Message<"CBroadcast_WebRTCStartResult_Response"> & {
};

/**
 * Describes the message CBroadcast_WebRTCStartResult_Response.
 * Use `create(CBroadcast_WebRTCStartResult_ResponseSchema)` to create a new message.
 */
export const CBroadcast_WebRTCStartResult_ResponseSchema: GenMessage<CBroadcast_WebRTCStartResult_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 46);

/**
 * @generated from message CBroadcast_WebRTCStopped_Request
 */
export type CBroadcast_WebRTCStopped_Request = Message<"CBroadcast_WebRTCStopped_Request"> & {
  /**
   * @generated from field: optional fixed64 webrtc_session_id = 1;
   */
  webrtcSessionId: bigint;
};

/**
 * Describes the message CBroadcast_WebRTCStopped_Request.
 * Use `create(CBroadcast_WebRTCStopped_RequestSchema)` to create a new message.
 */
export const CBroadcast_WebRTCStopped_RequestSchema: GenMessage<CBroadcast_WebRTCStopped_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 47);

/**
 * @generated from message CBroadcast_WebRTCStopped_Response
 */
export type CBroadcast_WebRTCStopped_Response = Message<"CBroadcast_WebRTCStopped_Response"> & {
};

/**
 * Describes the message CBroadcast_WebRTCStopped_Response.
 * Use `create(CBroadcast_WebRTCStopped_ResponseSchema)` to create a new message.
 */
export const CBroadcast_WebRTCStopped_ResponseSchema: GenMessage<CBroadcast_WebRTCStopped_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 48);

/**
 * @generated from message CBroadcast_WebRTCSetAnswer_Request
 */
export type CBroadcast_WebRTCSetAnswer_Request = Message<"CBroadcast_WebRTCSetAnswer_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcaster_steamid = 1;
   */
  broadcasterSteamid: bigint;

  /**
   * @generated from field: optional fixed64 webrtc_session_id = 2;
   */
  webrtcSessionId: bigint;

  /**
   * @generated from field: optional string answer = 3;
   */
  answer: string;
};

/**
 * Describes the message CBroadcast_WebRTCSetAnswer_Request.
 * Use `create(CBroadcast_WebRTCSetAnswer_RequestSchema)` to create a new message.
 */
export const CBroadcast_WebRTCSetAnswer_RequestSchema: GenMessage<CBroadcast_WebRTCSetAnswer_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 49);

/**
 * @generated from message CBroadcast_WebRTCSetAnswer_Response
 */
export type CBroadcast_WebRTCSetAnswer_Response = Message<"CBroadcast_WebRTCSetAnswer_Response"> & {
};

/**
 * Describes the message CBroadcast_WebRTCSetAnswer_Response.
 * Use `create(CBroadcast_WebRTCSetAnswer_ResponseSchema)` to create a new message.
 */
export const CBroadcast_WebRTCSetAnswer_ResponseSchema: GenMessage<CBroadcast_WebRTCSetAnswer_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 50);

/**
 * @generated from message CBroadcast_WebRTCLookupTURNServer_Request
 */
export type CBroadcast_WebRTCLookupTURNServer_Request = Message<"CBroadcast_WebRTCLookupTURNServer_Request"> & {
  /**
   * @generated from field: optional uint32 cellid = 1;
   */
  cellid: number;
};

/**
 * Describes the message CBroadcast_WebRTCLookupTURNServer_Request.
 * Use `create(CBroadcast_WebRTCLookupTURNServer_RequestSchema)` to create a new message.
 */
export const CBroadcast_WebRTCLookupTURNServer_RequestSchema: GenMessage<CBroadcast_WebRTCLookupTURNServer_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 51);

/**
 * @generated from message CBroadcast_WebRTCLookupTURNServer_Response
 */
export type CBroadcast_WebRTCLookupTURNServer_Response = Message<"CBroadcast_WebRTCLookupTURNServer_Response"> & {
  /**
   * @generated from field: optional string turn_server = 1;
   */
  turnServer: string;
};

/**
 * Describes the message CBroadcast_WebRTCLookupTURNServer_Response.
 * Use `create(CBroadcast_WebRTCLookupTURNServer_ResponseSchema)` to create a new message.
 */
export const CBroadcast_WebRTCLookupTURNServer_ResponseSchema: GenMessage<CBroadcast_WebRTCLookupTURNServer_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 52);

/**
 * @generated from message CBroadcast_WebRTC_Candidate
 */
export type CBroadcast_WebRTC_Candidate = Message<"CBroadcast_WebRTC_Candidate"> & {
  /**
   * @generated from field: optional string sdp_mid = 1;
   */
  sdpMid: string;

  /**
   * @generated from field: optional int32 sdp_mline_index = 2;
   */
  sdpMlineIndex: number;

  /**
   * @generated from field: optional string candidate = 3;
   */
  candidate: string;
};

/**
 * Describes the message CBroadcast_WebRTC_Candidate.
 * Use `create(CBroadcast_WebRTC_CandidateSchema)` to create a new message.
 */
export const CBroadcast_WebRTC_CandidateSchema: GenMessage<CBroadcast_WebRTC_Candidate> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 53);

/**
 * @generated from message CBroadcast_WebRTCAddHostCandidate_Request
 */
export type CBroadcast_WebRTCAddHostCandidate_Request = Message<"CBroadcast_WebRTCAddHostCandidate_Request"> & {
  /**
   * @generated from field: optional fixed64 webrtc_session_id = 1;
   */
  webrtcSessionId: bigint;

  /**
   * @generated from field: optional CBroadcast_WebRTC_Candidate candidate = 2;
   */
  candidate?: CBroadcast_WebRTC_Candidate;
};

/**
 * Describes the message CBroadcast_WebRTCAddHostCandidate_Request.
 * Use `create(CBroadcast_WebRTCAddHostCandidate_RequestSchema)` to create a new message.
 */
export const CBroadcast_WebRTCAddHostCandidate_RequestSchema: GenMessage<CBroadcast_WebRTCAddHostCandidate_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 54);

/**
 * @generated from message CBroadcast_WebRTCAddHostCandidate_Response
 */
export type CBroadcast_WebRTCAddHostCandidate_Response = Message<"CBroadcast_WebRTCAddHostCandidate_Response"> & {
};

/**
 * Describes the message CBroadcast_WebRTCAddHostCandidate_Response.
 * Use `create(CBroadcast_WebRTCAddHostCandidate_ResponseSchema)` to create a new message.
 */
export const CBroadcast_WebRTCAddHostCandidate_ResponseSchema: GenMessage<CBroadcast_WebRTCAddHostCandidate_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 55);

/**
 * @generated from message CBroadcast_WebRTCAddViewerCandidate_Request
 */
export type CBroadcast_WebRTCAddViewerCandidate_Request = Message<"CBroadcast_WebRTCAddViewerCandidate_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcaster_steamid = 1;
   */
  broadcasterSteamid: bigint;

  /**
   * @generated from field: optional fixed64 webrtc_session_id = 2;
   */
  webrtcSessionId: bigint;

  /**
   * @generated from field: optional CBroadcast_WebRTC_Candidate candidate = 3;
   */
  candidate?: CBroadcast_WebRTC_Candidate;
};

/**
 * Describes the message CBroadcast_WebRTCAddViewerCandidate_Request.
 * Use `create(CBroadcast_WebRTCAddViewerCandidate_RequestSchema)` to create a new message.
 */
export const CBroadcast_WebRTCAddViewerCandidate_RequestSchema: GenMessage<CBroadcast_WebRTCAddViewerCandidate_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 56);

/**
 * @generated from message CBroadcast_WebRTCAddViewerCandidate_Response
 */
export type CBroadcast_WebRTCAddViewerCandidate_Response = Message<"CBroadcast_WebRTCAddViewerCandidate_Response"> & {
};

/**
 * Describes the message CBroadcast_WebRTCAddViewerCandidate_Response.
 * Use `create(CBroadcast_WebRTCAddViewerCandidate_ResponseSchema)` to create a new message.
 */
export const CBroadcast_WebRTCAddViewerCandidate_ResponseSchema: GenMessage<CBroadcast_WebRTCAddViewerCandidate_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 57);

/**
 * @generated from message CBroadcast_WebRTCGetHostCandidates_Request
 */
export type CBroadcast_WebRTCGetHostCandidates_Request = Message<"CBroadcast_WebRTCGetHostCandidates_Request"> & {
  /**
   * @generated from field: optional fixed64 broadcaster_steamid = 1;
   */
  broadcasterSteamid: bigint;

  /**
   * @generated from field: optional fixed64 webrtc_session_id = 2;
   */
  webrtcSessionId: bigint;

  /**
   * @generated from field: optional uint32 candidate_generation = 3;
   */
  candidateGeneration: number;
};

/**
 * Describes the message CBroadcast_WebRTCGetHostCandidates_Request.
 * Use `create(CBroadcast_WebRTCGetHostCandidates_RequestSchema)` to create a new message.
 */
export const CBroadcast_WebRTCGetHostCandidates_RequestSchema: GenMessage<CBroadcast_WebRTCGetHostCandidates_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 58);

/**
 * @generated from message CBroadcast_WebRTCGetHostCandidates_Response
 */
export type CBroadcast_WebRTCGetHostCandidates_Response = Message<"CBroadcast_WebRTCGetHostCandidates_Response"> & {
  /**
   * @generated from field: optional uint32 candidate_generation = 1;
   */
  candidateGeneration: number;

  /**
   * @generated from field: repeated CBroadcast_WebRTC_Candidate candidates = 2;
   */
  candidates: CBroadcast_WebRTC_Candidate[];
};

/**
 * Describes the message CBroadcast_WebRTCGetHostCandidates_Response.
 * Use `create(CBroadcast_WebRTCGetHostCandidates_ResponseSchema)` to create a new message.
 */
export const CBroadcast_WebRTCGetHostCandidates_ResponseSchema: GenMessage<CBroadcast_WebRTCGetHostCandidates_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 59);

/**
 * @generated from message CBroadcast_GetBroadcastUploadStats_Request
 */
export type CBroadcast_GetBroadcastUploadStats_Request = Message<"CBroadcast_GetBroadcastUploadStats_Request"> & {
  /**
   * @generated from field: optional uint32 row_limit = 1 [default = 100];
   */
  rowLimit: number;

  /**
   * @generated from field: optional uint32 start_time = 2 [default = 0];
   */
  startTime: number;

  /**
   * @generated from field: optional uint64 upload_id = 3;
   */
  uploadId: bigint;

  /**
   * @generated from field: optional fixed64 steamid = 4;
   */
  steamid: bigint;

  /**
   * @generated from field: optional uint64 session_id = 5;
   */
  sessionId: bigint;
};

/**
 * Describes the message CBroadcast_GetBroadcastUploadStats_Request.
 * Use `create(CBroadcast_GetBroadcastUploadStats_RequestSchema)` to create a new message.
 */
export const CBroadcast_GetBroadcastUploadStats_RequestSchema: GenMessage<CBroadcast_GetBroadcastUploadStats_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 60);

/**
 * @generated from message CBroadcast_GetBroadcastUploadStats_Response
 */
export type CBroadcast_GetBroadcastUploadStats_Response = Message<"CBroadcast_GetBroadcastUploadStats_Response"> & {
  /**
   * @generated from field: repeated CBroadcast_GetBroadcastUploadStats_Response.UploadStats upload_stats = 1;
   */
  uploadStats: CBroadcast_GetBroadcastUploadStats_Response_UploadStats[];
};

/**
 * Describes the message CBroadcast_GetBroadcastUploadStats_Response.
 * Use `create(CBroadcast_GetBroadcastUploadStats_ResponseSchema)` to create a new message.
 */
export const CBroadcast_GetBroadcastUploadStats_ResponseSchema: GenMessage<CBroadcast_GetBroadcastUploadStats_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 61);

/**
 * @generated from message CBroadcast_GetBroadcastUploadStats_Response.UploadStats
 */
export type CBroadcast_GetBroadcastUploadStats_Response_UploadStats = Message<"CBroadcast_GetBroadcastUploadStats_Response.UploadStats"> & {
  /**
   * @generated from field: optional uint32 upload_result = 1;
   */
  uploadResult: number;

  /**
   * @generated from field: optional uint32 time_stopped = 2;
   */
  timeStopped: number;

  /**
   * @generated from field: optional uint32 seconds_uploaded = 3;
   */
  secondsUploaded: number;

  /**
   * @generated from field: optional uint32 max_viewers = 4;
   */
  maxViewers: number;

  /**
   * @generated from field: optional uint32 resolution_x = 5;
   */
  resolutionX: number;

  /**
   * @generated from field: optional uint32 resolution_y = 6;
   */
  resolutionY: number;

  /**
   * @generated from field: optional uint32 avg_bandwidth = 7;
   */
  avgBandwidth: number;

  /**
   * @generated from field: optional uint64 total_bytes = 8;
   */
  totalBytes: bigint;

  /**
   * @generated from field: optional uint32 app_id = 9;
   */
  appId: number;

  /**
   * @generated from field: optional uint32 total_unique_viewers = 10;
   */
  totalUniqueViewers: number;

  /**
   * @generated from field: optional uint64 total_seconds_watched = 11;
   */
  totalSecondsWatched: bigint;

  /**
   * @generated from field: optional uint32 time_started = 12;
   */
  timeStarted: number;

  /**
   * @generated from field: optional uint64 upload_id = 13;
   */
  uploadId: bigint;

  /**
   * @generated from field: optional string local_address = 14;
   */
  localAddress: string;

  /**
   * @generated from field: optional string remote_address = 15;
   */
  remoteAddress: string;

  /**
   * @generated from field: optional uint32 frames_per_second = 16;
   */
  framesPerSecond: number;

  /**
   * @generated from field: optional uint32 num_representations = 17;
   */
  numRepresentations: number;

  /**
   * @generated from field: optional string app_name = 18;
   */
  appName: string;

  /**
   * @generated from field: optional bool is_replay = 19;
   */
  isReplay: boolean;

  /**
   * @generated from field: optional uint64 session_id = 20;
   */
  sessionId: bigint;
};

/**
 * Describes the message CBroadcast_GetBroadcastUploadStats_Response.UploadStats.
 * Use `create(CBroadcast_GetBroadcastUploadStats_Response_UploadStatsSchema)` to create a new message.
 */
export const CBroadcast_GetBroadcastUploadStats_Response_UploadStatsSchema: GenMessage<CBroadcast_GetBroadcastUploadStats_Response_UploadStats> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 61, 0);

/**
 * @generated from message CBroadcast_GetBroadcastViewerStats_Request
 */
export type CBroadcast_GetBroadcastViewerStats_Request = Message<"CBroadcast_GetBroadcastViewerStats_Request"> & {
  /**
   * @generated from field: optional uint64 upload_id = 1;
   */
  uploadId: bigint;

  /**
   * @generated from field: optional fixed64 steamid = 2;
   */
  steamid: bigint;
};

/**
 * Describes the message CBroadcast_GetBroadcastViewerStats_Request.
 * Use `create(CBroadcast_GetBroadcastViewerStats_RequestSchema)` to create a new message.
 */
export const CBroadcast_GetBroadcastViewerStats_RequestSchema: GenMessage<CBroadcast_GetBroadcastViewerStats_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 62);

/**
 * @generated from message CBroadcast_GetBroadcastViewerStats_Response
 */
export type CBroadcast_GetBroadcastViewerStats_Response = Message<"CBroadcast_GetBroadcastViewerStats_Response"> & {
  /**
   * @generated from field: repeated CBroadcast_GetBroadcastViewerStats_Response.ViewerStats viewer_stats = 1;
   */
  viewerStats: CBroadcast_GetBroadcastViewerStats_Response_ViewerStats[];

  /**
   * @generated from field: repeated CBroadcast_GetBroadcastViewerStats_Response.CountryStats country_stats = 2;
   */
  countryStats: CBroadcast_GetBroadcastViewerStats_Response_CountryStats[];
};

/**
 * Describes the message CBroadcast_GetBroadcastViewerStats_Response.
 * Use `create(CBroadcast_GetBroadcastViewerStats_ResponseSchema)` to create a new message.
 */
export const CBroadcast_GetBroadcastViewerStats_ResponseSchema: GenMessage<CBroadcast_GetBroadcastViewerStats_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 63);

/**
 * @generated from message CBroadcast_GetBroadcastViewerStats_Response.ViewerStats
 */
export type CBroadcast_GetBroadcastViewerStats_Response_ViewerStats = Message<"CBroadcast_GetBroadcastViewerStats_Response.ViewerStats"> & {
  /**
   * @generated from field: optional uint32 time = 1;
   */
  time: number;

  /**
   * @generated from field: optional uint32 num_viewers = 2;
   */
  numViewers: number;
};

/**
 * Describes the message CBroadcast_GetBroadcastViewerStats_Response.ViewerStats.
 * Use `create(CBroadcast_GetBroadcastViewerStats_Response_ViewerStatsSchema)` to create a new message.
 */
export const CBroadcast_GetBroadcastViewerStats_Response_ViewerStatsSchema: GenMessage<CBroadcast_GetBroadcastViewerStats_Response_ViewerStats> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 63, 0);

/**
 * @generated from message CBroadcast_GetBroadcastViewerStats_Response.CountryStats
 */
export type CBroadcast_GetBroadcastViewerStats_Response_CountryStats = Message<"CBroadcast_GetBroadcastViewerStats_Response.CountryStats"> & {
  /**
   * @generated from field: optional string country_code = 1;
   */
  countryCode: string;

  /**
   * @generated from field: optional uint32 num_viewers = 2;
   */
  numViewers: number;
};

/**
 * Describes the message CBroadcast_GetBroadcastViewerStats_Response.CountryStats.
 * Use `create(CBroadcast_GetBroadcastViewerStats_Response_CountryStatsSchema)` to create a new message.
 */
export const CBroadcast_GetBroadcastViewerStats_Response_CountryStatsSchema: GenMessage<CBroadcast_GetBroadcastViewerStats_Response_CountryStats> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 63, 1);

/**
 * @generated from message CBroadcast_BroadcastViewerState_Notification
 */
export type CBroadcast_BroadcastViewerState_Notification = Message<"CBroadcast_BroadcastViewerState_Notification"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional CBroadcast_BroadcastViewerState_Notification.EViewerState state = 2 [default = k_EViewerNeedsApproval];
   */
  state: CBroadcast_BroadcastViewerState_Notification_EViewerState;
};

/**
 * Describes the message CBroadcast_BroadcastViewerState_Notification.
 * Use `create(CBroadcast_BroadcastViewerState_NotificationSchema)` to create a new message.
 */
export const CBroadcast_BroadcastViewerState_NotificationSchema: GenMessage<CBroadcast_BroadcastViewerState_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 64);

/**
 * @generated from enum CBroadcast_BroadcastViewerState_Notification.EViewerState
 */
export enum CBroadcast_BroadcastViewerState_Notification_EViewerState {
  /**
   * @generated from enum value: k_EViewerNeedsApproval = 1;
   */
  k_EViewerNeedsApproval = 1,

  /**
   * @generated from enum value: k_EViewerWatching = 2;
   */
  k_EViewerWatching = 2,

  /**
   * @generated from enum value: k_EViewerLeft = 3;
   */
  k_EViewerLeft = 3,
}

/**
 * Describes the enum CBroadcast_BroadcastViewerState_Notification.EViewerState.
 */
export const CBroadcast_BroadcastViewerState_Notification_EViewerStateSchema: GenEnum<CBroadcast_BroadcastViewerState_Notification_EViewerState> = /*@__PURE__*/
  enumDesc(file_steammessages_broadcast_steamclient, 64, 0);

/**
 * @generated from message CBroadcast_WaitingBroadcastViewer_Notification
 */
export type CBroadcast_WaitingBroadcastViewer_Notification = Message<"CBroadcast_WaitingBroadcastViewer_Notification"> & {
  /**
   * @generated from field: optional fixed64 broadcast_id = 1;
   */
  broadcastId: bigint;
};

/**
 * Describes the message CBroadcast_WaitingBroadcastViewer_Notification.
 * Use `create(CBroadcast_WaitingBroadcastViewer_NotificationSchema)` to create a new message.
 */
export const CBroadcast_WaitingBroadcastViewer_NotificationSchema: GenMessage<CBroadcast_WaitingBroadcastViewer_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 65);

/**
 * @generated from message CBroadcast_BroadcastUploadStarted_Notification
 */
export type CBroadcast_BroadcastUploadStarted_Notification = Message<"CBroadcast_BroadcastUploadStarted_Notification"> & {
  /**
   * @generated from field: optional fixed64 broadcast_id = 1;
   */
  broadcastId: bigint;

  /**
   * @generated from field: optional string upload_token = 2;
   */
  uploadToken: string;

  /**
   * @generated from field: optional string upload_address = 3;
   */
  uploadAddress: string;

  /**
   * @generated from field: optional string http_address = 4;
   */
  httpAddress: string;

  /**
   * @generated from field: optional fixed64 broadcast_upload_id = 5;
   */
  broadcastUploadId: bigint;

  /**
   * @generated from field: optional uint32 heartbeat_interval_seconds = 6;
   */
  heartbeatIntervalSeconds: number;

  /**
   * @generated from field: optional bool is_rtmp = 7;
   */
  isRtmp: boolean;
};

/**
 * Describes the message CBroadcast_BroadcastUploadStarted_Notification.
 * Use `create(CBroadcast_BroadcastUploadStarted_NotificationSchema)` to create a new message.
 */
export const CBroadcast_BroadcastUploadStarted_NotificationSchema: GenMessage<CBroadcast_BroadcastUploadStarted_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 66);

/**
 * @generated from message CBroadcast_StopBroadcastUpload_Notification
 */
export type CBroadcast_StopBroadcastUpload_Notification = Message<"CBroadcast_StopBroadcastUpload_Notification"> & {
  /**
   * @generated from field: optional fixed64 broadcast_id = 1;
   */
  broadcastId: bigint;

  /**
   * @generated from field: optional fixed64 broadcast_relay_id = 2;
   */
  broadcastRelayId: bigint;

  /**
   * @generated from field: optional uint32 upload_result = 3;
   */
  uploadResult: number;

  /**
   * @generated from field: optional bool too_many_poor_uploads = 4;
   */
  tooManyPoorUploads: boolean;
};

/**
 * Describes the message CBroadcast_StopBroadcastUpload_Notification.
 * Use `create(CBroadcast_StopBroadcastUpload_NotificationSchema)` to create a new message.
 */
export const CBroadcast_StopBroadcastUpload_NotificationSchema: GenMessage<CBroadcast_StopBroadcastUpload_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 67);

/**
 * @generated from message CBroadcast_SessionClosed_Notification
 */
export type CBroadcast_SessionClosed_Notification = Message<"CBroadcast_SessionClosed_Notification"> & {
  /**
   * @generated from field: optional fixed64 broadcast_id = 1;
   */
  broadcastId: bigint;
};

/**
 * Describes the message CBroadcast_SessionClosed_Notification.
 * Use `create(CBroadcast_SessionClosed_NotificationSchema)` to create a new message.
 */
export const CBroadcast_SessionClosed_NotificationSchema: GenMessage<CBroadcast_SessionClosed_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 68);

/**
 * @generated from message CBroadcast_ViewerBroadcastInvite_Notification
 */
export type CBroadcast_ViewerBroadcastInvite_Notification = Message<"CBroadcast_ViewerBroadcastInvite_Notification"> & {
  /**
   * @generated from field: optional fixed64 broadcaster_steamid = 1;
   */
  broadcasterSteamid: bigint;
};

/**
 * Describes the message CBroadcast_ViewerBroadcastInvite_Notification.
 * Use `create(CBroadcast_ViewerBroadcastInvite_NotificationSchema)` to create a new message.
 */
export const CBroadcast_ViewerBroadcastInvite_NotificationSchema: GenMessage<CBroadcast_ViewerBroadcastInvite_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 69);

/**
 * @generated from message CBroadcast_BroadcastStatus_Notification
 */
export type CBroadcast_BroadcastStatus_Notification = Message<"CBroadcast_BroadcastStatus_Notification"> & {
  /**
   * @generated from field: optional fixed64 broadcast_id = 1;
   */
  broadcastId: bigint;

  /**
   * @generated from field: optional int32 num_viewers = 2;
   */
  numViewers: number;
};

/**
 * Describes the message CBroadcast_BroadcastStatus_Notification.
 * Use `create(CBroadcast_BroadcastStatus_NotificationSchema)` to create a new message.
 */
export const CBroadcast_BroadcastStatus_NotificationSchema: GenMessage<CBroadcast_BroadcastStatus_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 70);

/**
 * @generated from message CBroadcast_BroadcastChannelLive_Notification
 */
export type CBroadcast_BroadcastChannelLive_Notification = Message<"CBroadcast_BroadcastChannelLive_Notification"> & {
  /**
   * @generated from field: optional fixed64 broadcast_channel_id = 1;
   */
  broadcastChannelId: bigint;

  /**
   * @generated from field: optional string broadcast_channel_name = 2;
   */
  broadcastChannelName: string;

  /**
   * @generated from field: optional string broadcast_channel_avatar = 3;
   */
  broadcastChannelAvatar: string;
};

/**
 * Describes the message CBroadcast_BroadcastChannelLive_Notification.
 * Use `create(CBroadcast_BroadcastChannelLive_NotificationSchema)` to create a new message.
 */
export const CBroadcast_BroadcastChannelLive_NotificationSchema: GenMessage<CBroadcast_BroadcastChannelLive_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 71);

/**
 * @generated from message CBroadcast_SendThumbnailToRelay_Notification
 */
export type CBroadcast_SendThumbnailToRelay_Notification = Message<"CBroadcast_SendThumbnailToRelay_Notification"> & {
  /**
   * @generated from field: optional string thumbnail_upload_token = 1;
   */
  thumbnailUploadToken: string;

  /**
   * @generated from field: optional fixed64 thumbnail_broadcast_session_id = 2;
   */
  thumbnailBroadcastSessionId: bigint;

  /**
   * @generated from field: optional bytes thumbnail_data = 3;
   */
  thumbnailData: Uint8Array;

  /**
   * @generated from field: optional uint32 thumbnail_width = 4;
   */
  thumbnailWidth: number;

  /**
   * @generated from field: optional uint32 thumbnail_height = 5;
   */
  thumbnailHeight: number;
};

/**
 * Describes the message CBroadcast_SendThumbnailToRelay_Notification.
 * Use `create(CBroadcast_SendThumbnailToRelay_NotificationSchema)` to create a new message.
 */
export const CBroadcast_SendThumbnailToRelay_NotificationSchema: GenMessage<CBroadcast_SendThumbnailToRelay_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 72);

/**
 * @generated from message CBroadcast_WebRTCNeedTURNServer_Notification
 */
export type CBroadcast_WebRTCNeedTURNServer_Notification = Message<"CBroadcast_WebRTCNeedTURNServer_Notification"> & {
  /**
   * @generated from field: optional fixed64 broadcast_session_id = 1;
   */
  broadcastSessionId: bigint;
};

/**
 * Describes the message CBroadcast_WebRTCNeedTURNServer_Notification.
 * Use `create(CBroadcast_WebRTCNeedTURNServer_NotificationSchema)` to create a new message.
 */
export const CBroadcast_WebRTCNeedTURNServer_NotificationSchema: GenMessage<CBroadcast_WebRTCNeedTURNServer_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 73);

/**
 * @generated from message CBroadcast_WebRTCStart_Notification
 */
export type CBroadcast_WebRTCStart_Notification = Message<"CBroadcast_WebRTCStart_Notification"> & {
  /**
   * @generated from field: optional fixed64 broadcast_session_id = 1;
   */
  broadcastSessionId: bigint;

  /**
   * @generated from field: optional fixed64 webrtc_session_id = 2;
   */
  webrtcSessionId: bigint;

  /**
   * @generated from field: optional fixed64 viewer_steamid = 3;
   */
  viewerSteamid: bigint;

  /**
   * @generated from field: optional fixed64 viewer_token = 4;
   */
  viewerToken: bigint;
};

/**
 * Describes the message CBroadcast_WebRTCStart_Notification.
 * Use `create(CBroadcast_WebRTCStart_NotificationSchema)` to create a new message.
 */
export const CBroadcast_WebRTCStart_NotificationSchema: GenMessage<CBroadcast_WebRTCStart_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 74);

/**
 * @generated from message CBroadcast_WebRTCSetAnswer_Notification
 */
export type CBroadcast_WebRTCSetAnswer_Notification = Message<"CBroadcast_WebRTCSetAnswer_Notification"> & {
  /**
   * @generated from field: optional fixed64 broadcast_session_id = 1;
   */
  broadcastSessionId: bigint;

  /**
   * @generated from field: optional fixed64 webrtc_session_id = 2;
   */
  webrtcSessionId: bigint;

  /**
   * @generated from field: optional string answer = 3;
   */
  answer: string;
};

/**
 * Describes the message CBroadcast_WebRTCSetAnswer_Notification.
 * Use `create(CBroadcast_WebRTCSetAnswer_NotificationSchema)` to create a new message.
 */
export const CBroadcast_WebRTCSetAnswer_NotificationSchema: GenMessage<CBroadcast_WebRTCSetAnswer_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 75);

/**
 * @generated from message CBroadcast_WebRTCAddViewerCandidate_Notification
 */
export type CBroadcast_WebRTCAddViewerCandidate_Notification = Message<"CBroadcast_WebRTCAddViewerCandidate_Notification"> & {
  /**
   * @generated from field: optional fixed64 broadcast_session_id = 1;
   */
  broadcastSessionId: bigint;

  /**
   * @generated from field: optional fixed64 webrtc_session_id = 2;
   */
  webrtcSessionId: bigint;

  /**
   * @generated from field: optional CBroadcast_WebRTC_Candidate candidate = 3;
   */
  candidate?: CBroadcast_WebRTC_Candidate;
};

/**
 * Describes the message CBroadcast_WebRTCAddViewerCandidate_Notification.
 * Use `create(CBroadcast_WebRTCAddViewerCandidate_NotificationSchema)` to create a new message.
 */
export const CBroadcast_WebRTCAddViewerCandidate_NotificationSchema: GenMessage<CBroadcast_WebRTCAddViewerCandidate_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_broadcast_steamclient, 76);

/**
 * @generated from enum EBroadcastWatchLocation
 */
export enum EBroadcastWatchLocation {
  /**
   * @generated from enum value: k_EBroadcastWatchLocation_Invalid = 0;
   */
  k_EBroadcastWatchLocation_Invalid = 0,

  /**
   * @generated from enum value: k_EBroadcastWatchLocation_SteamTV_Tab = 1;
   */
  k_EBroadcastWatchLocation_SteamTV_Tab = 1,

  /**
   * @generated from enum value: k_EBroadcastWatchLocation_SteamTV_WatchParty = 2;
   */
  k_EBroadcastWatchLocation_SteamTV_WatchParty = 2,

  /**
   * @generated from enum value: k_EBroadcastWatchLocation_Chat_Tab = 3;
   */
  k_EBroadcastWatchLocation_Chat_Tab = 3,

  /**
   * @generated from enum value: k_EBroadcastWatchLocation_Chat_WatchParty = 4;
   */
  k_EBroadcastWatchLocation_Chat_WatchParty = 4,

  /**
   * @generated from enum value: k_EBroadcastWatchLocation_CommunityPage = 5;
   */
  k_EBroadcastWatchLocation_CommunityPage = 5,

  /**
   * @generated from enum value: k_EBroadcastWatchLocation_StoreAppPage = 6;
   */
  k_EBroadcastWatchLocation_StoreAppPage = 6,

  /**
   * @generated from enum value: k_EBroadcastWatchLocation_InGame = 7;
   */
  k_EBroadcastWatchLocation_InGame = 7,

  /**
   * @generated from enum value: k_EBroadcastWatchLocation_BigPicture = 8;
   */
  k_EBroadcastWatchLocation_BigPicture = 8,

  /**
   * @generated from enum value: k_EBroadcastWatchLocation_SalesPage = 9;
   */
  k_EBroadcastWatchLocation_SalesPage = 9,

  /**
   * @generated from enum value: k_EBroadcastWatchLocation_CuratorPage = 10;
   */
  k_EBroadcastWatchLocation_CuratorPage = 10,

  /**
   * @generated from enum value: k_EBroadcastWatchLocation_DeveloperPage = 11;
   */
  k_EBroadcastWatchLocation_DeveloperPage = 11,

  /**
   * @generated from enum value: k_EBroadcastWatchLocation_Chat_Friends = 12;
   */
  k_EBroadcastWatchLocation_Chat_Friends = 12,

  /**
   * @generated from enum value: k_EBroadcastWatchLocation_SteamTV_Web = 13;
   */
  k_EBroadcastWatchLocation_SteamTV_Web = 13,

  /**
   * @generated from enum value: k_EBroadcastWatchLocation_DesktopUI_Overlay = 14;
   */
  k_EBroadcastWatchLocation_DesktopUI_Overlay = 14,

  /**
   * @generated from enum value: k_EBroadcastWatchLocation_TrailerCarousel = 15;
   */
  k_EBroadcastWatchLocation_TrailerCarousel = 15,
}

/**
 * Describes the enum EBroadcastWatchLocation.
 */
export const EBroadcastWatchLocationSchema: GenEnum<EBroadcastWatchLocation> = /*@__PURE__*/
  enumDesc(file_steammessages_broadcast_steamclient, 0);

/**
 * @generated from enum EBroadcastChatPermission
 */
export enum EBroadcastChatPermission {
  /**
   * @generated from enum value: k_EBroadcastChatPermissionPublic = 0;
   */
  k_EBroadcastChatPermissionPublic = 0,

  /**
   * @generated from enum value: k_EBroadcastChatPermissionOwnsApp = 1;
   */
  k_EBroadcastChatPermissionOwnsApp = 1,
}

/**
 * Describes the enum EBroadcastChatPermission.
 */
export const EBroadcastChatPermissionSchema: GenEnum<EBroadcastChatPermission> = /*@__PURE__*/
  enumDesc(file_steammessages_broadcast_steamclient, 1);

/**
 * @generated from service Broadcast
 */
export const Broadcast: GenService<{
  /**
   * @generated from rpc Broadcast.BeginBroadcastSession
   */
  beginBroadcastSession: {
    methodKind: "unary";
    input: typeof CBroadcast_BeginBroadcastSession_RequestSchema;
    output: typeof CBroadcast_BeginBroadcastSession_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.EndBroadcastSession
   */
  endBroadcastSession: {
    methodKind: "unary";
    input: typeof CBroadcast_EndBroadcastSession_RequestSchema;
    output: typeof CBroadcast_EndBroadcastSession_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.StartBroadcastUpload
   */
  startBroadcastUpload: {
    methodKind: "unary";
    input: typeof CBroadcast_StartBroadcastUpload_RequestSchema;
    output: typeof CBroadcast_StartBroadcastUpload_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.NotifyBroadcastUploadStop
   */
  notifyBroadcastUploadStop: {
    methodKind: "unary";
    input: typeof CBroadcast_NotifyBroadcastUploadStop_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.WatchBroadcast
   */
  watchBroadcast: {
    methodKind: "unary";
    input: typeof CBroadcast_WatchBroadcast_RequestSchema;
    output: typeof CBroadcast_WatchBroadcast_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.HeartbeatBroadcast
   */
  heartbeatBroadcast: {
    methodKind: "unary";
    input: typeof CBroadcast_HeartbeatBroadcast_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.StopWatchingBroadcast
   */
  stopWatchingBroadcast: {
    methodKind: "unary";
    input: typeof CBroadcast_StopWatchingBroadcast_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.GetBroadcastStatus
   */
  getBroadcastStatus: {
    methodKind: "unary";
    input: typeof CBroadcast_GetBroadcastStatus_RequestSchema;
    output: typeof CBroadcast_GetBroadcastStatus_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.GetBroadcastThumbnail
   */
  getBroadcastThumbnail: {
    methodKind: "unary";
    input: typeof CBroadcast_GetBroadcastThumbnail_RequestSchema;
    output: typeof CBroadcast_GetBroadcastThumbnail_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.InviteToBroadcast
   */
  inviteToBroadcast: {
    methodKind: "unary";
    input: typeof CBroadcast_InviteToBroadcast_RequestSchema;
    output: typeof CBroadcast_InviteToBroadcast_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.SendBroadcastStateToServer
   */
  sendBroadcastStateToServer: {
    methodKind: "unary";
    input: typeof CBroadcast_SendBroadcastStateToServer_RequestSchema;
    output: typeof CBroadcast_SendBroadcastStateToServer_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.NotifyBroadcastSessionHeartbeat
   */
  notifyBroadcastSessionHeartbeat: {
    methodKind: "unary";
    input: typeof CBroadcast_NotifyBroadcastSessionHeartbeat_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.GetBroadcastChatInfo
   */
  getBroadcastChatInfo: {
    methodKind: "unary";
    input: typeof CBroadcast_GetBroadcastChatInfo_RequestSchema;
    output: typeof CBroadcast_GetBroadcastChatInfo_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.PostChatMessage
   */
  postChatMessage: {
    methodKind: "unary";
    input: typeof CBroadcast_PostChatMessage_RequestSchema;
    output: typeof CBroadcast_PostChatMessage_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.UpdateChatMessageFlair
   */
  updateChatMessageFlair: {
    methodKind: "unary";
    input: typeof CBroadcast_UpdateChatMessageFlair_RequestSchema;
    output: typeof CBroadcast_UpdateChatMessageFlair_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.MuteBroadcastChatUser
   */
  muteBroadcastChatUser: {
    methodKind: "unary";
    input: typeof CBroadcast_MuteBroadcastChatUser_RequestSchema;
    output: typeof CBroadcast_MuteBroadcastChatUser_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.RemoveUserChatText
   */
  removeUserChatText: {
    methodKind: "unary";
    input: typeof CBroadcast_RemoveUserChatText_RequestSchema;
    output: typeof CBroadcast_RemoveUserChatText_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.GetBroadcastChatUserNames
   */
  getBroadcastChatUserNames: {
    methodKind: "unary";
    input: typeof CBroadcast_GetBroadcastChatUserNames_RequestSchema;
    output: typeof CBroadcast_GetBroadcastChatUserNames_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.StartBuildClip
   */
  startBuildClip: {
    methodKind: "unary";
    input: typeof CBroadcast_StartBuildClip_RequestSchema;
    output: typeof CBroadcast_StartBuildClip_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.GetBuildClipStatus
   */
  getBuildClipStatus: {
    methodKind: "unary";
    input: typeof CBroadcast_GetBuildClipStatus_RequestSchema;
    output: typeof CBroadcast_GetBuildClipStatus_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.SetClipDetails
   */
  setClipDetails: {
    methodKind: "unary";
    input: typeof CBroadcast_SetClipDetails_RequestSchema;
    output: typeof CBroadcast_SetClipDetails_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.GetClipDetails
   */
  getClipDetails: {
    methodKind: "unary";
    input: typeof CBroadcast_GetClipDetails_RequestSchema;
    output: typeof CBroadcast_GetClipDetails_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.SetRTMPInfo
   */
  setRTMPInfo: {
    methodKind: "unary";
    input: typeof CBroadcast_SetRTMPInfo_RequestSchema;
    output: typeof CBroadcast_SetRTMPInfo_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.GetRTMPInfo
   */
  getRTMPInfo: {
    methodKind: "unary";
    input: typeof CBroadcast_GetRTMPInfo_RequestSchema;
    output: typeof CBroadcast_GetRTMPInfo_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.NotifyWebRTCHaveTURNServer
   */
  notifyWebRTCHaveTURNServer: {
    methodKind: "unary";
    input: typeof CBroadcast_WebRTCHaveTURNServer_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.WebRTCStartResult
   */
  webRTCStartResult: {
    methodKind: "unary";
    input: typeof CBroadcast_WebRTCStartResult_RequestSchema;
    output: typeof CBroadcast_WebRTCStartResult_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.WebRTCStopped
   */
  webRTCStopped: {
    methodKind: "unary";
    input: typeof CBroadcast_WebRTCStopped_RequestSchema;
    output: typeof CBroadcast_WebRTCStopped_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.WebRTCSetAnswer
   */
  webRTCSetAnswer: {
    methodKind: "unary";
    input: typeof CBroadcast_WebRTCSetAnswer_RequestSchema;
    output: typeof CBroadcast_WebRTCSetAnswer_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.WebRTCLookupTURNServer
   */
  webRTCLookupTURNServer: {
    methodKind: "unary";
    input: typeof CBroadcast_WebRTCLookupTURNServer_RequestSchema;
    output: typeof CBroadcast_WebRTCLookupTURNServer_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.WebRTCAddHostCandidate
   */
  webRTCAddHostCandidate: {
    methodKind: "unary";
    input: typeof CBroadcast_WebRTCAddHostCandidate_RequestSchema;
    output: typeof CBroadcast_WebRTCAddHostCandidate_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.WebRTCAddViewerCandidate
   */
  webRTCAddViewerCandidate: {
    methodKind: "unary";
    input: typeof CBroadcast_WebRTCAddViewerCandidate_RequestSchema;
    output: typeof CBroadcast_WebRTCAddViewerCandidate_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.WebRTCGetHostCandidates
   */
  webRTCGetHostCandidates: {
    methodKind: "unary";
    input: typeof CBroadcast_WebRTCGetHostCandidates_RequestSchema;
    output: typeof CBroadcast_WebRTCGetHostCandidates_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.GetBroadcastUploadStats
   */
  getBroadcastUploadStats: {
    methodKind: "unary";
    input: typeof CBroadcast_GetBroadcastUploadStats_RequestSchema;
    output: typeof CBroadcast_GetBroadcastUploadStats_ResponseSchema;
  },
  /**
   * @generated from rpc Broadcast.GetBroadcastViewerStats
   */
  getBroadcastViewerStats: {
    methodKind: "unary";
    input: typeof CBroadcast_GetBroadcastViewerStats_RequestSchema;
    output: typeof CBroadcast_GetBroadcastViewerStats_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_broadcast_steamclient, 0);

/**
 * @generated from service BroadcastClient
 */
export const BroadcastClient: GenService<{
  /**
   * @generated from rpc BroadcastClient.NotifyBroadcastViewerState
   */
  notifyBroadcastViewerState: {
    methodKind: "unary";
    input: typeof CBroadcast_BroadcastViewerState_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc BroadcastClient.NotifyWaitingBroadcastViewer
   */
  notifyWaitingBroadcastViewer: {
    methodKind: "unary";
    input: typeof CBroadcast_WaitingBroadcastViewer_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc BroadcastClient.NotifyBroadcastUploadStarted
   */
  notifyBroadcastUploadStarted: {
    methodKind: "unary";
    input: typeof CBroadcast_BroadcastUploadStarted_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc BroadcastClient.NotifyStopBroadcastUpload
   */
  notifyStopBroadcastUpload: {
    methodKind: "unary";
    input: typeof CBroadcast_StopBroadcastUpload_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc BroadcastClient.NotifySessionClosed
   */
  notifySessionClosed: {
    methodKind: "unary";
    input: typeof CBroadcast_SessionClosed_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc BroadcastClient.NotifyViewerBroadcastInvite
   */
  notifyViewerBroadcastInvite: {
    methodKind: "unary";
    input: typeof CBroadcast_ViewerBroadcastInvite_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc BroadcastClient.NotifyBroadcastStatus
   */
  notifyBroadcastStatus: {
    methodKind: "unary";
    input: typeof CBroadcast_BroadcastStatus_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc BroadcastClient.NotifyBroadcastChannelLive
   */
  notifyBroadcastChannelLive: {
    methodKind: "unary";
    input: typeof CBroadcast_BroadcastChannelLive_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc BroadcastClient.SendThumbnailToRelay
   */
  sendThumbnailToRelay: {
    methodKind: "unary";
    input: typeof CBroadcast_SendThumbnailToRelay_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc BroadcastClient.NotifyWebRTCNeedTURNServer
   */
  notifyWebRTCNeedTURNServer: {
    methodKind: "unary";
    input: typeof CBroadcast_WebRTCNeedTURNServer_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc BroadcastClient.NotifyWebRTCStart
   */
  notifyWebRTCStart: {
    methodKind: "unary";
    input: typeof CBroadcast_WebRTCStart_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc BroadcastClient.NotifyWebRTCSetAnswer
   */
  notifyWebRTCSetAnswer: {
    methodKind: "unary";
    input: typeof CBroadcast_WebRTCSetAnswer_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc BroadcastClient.NotifyWebRTCAddViewerCandidate
   */
  notifyWebRTCAddViewerCandidate: {
    methodKind: "unary";
    input: typeof CBroadcast_WebRTCAddViewerCandidate_NotificationSchema;
    output: typeof NoResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_broadcast_steamclient, 1);

