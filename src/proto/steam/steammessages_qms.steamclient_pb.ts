// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_qms.steamclient.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import { file_steammessages_base } from "./steammessages_base_pb";
import { file_steammessages_unified_base_steamclient } from "./steammessages_unified_base.steamclient_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_qms.steamclient.proto.
 */
export const file_steammessages_qms_steamclient: GenFile = /*@__PURE__*/
  fileDesc("CiNzdGVhbW1lc3NhZ2VzX3Ftcy5zdGVhbWNsaWVudC5wcm90byIyCg9HYW1lU2VhcmNoUGFyYW0SEAoIa2V5X25hbWUYASABKAkSDQoFdmFsdWUYAiADKAki6QEKKENRdWV1ZWRNYXRjaG1ha2luZ19TZWFyY2hGb3JHYW1lX1JlcXVlc3QSDQoFYXBwaWQYASABKA0SPAoGYWN0aW9uGAIgASgOMhIuRUdhbWVTZWFyY2hBY3Rpb246GGtfRUdhbWVTZWFyY2hBY3Rpb25fTm9uZRIgCgZwYXJhbXMYAyADKAsyEC5HYW1lU2VhcmNoUGFyYW0SEgoKcGxheWVyX21pbhgEIAEoDRISCgpwbGF5ZXJfbWF4GAUgASgNEhQKDHN0ZWFtaWRsb2JieRgGIAEoBhIQCghzZWFyY2hpZBgHIAEoBCKHAwopQ1F1ZXVlZE1hdGNobWFraW5nX1NlYXJjaEZvckdhbWVfUmVzcG9uc2USSQoQZ2FtZXNlYXJjaHJlc3VsdBgBIAEoDjISLkVHYW1lU2VhcmNoUmVzdWx0OhtrX0VHYW1lU2VhcmNoUmVzdWx0X0ludmFsaWQSEAoIc2VhcmNoaWQYAiABKAQSHQoVc2Vjb25kc190aW1lX2VzdGltYXRlGAMgASgNEhYKDnBvbGxfZnJlcXVlbmN5GAQgASgNEhcKD2NvdW50X3NlYXJjaGluZxgFIAEoDRIYChBwbGF5ZXJzX2luX21hdGNoGAYgASgNEhgKEHBsYXllcnNfYWNjZXB0ZWQYByABKA0SFgoOY29ubmVjdF9zdHJpbmcYCSABKAkSEwoLc3RlYW1pZGhvc3QYCiABKAYSGAoQcnRpbWVfbWF0Y2hfbWFkZRgLIAEoDRIRCglydGltZV9ub3cYDCABKA0SHwoXc3RlYW1pZF9jYW5jZWxlZF9zZWFyY2gYDSABKAYilwIKM0NRdWV1ZWRNYXRjaG1ha2luZ0dhbWVIb3N0X1NlYXJjaEZvclBsYXllcnNfUmVxdWVzdBINCgVhcHBpZBgBIAEoDRI8CgZhY3Rpb24YAiABKA4yEi5FR2FtZVNlYXJjaEFjdGlvbjoYa19FR2FtZVNlYXJjaEFjdGlvbl9Ob25lEiAKBnBhcmFtcxgDIAMoCzIQLkdhbWVTZWFyY2hQYXJhbRISCgpwbGF5ZXJfbWluGAQgASgNEhIKCnBsYXllcl9tYXgYBSABKA0SHAoUcGxheWVyX21heF90ZWFtX3NpemUYBiABKA0SGQoRY29ubmVjdGlvbl9zdHJpbmcYByABKAkSEAoIc2VhcmNoaWQYCCABKAQikwEKC1BsYXllckZvdW5kEg8KB3N0ZWFtaWQYASABKAYSPAoGYWN0aW9uGAIgASgOMhIuRUdhbWVTZWFyY2hBY3Rpb246GGtfRUdhbWVTZWFyY2hBY3Rpb25fTm9uZRIgCgZwYXJhbXMYAyADKAsyEC5HYW1lU2VhcmNoUGFyYW0SEwoLdGVhbV9udW1iZXIYBCABKA0iiAIKNENRdWV1ZWRNYXRjaG1ha2luZ0dhbWVIb3N0X1NlYXJjaEZvclBsYXllcnNfUmVzcG9uc2USSQoQZ2FtZXNlYXJjaHJlc3VsdBgBIAEoDjISLkVHYW1lU2VhcmNoUmVzdWx0OhtrX0VHYW1lU2VhcmNoUmVzdWx0X0ludmFsaWQSEAoIc2VhcmNoaWQYAiABKAQSFgoOcG9sbF9mcmVxdWVuY3kYAyABKA0SDwoHbWF0Y2hpZBgEIAEoBBIdCgdwbGF5ZXJzGAUgAygLMgwuUGxheWVyRm91bmQSGAoQcnRpbWVfbWF0Y2hfbWFkZRgGIAEoDRIRCglydGltZV9ub3cYByABKA0iLgoMUGxheWVyUmVzdWx0Eg8KB3N0ZWFtaWQYASABKAYSDQoFdmFsdWUYAiABKA0ifgo1Q1F1ZXVlZE1hdGNobWFraW5nR2FtZUhvc3RfU3VibWl0UGxheWVyUmVzdWx0X1JlcXVlc3QSDQoFYXBwaWQYASABKA0SDwoHbWF0Y2hpZBgCIAEoBBIlCg5wbGF5ZXJfcmVzdWx0cxgDIAMoCzINLlBsYXllclJlc3VsdCI4CjZDUXVldWVkTWF0Y2htYWtpbmdHYW1lSG9zdF9TdWJtaXRQbGF5ZXJSZXN1bHRfUmVzcG9uc2UiTAoqQ1F1ZXVlZE1hdGNobWFraW5nR2FtZUhvc3RfRW5kR2FtZV9SZXF1ZXN0Eg0KBWFwcGlkGAEgASgNEg8KB21hdGNoaWQYAiABKAQiLQorQ1F1ZXVlZE1hdGNobWFraW5nR2FtZUhvc3RfRW5kR2FtZV9SZXNwb25zZSqSAQoRRUdhbWVTZWFyY2hBY3Rpb24SHAoYa19FR2FtZVNlYXJjaEFjdGlvbl9Ob25lEAASHgoaa19FR2FtZVNlYXJjaEFjdGlvbl9BY2NlcHQQARIfChtrX0VHYW1lU2VhcmNoQWN0aW9uX0RlY2xpbmUQAhIeChprX0VHYW1lU2VhcmNoQWN0aW9uX0NhbmNlbBADKrwCChFFR2FtZVNlYXJjaFJlc3VsdBIfChtrX0VHYW1lU2VhcmNoUmVzdWx0X0ludmFsaWQQABIoCiRrX0VHYW1lU2VhcmNoUmVzdWx0X1NlYXJjaEluUHJvZ3Jlc3MQARIrCidrX0VHYW1lU2VhcmNoUmVzdWx0X1NlYXJjaEZhaWxlZE5vSG9zdHMQAhInCiNrX0VHYW1lU2VhcmNoUmVzdWx0X1NlYXJjaEdhbWVGb3VuZBADEi4KKmtfRUdhbWVTZWFyY2hSZXN1bHRfU2VhcmNoQ29tcGxldGVBY2NlcHRlZBAEEi4KKmtfRUdhbWVTZWFyY2hSZXN1bHRfU2VhcmNoQ29tcGxldGVEZWNsaW5lZBAFEiYKImtfRUdhbWVTZWFyY2hSZXN1bHRfU2VhcmNoQ2FuY2VsZWQQBjJ7ChFRdWV1ZWRNYXRjaG1ha2luZxJmCg1TZWFyY2hGb3JHYW1lEikuQ1F1ZXVlZE1hdGNobWFraW5nX1NlYXJjaEZvckdhbWVfUmVxdWVzdBoqLkNRdWV1ZWRNYXRjaG1ha2luZ19TZWFyY2hGb3JHYW1lX1Jlc3BvbnNlMooDChlRdWV1ZWRNYXRjaG1ha2luZ0dhbWVIb3N0En8KEFNlYXJjaEZvclBsYXllcnMSNC5DUXVldWVkTWF0Y2htYWtpbmdHYW1lSG9zdF9TZWFyY2hGb3JQbGF5ZXJzX1JlcXVlc3QaNS5DUXVldWVkTWF0Y2htYWtpbmdHYW1lSG9zdF9TZWFyY2hGb3JQbGF5ZXJzX1Jlc3BvbnNlEoUBChJTdWJtaXRQbGF5ZXJSZXN1bHQSNi5DUXVldWVkTWF0Y2htYWtpbmdHYW1lSG9zdF9TdWJtaXRQbGF5ZXJSZXN1bHRfUmVxdWVzdBo3LkNRdWV1ZWRNYXRjaG1ha2luZ0dhbWVIb3N0X1N1Ym1pdFBsYXllclJlc3VsdF9SZXNwb25zZRJkCgdFbmRHYW1lEisuQ1F1ZXVlZE1hdGNobWFraW5nR2FtZUhvc3RfRW5kR2FtZV9SZXF1ZXN0GiwuQ1F1ZXVlZE1hdGNobWFraW5nR2FtZUhvc3RfRW5kR2FtZV9SZXNwb25zZUIDgAEB", [file_steammessages_base, file_steammessages_unified_base_steamclient]);

/**
 * @generated from message GameSearchParam
 */
export type GameSearchParam = Message<"GameSearchParam"> & {
  /**
   * @generated from field: optional string key_name = 1;
   */
  keyName: string;

  /**
   * @generated from field: repeated string value = 2;
   */
  value: string[];
};

/**
 * Describes the message GameSearchParam.
 * Use `create(GameSearchParamSchema)` to create a new message.
 */
export const GameSearchParamSchema: GenMessage<GameSearchParam> = /*@__PURE__*/
  messageDesc(file_steammessages_qms_steamclient, 0);

/**
 * @generated from message CQueuedMatchmaking_SearchForGame_Request
 */
export type CQueuedMatchmaking_SearchForGame_Request = Message<"CQueuedMatchmaking_SearchForGame_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional EGameSearchAction action = 2 [default = k_EGameSearchAction_None];
   */
  action: EGameSearchAction;

  /**
   * @generated from field: repeated GameSearchParam params = 3;
   */
  params: GameSearchParam[];

  /**
   * @generated from field: optional uint32 player_min = 4;
   */
  playerMin: number;

  /**
   * @generated from field: optional uint32 player_max = 5;
   */
  playerMax: number;

  /**
   * @generated from field: optional fixed64 steamidlobby = 6;
   */
  steamidlobby: bigint;

  /**
   * @generated from field: optional uint64 searchid = 7;
   */
  searchid: bigint;
};

/**
 * Describes the message CQueuedMatchmaking_SearchForGame_Request.
 * Use `create(CQueuedMatchmaking_SearchForGame_RequestSchema)` to create a new message.
 */
export const CQueuedMatchmaking_SearchForGame_RequestSchema: GenMessage<CQueuedMatchmaking_SearchForGame_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_qms_steamclient, 1);

/**
 * @generated from message CQueuedMatchmaking_SearchForGame_Response
 */
export type CQueuedMatchmaking_SearchForGame_Response = Message<"CQueuedMatchmaking_SearchForGame_Response"> & {
  /**
   * @generated from field: optional EGameSearchResult gamesearchresult = 1 [default = k_EGameSearchResult_Invalid];
   */
  gamesearchresult: EGameSearchResult;

  /**
   * @generated from field: optional uint64 searchid = 2;
   */
  searchid: bigint;

  /**
   * @generated from field: optional uint32 seconds_time_estimate = 3;
   */
  secondsTimeEstimate: number;

  /**
   * @generated from field: optional uint32 poll_frequency = 4;
   */
  pollFrequency: number;

  /**
   * @generated from field: optional uint32 count_searching = 5;
   */
  countSearching: number;

  /**
   * @generated from field: optional uint32 players_in_match = 6;
   */
  playersInMatch: number;

  /**
   * @generated from field: optional uint32 players_accepted = 7;
   */
  playersAccepted: number;

  /**
   * @generated from field: optional string connect_string = 9;
   */
  connectString: string;

  /**
   * @generated from field: optional fixed64 steamidhost = 10;
   */
  steamidhost: bigint;

  /**
   * @generated from field: optional uint32 rtime_match_made = 11;
   */
  rtimeMatchMade: number;

  /**
   * @generated from field: optional uint32 rtime_now = 12;
   */
  rtimeNow: number;

  /**
   * @generated from field: optional fixed64 steamid_canceled_search = 13;
   */
  steamidCanceledSearch: bigint;
};

/**
 * Describes the message CQueuedMatchmaking_SearchForGame_Response.
 * Use `create(CQueuedMatchmaking_SearchForGame_ResponseSchema)` to create a new message.
 */
export const CQueuedMatchmaking_SearchForGame_ResponseSchema: GenMessage<CQueuedMatchmaking_SearchForGame_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_qms_steamclient, 2);

/**
 * @generated from message CQueuedMatchmakingGameHost_SearchForPlayers_Request
 */
export type CQueuedMatchmakingGameHost_SearchForPlayers_Request = Message<"CQueuedMatchmakingGameHost_SearchForPlayers_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional EGameSearchAction action = 2 [default = k_EGameSearchAction_None];
   */
  action: EGameSearchAction;

  /**
   * @generated from field: repeated GameSearchParam params = 3;
   */
  params: GameSearchParam[];

  /**
   * @generated from field: optional uint32 player_min = 4;
   */
  playerMin: number;

  /**
   * @generated from field: optional uint32 player_max = 5;
   */
  playerMax: number;

  /**
   * @generated from field: optional uint32 player_max_team_size = 6;
   */
  playerMaxTeamSize: number;

  /**
   * @generated from field: optional string connection_string = 7;
   */
  connectionString: string;

  /**
   * @generated from field: optional uint64 searchid = 8;
   */
  searchid: bigint;
};

/**
 * Describes the message CQueuedMatchmakingGameHost_SearchForPlayers_Request.
 * Use `create(CQueuedMatchmakingGameHost_SearchForPlayers_RequestSchema)` to create a new message.
 */
export const CQueuedMatchmakingGameHost_SearchForPlayers_RequestSchema: GenMessage<CQueuedMatchmakingGameHost_SearchForPlayers_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_qms_steamclient, 3);

/**
 * @generated from message PlayerFound
 */
export type PlayerFound = Message<"PlayerFound"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional EGameSearchAction action = 2 [default = k_EGameSearchAction_None];
   */
  action: EGameSearchAction;

  /**
   * @generated from field: repeated GameSearchParam params = 3;
   */
  params: GameSearchParam[];

  /**
   * @generated from field: optional uint32 team_number = 4;
   */
  teamNumber: number;
};

/**
 * Describes the message PlayerFound.
 * Use `create(PlayerFoundSchema)` to create a new message.
 */
export const PlayerFoundSchema: GenMessage<PlayerFound> = /*@__PURE__*/
  messageDesc(file_steammessages_qms_steamclient, 4);

/**
 * @generated from message CQueuedMatchmakingGameHost_SearchForPlayers_Response
 */
export type CQueuedMatchmakingGameHost_SearchForPlayers_Response = Message<"CQueuedMatchmakingGameHost_SearchForPlayers_Response"> & {
  /**
   * @generated from field: optional EGameSearchResult gamesearchresult = 1 [default = k_EGameSearchResult_Invalid];
   */
  gamesearchresult: EGameSearchResult;

  /**
   * @generated from field: optional uint64 searchid = 2;
   */
  searchid: bigint;

  /**
   * @generated from field: optional uint32 poll_frequency = 3;
   */
  pollFrequency: number;

  /**
   * @generated from field: optional uint64 matchid = 4;
   */
  matchid: bigint;

  /**
   * @generated from field: repeated PlayerFound players = 5;
   */
  players: PlayerFound[];

  /**
   * @generated from field: optional uint32 rtime_match_made = 6;
   */
  rtimeMatchMade: number;

  /**
   * @generated from field: optional uint32 rtime_now = 7;
   */
  rtimeNow: number;
};

/**
 * Describes the message CQueuedMatchmakingGameHost_SearchForPlayers_Response.
 * Use `create(CQueuedMatchmakingGameHost_SearchForPlayers_ResponseSchema)` to create a new message.
 */
export const CQueuedMatchmakingGameHost_SearchForPlayers_ResponseSchema: GenMessage<CQueuedMatchmakingGameHost_SearchForPlayers_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_qms_steamclient, 5);

/**
 * @generated from message PlayerResult
 */
export type PlayerResult = Message<"PlayerResult"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional uint32 value = 2;
   */
  value: number;
};

/**
 * Describes the message PlayerResult.
 * Use `create(PlayerResultSchema)` to create a new message.
 */
export const PlayerResultSchema: GenMessage<PlayerResult> = /*@__PURE__*/
  messageDesc(file_steammessages_qms_steamclient, 6);

/**
 * @generated from message CQueuedMatchmakingGameHost_SubmitPlayerResult_Request
 */
export type CQueuedMatchmakingGameHost_SubmitPlayerResult_Request = Message<"CQueuedMatchmakingGameHost_SubmitPlayerResult_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint64 matchid = 2;
   */
  matchid: bigint;

  /**
   * @generated from field: repeated PlayerResult player_results = 3;
   */
  playerResults: PlayerResult[];
};

/**
 * Describes the message CQueuedMatchmakingGameHost_SubmitPlayerResult_Request.
 * Use `create(CQueuedMatchmakingGameHost_SubmitPlayerResult_RequestSchema)` to create a new message.
 */
export const CQueuedMatchmakingGameHost_SubmitPlayerResult_RequestSchema: GenMessage<CQueuedMatchmakingGameHost_SubmitPlayerResult_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_qms_steamclient, 7);

/**
 * @generated from message CQueuedMatchmakingGameHost_SubmitPlayerResult_Response
 */
export type CQueuedMatchmakingGameHost_SubmitPlayerResult_Response = Message<"CQueuedMatchmakingGameHost_SubmitPlayerResult_Response"> & {
};

/**
 * Describes the message CQueuedMatchmakingGameHost_SubmitPlayerResult_Response.
 * Use `create(CQueuedMatchmakingGameHost_SubmitPlayerResult_ResponseSchema)` to create a new message.
 */
export const CQueuedMatchmakingGameHost_SubmitPlayerResult_ResponseSchema: GenMessage<CQueuedMatchmakingGameHost_SubmitPlayerResult_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_qms_steamclient, 8);

/**
 * @generated from message CQueuedMatchmakingGameHost_EndGame_Request
 */
export type CQueuedMatchmakingGameHost_EndGame_Request = Message<"CQueuedMatchmakingGameHost_EndGame_Request"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint64 matchid = 2;
   */
  matchid: bigint;
};

/**
 * Describes the message CQueuedMatchmakingGameHost_EndGame_Request.
 * Use `create(CQueuedMatchmakingGameHost_EndGame_RequestSchema)` to create a new message.
 */
export const CQueuedMatchmakingGameHost_EndGame_RequestSchema: GenMessage<CQueuedMatchmakingGameHost_EndGame_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_qms_steamclient, 9);

/**
 * @generated from message CQueuedMatchmakingGameHost_EndGame_Response
 */
export type CQueuedMatchmakingGameHost_EndGame_Response = Message<"CQueuedMatchmakingGameHost_EndGame_Response"> & {
};

/**
 * Describes the message CQueuedMatchmakingGameHost_EndGame_Response.
 * Use `create(CQueuedMatchmakingGameHost_EndGame_ResponseSchema)` to create a new message.
 */
export const CQueuedMatchmakingGameHost_EndGame_ResponseSchema: GenMessage<CQueuedMatchmakingGameHost_EndGame_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_qms_steamclient, 10);

/**
 * @generated from enum EGameSearchAction
 */
export enum EGameSearchAction {
  /**
   * @generated from enum value: k_EGameSearchAction_None = 0;
   */
  k_EGameSearchAction_None = 0,

  /**
   * @generated from enum value: k_EGameSearchAction_Accept = 1;
   */
  k_EGameSearchAction_Accept = 1,

  /**
   * @generated from enum value: k_EGameSearchAction_Decline = 2;
   */
  k_EGameSearchAction_Decline = 2,

  /**
   * @generated from enum value: k_EGameSearchAction_Cancel = 3;
   */
  k_EGameSearchAction_Cancel = 3,
}

/**
 * Describes the enum EGameSearchAction.
 */
export const EGameSearchActionSchema: GenEnum<EGameSearchAction> = /*@__PURE__*/
  enumDesc(file_steammessages_qms_steamclient, 0);

/**
 * @generated from enum EGameSearchResult
 */
export enum EGameSearchResult {
  /**
   * @generated from enum value: k_EGameSearchResult_Invalid = 0;
   */
  k_EGameSearchResult_Invalid = 0,

  /**
   * @generated from enum value: k_EGameSearchResult_SearchInProgress = 1;
   */
  k_EGameSearchResult_SearchInProgress = 1,

  /**
   * @generated from enum value: k_EGameSearchResult_SearchFailedNoHosts = 2;
   */
  k_EGameSearchResult_SearchFailedNoHosts = 2,

  /**
   * @generated from enum value: k_EGameSearchResult_SearchGameFound = 3;
   */
  k_EGameSearchResult_SearchGameFound = 3,

  /**
   * @generated from enum value: k_EGameSearchResult_SearchCompleteAccepted = 4;
   */
  k_EGameSearchResult_SearchCompleteAccepted = 4,

  /**
   * @generated from enum value: k_EGameSearchResult_SearchCompleteDeclined = 5;
   */
  k_EGameSearchResult_SearchCompleteDeclined = 5,

  /**
   * @generated from enum value: k_EGameSearchResult_SearchCanceled = 6;
   */
  k_EGameSearchResult_SearchCanceled = 6,
}

/**
 * Describes the enum EGameSearchResult.
 */
export const EGameSearchResultSchema: GenEnum<EGameSearchResult> = /*@__PURE__*/
  enumDesc(file_steammessages_qms_steamclient, 1);

/**
 * @generated from service QueuedMatchmaking
 */
export const QueuedMatchmaking: GenService<{
  /**
   * @generated from rpc QueuedMatchmaking.SearchForGame
   */
  searchForGame: {
    methodKind: "unary";
    input: typeof CQueuedMatchmaking_SearchForGame_RequestSchema;
    output: typeof CQueuedMatchmaking_SearchForGame_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_qms_steamclient, 0);

/**
 * @generated from service QueuedMatchmakingGameHost
 */
export const QueuedMatchmakingGameHost: GenService<{
  /**
   * @generated from rpc QueuedMatchmakingGameHost.SearchForPlayers
   */
  searchForPlayers: {
    methodKind: "unary";
    input: typeof CQueuedMatchmakingGameHost_SearchForPlayers_RequestSchema;
    output: typeof CQueuedMatchmakingGameHost_SearchForPlayers_ResponseSchema;
  },
  /**
   * @generated from rpc QueuedMatchmakingGameHost.SubmitPlayerResult
   */
  submitPlayerResult: {
    methodKind: "unary";
    input: typeof CQueuedMatchmakingGameHost_SubmitPlayerResult_RequestSchema;
    output: typeof CQueuedMatchmakingGameHost_SubmitPlayerResult_ResponseSchema;
  },
  /**
   * @generated from rpc QueuedMatchmakingGameHost.EndGame
   */
  endGame: {
    methodKind: "unary";
    input: typeof CQueuedMatchmakingGameHost_EndGame_RequestSchema;
    output: typeof CQueuedMatchmakingGameHost_EndGame_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_qms_steamclient, 1);

