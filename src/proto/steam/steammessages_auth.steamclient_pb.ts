// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_auth.steamclient.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { CMsgIPAddress } from "./steammessages_base_pb";
import { file_steammessages_base } from "./steammessages_base_pb";
import type { NoResponseSchema } from "./steammessages_unified_base.steamclient_pb";
import { file_steammessages_unified_base_steamclient } from "./steammessages_unified_base.steamclient_pb";
import type { ESessionPersistence } from "./enums_pb";
import { file_enums } from "./enums_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_auth.steamclient.proto.
 */
export const file_steammessages_auth_steamclient: GenFile = /*@__PURE__*/
  fileDesc("", [file_steammessages_base, file_steammessages_unified_base_steamclient, file_enums]);

/**
 * @generated from message CAuthentication_GetPasswordRSAPublicKey_Request
 */
export type CAuthentication_GetPasswordRSAPublicKey_Request = Message<"CAuthentication_GetPasswordRSAPublicKey_Request"> & {
  /**
   * @generated from field: optional string account_name = 1;
   */
  accountName: string;
};

/**
 * Describes the message CAuthentication_GetPasswordRSAPublicKey_Request.
 * Use `create(CAuthentication_GetPasswordRSAPublicKey_RequestSchema)` to create a new message.
 */
export const CAuthentication_GetPasswordRSAPublicKey_RequestSchema: GenMessage<CAuthentication_GetPasswordRSAPublicKey_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 0);

/**
 * @generated from message CAuthentication_GetPasswordRSAPublicKey_Response
 */
export type CAuthentication_GetPasswordRSAPublicKey_Response = Message<"CAuthentication_GetPasswordRSAPublicKey_Response"> & {
  /**
   * @generated from field: optional string publickey_mod = 1;
   */
  publickeyMod: string;

  /**
   * @generated from field: optional string publickey_exp = 2;
   */
  publickeyExp: string;

  /**
   * @generated from field: optional uint64 timestamp = 3;
   */
  timestamp: bigint;
};

/**
 * Describes the message CAuthentication_GetPasswordRSAPublicKey_Response.
 * Use `create(CAuthentication_GetPasswordRSAPublicKey_ResponseSchema)` to create a new message.
 */
export const CAuthentication_GetPasswordRSAPublicKey_ResponseSchema: GenMessage<CAuthentication_GetPasswordRSAPublicKey_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 1);

/**
 * @generated from message CAuthentication_DeviceDetails
 */
export type CAuthentication_DeviceDetails = Message<"CAuthentication_DeviceDetails"> & {
  /**
   * @generated from field: optional string device_friendly_name = 1;
   */
  deviceFriendlyName: string;

  /**
   * @generated from field: optional EAuthTokenPlatformType platform_type = 2 [default = k_EAuthTokenPlatformType_Unknown];
   */
  platformType: EAuthTokenPlatformType;

  /**
   * @generated from field: optional int32 os_type = 3;
   */
  osType: number;

  /**
   * @generated from field: optional uint32 gaming_device_type = 4;
   */
  gamingDeviceType: number;

  /**
   * @generated from field: optional uint32 client_count = 5;
   */
  clientCount: number;

  /**
   * @generated from field: optional bytes machine_id = 6;
   */
  machineId: Uint8Array;

  /**
   * @generated from field: optional EAuthTokenAppType app_type = 7 [default = k_EAuthTokenAppType_Unknown];
   */
  appType: EAuthTokenAppType;
};

/**
 * Describes the message CAuthentication_DeviceDetails.
 * Use `create(CAuthentication_DeviceDetailsSchema)` to create a new message.
 */
export const CAuthentication_DeviceDetailsSchema: GenMessage<CAuthentication_DeviceDetails> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 2);

/**
 * @generated from message CAuthentication_BeginAuthSessionViaQR_Request
 */
export type CAuthentication_BeginAuthSessionViaQR_Request = Message<"CAuthentication_BeginAuthSessionViaQR_Request"> & {
  /**
   * @generated from field: optional string device_friendly_name = 1;
   */
  deviceFriendlyName: string;

  /**
   * @generated from field: optional EAuthTokenPlatformType platform_type = 2 [default = k_EAuthTokenPlatformType_Unknown];
   */
  platformType: EAuthTokenPlatformType;

  /**
   * @generated from field: optional CAuthentication_DeviceDetails device_details = 3;
   */
  deviceDetails?: CAuthentication_DeviceDetails;

  /**
   * @generated from field: optional string website_id = 4 [default = "Unknown"];
   */
  websiteId: string;
};

/**
 * Describes the message CAuthentication_BeginAuthSessionViaQR_Request.
 * Use `create(CAuthentication_BeginAuthSessionViaQR_RequestSchema)` to create a new message.
 */
export const CAuthentication_BeginAuthSessionViaQR_RequestSchema: GenMessage<CAuthentication_BeginAuthSessionViaQR_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 3);

/**
 * @generated from message CAuthentication_AllowedConfirmation
 */
export type CAuthentication_AllowedConfirmation = Message<"CAuthentication_AllowedConfirmation"> & {
  /**
   * @generated from field: optional EAuthSessionGuardType confirmation_type = 1 [default = k_EAuthSessionGuardType_Unknown];
   */
  confirmationType: EAuthSessionGuardType;

  /**
   * @generated from field: optional string associated_message = 2;
   */
  associatedMessage: string;
};

/**
 * Describes the message CAuthentication_AllowedConfirmation.
 * Use `create(CAuthentication_AllowedConfirmationSchema)` to create a new message.
 */
export const CAuthentication_AllowedConfirmationSchema: GenMessage<CAuthentication_AllowedConfirmation> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 4);

/**
 * @generated from message CAuthentication_BeginAuthSessionViaQR_Response
 */
export type CAuthentication_BeginAuthSessionViaQR_Response = Message<"CAuthentication_BeginAuthSessionViaQR_Response"> & {
  /**
   * @generated from field: optional uint64 client_id = 1;
   */
  clientId: bigint;

  /**
   * @generated from field: optional string challenge_url = 2;
   */
  challengeUrl: string;

  /**
   * @generated from field: optional bytes request_id = 3;
   */
  requestId: Uint8Array;

  /**
   * @generated from field: optional float interval = 4;
   */
  interval: number;

  /**
   * @generated from field: repeated CAuthentication_AllowedConfirmation allowed_confirmations = 5;
   */
  allowedConfirmations: CAuthentication_AllowedConfirmation[];

  /**
   * @generated from field: optional int32 version = 6;
   */
  version: number;
};

/**
 * Describes the message CAuthentication_BeginAuthSessionViaQR_Response.
 * Use `create(CAuthentication_BeginAuthSessionViaQR_ResponseSchema)` to create a new message.
 */
export const CAuthentication_BeginAuthSessionViaQR_ResponseSchema: GenMessage<CAuthentication_BeginAuthSessionViaQR_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 5);

/**
 * @generated from message CAuthentication_BeginAuthSessionViaCredentials_Request
 */
export type CAuthentication_BeginAuthSessionViaCredentials_Request = Message<"CAuthentication_BeginAuthSessionViaCredentials_Request"> & {
  /**
   * @generated from field: optional string device_friendly_name = 1;
   */
  deviceFriendlyName: string;

  /**
   * @generated from field: optional string account_name = 2;
   */
  accountName: string;

  /**
   * @generated from field: optional string encrypted_password = 3;
   */
  encryptedPassword: string;

  /**
   * @generated from field: optional uint64 encryption_timestamp = 4;
   */
  encryptionTimestamp: bigint;

  /**
   * @generated from field: optional bool remember_login = 5;
   */
  rememberLogin: boolean;

  /**
   * @generated from field: optional EAuthTokenPlatformType platform_type = 6 [default = k_EAuthTokenPlatformType_Unknown];
   */
  platformType: EAuthTokenPlatformType;

  /**
   * @generated from field: optional ESessionPersistence persistence = 7 [default = k_ESessionPersistence_Persistent];
   */
  persistence: ESessionPersistence;

  /**
   * @generated from field: optional string website_id = 8 [default = "Unknown"];
   */
  websiteId: string;

  /**
   * @generated from field: optional CAuthentication_DeviceDetails device_details = 9;
   */
  deviceDetails?: CAuthentication_DeviceDetails;

  /**
   * @generated from field: optional string guard_data = 10;
   */
  guardData: string;

  /**
   * @generated from field: optional uint32 language = 11;
   */
  language: number;

  /**
   * @generated from field: optional int32 qos_level = 12 [default = 2];
   */
  qosLevel: number;
};

/**
 * Describes the message CAuthentication_BeginAuthSessionViaCredentials_Request.
 * Use `create(CAuthentication_BeginAuthSessionViaCredentials_RequestSchema)` to create a new message.
 */
export const CAuthentication_BeginAuthSessionViaCredentials_RequestSchema: GenMessage<CAuthentication_BeginAuthSessionViaCredentials_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 6);

/**
 * @generated from message CAuthentication_BeginAuthSessionViaCredentials_Response
 */
export type CAuthentication_BeginAuthSessionViaCredentials_Response = Message<"CAuthentication_BeginAuthSessionViaCredentials_Response"> & {
  /**
   * @generated from field: optional uint64 client_id = 1;
   */
  clientId: bigint;

  /**
   * @generated from field: optional bytes request_id = 2;
   */
  requestId: Uint8Array;

  /**
   * @generated from field: optional float interval = 3;
   */
  interval: number;

  /**
   * @generated from field: repeated CAuthentication_AllowedConfirmation allowed_confirmations = 4;
   */
  allowedConfirmations: CAuthentication_AllowedConfirmation[];

  /**
   * @generated from field: optional uint64 steamid = 5;
   */
  steamid: bigint;

  /**
   * @generated from field: optional string weak_token = 6;
   */
  weakToken: string;

  /**
   * @generated from field: optional string agreement_session_url = 7;
   */
  agreementSessionUrl: string;

  /**
   * @generated from field: optional string extended_error_message = 8;
   */
  extendedErrorMessage: string;
};

/**
 * Describes the message CAuthentication_BeginAuthSessionViaCredentials_Response.
 * Use `create(CAuthentication_BeginAuthSessionViaCredentials_ResponseSchema)` to create a new message.
 */
export const CAuthentication_BeginAuthSessionViaCredentials_ResponseSchema: GenMessage<CAuthentication_BeginAuthSessionViaCredentials_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 7);

/**
 * @generated from message CAuthentication_PollAuthSessionStatus_Request
 */
export type CAuthentication_PollAuthSessionStatus_Request = Message<"CAuthentication_PollAuthSessionStatus_Request"> & {
  /**
   * @generated from field: optional uint64 client_id = 1;
   */
  clientId: bigint;

  /**
   * @generated from field: optional bytes request_id = 2;
   */
  requestId: Uint8Array;

  /**
   * @generated from field: optional fixed64 token_to_revoke = 3;
   */
  tokenToRevoke: bigint;
};

/**
 * Describes the message CAuthentication_PollAuthSessionStatus_Request.
 * Use `create(CAuthentication_PollAuthSessionStatus_RequestSchema)` to create a new message.
 */
export const CAuthentication_PollAuthSessionStatus_RequestSchema: GenMessage<CAuthentication_PollAuthSessionStatus_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 8);

/**
 * @generated from message CAuthentication_PollAuthSessionStatus_Response
 */
export type CAuthentication_PollAuthSessionStatus_Response = Message<"CAuthentication_PollAuthSessionStatus_Response"> & {
  /**
   * @generated from field: optional uint64 new_client_id = 1;
   */
  newClientId: bigint;

  /**
   * @generated from field: optional string new_challenge_url = 2;
   */
  newChallengeUrl: string;

  /**
   * @generated from field: optional string refresh_token = 3;
   */
  refreshToken: string;

  /**
   * @generated from field: optional string access_token = 4;
   */
  accessToken: string;

  /**
   * @generated from field: optional bool had_remote_interaction = 5;
   */
  hadRemoteInteraction: boolean;

  /**
   * @generated from field: optional string account_name = 6;
   */
  accountName: string;

  /**
   * @generated from field: optional string new_guard_data = 7;
   */
  newGuardData: string;

  /**
   * @generated from field: optional string agreement_session_url = 8;
   */
  agreementSessionUrl: string;
};

/**
 * Describes the message CAuthentication_PollAuthSessionStatus_Response.
 * Use `create(CAuthentication_PollAuthSessionStatus_ResponseSchema)` to create a new message.
 */
export const CAuthentication_PollAuthSessionStatus_ResponseSchema: GenMessage<CAuthentication_PollAuthSessionStatus_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 9);

/**
 * @generated from message CAuthentication_GetAuthSessionInfo_Request
 */
export type CAuthentication_GetAuthSessionInfo_Request = Message<"CAuthentication_GetAuthSessionInfo_Request"> & {
  /**
   * @generated from field: optional uint64 client_id = 1;
   */
  clientId: bigint;
};

/**
 * Describes the message CAuthentication_GetAuthSessionInfo_Request.
 * Use `create(CAuthentication_GetAuthSessionInfo_RequestSchema)` to create a new message.
 */
export const CAuthentication_GetAuthSessionInfo_RequestSchema: GenMessage<CAuthentication_GetAuthSessionInfo_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 10);

/**
 * @generated from message CAuthentication_GetAuthSessionInfo_Response
 */
export type CAuthentication_GetAuthSessionInfo_Response = Message<"CAuthentication_GetAuthSessionInfo_Response"> & {
  /**
   * @generated from field: optional string ip = 1;
   */
  ip: string;

  /**
   * @generated from field: optional string geoloc = 2;
   */
  geoloc: string;

  /**
   * @generated from field: optional string city = 3;
   */
  city: string;

  /**
   * @generated from field: optional string state = 4;
   */
  state: string;

  /**
   * @generated from field: optional string country = 5;
   */
  country: string;

  /**
   * @generated from field: optional EAuthTokenPlatformType platform_type = 6 [default = k_EAuthTokenPlatformType_Unknown];
   */
  platformType: EAuthTokenPlatformType;

  /**
   * @generated from field: optional string device_friendly_name = 7;
   */
  deviceFriendlyName: string;

  /**
   * @generated from field: optional int32 version = 8;
   */
  version: number;

  /**
   * @generated from field: optional EAuthSessionSecurityHistory login_history = 9 [default = k_EAuthSessionSecurityHistory_Invalid];
   */
  loginHistory: EAuthSessionSecurityHistory;

  /**
   * @generated from field: optional bool requestor_location_mismatch = 10;
   */
  requestorLocationMismatch: boolean;

  /**
   * @generated from field: optional bool high_usage_login = 11;
   */
  highUsageLogin: boolean;

  /**
   * @generated from field: optional ESessionPersistence requested_persistence = 12 [default = k_ESessionPersistence_Invalid];
   */
  requestedPersistence: ESessionPersistence;

  /**
   * @generated from field: optional int32 device_trust = 13;
   */
  deviceTrust: number;

  /**
   * @generated from field: optional EAuthTokenAppType app_type = 14 [default = k_EAuthTokenAppType_Unknown];
   */
  appType: EAuthTokenAppType;
};

/**
 * Describes the message CAuthentication_GetAuthSessionInfo_Response.
 * Use `create(CAuthentication_GetAuthSessionInfo_ResponseSchema)` to create a new message.
 */
export const CAuthentication_GetAuthSessionInfo_ResponseSchema: GenMessage<CAuthentication_GetAuthSessionInfo_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 11);

/**
 * @generated from message CAuthentication_GetAuthSessionRiskInfo_Request
 */
export type CAuthentication_GetAuthSessionRiskInfo_Request = Message<"CAuthentication_GetAuthSessionRiskInfo_Request"> & {
  /**
   * @generated from field: optional uint64 client_id = 1;
   */
  clientId: bigint;

  /**
   * @generated from field: optional uint32 language = 2;
   */
  language: number;
};

/**
 * Describes the message CAuthentication_GetAuthSessionRiskInfo_Request.
 * Use `create(CAuthentication_GetAuthSessionRiskInfo_RequestSchema)` to create a new message.
 */
export const CAuthentication_GetAuthSessionRiskInfo_RequestSchema: GenMessage<CAuthentication_GetAuthSessionRiskInfo_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 12);

/**
 * @generated from message CAuthentication_GetAuthSessionRiskInfo_Response
 */
export type CAuthentication_GetAuthSessionRiskInfo_Response = Message<"CAuthentication_GetAuthSessionRiskInfo_Response"> & {
  /**
   * @generated from field: optional string location_confirmer = 1;
   */
  locationConfirmer: string;

  /**
   * @generated from field: optional string location_requestor = 2;
   */
  locationRequestor: string;

  /**
   * @generated from field: optional string location_other = 3;
   */
  locationOther: string;

  /**
   * @generated from field: optional EAuthTokenPlatformType platform_type = 4 [default = k_EAuthTokenPlatformType_Unknown];
   */
  platformType: EAuthTokenPlatformType;
};

/**
 * Describes the message CAuthentication_GetAuthSessionRiskInfo_Response.
 * Use `create(CAuthentication_GetAuthSessionRiskInfo_ResponseSchema)` to create a new message.
 */
export const CAuthentication_GetAuthSessionRiskInfo_ResponseSchema: GenMessage<CAuthentication_GetAuthSessionRiskInfo_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 13);

/**
 * @generated from message CAuthentication_NotifyRiskQuizResults_Notification
 */
export type CAuthentication_NotifyRiskQuizResults_Notification = Message<"CAuthentication_NotifyRiskQuizResults_Notification"> & {
  /**
   * @generated from field: optional uint64 client_id = 1;
   */
  clientId: bigint;

  /**
   * @generated from field: optional CAuthentication_NotifyRiskQuizResults_Notification.RiskQuizResults results = 2;
   */
  results?: CAuthentication_NotifyRiskQuizResults_Notification_RiskQuizResults;

  /**
   * @generated from field: optional string selected_action = 3;
   */
  selectedAction: string;

  /**
   * @generated from field: optional bool did_confirm_login = 4;
   */
  didConfirmLogin: boolean;
};

/**
 * Describes the message CAuthentication_NotifyRiskQuizResults_Notification.
 * Use `create(CAuthentication_NotifyRiskQuizResults_NotificationSchema)` to create a new message.
 */
export const CAuthentication_NotifyRiskQuizResults_NotificationSchema: GenMessage<CAuthentication_NotifyRiskQuizResults_Notification> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 14);

/**
 * @generated from message CAuthentication_NotifyRiskQuizResults_Notification.RiskQuizResults
 */
export type CAuthentication_NotifyRiskQuizResults_Notification_RiskQuizResults = Message<"CAuthentication_NotifyRiskQuizResults_Notification.RiskQuizResults"> & {
  /**
   * @generated from field: optional bool platform = 1;
   */
  platform: boolean;

  /**
   * @generated from field: optional bool location = 2;
   */
  location: boolean;

  /**
   * @generated from field: optional bool action = 3;
   */
  action: boolean;
};

/**
 * Describes the message CAuthentication_NotifyRiskQuizResults_Notification.RiskQuizResults.
 * Use `create(CAuthentication_NotifyRiskQuizResults_Notification_RiskQuizResultsSchema)` to create a new message.
 */
export const CAuthentication_NotifyRiskQuizResults_Notification_RiskQuizResultsSchema: GenMessage<CAuthentication_NotifyRiskQuizResults_Notification_RiskQuizResults> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 14, 0);

/**
 * @generated from message CAuthentication_UpdateAuthSessionWithMobileConfirmation_Request
 */
export type CAuthentication_UpdateAuthSessionWithMobileConfirmation_Request = Message<"CAuthentication_UpdateAuthSessionWithMobileConfirmation_Request"> & {
  /**
   * @generated from field: optional int32 version = 1;
   */
  version: number;

  /**
   * @generated from field: optional uint64 client_id = 2;
   */
  clientId: bigint;

  /**
   * @generated from field: optional fixed64 steamid = 3;
   */
  steamid: bigint;

  /**
   * @generated from field: optional bytes signature = 4;
   */
  signature: Uint8Array;

  /**
   * @generated from field: optional bool confirm = 5 [default = false];
   */
  confirm: boolean;

  /**
   * @generated from field: optional ESessionPersistence persistence = 6 [default = k_ESessionPersistence_Persistent];
   */
  persistence: ESessionPersistence;
};

/**
 * Describes the message CAuthentication_UpdateAuthSessionWithMobileConfirmation_Request.
 * Use `create(CAuthentication_UpdateAuthSessionWithMobileConfirmation_RequestSchema)` to create a new message.
 */
export const CAuthentication_UpdateAuthSessionWithMobileConfirmation_RequestSchema: GenMessage<CAuthentication_UpdateAuthSessionWithMobileConfirmation_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 15);

/**
 * @generated from message CAuthentication_UpdateAuthSessionWithMobileConfirmation_Response
 */
export type CAuthentication_UpdateAuthSessionWithMobileConfirmation_Response = Message<"CAuthentication_UpdateAuthSessionWithMobileConfirmation_Response"> & {
};

/**
 * Describes the message CAuthentication_UpdateAuthSessionWithMobileConfirmation_Response.
 * Use `create(CAuthentication_UpdateAuthSessionWithMobileConfirmation_ResponseSchema)` to create a new message.
 */
export const CAuthentication_UpdateAuthSessionWithMobileConfirmation_ResponseSchema: GenMessage<CAuthentication_UpdateAuthSessionWithMobileConfirmation_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 16);

/**
 * @generated from message CAuthentication_UpdateAuthSessionWithSteamGuardCode_Request
 */
export type CAuthentication_UpdateAuthSessionWithSteamGuardCode_Request = Message<"CAuthentication_UpdateAuthSessionWithSteamGuardCode_Request"> & {
  /**
   * @generated from field: optional uint64 client_id = 1;
   */
  clientId: bigint;

  /**
   * @generated from field: optional fixed64 steamid = 2;
   */
  steamid: bigint;

  /**
   * @generated from field: optional string code = 3;
   */
  code: string;

  /**
   * @generated from field: optional EAuthSessionGuardType code_type = 4 [default = k_EAuthSessionGuardType_Unknown];
   */
  codeType: EAuthSessionGuardType;
};

/**
 * Describes the message CAuthentication_UpdateAuthSessionWithSteamGuardCode_Request.
 * Use `create(CAuthentication_UpdateAuthSessionWithSteamGuardCode_RequestSchema)` to create a new message.
 */
export const CAuthentication_UpdateAuthSessionWithSteamGuardCode_RequestSchema: GenMessage<CAuthentication_UpdateAuthSessionWithSteamGuardCode_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 17);

/**
 * @generated from message CAuthentication_UpdateAuthSessionWithSteamGuardCode_Response
 */
export type CAuthentication_UpdateAuthSessionWithSteamGuardCode_Response = Message<"CAuthentication_UpdateAuthSessionWithSteamGuardCode_Response"> & {
  /**
   * @generated from field: optional string agreement_session_url = 7;
   */
  agreementSessionUrl: string;
};

/**
 * Describes the message CAuthentication_UpdateAuthSessionWithSteamGuardCode_Response.
 * Use `create(CAuthentication_UpdateAuthSessionWithSteamGuardCode_ResponseSchema)` to create a new message.
 */
export const CAuthentication_UpdateAuthSessionWithSteamGuardCode_ResponseSchema: GenMessage<CAuthentication_UpdateAuthSessionWithSteamGuardCode_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 18);

/**
 * @generated from message CAuthentication_AccessToken_GenerateForApp_Request
 */
export type CAuthentication_AccessToken_GenerateForApp_Request = Message<"CAuthentication_AccessToken_GenerateForApp_Request"> & {
  /**
   * @generated from field: optional string refresh_token = 1;
   */
  refreshToken: string;

  /**
   * @generated from field: optional fixed64 steamid = 2;
   */
  steamid: bigint;

  /**
   * @generated from field: optional ETokenRenewalType renewal_type = 3 [default = k_ETokenRenewalType_None];
   */
  renewalType: ETokenRenewalType;
};

/**
 * Describes the message CAuthentication_AccessToken_GenerateForApp_Request.
 * Use `create(CAuthentication_AccessToken_GenerateForApp_RequestSchema)` to create a new message.
 */
export const CAuthentication_AccessToken_GenerateForApp_RequestSchema: GenMessage<CAuthentication_AccessToken_GenerateForApp_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 19);

/**
 * @generated from message CAuthentication_AccessToken_GenerateForApp_Response
 */
export type CAuthentication_AccessToken_GenerateForApp_Response = Message<"CAuthentication_AccessToken_GenerateForApp_Response"> & {
  /**
   * @generated from field: optional string access_token = 1;
   */
  accessToken: string;

  /**
   * @generated from field: optional string refresh_token = 2;
   */
  refreshToken: string;
};

/**
 * Describes the message CAuthentication_AccessToken_GenerateForApp_Response.
 * Use `create(CAuthentication_AccessToken_GenerateForApp_ResponseSchema)` to create a new message.
 */
export const CAuthentication_AccessToken_GenerateForApp_ResponseSchema: GenMessage<CAuthentication_AccessToken_GenerateForApp_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 20);

/**
 * @generated from message CAuthentication_RefreshToken_Enumerate_Request
 */
export type CAuthentication_RefreshToken_Enumerate_Request = Message<"CAuthentication_RefreshToken_Enumerate_Request"> & {
  /**
   * @generated from field: optional bool include_revoked = 1 [default = false];
   */
  includeRevoked: boolean;
};

/**
 * Describes the message CAuthentication_RefreshToken_Enumerate_Request.
 * Use `create(CAuthentication_RefreshToken_Enumerate_RequestSchema)` to create a new message.
 */
export const CAuthentication_RefreshToken_Enumerate_RequestSchema: GenMessage<CAuthentication_RefreshToken_Enumerate_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 21);

/**
 * @generated from message CAuthentication_RefreshToken_Enumerate_Response
 */
export type CAuthentication_RefreshToken_Enumerate_Response = Message<"CAuthentication_RefreshToken_Enumerate_Response"> & {
  /**
   * @generated from field: repeated CAuthentication_RefreshToken_Enumerate_Response.RefreshTokenDescription refresh_tokens = 1;
   */
  refreshTokens: CAuthentication_RefreshToken_Enumerate_Response_RefreshTokenDescription[];

  /**
   * @generated from field: optional fixed64 requesting_token = 2;
   */
  requestingToken: bigint;
};

/**
 * Describes the message CAuthentication_RefreshToken_Enumerate_Response.
 * Use `create(CAuthentication_RefreshToken_Enumerate_ResponseSchema)` to create a new message.
 */
export const CAuthentication_RefreshToken_Enumerate_ResponseSchema: GenMessage<CAuthentication_RefreshToken_Enumerate_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 22);

/**
 * @generated from message CAuthentication_RefreshToken_Enumerate_Response.TokenUsageEvent
 */
export type CAuthentication_RefreshToken_Enumerate_Response_TokenUsageEvent = Message<"CAuthentication_RefreshToken_Enumerate_Response.TokenUsageEvent"> & {
  /**
   * @generated from field: optional uint32 time = 1;
   */
  time: number;

  /**
   * @generated from field: optional CMsgIPAddress ip = 2;
   */
  ip?: CMsgIPAddress;

  /**
   * @generated from field: optional string locale = 3;
   */
  locale: string;

  /**
   * @generated from field: optional string country = 4;
   */
  country: string;

  /**
   * @generated from field: optional string state = 5;
   */
  state: string;

  /**
   * @generated from field: optional string city = 6;
   */
  city: string;
};

/**
 * Describes the message CAuthentication_RefreshToken_Enumerate_Response.TokenUsageEvent.
 * Use `create(CAuthentication_RefreshToken_Enumerate_Response_TokenUsageEventSchema)` to create a new message.
 */
export const CAuthentication_RefreshToken_Enumerate_Response_TokenUsageEventSchema: GenMessage<CAuthentication_RefreshToken_Enumerate_Response_TokenUsageEvent> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 22, 0);

/**
 * @generated from message CAuthentication_RefreshToken_Enumerate_Response.RefreshTokenDescription
 */
export type CAuthentication_RefreshToken_Enumerate_Response_RefreshTokenDescription = Message<"CAuthentication_RefreshToken_Enumerate_Response.RefreshTokenDescription"> & {
  /**
   * @generated from field: optional fixed64 token_id = 1;
   */
  tokenId: bigint;

  /**
   * @generated from field: optional string token_description = 2;
   */
  tokenDescription: string;

  /**
   * @generated from field: optional uint32 time_updated = 3;
   */
  timeUpdated: number;

  /**
   * @generated from field: optional EAuthTokenPlatformType platform_type = 4 [default = k_EAuthTokenPlatformType_Unknown];
   */
  platformType: EAuthTokenPlatformType;

  /**
   * @generated from field: optional bool logged_in = 5;
   */
  loggedIn: boolean;

  /**
   * @generated from field: optional uint32 os_platform = 6;
   */
  osPlatform: number;

  /**
   * @generated from field: optional uint32 auth_type = 7;
   */
  authType: number;

  /**
   * @generated from field: optional uint32 gaming_device_type = 8;
   */
  gamingDeviceType: number;

  /**
   * @generated from field: optional CAuthentication_RefreshToken_Enumerate_Response.TokenUsageEvent first_seen = 9;
   */
  firstSeen?: CAuthentication_RefreshToken_Enumerate_Response_TokenUsageEvent;

  /**
   * @generated from field: optional CAuthentication_RefreshToken_Enumerate_Response.TokenUsageEvent last_seen = 10;
   */
  lastSeen?: CAuthentication_RefreshToken_Enumerate_Response_TokenUsageEvent;

  /**
   * @generated from field: optional int32 os_type = 11;
   */
  osType: number;

  /**
   * @generated from field: optional EAuthenticationType authentication_type = 12 [default = k_EAuthenticationType_Unknown];
   */
  authenticationType: EAuthenticationType;

  /**
   * @generated from field: optional EAuthTokenState effective_token_state = 13 [default = k_EAuthTokenState_Invalid];
   */
  effectiveTokenState: EAuthTokenState;
};

/**
 * Describes the message CAuthentication_RefreshToken_Enumerate_Response.RefreshTokenDescription.
 * Use `create(CAuthentication_RefreshToken_Enumerate_Response_RefreshTokenDescriptionSchema)` to create a new message.
 */
export const CAuthentication_RefreshToken_Enumerate_Response_RefreshTokenDescriptionSchema: GenMessage<CAuthentication_RefreshToken_Enumerate_Response_RefreshTokenDescription> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 22, 1);

/**
 * @generated from message CAuthentication_GetAuthSessionsForAccount_Request
 */
export type CAuthentication_GetAuthSessionsForAccount_Request = Message<"CAuthentication_GetAuthSessionsForAccount_Request"> & {
};

/**
 * Describes the message CAuthentication_GetAuthSessionsForAccount_Request.
 * Use `create(CAuthentication_GetAuthSessionsForAccount_RequestSchema)` to create a new message.
 */
export const CAuthentication_GetAuthSessionsForAccount_RequestSchema: GenMessage<CAuthentication_GetAuthSessionsForAccount_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 23);

/**
 * @generated from message CAuthentication_GetAuthSessionsForAccount_Response
 */
export type CAuthentication_GetAuthSessionsForAccount_Response = Message<"CAuthentication_GetAuthSessionsForAccount_Response"> & {
  /**
   * @generated from field: repeated uint64 client_ids = 1;
   */
  clientIds: bigint[];
};

/**
 * Describes the message CAuthentication_GetAuthSessionsForAccount_Response.
 * Use `create(CAuthentication_GetAuthSessionsForAccount_ResponseSchema)` to create a new message.
 */
export const CAuthentication_GetAuthSessionsForAccount_ResponseSchema: GenMessage<CAuthentication_GetAuthSessionsForAccount_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 24);

/**
 * @generated from message CAuthentication_MigrateMobileSession_Request
 */
export type CAuthentication_MigrateMobileSession_Request = Message<"CAuthentication_MigrateMobileSession_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional string token = 2;
   */
  token: string;

  /**
   * @generated from field: optional string signature = 3;
   */
  signature: string;
};

/**
 * Describes the message CAuthentication_MigrateMobileSession_Request.
 * Use `create(CAuthentication_MigrateMobileSession_RequestSchema)` to create a new message.
 */
export const CAuthentication_MigrateMobileSession_RequestSchema: GenMessage<CAuthentication_MigrateMobileSession_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 25);

/**
 * @generated from message CAuthentication_MigrateMobileSession_Response
 */
export type CAuthentication_MigrateMobileSession_Response = Message<"CAuthentication_MigrateMobileSession_Response"> & {
  /**
   * @generated from field: optional string refresh_token = 1;
   */
  refreshToken: string;

  /**
   * @generated from field: optional string access_token = 2;
   */
  accessToken: string;
};

/**
 * Describes the message CAuthentication_MigrateMobileSession_Response.
 * Use `create(CAuthentication_MigrateMobileSession_ResponseSchema)` to create a new message.
 */
export const CAuthentication_MigrateMobileSession_ResponseSchema: GenMessage<CAuthentication_MigrateMobileSession_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 26);

/**
 * @generated from message CAuthentication_Token_Revoke_Request
 */
export type CAuthentication_Token_Revoke_Request = Message<"CAuthentication_Token_Revoke_Request"> & {
  /**
   * @generated from field: optional string token = 1;
   */
  token: string;

  /**
   * @generated from field: optional EAuthTokenRevokeAction revoke_action = 2 [default = k_EAuthTokenRevokePermanent];
   */
  revokeAction: EAuthTokenRevokeAction;
};

/**
 * Describes the message CAuthentication_Token_Revoke_Request.
 * Use `create(CAuthentication_Token_Revoke_RequestSchema)` to create a new message.
 */
export const CAuthentication_Token_Revoke_RequestSchema: GenMessage<CAuthentication_Token_Revoke_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 27);

/**
 * @generated from message CAuthentication_Token_Revoke_Response
 */
export type CAuthentication_Token_Revoke_Response = Message<"CAuthentication_Token_Revoke_Response"> & {
};

/**
 * Describes the message CAuthentication_Token_Revoke_Response.
 * Use `create(CAuthentication_Token_Revoke_ResponseSchema)` to create a new message.
 */
export const CAuthentication_Token_Revoke_ResponseSchema: GenMessage<CAuthentication_Token_Revoke_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 28);

/**
 * @generated from message CAuthentication_RefreshToken_Revoke_Request
 */
export type CAuthentication_RefreshToken_Revoke_Request = Message<"CAuthentication_RefreshToken_Revoke_Request"> & {
  /**
   * @generated from field: optional fixed64 token_id = 1;
   */
  tokenId: bigint;

  /**
   * @generated from field: optional fixed64 steamid = 2;
   */
  steamid: bigint;

  /**
   * @generated from field: optional EAuthTokenRevokeAction revoke_action = 3 [default = k_EAuthTokenRevokePermanent];
   */
  revokeAction: EAuthTokenRevokeAction;

  /**
   * @generated from field: optional bytes signature = 4;
   */
  signature: Uint8Array;
};

/**
 * Describes the message CAuthentication_RefreshToken_Revoke_Request.
 * Use `create(CAuthentication_RefreshToken_Revoke_RequestSchema)` to create a new message.
 */
export const CAuthentication_RefreshToken_Revoke_RequestSchema: GenMessage<CAuthentication_RefreshToken_Revoke_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 29);

/**
 * @generated from message CAuthentication_RefreshToken_Revoke_Response
 */
export type CAuthentication_RefreshToken_Revoke_Response = Message<"CAuthentication_RefreshToken_Revoke_Response"> & {
};

/**
 * Describes the message CAuthentication_RefreshToken_Revoke_Response.
 * Use `create(CAuthentication_RefreshToken_Revoke_ResponseSchema)` to create a new message.
 */
export const CAuthentication_RefreshToken_Revoke_ResponseSchema: GenMessage<CAuthentication_RefreshToken_Revoke_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 30);

/**
 * @generated from message CAuthenticationSupport_QueryRefreshTokensByAccount_Request
 */
export type CAuthenticationSupport_QueryRefreshTokensByAccount_Request = Message<"CAuthenticationSupport_QueryRefreshTokensByAccount_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional bool include_revoked_tokens = 2;
   */
  includeRevokedTokens: boolean;
};

/**
 * Describes the message CAuthenticationSupport_QueryRefreshTokensByAccount_Request.
 * Use `create(CAuthenticationSupport_QueryRefreshTokensByAccount_RequestSchema)` to create a new message.
 */
export const CAuthenticationSupport_QueryRefreshTokensByAccount_RequestSchema: GenMessage<CAuthenticationSupport_QueryRefreshTokensByAccount_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 31);

/**
 * @generated from message CSupportRefreshTokenDescription
 */
export type CSupportRefreshTokenDescription = Message<"CSupportRefreshTokenDescription"> & {
  /**
   * @generated from field: optional fixed64 token_id = 1;
   */
  tokenId: bigint;

  /**
   * @generated from field: optional string token_description = 2;
   */
  tokenDescription: string;

  /**
   * @generated from field: optional uint32 time_updated = 3;
   */
  timeUpdated: number;

  /**
   * @generated from field: optional EAuthTokenPlatformType platform_type = 4 [default = k_EAuthTokenPlatformType_Unknown];
   */
  platformType: EAuthTokenPlatformType;

  /**
   * @generated from field: optional EAuthTokenState token_state = 5 [default = k_EAuthTokenState_Invalid];
   */
  tokenState: EAuthTokenState;

  /**
   * @generated from field: optional fixed64 owner_steamid = 6;
   */
  ownerSteamid: bigint;

  /**
   * @generated from field: optional uint32 os_platform = 7;
   */
  osPlatform: number;

  /**
   * @generated from field: optional int32 os_type = 8;
   */
  osType: number;

  /**
   * @generated from field: optional uint32 auth_type = 9;
   */
  authType: number;

  /**
   * @generated from field: optional uint32 gaming_device_type = 10;
   */
  gamingDeviceType: number;

  /**
   * @generated from field: optional CSupportRefreshTokenDescription.TokenUsageEvent first_seen = 11;
   */
  firstSeen?: CSupportRefreshTokenDescription_TokenUsageEvent;

  /**
   * @generated from field: optional CSupportRefreshTokenDescription.TokenUsageEvent last_seen = 12;
   */
  lastSeen?: CSupportRefreshTokenDescription_TokenUsageEvent;
};

/**
 * Describes the message CSupportRefreshTokenDescription.
 * Use `create(CSupportRefreshTokenDescriptionSchema)` to create a new message.
 */
export const CSupportRefreshTokenDescriptionSchema: GenMessage<CSupportRefreshTokenDescription> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 32);

/**
 * @generated from message CSupportRefreshTokenDescription.TokenUsageEvent
 */
export type CSupportRefreshTokenDescription_TokenUsageEvent = Message<"CSupportRefreshTokenDescription.TokenUsageEvent"> & {
  /**
   * @generated from field: optional uint32 time = 1;
   */
  time: number;

  /**
   * @generated from field: optional CMsgIPAddress ip = 2;
   */
  ip?: CMsgIPAddress;

  /**
   * @generated from field: optional string country = 3;
   */
  country: string;

  /**
   * @generated from field: optional string state = 4;
   */
  state: string;

  /**
   * @generated from field: optional string city = 5;
   */
  city: string;
};

/**
 * Describes the message CSupportRefreshTokenDescription.TokenUsageEvent.
 * Use `create(CSupportRefreshTokenDescription_TokenUsageEventSchema)` to create a new message.
 */
export const CSupportRefreshTokenDescription_TokenUsageEventSchema: GenMessage<CSupportRefreshTokenDescription_TokenUsageEvent> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 32, 0);

/**
 * @generated from message CAuthenticationSupport_QueryRefreshTokensByAccount_Response
 */
export type CAuthenticationSupport_QueryRefreshTokensByAccount_Response = Message<"CAuthenticationSupport_QueryRefreshTokensByAccount_Response"> & {
  /**
   * @generated from field: repeated CSupportRefreshTokenDescription refresh_tokens = 1;
   */
  refreshTokens: CSupportRefreshTokenDescription[];

  /**
   * @generated from field: optional int32 last_token_reset = 2;
   */
  lastTokenReset: number;
};

/**
 * Describes the message CAuthenticationSupport_QueryRefreshTokensByAccount_Response.
 * Use `create(CAuthenticationSupport_QueryRefreshTokensByAccount_ResponseSchema)` to create a new message.
 */
export const CAuthenticationSupport_QueryRefreshTokensByAccount_ResponseSchema: GenMessage<CAuthenticationSupport_QueryRefreshTokensByAccount_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 33);

/**
 * @generated from message CAuthenticationSupport_QueryRefreshTokenByID_Request
 */
export type CAuthenticationSupport_QueryRefreshTokenByID_Request = Message<"CAuthenticationSupport_QueryRefreshTokenByID_Request"> & {
  /**
   * @generated from field: optional fixed64 token_id = 1;
   */
  tokenId: bigint;
};

/**
 * Describes the message CAuthenticationSupport_QueryRefreshTokenByID_Request.
 * Use `create(CAuthenticationSupport_QueryRefreshTokenByID_RequestSchema)` to create a new message.
 */
export const CAuthenticationSupport_QueryRefreshTokenByID_RequestSchema: GenMessage<CAuthenticationSupport_QueryRefreshTokenByID_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 34);

/**
 * @generated from message CAuthenticationSupport_QueryRefreshTokenByID_Response
 */
export type CAuthenticationSupport_QueryRefreshTokenByID_Response = Message<"CAuthenticationSupport_QueryRefreshTokenByID_Response"> & {
  /**
   * @generated from field: repeated CSupportRefreshTokenDescription refresh_tokens = 1;
   */
  refreshTokens: CSupportRefreshTokenDescription[];
};

/**
 * Describes the message CAuthenticationSupport_QueryRefreshTokenByID_Response.
 * Use `create(CAuthenticationSupport_QueryRefreshTokenByID_ResponseSchema)` to create a new message.
 */
export const CAuthenticationSupport_QueryRefreshTokenByID_ResponseSchema: GenMessage<CAuthenticationSupport_QueryRefreshTokenByID_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 35);

/**
 * @generated from message CAuthenticationSupport_RevokeToken_Request
 */
export type CAuthenticationSupport_RevokeToken_Request = Message<"CAuthenticationSupport_RevokeToken_Request"> & {
  /**
   * @generated from field: optional fixed64 token_id = 1;
   */
  tokenId: bigint;

  /**
   * @generated from field: optional fixed64 steamid = 2;
   */
  steamid: bigint;
};

/**
 * Describes the message CAuthenticationSupport_RevokeToken_Request.
 * Use `create(CAuthenticationSupport_RevokeToken_RequestSchema)` to create a new message.
 */
export const CAuthenticationSupport_RevokeToken_RequestSchema: GenMessage<CAuthenticationSupport_RevokeToken_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 36);

/**
 * @generated from message CAuthenticationSupport_RevokeToken_Response
 */
export type CAuthenticationSupport_RevokeToken_Response = Message<"CAuthenticationSupport_RevokeToken_Response"> & {
};

/**
 * Describes the message CAuthenticationSupport_RevokeToken_Response.
 * Use `create(CAuthenticationSupport_RevokeToken_ResponseSchema)` to create a new message.
 */
export const CAuthenticationSupport_RevokeToken_ResponseSchema: GenMessage<CAuthenticationSupport_RevokeToken_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 37);

/**
 * @generated from message CAuthenticationSupport_GetTokenHistory_Request
 */
export type CAuthenticationSupport_GetTokenHistory_Request = Message<"CAuthenticationSupport_GetTokenHistory_Request"> & {
  /**
   * @generated from field: optional fixed64 token_id = 1;
   */
  tokenId: bigint;
};

/**
 * Describes the message CAuthenticationSupport_GetTokenHistory_Request.
 * Use `create(CAuthenticationSupport_GetTokenHistory_RequestSchema)` to create a new message.
 */
export const CAuthenticationSupport_GetTokenHistory_RequestSchema: GenMessage<CAuthenticationSupport_GetTokenHistory_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 38);

/**
 * @generated from message CSupportRefreshTokenAudit
 */
export type CSupportRefreshTokenAudit = Message<"CSupportRefreshTokenAudit"> & {
  /**
   * @generated from field: optional int32 action = 1;
   */
  action: number;

  /**
   * @generated from field: optional uint32 time = 2;
   */
  time: number;

  /**
   * @generated from field: optional CMsgIPAddress ip = 3;
   */
  ip?: CMsgIPAddress;

  /**
   * @generated from field: optional fixed64 actor = 4;
   */
  actor: bigint;
};

/**
 * Describes the message CSupportRefreshTokenAudit.
 * Use `create(CSupportRefreshTokenAuditSchema)` to create a new message.
 */
export const CSupportRefreshTokenAuditSchema: GenMessage<CSupportRefreshTokenAudit> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 39);

/**
 * @generated from message CAuthenticationSupport_GetTokenHistory_Response
 */
export type CAuthenticationSupport_GetTokenHistory_Response = Message<"CAuthenticationSupport_GetTokenHistory_Response"> & {
  /**
   * @generated from field: repeated CSupportRefreshTokenAudit history = 1;
   */
  history: CSupportRefreshTokenAudit[];
};

/**
 * Describes the message CAuthenticationSupport_GetTokenHistory_Response.
 * Use `create(CAuthenticationSupport_GetTokenHistory_ResponseSchema)` to create a new message.
 */
export const CAuthenticationSupport_GetTokenHistory_ResponseSchema: GenMessage<CAuthenticationSupport_GetTokenHistory_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 40);

/**
 * @generated from message CAuthenticationSupport_MarkTokenCompromised_Request
 */
export type CAuthenticationSupport_MarkTokenCompromised_Request = Message<"CAuthenticationSupport_MarkTokenCompromised_Request"> & {
  /**
   * @generated from field: optional fixed64 steamid = 1;
   */
  steamid: bigint;

  /**
   * @generated from field: optional fixed64 token_id = 2;
   */
  tokenId: bigint;
};

/**
 * Describes the message CAuthenticationSupport_MarkTokenCompromised_Request.
 * Use `create(CAuthenticationSupport_MarkTokenCompromised_RequestSchema)` to create a new message.
 */
export const CAuthenticationSupport_MarkTokenCompromised_RequestSchema: GenMessage<CAuthenticationSupport_MarkTokenCompromised_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 41);

/**
 * @generated from message CAuthenticationSupport_MarkTokenCompromised_Response
 */
export type CAuthenticationSupport_MarkTokenCompromised_Response = Message<"CAuthenticationSupport_MarkTokenCompromised_Response"> & {
};

/**
 * Describes the message CAuthenticationSupport_MarkTokenCompromised_Response.
 * Use `create(CAuthenticationSupport_MarkTokenCompromised_ResponseSchema)` to create a new message.
 */
export const CAuthenticationSupport_MarkTokenCompromised_ResponseSchema: GenMessage<CAuthenticationSupport_MarkTokenCompromised_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 42);

/**
 * @generated from message CCloudGaming_CreateNonce_Request
 */
export type CCloudGaming_CreateNonce_Request = Message<"CCloudGaming_CreateNonce_Request"> & {
  /**
   * @generated from field: optional string platform = 1;
   */
  platform: string;

  /**
   * @generated from field: optional uint32 appid = 2;
   */
  appid: number;
};

/**
 * Describes the message CCloudGaming_CreateNonce_Request.
 * Use `create(CCloudGaming_CreateNonce_RequestSchema)` to create a new message.
 */
export const CCloudGaming_CreateNonce_RequestSchema: GenMessage<CCloudGaming_CreateNonce_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 43);

/**
 * @generated from message CCloudGaming_CreateNonce_Response
 */
export type CCloudGaming_CreateNonce_Response = Message<"CCloudGaming_CreateNonce_Response"> & {
  /**
   * @generated from field: optional string nonce = 1;
   */
  nonce: string;

  /**
   * @generated from field: optional uint32 expiry = 2;
   */
  expiry: number;
};

/**
 * Describes the message CCloudGaming_CreateNonce_Response.
 * Use `create(CCloudGaming_CreateNonce_ResponseSchema)` to create a new message.
 */
export const CCloudGaming_CreateNonce_ResponseSchema: GenMessage<CCloudGaming_CreateNonce_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 44);

/**
 * @generated from message CCloudGaming_GetTimeRemaining_Request
 */
export type CCloudGaming_GetTimeRemaining_Request = Message<"CCloudGaming_GetTimeRemaining_Request"> & {
  /**
   * @generated from field: optional string platform = 1;
   */
  platform: string;

  /**
   * @generated from field: repeated uint32 appid_list = 2;
   */
  appidList: number[];
};

/**
 * Describes the message CCloudGaming_GetTimeRemaining_Request.
 * Use `create(CCloudGaming_GetTimeRemaining_RequestSchema)` to create a new message.
 */
export const CCloudGaming_GetTimeRemaining_RequestSchema: GenMessage<CCloudGaming_GetTimeRemaining_Request> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 45);

/**
 * @generated from message CCloudGaming_TimeRemaining
 */
export type CCloudGaming_TimeRemaining = Message<"CCloudGaming_TimeRemaining"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional uint32 minutes_remaining = 2;
   */
  minutesRemaining: number;
};

/**
 * Describes the message CCloudGaming_TimeRemaining.
 * Use `create(CCloudGaming_TimeRemainingSchema)` to create a new message.
 */
export const CCloudGaming_TimeRemainingSchema: GenMessage<CCloudGaming_TimeRemaining> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 46);

/**
 * @generated from message CCloudGaming_GetTimeRemaining_Response
 */
export type CCloudGaming_GetTimeRemaining_Response = Message<"CCloudGaming_GetTimeRemaining_Response"> & {
  /**
   * @generated from field: repeated CCloudGaming_TimeRemaining entries = 2;
   */
  entries: CCloudGaming_TimeRemaining[];
};

/**
 * Describes the message CCloudGaming_GetTimeRemaining_Response.
 * Use `create(CCloudGaming_GetTimeRemaining_ResponseSchema)` to create a new message.
 */
export const CCloudGaming_GetTimeRemaining_ResponseSchema: GenMessage<CCloudGaming_GetTimeRemaining_Response> = /*@__PURE__*/
  messageDesc(file_steammessages_auth_steamclient, 47);

/**
 * @generated from enum EAuthTokenPlatformType
 */
export enum EAuthTokenPlatformType {
  /**
   * @generated from enum value: k_EAuthTokenPlatformType_Unknown = 0;
   */
  k_EAuthTokenPlatformType_Unknown = 0,

  /**
   * @generated from enum value: k_EAuthTokenPlatformType_SteamClient = 1;
   */
  k_EAuthTokenPlatformType_SteamClient = 1,

  /**
   * @generated from enum value: k_EAuthTokenPlatformType_WebBrowser = 2;
   */
  k_EAuthTokenPlatformType_WebBrowser = 2,

  /**
   * @generated from enum value: k_EAuthTokenPlatformType_MobileApp = 3;
   */
  k_EAuthTokenPlatformType_MobileApp = 3,
}

/**
 * Describes the enum EAuthTokenPlatformType.
 */
export const EAuthTokenPlatformTypeSchema: GenEnum<EAuthTokenPlatformType> = /*@__PURE__*/
  enumDesc(file_steammessages_auth_steamclient, 0);

/**
 * @generated from enum EAuthTokenAppType
 */
export enum EAuthTokenAppType {
  /**
   * @generated from enum value: k_EAuthTokenAppType_Unknown = 0;
   */
  k_EAuthTokenAppType_Unknown = 0,

  /**
   * @generated from enum value: k_EAuthTokenAppType_Mobile_SteamApp = 1;
   */
  k_EAuthTokenAppType_Mobile_SteamApp = 1,

  /**
   * @generated from enum value: k_EAuthTokenAppType_Mobile_ChatApp = 2;
   */
  k_EAuthTokenAppType_Mobile_ChatApp = 2,
}

/**
 * Describes the enum EAuthTokenAppType.
 */
export const EAuthTokenAppTypeSchema: GenEnum<EAuthTokenAppType> = /*@__PURE__*/
  enumDesc(file_steammessages_auth_steamclient, 1);

/**
 * @generated from enum EAuthSessionGuardType
 */
export enum EAuthSessionGuardType {
  /**
   * @generated from enum value: k_EAuthSessionGuardType_Unknown = 0;
   */
  k_EAuthSessionGuardType_Unknown = 0,

  /**
   * @generated from enum value: k_EAuthSessionGuardType_None = 1;
   */
  k_EAuthSessionGuardType_None = 1,

  /**
   * @generated from enum value: k_EAuthSessionGuardType_EmailCode = 2;
   */
  k_EAuthSessionGuardType_EmailCode = 2,

  /**
   * @generated from enum value: k_EAuthSessionGuardType_DeviceCode = 3;
   */
  k_EAuthSessionGuardType_DeviceCode = 3,

  /**
   * @generated from enum value: k_EAuthSessionGuardType_DeviceConfirmation = 4;
   */
  k_EAuthSessionGuardType_DeviceConfirmation = 4,

  /**
   * @generated from enum value: k_EAuthSessionGuardType_EmailConfirmation = 5;
   */
  k_EAuthSessionGuardType_EmailConfirmation = 5,

  /**
   * @generated from enum value: k_EAuthSessionGuardType_MachineToken = 6;
   */
  k_EAuthSessionGuardType_MachineToken = 6,

  /**
   * @generated from enum value: k_EAuthSessionGuardType_LegacyMachineAuth = 7;
   */
  k_EAuthSessionGuardType_LegacyMachineAuth = 7,
}

/**
 * Describes the enum EAuthSessionGuardType.
 */
export const EAuthSessionGuardTypeSchema: GenEnum<EAuthSessionGuardType> = /*@__PURE__*/
  enumDesc(file_steammessages_auth_steamclient, 2);

/**
 * @generated from enum EAuthSessionSecurityHistory
 */
export enum EAuthSessionSecurityHistory {
  /**
   * @generated from enum value: k_EAuthSessionSecurityHistory_Invalid = 0;
   */
  k_EAuthSessionSecurityHistory_Invalid = 0,

  /**
   * @generated from enum value: k_EAuthSessionSecurityHistory_UsedPreviously = 1;
   */
  k_EAuthSessionSecurityHistory_UsedPreviously = 1,

  /**
   * @generated from enum value: k_EAuthSessionSecurityHistory_NoPriorHistory = 2;
   */
  k_EAuthSessionSecurityHistory_NoPriorHistory = 2,
}

/**
 * Describes the enum EAuthSessionSecurityHistory.
 */
export const EAuthSessionSecurityHistorySchema: GenEnum<EAuthSessionSecurityHistory> = /*@__PURE__*/
  enumDesc(file_steammessages_auth_steamclient, 3);

/**
 * @generated from enum ETokenRenewalType
 */
export enum ETokenRenewalType {
  /**
   * @generated from enum value: k_ETokenRenewalType_None = 0;
   */
  k_ETokenRenewalType_None = 0,

  /**
   * @generated from enum value: k_ETokenRenewalType_Allow = 1;
   */
  k_ETokenRenewalType_Allow = 1,
}

/**
 * Describes the enum ETokenRenewalType.
 */
export const ETokenRenewalTypeSchema: GenEnum<ETokenRenewalType> = /*@__PURE__*/
  enumDesc(file_steammessages_auth_steamclient, 4);

/**
 * @generated from enum EAuthenticationType
 */
export enum EAuthenticationType {
  /**
   * @generated from enum value: k_EAuthenticationType_Unknown = 0;
   */
  k_EAuthenticationType_Unknown = 0,

  /**
   * @generated from enum value: k_EAuthenticationType_Password = 1;
   */
  k_EAuthenticationType_Password = 1,

  /**
   * @generated from enum value: k_EAuthenticationType_QR = 2;
   */
  k_EAuthenticationType_QR = 2,

  /**
   * @generated from enum value: k_EAuthenticationType_AccountCreation = 3;
   */
  k_EAuthenticationType_AccountCreation = 3,

  /**
   * @generated from enum value: k_EAuthenticationType_GuestAccount = 4;
   */
  k_EAuthenticationType_GuestAccount = 4,
}

/**
 * Describes the enum EAuthenticationType.
 */
export const EAuthenticationTypeSchema: GenEnum<EAuthenticationType> = /*@__PURE__*/
  enumDesc(file_steammessages_auth_steamclient, 5);

/**
 * @generated from enum EAuthTokenState
 */
export enum EAuthTokenState {
  /**
   * @generated from enum value: k_EAuthTokenState_Invalid = 0;
   */
  k_EAuthTokenState_Invalid = 0,

  /**
   * @generated from enum value: k_EAuthTokenState_New = 1;
   */
  k_EAuthTokenState_New = 1,

  /**
   * @generated from enum value: k_EAuthTokenState_Confirmed = 2;
   */
  k_EAuthTokenState_Confirmed = 2,

  /**
   * @generated from enum value: k_EAuthTokenState_Issued = 3;
   */
  k_EAuthTokenState_Issued = 3,

  /**
   * @generated from enum value: k_EAuthTokenState_Denied = 4;
   */
  k_EAuthTokenState_Denied = 4,

  /**
   * @generated from enum value: k_EAuthTokenState_LoggedOut = 5;
   */
  k_EAuthTokenState_LoggedOut = 5,

  /**
   * @generated from enum value: k_EAuthTokenState_Consumed = 6;
   */
  k_EAuthTokenState_Consumed = 6,

  /**
   * @generated from enum value: k_EAuthTokenState_Revoked = 99;
   */
  k_EAuthTokenState_Revoked = 99,
}

/**
 * Describes the enum EAuthTokenState.
 */
export const EAuthTokenStateSchema: GenEnum<EAuthTokenState> = /*@__PURE__*/
  enumDesc(file_steammessages_auth_steamclient, 6);

/**
 * @generated from enum EAuthTokenRevokeAction
 */
export enum EAuthTokenRevokeAction {
  /**
   * @generated from enum value: k_EAuthTokenRevokeLogout = 0;
   */
  k_EAuthTokenRevokeLogout = 0,

  /**
   * @generated from enum value: k_EAuthTokenRevokePermanent = 1;
   */
  k_EAuthTokenRevokePermanent = 1,

  /**
   * @generated from enum value: k_EAuthTokenRevokeReplaced = 2;
   */
  k_EAuthTokenRevokeReplaced = 2,

  /**
   * @generated from enum value: k_EAuthTokenRevokeSupport = 3;
   */
  k_EAuthTokenRevokeSupport = 3,

  /**
   * @generated from enum value: k_EAuthTokenRevokeConsume = 4;
   */
  k_EAuthTokenRevokeConsume = 4,

  /**
   * @generated from enum value: k_EAuthTokenRevokeNonRememberedLogout = 5;
   */
  k_EAuthTokenRevokeNonRememberedLogout = 5,

  /**
   * @generated from enum value: k_EAuthTokenRevokeNonRememberedPermanent = 6;
   */
  k_EAuthTokenRevokeNonRememberedPermanent = 6,

  /**
   * @generated from enum value: k_EAuthTokenRevokeAutomatic = 7;
   */
  k_EAuthTokenRevokeAutomatic = 7,
}

/**
 * Describes the enum EAuthTokenRevokeAction.
 */
export const EAuthTokenRevokeActionSchema: GenEnum<EAuthTokenRevokeAction> = /*@__PURE__*/
  enumDesc(file_steammessages_auth_steamclient, 7);

/**
 * @generated from service Authentication
 */
export const Authentication: GenService<{
  /**
   * @generated from rpc Authentication.GetPasswordRSAPublicKey
   */
  getPasswordRSAPublicKey: {
    methodKind: "unary";
    input: typeof CAuthentication_GetPasswordRSAPublicKey_RequestSchema;
    output: typeof CAuthentication_GetPasswordRSAPublicKey_ResponseSchema;
  },
  /**
   * @generated from rpc Authentication.BeginAuthSessionViaQR
   */
  beginAuthSessionViaQR: {
    methodKind: "unary";
    input: typeof CAuthentication_BeginAuthSessionViaQR_RequestSchema;
    output: typeof CAuthentication_BeginAuthSessionViaQR_ResponseSchema;
  },
  /**
   * @generated from rpc Authentication.BeginAuthSessionViaCredentials
   */
  beginAuthSessionViaCredentials: {
    methodKind: "unary";
    input: typeof CAuthentication_BeginAuthSessionViaCredentials_RequestSchema;
    output: typeof CAuthentication_BeginAuthSessionViaCredentials_ResponseSchema;
  },
  /**
   * @generated from rpc Authentication.PollAuthSessionStatus
   */
  pollAuthSessionStatus: {
    methodKind: "unary";
    input: typeof CAuthentication_PollAuthSessionStatus_RequestSchema;
    output: typeof CAuthentication_PollAuthSessionStatus_ResponseSchema;
  },
  /**
   * @generated from rpc Authentication.GetAuthSessionInfo
   */
  getAuthSessionInfo: {
    methodKind: "unary";
    input: typeof CAuthentication_GetAuthSessionInfo_RequestSchema;
    output: typeof CAuthentication_GetAuthSessionInfo_ResponseSchema;
  },
  /**
   * @generated from rpc Authentication.GetAuthSessionRiskInfo
   */
  getAuthSessionRiskInfo: {
    methodKind: "unary";
    input: typeof CAuthentication_GetAuthSessionRiskInfo_RequestSchema;
    output: typeof CAuthentication_GetAuthSessionRiskInfo_ResponseSchema;
  },
  /**
   * @generated from rpc Authentication.NotifyRiskQuizResults
   */
  notifyRiskQuizResults: {
    methodKind: "unary";
    input: typeof CAuthentication_NotifyRiskQuizResults_NotificationSchema;
    output: typeof NoResponseSchema;
  },
  /**
   * @generated from rpc Authentication.UpdateAuthSessionWithMobileConfirmation
   */
  updateAuthSessionWithMobileConfirmation: {
    methodKind: "unary";
    input: typeof CAuthentication_UpdateAuthSessionWithMobileConfirmation_RequestSchema;
    output: typeof CAuthentication_UpdateAuthSessionWithMobileConfirmation_ResponseSchema;
  },
  /**
   * @generated from rpc Authentication.UpdateAuthSessionWithSteamGuardCode
   */
  updateAuthSessionWithSteamGuardCode: {
    methodKind: "unary";
    input: typeof CAuthentication_UpdateAuthSessionWithSteamGuardCode_RequestSchema;
    output: typeof CAuthentication_UpdateAuthSessionWithSteamGuardCode_ResponseSchema;
  },
  /**
   * @generated from rpc Authentication.GenerateAccessTokenForApp
   */
  generateAccessTokenForApp: {
    methodKind: "unary";
    input: typeof CAuthentication_AccessToken_GenerateForApp_RequestSchema;
    output: typeof CAuthentication_AccessToken_GenerateForApp_ResponseSchema;
  },
  /**
   * @generated from rpc Authentication.EnumerateTokens
   */
  enumerateTokens: {
    methodKind: "unary";
    input: typeof CAuthentication_RefreshToken_Enumerate_RequestSchema;
    output: typeof CAuthentication_RefreshToken_Enumerate_ResponseSchema;
  },
  /**
   * @generated from rpc Authentication.GetAuthSessionsForAccount
   */
  getAuthSessionsForAccount: {
    methodKind: "unary";
    input: typeof CAuthentication_GetAuthSessionsForAccount_RequestSchema;
    output: typeof CAuthentication_GetAuthSessionsForAccount_ResponseSchema;
  },
  /**
   * @generated from rpc Authentication.MigrateMobileSession
   */
  migrateMobileSession: {
    methodKind: "unary";
    input: typeof CAuthentication_MigrateMobileSession_RequestSchema;
    output: typeof CAuthentication_MigrateMobileSession_ResponseSchema;
  },
  /**
   * @generated from rpc Authentication.RevokeToken
   */
  revokeToken: {
    methodKind: "unary";
    input: typeof CAuthentication_Token_Revoke_RequestSchema;
    output: typeof CAuthentication_Token_Revoke_ResponseSchema;
  },
  /**
   * @generated from rpc Authentication.RevokeRefreshToken
   */
  revokeRefreshToken: {
    methodKind: "unary";
    input: typeof CAuthentication_RefreshToken_Revoke_RequestSchema;
    output: typeof CAuthentication_RefreshToken_Revoke_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_auth_steamclient, 0);

/**
 * @generated from service AuthenticationSupport
 */
export const AuthenticationSupport: GenService<{
  /**
   * @generated from rpc AuthenticationSupport.QueryRefreshTokensByAccount
   */
  queryRefreshTokensByAccount: {
    methodKind: "unary";
    input: typeof CAuthenticationSupport_QueryRefreshTokensByAccount_RequestSchema;
    output: typeof CAuthenticationSupport_QueryRefreshTokensByAccount_ResponseSchema;
  },
  /**
   * @generated from rpc AuthenticationSupport.QueryRefreshTokenByID
   */
  queryRefreshTokenByID: {
    methodKind: "unary";
    input: typeof CAuthenticationSupport_QueryRefreshTokenByID_RequestSchema;
    output: typeof CAuthenticationSupport_QueryRefreshTokenByID_ResponseSchema;
  },
  /**
   * @generated from rpc AuthenticationSupport.RevokeToken
   */
  revokeToken: {
    methodKind: "unary";
    input: typeof CAuthenticationSupport_RevokeToken_RequestSchema;
    output: typeof CAuthenticationSupport_RevokeToken_ResponseSchema;
  },
  /**
   * @generated from rpc AuthenticationSupport.GetTokenHistory
   */
  getTokenHistory: {
    methodKind: "unary";
    input: typeof CAuthenticationSupport_GetTokenHistory_RequestSchema;
    output: typeof CAuthenticationSupport_GetTokenHistory_ResponseSchema;
  },
  /**
   * @generated from rpc AuthenticationSupport.MarkTokenCompromised
   */
  markTokenCompromised: {
    methodKind: "unary";
    input: typeof CAuthenticationSupport_MarkTokenCompromised_RequestSchema;
    output: typeof CAuthenticationSupport_MarkTokenCompromised_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_auth_steamclient, 1);

/**
 * @generated from service CloudGaming
 */
export const CloudGaming: GenService<{
  /**
   * @generated from rpc CloudGaming.CreateNonce
   */
  createNonce: {
    methodKind: "unary";
    input: typeof CCloudGaming_CreateNonce_RequestSchema;
    output: typeof CCloudGaming_CreateNonce_ResponseSchema;
  },
  /**
   * @generated from rpc CloudGaming.GetTimeRemaining
   */
  getTimeRemaining: {
    methodKind: "unary";
    input: typeof CCloudGaming_GetTimeRemaining_RequestSchema;
    output: typeof CCloudGaming_GetTimeRemaining_ResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_steammessages_auth_steamclient, 2);

