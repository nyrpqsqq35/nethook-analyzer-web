// @generated by protoc-gen-es v2.9.0 with parameter "target=ts"
// @generated from file steammessages_client_objects.proto (syntax proto2)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { EBluetoothDeviceType, EColorGamutLabelSet, ECPUGovernor, EGPUPerformanceLevel, EGraphicsPerfOverlayLevel, EHDRToneMapOperator, EOSBranch, ESDCardFormatStage, ESplitScalingFilter, ESplitScalingScaler, EStorageBlockContentType, EStorageBlockFileSystemType, EStorageDriveMediaType, ESystemAudioChannel, ESystemAudioDirection, ESystemAudioPortDirection, ESystemAudioPortType, ESystemDisplayCompatibilityMode, ESystemFanControlMode, ESystemServiceState, EUpdaterState, EUpdaterType } from "./enums_pb";
import { file_enums } from "./enums_pb";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file steammessages_client_objects.proto.
 */
export const file_steammessages_client_objects: GenFile = /*@__PURE__*/
  fileDesc("", [file_enums]);

/**
 * @generated from message SteamMessagesClientIClientForcedEnumDependencies
 */
export type SteamMessagesClientIClientForcedEnumDependencies = Message<"SteamMessagesClientIClientForcedEnumDependencies"> & {
  /**
   * @generated from field: optional EBluetoothDeviceType a = 1 [default = k_BluetoothDeviceType_Invalid];
   */
  a: EBluetoothDeviceType;

  /**
   * @generated from field: optional EStorageBlockContentType b = 2 [default = k_EStorageBlockContentType_Invalid];
   */
  b: EStorageBlockContentType;

  /**
   * @generated from field: optional EStorageBlockFileSystemType c = 3 [default = k_EStorageBlockFileSystemType_Invalid];
   */
  c: EStorageBlockFileSystemType;

  /**
   * @generated from field: optional ESDCardFormatStage d = 4 [default = k_ESDCardFormatStage_Invalid];
   */
  d: ESDCardFormatStage;
};

/**
 * Describes the message SteamMessagesClientIClientForcedEnumDependencies.
 * Use `create(SteamMessagesClientIClientForcedEnumDependenciesSchema)` to create a new message.
 */
export const SteamMessagesClientIClientForcedEnumDependenciesSchema: GenMessage<SteamMessagesClientIClientForcedEnumDependencies> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 0);

/**
 * @generated from message CMsgNetworkDeviceIP4Address
 */
export type CMsgNetworkDeviceIP4Address = Message<"CMsgNetworkDeviceIP4Address"> & {
  /**
   * @generated from field: optional int32 ip = 1 [default = 0];
   */
  ip: number;

  /**
   * @generated from field: optional int32 netmask = 2;
   */
  netmask: number;
};

/**
 * Describes the message CMsgNetworkDeviceIP4Address.
 * Use `create(CMsgNetworkDeviceIP4AddressSchema)` to create a new message.
 */
export const CMsgNetworkDeviceIP4AddressSchema: GenMessage<CMsgNetworkDeviceIP4Address> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 1);

/**
 * @generated from message CMsgNetworkDeviceIP4Config
 */
export type CMsgNetworkDeviceIP4Config = Message<"CMsgNetworkDeviceIP4Config"> & {
  /**
   * @generated from field: repeated CMsgNetworkDeviceIP4Address addresses = 1;
   */
  addresses: CMsgNetworkDeviceIP4Address[];

  /**
   * @generated from field: repeated int32 dns_ip = 2;
   */
  dnsIp: number[];

  /**
   * @generated from field: optional int32 gateway_ip = 3;
   */
  gatewayIp: number;

  /**
   * @generated from field: optional bool is_dhcp_enabled = 4;
   */
  isDhcpEnabled: boolean;

  /**
   * @generated from field: optional bool is_default_route = 5;
   */
  isDefaultRoute: boolean;

  /**
   * @generated from field: optional bool is_enabled = 6 [default = false];
   */
  isEnabled: boolean;
};

/**
 * Describes the message CMsgNetworkDeviceIP4Config.
 * Use `create(CMsgNetworkDeviceIP4ConfigSchema)` to create a new message.
 */
export const CMsgNetworkDeviceIP4ConfigSchema: GenMessage<CMsgNetworkDeviceIP4Config> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 2);

/**
 * @generated from message CMsgNetworkDeviceIP6Address
 */
export type CMsgNetworkDeviceIP6Address = Message<"CMsgNetworkDeviceIP6Address"> & {
  /**
   * @generated from field: optional string ip = 1;
   */
  ip: string;
};

/**
 * Describes the message CMsgNetworkDeviceIP6Address.
 * Use `create(CMsgNetworkDeviceIP6AddressSchema)` to create a new message.
 */
export const CMsgNetworkDeviceIP6AddressSchema: GenMessage<CMsgNetworkDeviceIP6Address> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 3);

/**
 * @generated from message CMsgNetworkDeviceIP6Config
 */
export type CMsgNetworkDeviceIP6Config = Message<"CMsgNetworkDeviceIP6Config"> & {
  /**
   * @generated from field: repeated CMsgNetworkDeviceIP6Address addresses = 1;
   */
  addresses: CMsgNetworkDeviceIP6Address[];

  /**
   * @generated from field: repeated string dns_ip = 2;
   */
  dnsIp: string[];

  /**
   * @generated from field: optional string gateway_ip = 3;
   */
  gatewayIp: string;

  /**
   * @generated from field: optional bool is_dhcp_enabled = 4;
   */
  isDhcpEnabled: boolean;

  /**
   * @generated from field: optional bool is_default_route = 5;
   */
  isDefaultRoute: boolean;

  /**
   * @generated from field: optional bool is_enabled = 6 [default = false];
   */
  isEnabled: boolean;
};

/**
 * Describes the message CMsgNetworkDeviceIP6Config.
 * Use `create(CMsgNetworkDeviceIP6ConfigSchema)` to create a new message.
 */
export const CMsgNetworkDeviceIP6ConfigSchema: GenMessage<CMsgNetworkDeviceIP6Config> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 4);

/**
 * @generated from message CMsgNetworkDevicesData
 */
export type CMsgNetworkDevicesData = Message<"CMsgNetworkDevicesData"> & {
  /**
   * @generated from field: repeated CMsgNetworkDevicesData.Device devices = 1;
   */
  devices: CMsgNetworkDevicesData_Device[];

  /**
   * @generated from field: optional bool is_wifi_enabled = 2;
   */
  isWifiEnabled: boolean;

  /**
   * @generated from field: optional bool is_wifi_scanning_enabled = 3;
   */
  isWifiScanningEnabled: boolean;
};

/**
 * Describes the message CMsgNetworkDevicesData.
 * Use `create(CMsgNetworkDevicesDataSchema)` to create a new message.
 */
export const CMsgNetworkDevicesDataSchema: GenMessage<CMsgNetworkDevicesData> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 5);

/**
 * @generated from message CMsgNetworkDevicesData.Device
 */
export type CMsgNetworkDevicesData_Device = Message<"CMsgNetworkDevicesData.Device"> & {
  /**
   * @generated from field: optional uint32 id = 1 [default = 0];
   */
  id: number;

  /**
   * @generated from field: optional int32 etype = 2;
   */
  etype: number;

  /**
   * @generated from field: optional int32 estate = 3;
   */
  estate: number;

  /**
   * @generated from field: optional string mac = 4;
   */
  mac: string;

  /**
   * @generated from field: optional string vendor = 5;
   */
  vendor: string;

  /**
   * @generated from field: optional string product = 6;
   */
  product: string;

  /**
   * @generated from field: optional CMsgNetworkDeviceIP4Config ip4 = 7;
   */
  ip4?: CMsgNetworkDeviceIP4Config;

  /**
   * @generated from field: optional CMsgNetworkDeviceIP6Config ip6 = 8;
   */
  ip6?: CMsgNetworkDeviceIP6Config;

  /**
   * @generated from field: optional CMsgNetworkDevicesData.Device.Wired wired = 9;
   */
  wired?: CMsgNetworkDevicesData_Device_Wired;

  /**
   * @generated from field: optional CMsgNetworkDevicesData.Device.Wireless wireless = 10;
   */
  wireless?: CMsgNetworkDevicesData_Device_Wireless;
};

/**
 * Describes the message CMsgNetworkDevicesData.Device.
 * Use `create(CMsgNetworkDevicesData_DeviceSchema)` to create a new message.
 */
export const CMsgNetworkDevicesData_DeviceSchema: GenMessage<CMsgNetworkDevicesData_Device> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 5, 0);

/**
 * @generated from message CMsgNetworkDevicesData.Device.Wired
 */
export type CMsgNetworkDevicesData_Device_Wired = Message<"CMsgNetworkDevicesData.Device.Wired"> & {
  /**
   * @generated from field: optional bool is_cable_present = 1 [default = false];
   */
  isCablePresent: boolean;

  /**
   * @generated from field: optional uint32 speed_mbit = 2;
   */
  speedMbit: number;

  /**
   * @generated from field: optional string friendly_name = 3;
   */
  friendlyName: string;
};

/**
 * Describes the message CMsgNetworkDevicesData.Device.Wired.
 * Use `create(CMsgNetworkDevicesData_Device_WiredSchema)` to create a new message.
 */
export const CMsgNetworkDevicesData_Device_WiredSchema: GenMessage<CMsgNetworkDevicesData_Device_Wired> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 5, 0, 0);

/**
 * @generated from message CMsgNetworkDevicesData.Device.Wireless
 */
export type CMsgNetworkDevicesData_Device_Wireless = Message<"CMsgNetworkDevicesData.Device.Wireless"> & {
  /**
   * @generated from field: repeated CMsgNetworkDevicesData.Device.Wireless.AP aps = 1;
   */
  aps: CMsgNetworkDevicesData_Device_Wireless_AP[];

  /**
   * @generated from field: optional int32 esecurity_supported = 2;
   */
  esecuritySupported: number;
};

/**
 * Describes the message CMsgNetworkDevicesData.Device.Wireless.
 * Use `create(CMsgNetworkDevicesData_Device_WirelessSchema)` to create a new message.
 */
export const CMsgNetworkDevicesData_Device_WirelessSchema: GenMessage<CMsgNetworkDevicesData_Device_Wireless> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 5, 0, 1);

/**
 * @generated from message CMsgNetworkDevicesData.Device.Wireless.AP
 */
export type CMsgNetworkDevicesData_Device_Wireless_AP = Message<"CMsgNetworkDevicesData.Device.Wireless.AP"> & {
  /**
   * @generated from field: optional uint32 id = 1 [default = 0];
   */
  id: number;

  /**
   * @generated from field: optional int32 estrength = 2;
   */
  estrength: number;

  /**
   * @generated from field: optional string ssid = 3;
   */
  ssid: string;

  /**
   * @generated from field: optional bool is_active = 4;
   */
  isActive: boolean;

  /**
   * @generated from field: optional bool is_autoconnect = 5;
   */
  isAutoconnect: boolean;

  /**
   * @generated from field: optional int32 esecurity = 6;
   */
  esecurity: number;

  /**
   * @generated from field: optional string user_name = 7;
   */
  userName: string;

  /**
   * @generated from field: optional string password = 8;
   */
  password: string;

  /**
   * @generated from field: optional int32 strength_raw = 9;
   */
  strengthRaw: number;
};

/**
 * Describes the message CMsgNetworkDevicesData.Device.Wireless.AP.
 * Use `create(CMsgNetworkDevicesData_Device_Wireless_APSchema)` to create a new message.
 */
export const CMsgNetworkDevicesData_Device_Wireless_APSchema: GenMessage<CMsgNetworkDevicesData_Device_Wireless_AP> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 5, 0, 1, 0);

/**
 * @generated from message CMsgNetworkDeviceConnect
 */
export type CMsgNetworkDeviceConnect = Message<"CMsgNetworkDeviceConnect"> & {
  /**
   * @generated from field: optional uint32 device_id = 1 [default = 0];
   */
  deviceId: number;

  /**
   * @generated from field: optional CMsgNetworkDeviceConnect.Credentials credentials = 4;
   */
  credentials?: CMsgNetworkDeviceConnect_Credentials;

  /**
   * @generated from field: optional CMsgNetworkDeviceIP4Config ip4 = 5;
   */
  ip4?: CMsgNetworkDeviceIP4Config;

  /**
   * @generated from field: optional CMsgNetworkDeviceIP6Config ip6 = 6;
   */
  ip6?: CMsgNetworkDeviceIP6Config;

  /**
   * @generated from oneof CMsgNetworkDeviceConnect.ap_info
   */
  apInfo: {
    /**
     * @generated from field: CMsgNetworkDeviceConnect.KnownAP ap_known = 2;
     */
    value: CMsgNetworkDeviceConnect_KnownAP;
    case: "apKnown";
  } | {
    /**
     * @generated from field: CMsgNetworkDeviceConnect.CustomAP ap_custom = 3;
     */
    value: CMsgNetworkDeviceConnect_CustomAP;
    case: "apCustom";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message CMsgNetworkDeviceConnect.
 * Use `create(CMsgNetworkDeviceConnectSchema)` to create a new message.
 */
export const CMsgNetworkDeviceConnectSchema: GenMessage<CMsgNetworkDeviceConnect> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 6);

/**
 * @generated from message CMsgNetworkDeviceConnect.KnownAP
 */
export type CMsgNetworkDeviceConnect_KnownAP = Message<"CMsgNetworkDeviceConnect.KnownAP"> & {
  /**
   * @generated from field: optional uint32 ap_id = 1;
   */
  apId: number;
};

/**
 * Describes the message CMsgNetworkDeviceConnect.KnownAP.
 * Use `create(CMsgNetworkDeviceConnect_KnownAPSchema)` to create a new message.
 */
export const CMsgNetworkDeviceConnect_KnownAPSchema: GenMessage<CMsgNetworkDeviceConnect_KnownAP> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 6, 0);

/**
 * @generated from message CMsgNetworkDeviceConnect.CustomAP
 */
export type CMsgNetworkDeviceConnect_CustomAP = Message<"CMsgNetworkDeviceConnect.CustomAP"> & {
  /**
   * @generated from field: optional string ssid = 1;
   */
  ssid: string;

  /**
   * @generated from field: optional int32 esecurity = 2;
   */
  esecurity: number;
};

/**
 * Describes the message CMsgNetworkDeviceConnect.CustomAP.
 * Use `create(CMsgNetworkDeviceConnect_CustomAPSchema)` to create a new message.
 */
export const CMsgNetworkDeviceConnect_CustomAPSchema: GenMessage<CMsgNetworkDeviceConnect_CustomAP> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 6, 1);

/**
 * @generated from message CMsgNetworkDeviceConnect.Credentials
 */
export type CMsgNetworkDeviceConnect_Credentials = Message<"CMsgNetworkDeviceConnect.Credentials"> & {
  /**
   * @generated from field: optional string username = 1;
   */
  username: string;

  /**
   * @generated from field: optional string password = 2;
   */
  password: string;
};

/**
 * Describes the message CMsgNetworkDeviceConnect.Credentials.
 * Use `create(CMsgNetworkDeviceConnect_CredentialsSchema)` to create a new message.
 */
export const CMsgNetworkDeviceConnect_CredentialsSchema: GenMessage<CMsgNetworkDeviceConnect_Credentials> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 6, 2);

/**
 * @generated from message CMsgStorageDevicesData
 */
export type CMsgStorageDevicesData = Message<"CMsgStorageDevicesData"> & {
  /**
   * @generated from field: repeated CMsgStorageDevicesData.Drive drives = 1;
   */
  drives: CMsgStorageDevicesData_Drive[];

  /**
   * @generated from field: repeated CMsgStorageDevicesData.BlockDevice block_devices = 2;
   */
  blockDevices: CMsgStorageDevicesData_BlockDevice[];

  /**
   * @generated from field: optional bool is_unmount_supported = 3;
   */
  isUnmountSupported: boolean;

  /**
   * @generated from field: optional bool is_trim_supported = 4;
   */
  isTrimSupported: boolean;

  /**
   * @generated from field: optional bool is_trim_running = 5;
   */
  isTrimRunning: boolean;
};

/**
 * Describes the message CMsgStorageDevicesData.
 * Use `create(CMsgStorageDevicesDataSchema)` to create a new message.
 */
export const CMsgStorageDevicesDataSchema: GenMessage<CMsgStorageDevicesData> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 7);

/**
 * @generated from message CMsgStorageDevicesData.Drive
 */
export type CMsgStorageDevicesData_Drive = Message<"CMsgStorageDevicesData.Drive"> & {
  /**
   * @generated from field: optional uint32 id = 1 [default = 0];
   */
  id: number;

  /**
   * @generated from field: optional string model = 2;
   */
  model: string;

  /**
   * @generated from field: optional string vendor = 3;
   */
  vendor: string;

  /**
   * @generated from field: optional string serial = 4;
   */
  serial: string;

  /**
   * @generated from field: optional bool is_ejectable = 5;
   */
  isEjectable: boolean;

  /**
   * @generated from field: optional uint64 size_bytes = 6;
   */
  sizeBytes: bigint;

  /**
   * @generated from field: optional EStorageDriveMediaType media_type = 7 [default = k_EStorageDriveMediaType_Invalid];
   */
  mediaType: EStorageDriveMediaType;
};

/**
 * Describes the message CMsgStorageDevicesData.Drive.
 * Use `create(CMsgStorageDevicesData_DriveSchema)` to create a new message.
 */
export const CMsgStorageDevicesData_DriveSchema: GenMessage<CMsgStorageDevicesData_Drive> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 7, 0);

/**
 * @generated from message CMsgStorageDevicesData.BlockDevice
 */
export type CMsgStorageDevicesData_BlockDevice = Message<"CMsgStorageDevicesData.BlockDevice"> & {
  /**
   * @generated from field: optional uint32 id = 1 [default = 0];
   */
  id: number;

  /**
   * @generated from field: optional uint32 drive_id = 2 [default = 0];
   */
  driveId: number;

  /**
   * @generated from field: optional string path = 3;
   */
  path: string;

  /**
   * @generated from field: optional string friendly_path = 4;
   */
  friendlyPath: string;

  /**
   * @generated from field: optional string label = 5;
   */
  label: string;

  /**
   * @generated from field: optional uint64 size_bytes = 6;
   */
  sizeBytes: bigint;

  /**
   * @generated from field: optional bool is_formattable = 7;
   */
  isFormattable: boolean;

  /**
   * @generated from field: optional bool is_read_only = 8;
   */
  isReadOnly: boolean;

  /**
   * @generated from field: optional bool is_root_device = 9;
   */
  isRootDevice: boolean;

  /**
   * @generated from field: optional EStorageBlockContentType content_type = 10 [default = k_EStorageBlockContentType_Invalid];
   */
  contentType: EStorageBlockContentType;

  /**
   * @generated from field: optional EStorageBlockFileSystemType filesystem_type = 11 [default = k_EStorageBlockFileSystemType_Invalid];
   */
  filesystemType: EStorageBlockFileSystemType;

  /**
   * @generated from field: optional string mount_path = 12;
   */
  mountPath: string;
};

/**
 * Describes the message CMsgStorageDevicesData.BlockDevice.
 * Use `create(CMsgStorageDevicesData_BlockDeviceSchema)` to create a new message.
 */
export const CMsgStorageDevicesData_BlockDeviceSchema: GenMessage<CMsgStorageDevicesData_BlockDevice> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 7, 1);

/**
 * @generated from message CCloud_PendingRemoteOperation
 */
export type CCloud_PendingRemoteOperation = Message<"CCloud_PendingRemoteOperation"> & {
  /**
   * @generated from field: optional ECloudPendingRemoteOperation operation = 1 [default = k_ECloudPendingRemoteOperationNone];
   */
  operation: ECloudPendingRemoteOperation;

  /**
   * @generated from field: optional string machine_name = 2;
   */
  machineName: string;

  /**
   * @generated from field: optional uint64 client_id = 3;
   */
  clientId: bigint;

  /**
   * @generated from field: optional uint32 time_last_updated = 4;
   */
  timeLastUpdated: number;

  /**
   * @generated from field: optional int32 os_type = 5;
   */
  osType: number;

  /**
   * @generated from field: optional int32 device_type = 6;
   */
  deviceType: number;
};

/**
 * Describes the message CCloud_PendingRemoteOperation.
 * Use `create(CCloud_PendingRemoteOperationSchema)` to create a new message.
 */
export const CCloud_PendingRemoteOperationSchema: GenMessage<CCloud_PendingRemoteOperation> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 8);

/**
 * @generated from message CMsgCloudPendingRemoteOperations
 */
export type CMsgCloudPendingRemoteOperations = Message<"CMsgCloudPendingRemoteOperations"> & {
  /**
   * @generated from field: repeated CCloud_PendingRemoteOperation operations = 1;
   */
  operations: CCloud_PendingRemoteOperation[];
};

/**
 * Describes the message CMsgCloudPendingRemoteOperations.
 * Use `create(CMsgCloudPendingRemoteOperationsSchema)` to create a new message.
 */
export const CMsgCloudPendingRemoteOperationsSchema: GenMessage<CMsgCloudPendingRemoteOperations> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 9);

/**
 * @generated from message CMsgBluetoothDevicesData
 */
export type CMsgBluetoothDevicesData = Message<"CMsgBluetoothDevicesData"> & {
  /**
   * @generated from field: repeated CMsgBluetoothDevicesData.Adapter adapters = 1;
   */
  adapters: CMsgBluetoothDevicesData_Adapter[];

  /**
   * @generated from field: repeated CMsgBluetoothDevicesData.Device devices = 2;
   */
  devices: CMsgBluetoothDevicesData_Device[];

  /**
   * @generated from field: optional CMsgBluetoothDevicesData.Manager manager = 3;
   */
  manager?: CMsgBluetoothDevicesData_Manager;
};

/**
 * Describes the message CMsgBluetoothDevicesData.
 * Use `create(CMsgBluetoothDevicesDataSchema)` to create a new message.
 */
export const CMsgBluetoothDevicesDataSchema: GenMessage<CMsgBluetoothDevicesData> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 10);

/**
 * @generated from message CMsgBluetoothDevicesData.Adapter
 */
export type CMsgBluetoothDevicesData_Adapter = Message<"CMsgBluetoothDevicesData.Adapter"> & {
  /**
   * @generated from field: optional uint32 id = 1 [default = 0];
   */
  id: number;

  /**
   * @generated from field: optional string mac = 2;
   */
  mac: string;

  /**
   * @generated from field: optional string name = 3;
   */
  name: string;

  /**
   * @generated from field: optional bool is_enabled = 4;
   */
  isEnabled: boolean;

  /**
   * @generated from field: optional bool is_discovering = 5;
   */
  isDiscovering: boolean;
};

/**
 * Describes the message CMsgBluetoothDevicesData.Adapter.
 * Use `create(CMsgBluetoothDevicesData_AdapterSchema)` to create a new message.
 */
export const CMsgBluetoothDevicesData_AdapterSchema: GenMessage<CMsgBluetoothDevicesData_Adapter> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 10, 0);

/**
 * @generated from message CMsgBluetoothDevicesData.Device
 */
export type CMsgBluetoothDevicesData_Device = Message<"CMsgBluetoothDevicesData.Device"> & {
  /**
   * @generated from field: optional uint32 id = 1 [default = 0];
   */
  id: number;

  /**
   * @generated from field: optional uint32 adapter_id = 2 [default = 0];
   */
  adapterId: number;

  /**
   * @generated from field: optional EBluetoothDeviceType etype = 3 [default = k_BluetoothDeviceType_Invalid];
   */
  etype: EBluetoothDeviceType;

  /**
   * @generated from field: optional string mac = 4;
   */
  mac: string;

  /**
   * @generated from field: optional string name = 5;
   */
  name: string;

  /**
   * @generated from field: optional bool is_connected = 6;
   */
  isConnected: boolean;

  /**
   * @generated from field: optional bool is_paired = 7;
   */
  isPaired: boolean;

  /**
   * @generated from field: optional int32 strength_raw = 8;
   */
  strengthRaw: number;

  /**
   * @generated from field: optional bool wake_allowed = 9;
   */
  wakeAllowed: boolean;

  /**
   * @generated from field: optional bool wake_allowed_supported = 10;
   */
  wakeAllowedSupported: boolean;

  /**
   * @generated from field: optional int32 battery_percent = 11;
   */
  batteryPercent: number;
};

/**
 * Describes the message CMsgBluetoothDevicesData.Device.
 * Use `create(CMsgBluetoothDevicesData_DeviceSchema)` to create a new message.
 */
export const CMsgBluetoothDevicesData_DeviceSchema: GenMessage<CMsgBluetoothDevicesData_Device> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 10, 1);

/**
 * @generated from message CMsgBluetoothDevicesData.Manager
 */
export type CMsgBluetoothDevicesData_Manager = Message<"CMsgBluetoothDevicesData.Manager"> & {
  /**
   * @generated from field: optional bool is_bluetooth_enabled = 1;
   */
  isBluetoothEnabled: boolean;
};

/**
 * Describes the message CMsgBluetoothDevicesData.Manager.
 * Use `create(CMsgBluetoothDevicesData_ManagerSchema)` to create a new message.
 */
export const CMsgBluetoothDevicesData_ManagerSchema: GenMessage<CMsgBluetoothDevicesData_Manager> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 10, 2);

/**
 * @generated from message CMsgSystemPerfDiagnosticEntry
 */
export type CMsgSystemPerfDiagnosticEntry = Message<"CMsgSystemPerfDiagnosticEntry"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional string value = 2;
   */
  value: string;
};

/**
 * Describes the message CMsgSystemPerfDiagnosticEntry.
 * Use `create(CMsgSystemPerfDiagnosticEntrySchema)` to create a new message.
 */
export const CMsgSystemPerfDiagnosticEntrySchema: GenMessage<CMsgSystemPerfDiagnosticEntry> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 11);

/**
 * @generated from message CMsgSystemPerfNetworkInterface
 */
export type CMsgSystemPerfNetworkInterface = Message<"CMsgSystemPerfNetworkInterface"> & {
  /**
   * @generated from field: optional string name = 1;
   */
  name: string;

  /**
   * @generated from field: optional double timestamp = 2;
   */
  timestamp: number;

  /**
   * @generated from field: optional int64 tx_bytes_total = 3;
   */
  txBytesTotal: bigint;

  /**
   * @generated from field: optional int64 rx_bytes_total = 4;
   */
  rxBytesTotal: bigint;

  /**
   * @generated from field: optional int32 tx_bytes_per_sec = 5;
   */
  txBytesPerSec: number;

  /**
   * @generated from field: optional int32 rx_bytes_per_sec = 6;
   */
  rxBytesPerSec: number;
};

/**
 * Describes the message CMsgSystemPerfNetworkInterface.
 * Use `create(CMsgSystemPerfNetworkInterfaceSchema)` to create a new message.
 */
export const CMsgSystemPerfNetworkInterfaceSchema: GenMessage<CMsgSystemPerfNetworkInterface> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 12);

/**
 * @generated from message CMsgSystemPerfDiagnosticInfo
 */
export type CMsgSystemPerfDiagnosticInfo = Message<"CMsgSystemPerfDiagnosticInfo"> & {
  /**
   * @generated from field: repeated CMsgSystemPerfDiagnosticEntry entries = 1;
   */
  entries: CMsgSystemPerfDiagnosticEntry[];

  /**
   * @generated from field: repeated CMsgSystemPerfNetworkInterface interfaces = 2;
   */
  interfaces: CMsgSystemPerfNetworkInterface[];

  /**
   * @generated from field: optional float battery_temp_c = 3;
   */
  batteryTempC: number;
};

/**
 * Describes the message CMsgSystemPerfDiagnosticInfo.
 * Use `create(CMsgSystemPerfDiagnosticInfoSchema)` to create a new message.
 */
export const CMsgSystemPerfDiagnosticInfoSchema: GenMessage<CMsgSystemPerfDiagnosticInfo> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 13);

/**
 * @generated from message CMsgSystemPerfLimits
 */
export type CMsgSystemPerfLimits = Message<"CMsgSystemPerfLimits"> & {
  /**
   * @generated from field: optional int32 cpu_governor_manual_min_mhz = 1;
   */
  cpuGovernorManualMinMhz: number;

  /**
   * @generated from field: optional int32 cpu_governor_manual_max_mhz = 2;
   */
  cpuGovernorManualMaxMhz: number;

  /**
   * @generated from field: optional int32 fsr_sharpness_min = 3;
   */
  fsrSharpnessMin: number;

  /**
   * @generated from field: optional int32 fsr_sharpness_max = 4;
   */
  fsrSharpnessMax: number;

  /**
   * @generated from field: optional int32 gpu_performance_manual_min_mhz = 5;
   */
  gpuPerformanceManualMinMhz: number;

  /**
   * @generated from field: optional int32 gpu_performance_manual_max_mhz = 6;
   */
  gpuPerformanceManualMaxMhz: number;

  /**
   * @generated from field: optional bool perf_overlay_is_standalone = 7;
   */
  perfOverlayIsStandalone: boolean;

  /**
   * @generated from field: optional bool is_manual_display_refresh_rate_available = 9;
   */
  isManualDisplayRefreshRateAvailable: boolean;

  /**
   * @generated from field: repeated EGPUPerformanceLevel gpu_performance_levels_available = 10;
   */
  gpuPerformanceLevelsAvailable: EGPUPerformanceLevel[];

  /**
   * @generated from field: optional int32 display_refresh_manual_hz_min = 11;
   */
  displayRefreshManualHzMin: number;

  /**
   * @generated from field: optional int32 display_refresh_manual_hz_max = 12;
   */
  displayRefreshManualHzMax: number;

  /**
   * @generated from field: repeated int32 fps_limit_options = 13;
   */
  fpsLimitOptions: number[];

  /**
   * @generated from field: optional int32 tdp_limit_min = 14;
   */
  tdpLimitMin: number;

  /**
   * @generated from field: optional int32 tdp_limit_max = 15;
   */
  tdpLimitMax: number;

  /**
   * @generated from field: optional int32 display_external_refresh_manual_hz_min = 19;
   */
  displayExternalRefreshManualHzMin: number;

  /**
   * @generated from field: optional int32 display_external_refresh_manual_hz_max = 20;
   */
  displayExternalRefreshManualHzMax: number;

  /**
   * @generated from field: repeated int32 fps_limit_options_external = 21;
   */
  fpsLimitOptionsExternal: number[];

  /**
   * @generated from field: optional bool is_vrr_supported = 23;
   */
  isVrrSupported: boolean;

  /**
   * @generated from field: optional bool is_dynamic_refresh_rate_in_steam_supported = 24;
   */
  isDynamicRefreshRateInSteamSupported: boolean;

  /**
   * @generated from field: repeated ESplitScalingFilter split_scaling_filters_available = 26;
   */
  splitScalingFiltersAvailable: ESplitScalingFilter[];

  /**
   * @generated from field: repeated ESplitScalingScaler split_scaling_scalers_available = 27;
   */
  splitScalingScalersAvailable: ESplitScalingScaler[];

  /**
   * @generated from field: optional bool disable_refresh_rate_management = 30;
   */
  disableRefreshRateManagement: boolean;
};

/**
 * Describes the message CMsgSystemPerfLimits.
 * Use `create(CMsgSystemPerfLimitsSchema)` to create a new message.
 */
export const CMsgSystemPerfLimitsSchema: GenMessage<CMsgSystemPerfLimits> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 14);

/**
 * @generated from message CMsgSystemPerfSettingsGlobal
 */
export type CMsgSystemPerfSettingsGlobal = Message<"CMsgSystemPerfSettingsGlobal"> & {
  /**
   * @generated from field: optional float diagnostic_update_rate = 1;
   */
  diagnosticUpdateRate: number;

  /**
   * @generated from field: optional ESystemServiceState graphics_profiling_service_state = 3 [default = k_ESystemServiceState_Unavailable];
   */
  graphicsProfilingServiceState: ESystemServiceState;

  /**
   * @generated from field: optional ESystemServiceState perf_overlay_service_state = 4 [default = k_ESystemServiceState_Unavailable];
   */
  perfOverlayServiceState: ESystemServiceState;

  /**
   * @generated from field: optional EGraphicsPerfOverlayLevel perf_overlay_level = 5 [default = k_EGraphicsPerfOverlayLevel_Hidden];
   */
  perfOverlayLevel: EGraphicsPerfOverlayLevel;

  /**
   * @generated from field: optional bool is_show_perf_overlay_over_steam_enabled = 6;
   */
  isShowPerfOverlayOverSteamEnabled: boolean;

  /**
   * @generated from field: optional bool is_advanced_settings_enabled = 7;
   */
  isAdvancedSettingsEnabled: boolean;

  /**
   * @generated from field: optional bool allow_external_display_refresh_control = 8;
   */
  allowExternalDisplayRefreshControl: boolean;

  /**
   * @generated from field: optional EHDRToneMapOperator hdr_on_sdr_tonemap_operator = 12 [default = k_EHDRToneMapOperator_Invalid];
   */
  hdrOnSdrTonemapOperator: EHDRToneMapOperator;

  /**
   * @generated from field: optional bool is_hdr_debug_heatmap_enabled = 13;
   */
  isHdrDebugHeatmapEnabled: boolean;

  /**
   * @generated from field: optional bool force_hdr_wide_gammut_for_sdr = 15 [default = true];
   */
  forceHdrWideGammutForSdr: boolean;

  /**
   * @generated from field: optional float sdr_to_hdr_brightness = 22;
   */
  sdrToHdrBrightness: number;

  /**
   * @generated from field: optional bool is_color_management_enabled = 21;
   */
  isColorManagementEnabled: boolean;
};

/**
 * Describes the message CMsgSystemPerfSettingsGlobal.
 * Use `create(CMsgSystemPerfSettingsGlobalSchema)` to create a new message.
 */
export const CMsgSystemPerfSettingsGlobalSchema: GenMessage<CMsgSystemPerfSettingsGlobal> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 15);

/**
 * @generated from message CMsgSystemPerfSettingsPerApp
 */
export type CMsgSystemPerfSettingsPerApp = Message<"CMsgSystemPerfSettingsPerApp"> & {
  /**
   * @generated from field: optional int32 gpu_performance_manual_mhz = 1;
   */
  gpuPerformanceManualMhz: number;

  /**
   * @generated from field: optional int32 fps_limit = 2;
   */
  fpsLimit: number;

  /**
   * @generated from field: optional bool is_variable_resolution_enabled = 3;
   */
  isVariableResolutionEnabled: boolean;

  /**
   * @generated from field: optional bool is_dynamic_refresh_rate_enabled = 4;
   */
  isDynamicRefreshRateEnabled: boolean;

  /**
   * @generated from field: optional int32 tdp_limit = 5;
   */
  tdpLimit: number;

  /**
   * @generated from field: optional ECPUGovernor cpu_governor = 6 [default = k_ECPUGovernor_Invalid];
   */
  cpuGovernor: ECPUGovernor;

  /**
   * @generated from field: optional int32 cpu_governor_manual_mhz = 7;
   */
  cpuGovernorManualMhz: number;

  /**
   * @generated from field: optional int32 scaling_filter = 8;
   */
  scalingFilter: number;

  /**
   * @generated from field: optional int32 fsr_sharpness = 9;
   */
  fsrSharpness: number;

  /**
   * @generated from field: optional bool is_fps_limit_enabled = 10;
   */
  isFpsLimitEnabled: boolean;

  /**
   * @generated from field: optional bool is_tdp_limit_enabled = 11;
   */
  isTdpLimitEnabled: boolean;

  /**
   * @generated from field: optional bool is_low_latency_mode_enabled = 12;
   */
  isLowLatencyModeEnabled: boolean;

  /**
   * @generated from field: optional int32 display_refresh_manual_hz = 13;
   */
  displayRefreshManualHz: number;

  /**
   * @generated from field: optional bool is_game_perf_profile_enabled = 14;
   */
  isGamePerfProfileEnabled: boolean;

  /**
   * @generated from field: optional EGPUPerformanceLevel gpu_performance_level = 15 [default = k_EGPUPerformanceLevel_Invalid];
   */
  gpuPerformanceLevel: EGPUPerformanceLevel;

  /**
   * @generated from field: optional int32 display_external_refresh_manual_hz = 17;
   */
  displayExternalRefreshManualHz: number;

  /**
   * @generated from field: optional int32 fps_limit_external = 18;
   */
  fpsLimitExternal: number;

  /**
   * @generated from field: optional bool is_tearing_enabled = 19;
   */
  isTearingEnabled: boolean;

  /**
   * @generated from field: optional bool is_vrr_enabled = 20;
   */
  isVrrEnabled: boolean;

  /**
   * @generated from field: optional bool use_dynamic_refresh_rate_in_steam = 23;
   */
  useDynamicRefreshRateInSteam: boolean;

  /**
   * @generated from field: optional ESplitScalingFilter split_scaling_filter = 24 [default = k_ESplitScalingFilter_Invalid];
   */
  splitScalingFilter: ESplitScalingFilter;

  /**
   * @generated from field: optional ESplitScalingScaler split_scaling_scaler = 25 [default = k_ESplitScalingScaler_Invalid];
   */
  splitScalingScaler: ESplitScalingScaler;
};

/**
 * Describes the message CMsgSystemPerfSettingsPerApp.
 * Use `create(CMsgSystemPerfSettingsPerAppSchema)` to create a new message.
 */
export const CMsgSystemPerfSettingsPerAppSchema: GenMessage<CMsgSystemPerfSettingsPerApp> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 16);

/**
 * @generated from message CMsgSystemPerfSettings
 */
export type CMsgSystemPerfSettings = Message<"CMsgSystemPerfSettings"> & {
  /**
   * @generated from field: optional CMsgSystemPerfSettingsGlobal global = 1;
   */
  global?: CMsgSystemPerfSettingsGlobal;

  /**
   * @generated from field: optional CMsgSystemPerfSettingsPerApp per_app = 2;
   */
  perApp?: CMsgSystemPerfSettingsPerApp;
};

/**
 * Describes the message CMsgSystemPerfSettings.
 * Use `create(CMsgSystemPerfSettingsSchema)` to create a new message.
 */
export const CMsgSystemPerfSettingsSchema: GenMessage<CMsgSystemPerfSettings> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 17);

/**
 * @generated from message CMsgSystemPerfSettingsV1
 */
export type CMsgSystemPerfSettingsV1 = Message<"CMsgSystemPerfSettingsV1"> & {
  /**
   * @generated from field: optional float diagnostic_update_rate = 1;
   */
  diagnosticUpdateRate: number;

  /**
   * @generated from field: optional ESystemServiceState system_trace_service_state = 2 [default = k_ESystemServiceState_Unavailable];
   */
  systemTraceServiceState: ESystemServiceState;

  /**
   * @generated from field: optional ESystemServiceState graphics_profiling_service_state = 3 [default = k_ESystemServiceState_Unavailable];
   */
  graphicsProfilingServiceState: ESystemServiceState;

  /**
   * @generated from field: optional ESystemServiceState perf_overlay_service_state = 4 [default = k_ESystemServiceState_Unavailable];
   */
  perfOverlayServiceState: ESystemServiceState;

  /**
   * @generated from field: optional EGraphicsPerfOverlayLevel perf_overlay_level = 5 [default = k_EGraphicsPerfOverlayLevel_Hidden];
   */
  perfOverlayLevel: EGraphicsPerfOverlayLevel;

  /**
   * @generated from field: optional EGPUPerformanceLevel gpu_performance_level = 6 [default = k_EGPUPerformanceLevel_Invalid];
   */
  gpuPerformanceLevel: EGPUPerformanceLevel;

  /**
   * @generated from field: optional int32 gpu_performance_manual_mhz = 7;
   */
  gpuPerformanceManualMhz: number;

  /**
   * @generated from field: optional int32 fps_limit = 8;
   */
  fpsLimit: number;

  /**
   * @generated from field: optional bool is_variable_resolution_enabled = 9;
   */
  isVariableResolutionEnabled: boolean;

  /**
   * @generated from field: optional bool is_dynamic_refresh_rate_enabled = 10;
   */
  isDynamicRefreshRateEnabled: boolean;

  /**
   * @generated from field: optional int32 tdp_limit = 11;
   */
  tdpLimit: number;

  /**
   * @generated from field: optional ECPUGovernor cpu_governor = 12 [default = k_ECPUGovernor_Invalid];
   */
  cpuGovernor: ECPUGovernor;

  /**
   * @generated from field: optional int32 cpu_governor_manual_mhz = 13;
   */
  cpuGovernorManualMhz: number;

  /**
   * @generated from field: optional int32 scaling_filter = 14;
   */
  scalingFilter: number;

  /**
   * @generated from field: optional int32 fsr_sharpness = 15;
   */
  fsrSharpness: number;

  /**
   * @generated from field: optional bool is_fps_limit_enabled = 16;
   */
  isFpsLimitEnabled: boolean;

  /**
   * @generated from field: optional bool is_tdp_limit_enabled = 17;
   */
  isTdpLimitEnabled: boolean;

  /**
   * @generated from field: optional bool is_show_perf_overlay_over_steam_enabled = 18;
   */
  isShowPerfOverlayOverSteamEnabled: boolean;

  /**
   * @generated from field: optional bool is_low_latency_mode_enabled = 19;
   */
  isLowLatencyModeEnabled: boolean;

  /**
   * @generated from field: optional int32 display_refresh_manual_hz = 20;
   */
  displayRefreshManualHz: number;

  /**
   * @generated from field: optional bool is_game_perf_profile_enabled = 21;
   */
  isGamePerfProfileEnabled: boolean;
};

/**
 * Describes the message CMsgSystemPerfSettingsV1.
 * Use `create(CMsgSystemPerfSettingsV1Schema)` to create a new message.
 */
export const CMsgSystemPerfSettingsV1Schema: GenMessage<CMsgSystemPerfSettingsV1> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 18);

/**
 * @generated from message CMsgSystemPerfState
 */
export type CMsgSystemPerfState = Message<"CMsgSystemPerfState"> & {
  /**
   * @generated from field: optional CMsgSystemPerfLimits limits = 1;
   */
  limits?: CMsgSystemPerfLimits;

  /**
   * @generated from field: optional CMsgSystemPerfSettings settings = 2;
   */
  settings?: CMsgSystemPerfSettings;

  /**
   * @generated from field: optional uint64 current_game_id = 3;
   */
  currentGameId: bigint;

  /**
   * @generated from field: optional uint64 active_profile_game_id = 4;
   */
  activeProfileGameId: bigint;
};

/**
 * Describes the message CMsgSystemPerfState.
 * Use `create(CMsgSystemPerfStateSchema)` to create a new message.
 */
export const CMsgSystemPerfStateSchema: GenMessage<CMsgSystemPerfState> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 19);

/**
 * @generated from message CMsgSystemPerfUpdateSettings
 */
export type CMsgSystemPerfUpdateSettings = Message<"CMsgSystemPerfUpdateSettings"> & {
  /**
   * @generated from field: optional uint64 gameid = 1;
   */
  gameid: bigint;

  /**
   * @generated from field: optional bool skip_storage_update = 4;
   */
  skipStorageUpdate: boolean;

  /**
   * @generated from oneof CMsgSystemPerfUpdateSettings.update
   */
  update: {
    /**
     * @generated from field: bool reset_to_default = 2;
     */
    value: boolean;
    case: "resetToDefault";
  } | {
    /**
     * @generated from field: CMsgSystemPerfSettings settings_delta = 3;
     */
    value: CMsgSystemPerfSettings;
    case: "settingsDelta";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message CMsgSystemPerfUpdateSettings.
 * Use `create(CMsgSystemPerfUpdateSettingsSchema)` to create a new message.
 */
export const CMsgSystemPerfUpdateSettingsSchema: GenMessage<CMsgSystemPerfUpdateSettings> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 20);

/**
 * @generated from message CMsgSystemPerfLegacySettingEntry
 */
export type CMsgSystemPerfLegacySettingEntry = Message<"CMsgSystemPerfLegacySettingEntry"> & {
  /**
   * @generated from field: optional uint64 profile_game_id = 1;
   */
  profileGameId: bigint;

  /**
   * @generated from field: optional CMsgSystemPerfSettingsPerApp settings = 2;
   */
  settings?: CMsgSystemPerfSettingsPerApp;
};

/**
 * Describes the message CMsgSystemPerfLegacySettingEntry.
 * Use `create(CMsgSystemPerfLegacySettingEntrySchema)` to create a new message.
 */
export const CMsgSystemPerfLegacySettingEntrySchema: GenMessage<CMsgSystemPerfLegacySettingEntry> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 21);

/**
 * @generated from message CMsgSystemPerfLegacySettings
 */
export type CMsgSystemPerfLegacySettings = Message<"CMsgSystemPerfLegacySettings"> & {
  /**
   * @generated from field: optional CMsgSystemPerfSettingsGlobal global = 1;
   */
  global?: CMsgSystemPerfSettingsGlobal;

  /**
   * @generated from field: repeated CMsgSystemPerfLegacySettingEntry per_app_settings = 2;
   */
  perAppSettings: CMsgSystemPerfLegacySettingEntry[];
};

/**
 * Describes the message CMsgSystemPerfLegacySettings.
 * Use `create(CMsgSystemPerfLegacySettingsSchema)` to create a new message.
 */
export const CMsgSystemPerfLegacySettingsSchema: GenMessage<CMsgSystemPerfLegacySettings> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 22);

/**
 * @generated from message CMsgSystemDockUpdateState
 */
export type CMsgSystemDockUpdateState = Message<"CMsgSystemDockUpdateState"> & {
  /**
   * @generated from field: optional EUpdaterState state = 1 [default = k_EUpdaterState_Invalid];
   */
  state: EUpdaterState;

  /**
   * @generated from field: optional fixed32 rtime_last_checked = 2;
   */
  rtimeLastChecked: number;

  /**
   * @generated from field: optional string version_current = 3;
   */
  versionCurrent: string;

  /**
   * @generated from field: optional string version_available = 4;
   */
  versionAvailable: string;

  /**
   * @generated from field: optional float stage_progress = 5;
   */
  stageProgress: number;

  /**
   * @generated from field: optional fixed32 rtime_estimated_completion = 6;
   */
  rtimeEstimatedCompletion: number;

  /**
   * @generated from field: optional int32 old_fw_workaround = 7;
   */
  oldFwWorkaround: number;
};

/**
 * Describes the message CMsgSystemDockUpdateState.
 * Use `create(CMsgSystemDockUpdateStateSchema)` to create a new message.
 */
export const CMsgSystemDockUpdateStateSchema: GenMessage<CMsgSystemDockUpdateState> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 23);

/**
 * @generated from message CMsgSystemDockState
 */
export type CMsgSystemDockState = Message<"CMsgSystemDockState"> & {
  /**
   * @generated from field: optional CMsgSystemDockUpdateState update_state = 1;
   */
  updateState?: CMsgSystemDockUpdateState;
};

/**
 * Describes the message CMsgSystemDockState.
 * Use `create(CMsgSystemDockStateSchema)` to create a new message.
 */
export const CMsgSystemDockStateSchema: GenMessage<CMsgSystemDockState> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 24);

/**
 * @generated from message CMsgSystemDockUpdateFirmware
 */
export type CMsgSystemDockUpdateFirmware = Message<"CMsgSystemDockUpdateFirmware"> & {
  /**
   * @generated from field: optional bool check_only = 1;
   */
  checkOnly: boolean;
};

/**
 * Describes the message CMsgSystemDockUpdateFirmware.
 * Use `create(CMsgSystemDockUpdateFirmwareSchema)` to create a new message.
 */
export const CMsgSystemDockUpdateFirmwareSchema: GenMessage<CMsgSystemDockUpdateFirmware> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 25);

/**
 * @generated from message CMsgSystemAudioVolume
 */
export type CMsgSystemAudioVolume = Message<"CMsgSystemAudioVolume"> & {
  /**
   * @generated from field: repeated CMsgSystemAudioVolume.ChannelEntry entries = 1;
   */
  entries: CMsgSystemAudioVolume_ChannelEntry[];

  /**
   * @generated from field: optional bool is_muted = 2;
   */
  isMuted: boolean;
};

/**
 * Describes the message CMsgSystemAudioVolume.
 * Use `create(CMsgSystemAudioVolumeSchema)` to create a new message.
 */
export const CMsgSystemAudioVolumeSchema: GenMessage<CMsgSystemAudioVolume> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 26);

/**
 * @generated from message CMsgSystemAudioVolume.ChannelEntry
 */
export type CMsgSystemAudioVolume_ChannelEntry = Message<"CMsgSystemAudioVolume.ChannelEntry"> & {
  /**
   * @generated from field: optional ESystemAudioChannel echannel = 1 [default = k_SystemAudioChannel_Invalid];
   */
  echannel: ESystemAudioChannel;

  /**
   * @generated from field: optional float volume = 2;
   */
  volume: number;
};

/**
 * Describes the message CMsgSystemAudioVolume.ChannelEntry.
 * Use `create(CMsgSystemAudioVolume_ChannelEntrySchema)` to create a new message.
 */
export const CMsgSystemAudioVolume_ChannelEntrySchema: GenMessage<CMsgSystemAudioVolume_ChannelEntry> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 26, 0);

/**
 * @generated from message CMsgSystemAudioManagerObject
 */
export type CMsgSystemAudioManagerObject = Message<"CMsgSystemAudioManagerObject"> & {
  /**
   * @generated from field: optional uint32 id = 1;
   */
  id: number;

  /**
   * @generated from field: optional fixed32 rtime_last_update = 2;
   */
  rtimeLastUpdate: number;
};

/**
 * Describes the message CMsgSystemAudioManagerObject.
 * Use `create(CMsgSystemAudioManagerObjectSchema)` to create a new message.
 */
export const CMsgSystemAudioManagerObjectSchema: GenMessage<CMsgSystemAudioManagerObject> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 27);

/**
 * @generated from message CMsgSystemAudioManagerDevice
 */
export type CMsgSystemAudioManagerDevice = Message<"CMsgSystemAudioManagerDevice"> & {
  /**
   * @generated from field: optional CMsgSystemAudioManagerObject base = 1;
   */
  base?: CMsgSystemAudioManagerObject;

  /**
   * @generated from field: optional string name = 2;
   */
  name: string;

  /**
   * @generated from field: optional string nick = 3;
   */
  nick: string;

  /**
   * @generated from field: optional string description = 4;
   */
  description: string;

  /**
   * @generated from field: optional string api = 5;
   */
  api: string;
};

/**
 * Describes the message CMsgSystemAudioManagerDevice.
 * Use `create(CMsgSystemAudioManagerDeviceSchema)` to create a new message.
 */
export const CMsgSystemAudioManagerDeviceSchema: GenMessage<CMsgSystemAudioManagerDevice> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 28);

/**
 * @generated from message CMsgSystemAudioManagerNode
 */
export type CMsgSystemAudioManagerNode = Message<"CMsgSystemAudioManagerNode"> & {
  /**
   * @generated from field: optional CMsgSystemAudioManagerObject base = 1;
   */
  base?: CMsgSystemAudioManagerObject;

  /**
   * @generated from field: optional uint32 device_id = 2;
   */
  deviceId: number;

  /**
   * @generated from field: optional string name = 3;
   */
  name: string;

  /**
   * @generated from field: optional string nick = 4;
   */
  nick: string;

  /**
   * @generated from field: optional string description = 5;
   */
  description: string;

  /**
   * @generated from field: optional ESystemAudioDirection edirection = 6 [default = k_SystemAudioDirection_Invalid];
   */
  edirection: ESystemAudioDirection;

  /**
   * @generated from field: optional CMsgSystemAudioVolume volume = 7;
   */
  volume?: CMsgSystemAudioVolume;
};

/**
 * Describes the message CMsgSystemAudioManagerNode.
 * Use `create(CMsgSystemAudioManagerNodeSchema)` to create a new message.
 */
export const CMsgSystemAudioManagerNodeSchema: GenMessage<CMsgSystemAudioManagerNode> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 29);

/**
 * @generated from message CMsgSystemAudioManagerPort
 */
export type CMsgSystemAudioManagerPort = Message<"CMsgSystemAudioManagerPort"> & {
  /**
   * @generated from field: optional CMsgSystemAudioManagerObject base = 1;
   */
  base?: CMsgSystemAudioManagerObject;

  /**
   * @generated from field: optional uint32 node_id = 3;
   */
  nodeId: number;

  /**
   * @generated from field: optional string name = 4;
   */
  name: string;

  /**
   * @generated from field: optional string alias = 5;
   */
  alias: string;

  /**
   * @generated from field: optional ESystemAudioPortType etype = 6 [default = k_SystemAudioPortType_Invalid];
   */
  etype: ESystemAudioPortType;

  /**
   * @generated from field: optional ESystemAudioPortDirection edirection = 7 [default = k_SystemAudioPortDirection_Invalid];
   */
  edirection: ESystemAudioPortDirection;

  /**
   * @generated from field: optional bool is_physical = 8;
   */
  isPhysical: boolean;

  /**
   * @generated from field: optional bool is_terminal = 9;
   */
  isTerminal: boolean;

  /**
   * @generated from field: optional bool is_control = 10;
   */
  isControl: boolean;

  /**
   * @generated from field: optional bool is_monitor = 11;
   */
  isMonitor: boolean;
};

/**
 * Describes the message CMsgSystemAudioManagerPort.
 * Use `create(CMsgSystemAudioManagerPortSchema)` to create a new message.
 */
export const CMsgSystemAudioManagerPortSchema: GenMessage<CMsgSystemAudioManagerPort> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 30);

/**
 * @generated from message CMsgSystemAudioManagerLink
 */
export type CMsgSystemAudioManagerLink = Message<"CMsgSystemAudioManagerLink"> & {
  /**
   * @generated from field: optional CMsgSystemAudioManagerObject base = 1;
   */
  base?: CMsgSystemAudioManagerObject;

  /**
   * @generated from field: optional uint32 output_node_id = 2;
   */
  outputNodeId: number;

  /**
   * @generated from field: optional uint32 output_port_id = 3;
   */
  outputPortId: number;

  /**
   * @generated from field: optional uint32 input_node_id = 4;
   */
  inputNodeId: number;

  /**
   * @generated from field: optional uint32 input_port_id = 5;
   */
  inputPortId: number;
};

/**
 * Describes the message CMsgSystemAudioManagerLink.
 * Use `create(CMsgSystemAudioManagerLinkSchema)` to create a new message.
 */
export const CMsgSystemAudioManagerLinkSchema: GenMessage<CMsgSystemAudioManagerLink> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 31);

/**
 * @generated from message CMsgSystemAudioManagerStateHW
 */
export type CMsgSystemAudioManagerStateHW = Message<"CMsgSystemAudioManagerStateHW"> & {
  /**
   * @generated from field: repeated CMsgSystemAudioManagerDevice devices = 1;
   */
  devices: CMsgSystemAudioManagerDevice[];

  /**
   * @generated from field: repeated CMsgSystemAudioManagerNode nodes = 2;
   */
  nodes: CMsgSystemAudioManagerNode[];

  /**
   * @generated from field: repeated CMsgSystemAudioManagerPort ports = 3;
   */
  ports: CMsgSystemAudioManagerPort[];

  /**
   * @generated from field: repeated CMsgSystemAudioManagerLink links = 4;
   */
  links: CMsgSystemAudioManagerLink[];
};

/**
 * Describes the message CMsgSystemAudioManagerStateHW.
 * Use `create(CMsgSystemAudioManagerStateHWSchema)` to create a new message.
 */
export const CMsgSystemAudioManagerStateHWSchema: GenMessage<CMsgSystemAudioManagerStateHW> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 32);

/**
 * @generated from message CMsgSystemAudioManagerState
 */
export type CMsgSystemAudioManagerState = Message<"CMsgSystemAudioManagerState"> & {
  /**
   * @generated from field: optional fixed32 rtime_filter = 1;
   */
  rtimeFilter: number;

  /**
   * @generated from field: optional int32 counter = 2;
   */
  counter: number;

  /**
   * @generated from field: optional CMsgSystemAudioManagerStateHW hw = 3;
   */
  hw?: CMsgSystemAudioManagerStateHW;
};

/**
 * Describes the message CMsgSystemAudioManagerState.
 * Use `create(CMsgSystemAudioManagerStateSchema)` to create a new message.
 */
export const CMsgSystemAudioManagerStateSchema: GenMessage<CMsgSystemAudioManagerState> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 33);

/**
 * @generated from message CMsgSystemAudioManagerUpdateSomething
 */
export type CMsgSystemAudioManagerUpdateSomething = Message<"CMsgSystemAudioManagerUpdateSomething"> & {
  /**
   * @generated from field: optional int32 counter = 1;
   */
  counter: number;
};

/**
 * Describes the message CMsgSystemAudioManagerUpdateSomething.
 * Use `create(CMsgSystemAudioManagerUpdateSomethingSchema)` to create a new message.
 */
export const CMsgSystemAudioManagerUpdateSomethingSchema: GenMessage<CMsgSystemAudioManagerUpdateSomething> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 34);

/**
 * @generated from message CMsgSystemDisplayMode
 */
export type CMsgSystemDisplayMode = Message<"CMsgSystemDisplayMode"> & {
  /**
   * @generated from field: optional int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: optional int32 width = 2;
   */
  width: number;

  /**
   * @generated from field: optional int32 height = 3;
   */
  height: number;

  /**
   * @generated from field: optional int32 refresh_hz = 4;
   */
  refreshHz: number;
};

/**
 * Describes the message CMsgSystemDisplayMode.
 * Use `create(CMsgSystemDisplayModeSchema)` to create a new message.
 */
export const CMsgSystemDisplayModeSchema: GenMessage<CMsgSystemDisplayMode> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 35);

/**
 * @generated from message CMsgSystemDisplay
 */
export type CMsgSystemDisplay = Message<"CMsgSystemDisplay"> & {
  /**
   * @generated from field: optional int32 id = 1;
   */
  id: number;

  /**
   * @generated from field: optional string name = 2;
   */
  name: string;

  /**
   * @generated from field: optional string description = 3;
   */
  description: string;

  /**
   * @generated from field: optional bool is_primary = 4;
   */
  isPrimary: boolean;

  /**
   * @generated from field: optional bool is_enabled = 5;
   */
  isEnabled: boolean;

  /**
   * @generated from field: optional bool is_internal = 6;
   */
  isInternal: boolean;

  /**
   * @generated from field: optional bool has_mode_override = 7;
   */
  hasModeOverride: boolean;

  /**
   * @generated from field: optional int32 width_mm = 8;
   */
  widthMm: number;

  /**
   * @generated from field: optional int32 height_mm = 9;
   */
  heightMm: number;

  /**
   * @generated from field: optional int32 current_mode_id = 10;
   */
  currentModeId: number;

  /**
   * @generated from field: repeated CMsgSystemDisplayMode modes = 11;
   */
  modes: CMsgSystemDisplayMode[];

  /**
   * @generated from field: optional int32 refresh_rate_min = 12;
   */
  refreshRateMin: number;

  /**
   * @generated from field: optional int32 refresh_rate_max = 13;
   */
  refreshRateMax: number;

  /**
   * @generated from field: optional bool is_vrr_capable = 14;
   */
  isVrrCapable: boolean;

  /**
   * @generated from field: optional bool is_vrr_output_active = 15;
   */
  isVrrOutputActive: boolean;

  /**
   * @generated from field: optional bool is_hdr_capable = 16;
   */
  isHdrCapable: boolean;

  /**
   * @generated from field: optional bool is_hdr_output_active = 17;
   */
  isHdrOutputActive: boolean;

  /**
   * @generated from field: repeated int32 supported_refresh_rates = 18;
   */
  supportedRefreshRates: number[];
};

/**
 * Describes the message CMsgSystemDisplay.
 * Use `create(CMsgSystemDisplaySchema)` to create a new message.
 */
export const CMsgSystemDisplaySchema: GenMessage<CMsgSystemDisplay> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 36);

/**
 * @generated from message CMsgSystemDisplayManagerState
 */
export type CMsgSystemDisplayManagerState = Message<"CMsgSystemDisplayManagerState"> & {
  /**
   * @generated from field: repeated CMsgSystemDisplay displays = 1;
   */
  displays: CMsgSystemDisplay[];

  /**
   * @generated from field: optional bool is_mode_switching_supported = 2;
   */
  isModeSwitchingSupported: boolean;

  /**
   * @generated from field: optional ESystemDisplayCompatibilityMode compatibility_mode = 3 [default = k_ESystemDisplayCompatibilityMode_Invalid];
   */
  compatibilityMode: ESystemDisplayCompatibilityMode;
};

/**
 * Describes the message CMsgSystemDisplayManagerState.
 * Use `create(CMsgSystemDisplayManagerStateSchema)` to create a new message.
 */
export const CMsgSystemDisplayManagerStateSchema: GenMessage<CMsgSystemDisplayManagerState> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 37);

/**
 * @generated from message CMsgSystemDisplayManagerSetMode
 */
export type CMsgSystemDisplayManagerSetMode = Message<"CMsgSystemDisplayManagerSetMode"> & {
  /**
   * @generated from field: optional int32 display_id = 1;
   */
  displayId: number;

  /**
   * @generated from field: optional int32 mode_id = 2;
   */
  modeId: number;
};

/**
 * Describes the message CMsgSystemDisplayManagerSetMode.
 * Use `create(CMsgSystemDisplayManagerSetModeSchema)` to create a new message.
 */
export const CMsgSystemDisplayManagerSetModeSchema: GenMessage<CMsgSystemDisplayManagerSetMode> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 38);

/**
 * @generated from message CMsgSystemManagerSettings
 */
export type CMsgSystemManagerSettings = Message<"CMsgSystemManagerSettings"> & {
  /**
   * @generated from field: optional float idle_backlight_dim_battery_seconds = 1;
   */
  idleBacklightDimBatterySeconds: number;

  /**
   * @generated from field: optional float idle_backlight_dim_ac_seconds = 2;
   */
  idleBacklightDimAcSeconds: number;

  /**
   * @generated from field: optional float idle_suspend_battery_seconds = 3;
   */
  idleSuspendBatterySeconds: number;

  /**
   * @generated from field: optional float idle_suspend_ac_seconds = 4;
   */
  idleSuspendAcSeconds: number;

  /**
   * @generated from field: optional bool idle_suspend_supressed = 5;
   */
  idleSuspendSupressed: boolean;

  /**
   * @generated from field: optional bool is_adaptive_brightness_available = 6;
   */
  isAdaptiveBrightnessAvailable: boolean;

  /**
   * @generated from field: optional bool display_adaptive_brightness_enabled = 7;
   */
  displayAdaptiveBrightnessEnabled: boolean;

  /**
   * @generated from field: optional bool display_nightmode_enabled = 10;
   */
  displayNightmodeEnabled: boolean;

  /**
   * @generated from field: optional float display_nightmode_tintstrength = 11;
   */
  displayNightmodeTintstrength: number;

  /**
   * @generated from field: optional float display_nightmode_maxhue = 12;
   */
  displayNightmodeMaxhue: number;

  /**
   * @generated from field: optional float display_nightmode_maxsat = 13;
   */
  displayNightmodeMaxsat: number;

  /**
   * @generated from field: optional float display_nightmode_uiexp = 14;
   */
  displayNightmodeUiexp: number;

  /**
   * @generated from field: optional float display_nightmode_blend = 15;
   */
  displayNightmodeBlend: number;

  /**
   * @generated from field: optional bool display_nightmode_reset = 16;
   */
  displayNightmodeReset: boolean;

  /**
   * @generated from field: optional bool display_nightmode_schedule_enabled = 17;
   */
  displayNightmodeScheduleEnabled: boolean;

  /**
   * @generated from field: optional float display_nightmode_schedule_starttime = 18;
   */
  displayNightmodeScheduleStarttime: number;

  /**
   * @generated from field: optional float display_nightmode_schedule_endtime = 19;
   */
  displayNightmodeScheduleEndtime: number;

  /**
   * @generated from field: optional bool display_diagnostics_enabled = 20;
   */
  displayDiagnosticsEnabled: boolean;

  /**
   * @generated from field: optional float als_lux_primary = 21;
   */
  alsLuxPrimary: number;

  /**
   * @generated from field: optional float als_lux_median = 22;
   */
  alsLuxMedian: number;

  /**
   * @generated from field: optional float display_backlight_raw = 23;
   */
  displayBacklightRaw: number;

  /**
   * @generated from field: optional float display_brightness_adaptivemin = 24;
   */
  displayBrightnessAdaptivemin: number;

  /**
   * @generated from field: optional float display_brightness_adaptivemax = 25;
   */
  displayBrightnessAdaptivemax: number;

  /**
   * @generated from field: optional bool is_wifi_powersave_enabled = 26;
   */
  isWifiPowersaveEnabled: boolean;

  /**
   * @generated from field: optional bool is_fan_control_available = 27;
   */
  isFanControlAvailable: boolean;

  /**
   * @generated from field: optional ESystemFanControlMode fan_control_mode = 28 [default = k_SystemFanControlMode_Invalid];
   */
  fanControlMode: ESystemFanControlMode;

  /**
   * @generated from field: optional bool is_display_brightness_available = 29;
   */
  isDisplayBrightnessAvailable: boolean;

  /**
   * @generated from field: optional bool is_display_colormanagement_available = 31;
   */
  isDisplayColormanagementAvailable: boolean;

  /**
   * @generated from field: optional float display_colorgamut = 32;
   */
  displayColorgamut: number;

  /**
   * @generated from field: optional float als_lux_alternate = 33;
   */
  alsLuxAlternate: number;

  /**
   * @generated from field: optional bool is_display_colortemp_available = 34;
   */
  isDisplayColortempAvailable: boolean;

  /**
   * @generated from field: optional float display_colortemp = 35;
   */
  displayColortemp: number;

  /**
   * @generated from field: optional float display_colortemp_default = 36;
   */
  displayColortempDefault: number;

  /**
   * @generated from field: optional bool display_colortemp_enabled = 37;
   */
  displayColortempEnabled: boolean;

  /**
   * @generated from field: optional EColorGamutLabelSet display_colorgamut_labelset = 38 [default = k_ColorGamutLabelSet_Default];
   */
  displayColorgamutLabelset: EColorGamutLabelSet;

  /**
   * @generated from field: optional float display_brightness_overdrive_hdr_split = 39;
   */
  displayBrightnessOverdriveHdrSplit: number;
};

/**
 * Describes the message CMsgSystemManagerSettings.
 * Use `create(CMsgSystemManagerSettingsSchema)` to create a new message.
 */
export const CMsgSystemManagerSettingsSchema: GenMessage<CMsgSystemManagerSettings> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 39);

/**
 * @generated from message CMsgSelectOSBranchParams
 */
export type CMsgSelectOSBranchParams = Message<"CMsgSelectOSBranchParams"> & {
  /**
   * @generated from field: optional EOSBranch branch = 1 [default = k_EOSBranch_Unknown];
   */
  branch: EOSBranch;

  /**
   * @generated from field: optional string custom_branch = 2;
   */
  customBranch: string;
};

/**
 * Describes the message CMsgSelectOSBranchParams.
 * Use `create(CMsgSelectOSBranchParamsSchema)` to create a new message.
 */
export const CMsgSelectOSBranchParamsSchema: GenMessage<CMsgSelectOSBranchParams> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 40);

/**
 * @generated from message CMsgSystemUpdateProgress
 */
export type CMsgSystemUpdateProgress = Message<"CMsgSystemUpdateProgress"> & {
  /**
   * @generated from field: optional float stage_progress = 1;
   */
  stageProgress: number;

  /**
   * @generated from field: optional int64 stage_size_bytes = 2;
   */
  stageSizeBytes: bigint;

  /**
   * @generated from field: optional fixed32 rtime_estimated_completion = 3;
   */
  rtimeEstimatedCompletion: number;
};

/**
 * Describes the message CMsgSystemUpdateProgress.
 * Use `create(CMsgSystemUpdateProgressSchema)` to create a new message.
 */
export const CMsgSystemUpdateProgressSchema: GenMessage<CMsgSystemUpdateProgress> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 41);

/**
 * @generated from message CMsgSystemUpdateCheckResult
 */
export type CMsgSystemUpdateCheckResult = Message<"CMsgSystemUpdateCheckResult"> & {
  /**
   * @generated from field: optional EUpdaterType type = 1 [default = k_EUpdaterType_Invalid];
   */
  type: EUpdaterType;

  /**
   * @generated from field: optional uint32 eresult = 2 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional fixed32 rtime_checked = 3;
   */
  rtimeChecked: number;

  /**
   * @generated from field: optional bool available = 4;
   */
  available: boolean;

  /**
   * @generated from field: optional string version = 5;
   */
  version: string;

  /**
   * @generated from field: optional string auto_message = 6;
   */
  autoMessage: string;

  /**
   * @generated from field: optional bool system_restart_pending = 7;
   */
  systemRestartPending: boolean;
};

/**
 * Describes the message CMsgSystemUpdateCheckResult.
 * Use `create(CMsgSystemUpdateCheckResultSchema)` to create a new message.
 */
export const CMsgSystemUpdateCheckResultSchema: GenMessage<CMsgSystemUpdateCheckResult> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 42);

/**
 * @generated from message CMsgSystemUpdateApplyParams
 */
export type CMsgSystemUpdateApplyParams = Message<"CMsgSystemUpdateApplyParams"> & {
  /**
   * @generated from field: repeated EUpdaterType apply_types = 1;
   */
  applyTypes: EUpdaterType[];
};

/**
 * Describes the message CMsgSystemUpdateApplyParams.
 * Use `create(CMsgSystemUpdateApplyParamsSchema)` to create a new message.
 */
export const CMsgSystemUpdateApplyParamsSchema: GenMessage<CMsgSystemUpdateApplyParams> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 43);

/**
 * @generated from message CMsgSystemUpdateApplyResult
 */
export type CMsgSystemUpdateApplyResult = Message<"CMsgSystemUpdateApplyResult"> & {
  /**
   * @generated from field: optional EUpdaterType type = 1 [default = k_EUpdaterType_Invalid];
   */
  type: EUpdaterType;

  /**
   * @generated from field: optional uint32 eresult = 2 [default = 2];
   */
  eresult: number;

  /**
   * @generated from field: optional bool requires_client_restart = 3 [default = false];
   */
  requiresClientRestart: boolean;

  /**
   * @generated from field: optional bool requires_system_restart = 4 [default = false];
   */
  requiresSystemRestart: boolean;
};

/**
 * Describes the message CMsgSystemUpdateApplyResult.
 * Use `create(CMsgSystemUpdateApplyResultSchema)` to create a new message.
 */
export const CMsgSystemUpdateApplyResultSchema: GenMessage<CMsgSystemUpdateApplyResult> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 44);

/**
 * @generated from message CMsgSystemUpdateState
 */
export type CMsgSystemUpdateState = Message<"CMsgSystemUpdateState"> & {
  /**
   * @generated from field: optional EUpdaterState state = 1 [default = k_EUpdaterState_Invalid];
   */
  state: EUpdaterState;

  /**
   * @generated from field: optional CMsgSystemUpdateProgress progress = 2;
   */
  progress?: CMsgSystemUpdateProgress;

  /**
   * @generated from field: repeated CMsgSystemUpdateCheckResult update_check_results = 3;
   */
  updateCheckResults: CMsgSystemUpdateCheckResult[];

  /**
   * @generated from field: repeated CMsgSystemUpdateApplyResult update_apply_results = 4;
   */
  updateApplyResults: CMsgSystemUpdateApplyResult[];

  /**
   * @generated from field: optional bool supports_os_updates = 5;
   */
  supportsOsUpdates: boolean;
};

/**
 * Describes the message CMsgSystemUpdateState.
 * Use `create(CMsgSystemUpdateStateSchema)` to create a new message.
 */
export const CMsgSystemUpdateStateSchema: GenMessage<CMsgSystemUpdateState> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 45);

/**
 * @generated from message CMsgAchievementChange
 */
export type CMsgAchievementChange = Message<"CMsgAchievementChange"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;
};

/**
 * Describes the message CMsgAchievementChange.
 * Use `create(CMsgAchievementChangeSchema)` to create a new message.
 */
export const CMsgAchievementChangeSchema: GenMessage<CMsgAchievementChange> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 46);

/**
 * @generated from message CMsgCellList
 */
export type CMsgCellList = Message<"CMsgCellList"> & {
  /**
   * @generated from field: repeated CMsgCellList.Cell cells = 1;
   */
  cells: CMsgCellList_Cell[];
};

/**
 * Describes the message CMsgCellList.
 * Use `create(CMsgCellListSchema)` to create a new message.
 */
export const CMsgCellListSchema: GenMessage<CMsgCellList> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 47);

/**
 * @generated from message CMsgCellList.Cell
 */
export type CMsgCellList_Cell = Message<"CMsgCellList.Cell"> & {
  /**
   * @generated from field: optional uint32 cell_id = 1;
   */
  cellId: number;

  /**
   * @generated from field: optional string loc_name = 2;
   */
  locName: string;
};

/**
 * Describes the message CMsgCellList.Cell.
 * Use `create(CMsgCellList_CellSchema)` to create a new message.
 */
export const CMsgCellList_CellSchema: GenMessage<CMsgCellList_Cell> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 47, 0);

/**
 * @generated from message CMsgShortcutInfo
 */
export type CMsgShortcutInfo = Message<"CMsgShortcutInfo"> & {
  /**
   * @generated from field: optional uint32 appid = 1;
   */
  appid: number;

  /**
   * @generated from field: optional string exe = 2;
   */
  exe: string;

  /**
   * @generated from field: optional string start_dir = 3;
   */
  startDir: string;

  /**
   * @generated from field: optional string icon = 4;
   */
  icon: string;

  /**
   * @generated from field: optional string path = 5;
   */
  path: string;

  /**
   * @generated from field: optional string args = 6;
   */
  args: string;

  /**
   * @generated from field: optional string app_name = 7;
   */
  appName: string;

  /**
   * @generated from field: optional uint32 override_appid = 8;
   */
  overrideAppid: number;

  /**
   * @generated from field: optional string flatpak_appid = 9;
   */
  flatpakAppid: string;

  /**
   * @generated from field: repeated string tags = 10;
   */
  tags: string[];

  /**
   * @generated from field: optional uint64 remote_client_id = 11;
   */
  remoteClientId: bigint;

  /**
   * @generated from field: optional bool is_hidden = 12;
   */
  isHidden: boolean;

  /**
   * @generated from field: optional bool is_temporary = 13;
   */
  isTemporary: boolean;

  /**
   * @generated from field: optional bool is_openvr = 14;
   */
  isOpenvr: boolean;

  /**
   * @generated from field: optional bool allow_desktop_config = 15;
   */
  allowDesktopConfig: boolean;

  /**
   * @generated from field: optional bool allow_overlay = 16;
   */
  allowOverlay: boolean;

  /**
   * @generated from field: optional uint32 rt_last_played_time = 17;
   */
  rtLastPlayedTime: number;

  /**
   * @generated from field: optional bool is_devkit_shortcut = 18;
   */
  isDevkitShortcut: boolean;

  /**
   * @generated from field: optional string devkit_gameid = 19;
   */
  devkitGameid: string;

  /**
   * @generated from field: optional bool remote_launch_available = 20;
   */
  remoteLaunchAvailable: boolean;

  /**
   * @generated from field: optional string sortas = 21;
   */
  sortas: string;
};

/**
 * Describes the message CMsgShortcutInfo.
 * Use `create(CMsgShortcutInfoSchema)` to create a new message.
 */
export const CMsgShortcutInfoSchema: GenMessage<CMsgShortcutInfo> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 48);

/**
 * @generated from message CMsgShortcutInfos
 */
export type CMsgShortcutInfos = Message<"CMsgShortcutInfos"> & {
  /**
   * @generated from field: repeated CMsgShortcutInfo shorcuts = 1;
   */
  shorcuts: CMsgShortcutInfo[];
};

/**
 * Describes the message CMsgShortcutInfos.
 * Use `create(CMsgShortcutInfosSchema)` to create a new message.
 */
export const CMsgShortcutInfosSchema: GenMessage<CMsgShortcutInfos> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 49);

/**
 * @generated from message CMsgShortcutAppIds
 */
export type CMsgShortcutAppIds = Message<"CMsgShortcutAppIds"> & {
  /**
   * @generated from field: repeated uint32 appids = 1;
   */
  appids: number[];
};

/**
 * Describes the message CMsgShortcutAppIds.
 * Use `create(CMsgShortcutAppIdsSchema)` to create a new message.
 */
export const CMsgShortcutAppIdsSchema: GenMessage<CMsgShortcutAppIds> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 50);

/**
 * @generated from message CMsgMonitorInfo
 */
export type CMsgMonitorInfo = Message<"CMsgMonitorInfo"> & {
  /**
   * @generated from field: required string selected_display_name = 1;
   */
  selectedDisplayName: string;

  /**
   * @generated from field: repeated CMsgMonitorInfo.MonitorInfo monitors = 2;
   */
  monitors: CMsgMonitorInfo_MonitorInfo[];
};

/**
 * Describes the message CMsgMonitorInfo.
 * Use `create(CMsgMonitorInfoSchema)` to create a new message.
 */
export const CMsgMonitorInfoSchema: GenMessage<CMsgMonitorInfo> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 51);

/**
 * @generated from message CMsgMonitorInfo.MonitorInfo
 */
export type CMsgMonitorInfo_MonitorInfo = Message<"CMsgMonitorInfo.MonitorInfo"> & {
  /**
   * @generated from field: required string monitor_device_name = 1;
   */
  monitorDeviceName: string;

  /**
   * @generated from field: required string monitor_display_name = 2;
   */
  monitorDisplayName: string;
};

/**
 * Describes the message CMsgMonitorInfo.MonitorInfo.
 * Use `create(CMsgMonitorInfo_MonitorInfoSchema)` to create a new message.
 */
export const CMsgMonitorInfo_MonitorInfoSchema: GenMessage<CMsgMonitorInfo_MonitorInfo> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 51, 0);

/**
 * @generated from message CMsgGenerateSystemReportReply
 */
export type CMsgGenerateSystemReportReply = Message<"CMsgGenerateSystemReportReply"> & {
  /**
   * @generated from field: optional string report_id = 1;
   */
  reportId: string;
};

/**
 * Describes the message CMsgGenerateSystemReportReply.
 * Use `create(CMsgGenerateSystemReportReplySchema)` to create a new message.
 */
export const CMsgGenerateSystemReportReplySchema: GenMessage<CMsgGenerateSystemReportReply> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 52);

/**
 * @generated from message CMsgWebUITransportInfo
 */
export type CMsgWebUITransportInfo = Message<"CMsgWebUITransportInfo"> & {
  /**
   * @generated from field: optional uint32 port = 1;
   */
  port: number;

  /**
   * @generated from field: optional string auth_key = 2;
   */
  authKey: string;
};

/**
 * Describes the message CMsgWebUITransportInfo.
 * Use `create(CMsgWebUITransportInfoSchema)` to create a new message.
 */
export const CMsgWebUITransportInfoSchema: GenMessage<CMsgWebUITransportInfo> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 53);

/**
 * @generated from message CMsgWebUITransportFailure
 */
export type CMsgWebUITransportFailure = Message<"CMsgWebUITransportFailure"> & {
  /**
   * @generated from field: optional uint32 connect_count = 1;
   */
  connectCount: number;
};

/**
 * Describes the message CMsgWebUITransportFailure.
 * Use `create(CMsgWebUITransportFailureSchema)` to create a new message.
 */
export const CMsgWebUITransportFailureSchema: GenMessage<CMsgWebUITransportFailure> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 54);

/**
 * @generated from message CMsgClientShaderHitCacheEntry
 */
export type CMsgClientShaderHitCacheEntry = Message<"CMsgClientShaderHitCacheEntry"> & {
  /**
   * @generated from field: optional bytes key_sha = 1;
   */
  keySha: Uint8Array;

  /**
   * @generated from field: optional bytes code_sha = 2;
   */
  codeSha: Uint8Array;

  /**
   * @generated from field: optional uint64 time_last_reported = 3;
   */
  timeLastReported: bigint;
};

/**
 * Describes the message CMsgClientShaderHitCacheEntry.
 * Use `create(CMsgClientShaderHitCacheEntrySchema)` to create a new message.
 */
export const CMsgClientShaderHitCacheEntrySchema: GenMessage<CMsgClientShaderHitCacheEntry> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 55);

/**
 * @generated from message CMsgClientShaderHitCache
 */
export type CMsgClientShaderHitCache = Message<"CMsgClientShaderHitCache"> & {
  /**
   * @generated from field: repeated CMsgClientShaderHitCacheEntry entries = 1;
   */
  entries: CMsgClientShaderHitCacheEntry[];
};

/**
 * Describes the message CMsgClientShaderHitCache.
 * Use `create(CMsgClientShaderHitCacheSchema)` to create a new message.
 */
export const CMsgClientShaderHitCacheSchema: GenMessage<CMsgClientShaderHitCache> = /*@__PURE__*/
  messageDesc(file_steammessages_client_objects, 56);

/**
 * @generated from enum ECloudPendingRemoteOperation
 */
export enum ECloudPendingRemoteOperation {
  /**
   * @generated from enum value: k_ECloudPendingRemoteOperationNone = 0;
   */
  k_ECloudPendingRemoteOperationNone = 0,

  /**
   * @generated from enum value: k_ECloudPendingRemoteOperationAppSessionActive = 1;
   */
  k_ECloudPendingRemoteOperationAppSessionActive = 1,

  /**
   * @generated from enum value: k_ECloudPendingRemoteOperationUploadInProgress = 2;
   */
  k_ECloudPendingRemoteOperationUploadInProgress = 2,

  /**
   * @generated from enum value: k_ECloudPendingRemoteOperationUploadPending = 3;
   */
  k_ECloudPendingRemoteOperationUploadPending = 3,

  /**
   * @generated from enum value: k_ECloudPendingRemoteOperationAppSessionSuspended = 4;
   */
  k_ECloudPendingRemoteOperationAppSessionSuspended = 4,
}

/**
 * Describes the enum ECloudPendingRemoteOperation.
 */
export const ECloudPendingRemoteOperationSchema: GenEnum<ECloudPendingRemoteOperation> = /*@__PURE__*/
  enumDesc(file_steammessages_client_objects, 0);

/**
 * @generated from enum ESteamDeckKeyboardLayout
 */
export enum ESteamDeckKeyboardLayout {
  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_QWERTY = 0;
   */
  k_ESteamDeckKeyboardLayout_QWERTY = 0,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Bulgarian = 1;
   */
  k_ESteamDeckKeyboardLayout_Bulgarian = 1,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Chinese_Simplified = 2;
   */
  k_ESteamDeckKeyboardLayout_Chinese_Simplified = 2,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Chinese_Traditional = 3;
   */
  k_ESteamDeckKeyboardLayout_Chinese_Traditional = 3,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Czech = 4;
   */
  k_ESteamDeckKeyboardLayout_Czech = 4,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Danish = 5;
   */
  k_ESteamDeckKeyboardLayout_Danish = 5,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Finnish = 6;
   */
  k_ESteamDeckKeyboardLayout_Finnish = 6,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_French = 7;
   */
  k_ESteamDeckKeyboardLayout_French = 7,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_German = 8;
   */
  k_ESteamDeckKeyboardLayout_German = 8,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Greek = 9;
   */
  k_ESteamDeckKeyboardLayout_Greek = 9,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Hungarian = 10;
   */
  k_ESteamDeckKeyboardLayout_Hungarian = 10,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Italian = 11;
   */
  k_ESteamDeckKeyboardLayout_Italian = 11,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Japanese = 12;
   */
  k_ESteamDeckKeyboardLayout_Japanese = 12,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Korean = 13;
   */
  k_ESteamDeckKeyboardLayout_Korean = 13,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Norwegian = 14;
   */
  k_ESteamDeckKeyboardLayout_Norwegian = 14,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Polish = 15;
   */
  k_ESteamDeckKeyboardLayout_Polish = 15,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Portuguese = 16;
   */
  k_ESteamDeckKeyboardLayout_Portuguese = 16,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Romanian = 17;
   */
  k_ESteamDeckKeyboardLayout_Romanian = 17,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Russian = 18;
   */
  k_ESteamDeckKeyboardLayout_Russian = 18,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Spanish = 19;
   */
  k_ESteamDeckKeyboardLayout_Spanish = 19,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Swedish = 20;
   */
  k_ESteamDeckKeyboardLayout_Swedish = 20,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Thai = 21;
   */
  k_ESteamDeckKeyboardLayout_Thai = 21,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Turkish_F = 22;
   */
  k_ESteamDeckKeyboardLayout_Turkish_F = 22,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Turkish_Q = 23;
   */
  k_ESteamDeckKeyboardLayout_Turkish_Q = 23,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Ukrainian = 24;
   */
  k_ESteamDeckKeyboardLayout_Ukrainian = 24,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Vietnamese = 25;
   */
  k_ESteamDeckKeyboardLayout_Vietnamese = 25,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_QWERTY_International = 26;
   */
  k_ESteamDeckKeyboardLayout_QWERTY_International = 26,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Dvorak = 27;
   */
  k_ESteamDeckKeyboardLayout_Dvorak = 27,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Colemak = 28;
   */
  k_ESteamDeckKeyboardLayout_Colemak = 28,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Bulgarian_Phonetic_Traditional = 29;
   */
  k_ESteamDeckKeyboardLayout_Bulgarian_Phonetic_Traditional = 29,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Bulgarian_Phonetic = 30;
   */
  k_ESteamDeckKeyboardLayout_Bulgarian_Phonetic = 30,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Chinese_Traditional_Bopomofo = 31;
   */
  k_ESteamDeckKeyboardLayout_Chinese_Traditional_Bopomofo = 31,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Chinese_Traditional_Cangjie = 32;
   */
  k_ESteamDeckKeyboardLayout_Chinese_Traditional_Cangjie = 32,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Japanese_Kana = 33;
   */
  k_ESteamDeckKeyboardLayout_Japanese_Kana = 33,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Chinese_Traditional_Quick = 34;
   */
  k_ESteamDeckKeyboardLayout_Chinese_Traditional_Quick = 34,

  /**
   * @generated from enum value: k_ESteamDeckKeyboardLayout_Indonesian = 35;
   */
  k_ESteamDeckKeyboardLayout_Indonesian = 35,
}

/**
 * Describes the enum ESteamDeckKeyboardLayout.
 */
export const ESteamDeckKeyboardLayoutSchema: GenEnum<ESteamDeckKeyboardLayout> = /*@__PURE__*/
  enumDesc(file_steammessages_client_objects, 1);

